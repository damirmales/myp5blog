
<codestructure version="1.5">
<phptree>
<treenode node="../../vue/article.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\controller\frontend\articleController.php;f13;8;34;8;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="../controller/frontend/articleController.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\articles.php;f16;8;60;8;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="../footer.inc.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\backend\ajout_article.php;f9;85;26;85;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="../header.inc.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\backend\ajout_article.php;f9;4;26;4;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="../model/Articles.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\controller\frontend\articleController.php;f9;3;30;3;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="../templates/layout_articles.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\articles.php;f9;38;41;38;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="../vendor/autoload.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\home.php;f9;5;31;5;;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\article.php;f9;7;31;7;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="../vue/header.inc.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\home.php;f9;2;30;2;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="../vue/home.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\public\index.php;f9;2;24;2;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="CacheInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\CacheInterface.php;f0;19;1;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface CacheInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Andreas Möller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="clear;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\CacheInterface.php;f11;49;32;49;;;;vpos;;v;;a;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $file;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\CacheInterface.php;f11;38;30;38;;;;vpos;;v;;anull;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d-1,-1;;b1,0;;m0;;estring $file;;p">
</treenode>
<treenode node="getSignature;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\CacheInterface.php;f11;24;34;24;;;;vpos;;v;;aSignatureInterface;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="has;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\CacheInterface.php;f11;31;30;31;;;;vpos;;v;;abool;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $file;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\CacheInterface.php;f11;44;37;44;;;;vpos;;v;;a;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;&#10;    int &lt;b&gt;$hash&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $file;;pint $hash;;p">
</treenode>
<treenode node="toJson;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\CacheInterface.php;f11;54;28;54;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="CacheManagerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\CacheManagerInterface.php;f0;19;1;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface CacheManagerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="needFixing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\CacheManagerInterface.php;f11;27;51;27;;;;vpos;;v;;abool;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;&#10;    string &lt;b&gt;$fileContent&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $file;;pstring $fileContent;;p">
</treenode>
<treenode node="setFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\CacheManagerInterface.php;f11;33;48;33;;;;vpos;;v;;a;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;&#10;    string &lt;b&gt;$fileContent&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $file;;pstring $fileContent;;p">
</treenode>
</treenode>
<treenode node="CodeSampleInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\CodeSampleInterface.php;f0;17;1;28;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface CodeSampleInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="getCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\CodeSampleInterface.php;f11;22;29;22;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getConfiguration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\CodeSampleInterface.php;f11;27;38;27;;;;vpos;;v;;anull;;r&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |array;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="CommandLoaderInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\CommandLoaderInterface.php;f0;19;1;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface CommandLoaderInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Robin Chalas &lt;robin.chalas&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="get;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\CommandLoaderInterface.php;f11;30;30;30;;;;vpos;;v;;aCommand;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Loads a command.&#10;&lt;b&gt;throws&lt;/b&gt;: CommandNotFoundException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="getNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\CommandLoaderInterface.php;f11;44;30;44;;;;vpos;;v;;astring;;r&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] All registered command names;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="has;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\CommandLoaderInterface.php;f11;39;30;39;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if a command exists.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $name;;p">
</treenode>
</treenode>
<treenode node="ConfigInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f0;20;1;195;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface ConfigInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="getCacheFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;27;34;27;;;;vpos;;v;;anull|string;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the path to the cache file.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Returns null if not using cache;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getCustomFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;34;37;34;;;;vpos;;v;;aFixerInterface;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the custom fixers to use.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getFinder;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;41;31;41;;;;vpos;;v;;aiterable;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns files to scan.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |\Traversable;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;46;31;46;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getHideProgress;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;53;37;53;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if progress should be hidden.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;58;31;58;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getLineEnding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;63;35;63;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;72;29;72;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the name of the configuration.&#10;The name must be all lowercase and without any spaces.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The name of the configuration;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getPhpExecutable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;79;38;79;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get configured PHP executable, if any.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getRiskyAllowed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;86;37;86;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if it is allowed to run risky fixers.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getRules;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;95;30;95;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get rules.&#10;Keys of array are names of fixers/sets, values are true/false.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getUsingCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;102;35;102;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if caching should be enabled.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="registerCustomFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;111;49;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a suite of custom fixers.&#10;Name of custom fixer should follow `VendorName/rule_name` convention.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    FixerInterface[]|iterable|\Traversable &lt;b&gt;$fixers&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;eFixerInterface[]|iterable|\Traversable $fixers;;p">
</treenode>
<treenode node="setCacheFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;120;44;120;;;;vpos;;v;;aself;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the path to the cache file.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cacheFile&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $cacheFile;;p">
</treenode>
<treenode node="setFinder;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;127;38;127;;;;vpos;;v;;aself;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    iterable|string[]|\Traversable &lt;b&gt;$finder&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;eiterable|string[]|\Traversable $finder;;p">
</treenode>
<treenode node="setFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;134;38;134;;;;vpos;;v;;aself;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$format&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $format;;p">
</treenode>
<treenode node="setHideProgress;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;141;50;141;;;;vpos;;v;;aself;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$hideProgress&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;ebool $hideProgress;;p">
</treenode>
<treenode node="setIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;148;38;148;;;;vpos;;v;;aself;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$indent&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $indent;;p">
</treenode>
<treenode node="setLineEnding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;155;46;155;;;;vpos;;v;;aself;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$lineEnding&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $lineEnding;;p">
</treenode>
<treenode node="setPhpExecutable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;164;52;164;;;;vpos;;v;;aself;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set PHP executable.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|string &lt;b&gt;$phpExecutable&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;enull|string $phpExecutable;;p">
</treenode>
<treenode node="setRiskyAllowed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;173;52;173;;;;vpos;;v;;aself;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set if it is allowed to run risky fixers.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$isRiskyAllowed&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;ebool $isRiskyAllowed;;p">
</treenode>
<treenode node="setRules;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;187;42;187;;;;vpos;;v;;aself;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set rules.&#10;Keys of array are names of fixers or sets.&#10;Value for set must be bool (turn it on or off).&#10;Value for fixer may be bool (turn it on or off) or array of configuration&#10;(turn it on and contains configuration for FixerInterface::configure method).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$rules&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;earray $rules;;p">
</treenode>
<treenode node="setUsingCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigInterface.php;f11;194;46;194;;;;vpos;;v;;aself;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$usingCache&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;ebool $usingCache;;p">
</treenode>
</treenode>
<treenode node="ConfigurableFixerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ConfigurableFixerInterface.php;f0;22;1;50;;;;vpos;;v;;aFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface ConfigurableFixerInterface extends FixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;todo&lt;/b&gt;: Will incorporate `ConfigurationDefinitionFixerInterface` in 3.0;;d0,23;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ConfigurableFixerInterface.php;f11;40;58;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set configuration.&#10;New configuration must override current one, not patch it.&#10;Using `null` makes fixer to use default configuration (or reset configuration from previously configured back&#10;to default one).&#10;Some fixers may have no configuration, then - simply pass null.&#10;Other ones may have configuration that will change behavior of fixer,&#10;eg `php_unit_strict` fixer allows to configure which methods should be fixed.&#10;Finally, some fixers need configuration to work, eg `header_comment`.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidFixerConfigurationException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|array &lt;b&gt;$configuration&lt;/b&gt;: configuration depends on Fixer;;d-1,-1;;b1,0;;m0;;enull|array $configuration;;p">
</treenode>
</treenode>
<treenode node="ConfigurationDefinitionFixerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ConfigurationDefinitionFixerInterface.php;f0;19;1;27;;;;vpos;;v;;aConfigurableFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface ConfigurationDefinitionFixerInterface extends ConfigurableFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;deprecated&lt;/b&gt;: Will be incorporated into `ConfigurableFixerInterface` in 3.0;;d0,20;;b0,0;;m0;;e">
<treenode node="getConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ConfigurationDefinitionFixerInterface.php;f11;26;48;26;;;;vpos;;v;;aFixerConfigurationResolverInterface;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the available configuration options of the fixer.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ConsoleOutputInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutputInterface.php;f0;21;1;31;;;;vpos;;v;;aOutputInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface ConsoleOutputInterface extends OutputInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ConsoleOutputInterface is the interface implemented by ConsoleOutput class.&#10;This adds information about stderr and section output stream.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Górecki &lt;darek.krk&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;method&lt;/b&gt;: ConsoleSectionOutput section() Creates a new output section;;d0,22;;b0,0;;m0;;e">
<treenode node="getErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutputInterface.php;f11;28;36;28;;;;vpos;;v;;aOutputInterface;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the OutputInterface for errors.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="setErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutputInterface.php;f11;30;58;30;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;eerror;;p">
</treenode>
</treenode>
<treenode node="ConstraintInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\ConstraintInterface.php;f0;13;1;31;;;;vpos;;v;;a;;r;;d0,14;;b0,0;;m0;;e">
<treenode node="__toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\ConstraintInterface.php;f11;30;32;30;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getPrettyString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\ConstraintInterface.php;f11;25;37;25;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="matches;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\ConstraintInterface.php;f11;20;58;20;;;;vpos;;v;;abool;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ConstraintInterface &lt;b&gt;$provider&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;eConstraintInterface $provider;;p">
</treenode>
</treenode>
<treenode node="ContainerExceptionInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\container\src\ContainerExceptionInterface.php;f0;10;1;12;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface ContainerExceptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Base interface representing a generic exception in a container.;;d0,11;;b0,0;;m0;;e">
</treenode>
<treenode node="ContainerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\container\src\ContainerInterface.php;f0;10;1;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface ContainerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Describes the interface of a container that exposes methods to read its entries.;;d0,11;;b0,0;;m0;;e">
<treenode node="get;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\container\src\ContainerInterface.php;f11;22;28;22;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds an entry of the container by its identifier and returns it.&#10;&lt;b&gt;throws&lt;/b&gt;: NotFoundExceptionInterface  No entry was found for **this** identifier.&#10;&lt;b&gt;throws&lt;/b&gt;: ContainerExceptionInterface Error while retrieving the entry.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$id&lt;/b&gt;: Identifier of the entry to look for.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Entry.;;d-1,-1;;b1,0;;m0;;estring $id;;p">
</treenode>
<treenode node="has;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\container\src\ContainerInterface.php;f11;35;28;35;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the container can return an entry for the given identifier.&#10;Returns false otherwise.&#10;`has($id)` returning true does not mean that `get($id)` will not throw an exception.&#10;It does however mean that `get($id)` will not throw a `NotFoundExceptionInterface`.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$id&lt;/b&gt;: Identifier of the entry to look for.;;d-1,-1;;b1,0;;m0;;estring $id;;p">
</treenode>
</treenode>
<treenode node="Database;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\model\ModelConnect.php;f14;2;22;2;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="Database.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\model\recup_data_article.php;f16;1;28;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\model\Articles.php;f14;3;26;3;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="DefinedFixerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DefinedFixerInterface.php;f0;20;1;28;;;;vpos;;v;;aFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface DefinedFixerInterface extends FixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,21;;b0,0;;m0;;e">
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DefinedFixerInterface.php;f11;27;35;27;;;;vpos;;v;;aFixerDefinitionInterface;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the definition of the fixer.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DeprecatedFixerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DeprecatedFixerInterface.php;f0;17;1;25;;;;vpos;;v;;aFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface DeprecatedFixerInterface extends FixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Kuba Werlos &lt;werlos&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="getSuccessorsNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DeprecatedFixerInterface.php;f11;24;40;24;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns names of fixers to use instead, if any.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DeprecatedFixerOptionInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\DeprecatedFixerOptionInterface.php;f0;14;1;20;;;;vpos;;v;;aFixerOptionInterface;;c;;r;;d0,15;;b0,0;;m0;;e">
<treenode node="getDeprecationMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\DeprecatedFixerOptionInterface.php;f11;19;43;19;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DescriptorInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\DescriptorInterface.php;f0;20;1;28;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface DescriptorInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Descriptor interface.&#10;&lt;b&gt;author&lt;/b&gt;: Jean-François Simon &lt;contact&#10;&lt;b&gt;jfsimon&lt;/b&gt;: .fr&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="describe;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\DescriptorInterface.php;f11;27;83;27;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Describes an object if supported.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    object &lt;b&gt;$object&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;eoutput;;pobject;;poptions;;p">
</treenode>
</treenode>
<treenode node="DiffOutputBuilderInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\DiffOutputBuilderInterface.php;f0;16;1;19;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Output\DiffOutputBuilderInterface.php;f0;15;1;18;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface DiffOutputBuilderInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines how an output builder should take a generated&#10;diff array and return a string representation of that diff.;;d0,17;;b0,0;;m0;;e">
<treenode node="getDiff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\DiffOutputBuilderInterface.php;f11;18;40;18;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Output\DiffOutputBuilderInterface.php;f11;17;40;17;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;ediff;;p">
</treenode>
</treenode>
<treenode node="DifferInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\DifferInterface.php;f0;17;1;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface DifferInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="diff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\DifferInterface.php;f11;29;36;29;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create diff.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$old&lt;/b&gt;&#10;    string &lt;b&gt;$new&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   TODO: on 3.0 pass the file name (if applicable) for which this diff is;;d-1,-1;;b1,0;;m0;;estring $old;;pstring $new;;p">
</treenode>
</treenode>
<treenode node="DirectoryInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\DirectoryInterface.php;f0;17;1;25;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface DirectoryInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="getRelativePathTo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\DirectoryInterface.php;f11;24;44;24;;;;vpos;;v;;astring;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $file;;p">
</treenode>
</treenode>
<treenode node="ERR_READ_FAILED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\PipeStdinInStdoutStdErrStreamSelect.php;f8;13;23;13;;;;vpos;;v;;a;;r3;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="ERR_SELECT_FAILED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\PipeStdinInStdoutStdErrStreamSelect.php;f8;11;25;11;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="ERR_TIMEOUT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\PipeStdinInStdoutStdErrStreamSelect.php;f8;12;19;12;;;;vpos;;v;;a;;r2;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="ERR_WRITE_FAILED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\PipeStdinInStdoutStdErrStreamSelect.php;f8;14;24;14;;;;vpos;;v;;a;;r4;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="EventDispatcherInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher-contracts\EventDispatcherInterface.php;f4;19;5;56;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcherInterface.php;f0;22;1;81;;;;vpos;;v;;aPsrEventDispatcherInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface EventDispatcherInterface extends PsrEventDispatcherInterface&#10;    {&#10;        /**&#10;         * Dispatches an event to all registered listeners.&#10;         *&#10;         * For BC with Symfony 4, the $eventName argument is not declared explicitly on the&#10;         * signature of the method. Implementations that are not bound by this BC constraint&#10;         * MUST declare it explicitly, as allowed by PHP.&#10;         *&#10;         * @param object      $event     The event to pass to the event handlers/listeners&#10;         * @param string|null $eventName The name of the event to dispatch. If not supplied,&#10;         *                               the class of $event should be used instead.&#10;         *&#10;         * @return object The passed $event MUST be returned&#10;         */&#10;        public  dispatch($event/*, string $eventName = null*/);s&#10;    }&#10;} else {&#10;    /**&#10;     * Allows providing hooks on domain-specific lifecycles by dispatching events.&#10;     */&#10;    interface EventDispatcherInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Allows providing hooks on domain-specific lifecycles by dispatching events.;;d4,41;;b0,0;;m0;;e">
<treenode node="addListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcherInterface.php;f11;32;69;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds an event listener that listens on the specified events.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$eventName&lt;/b&gt;: The event to listen on&#10;    callable &lt;b&gt;$listener&lt;/b&gt;: The listener&#10;    int &lt;b&gt;$priority&lt;/b&gt;: The higher this value, the earlier an event listener will be triggered in the chain (defaults to 0);;d-1,-1;;b1,0;;m0;;estring $eventName;;pcallable $listener;;pint $priority;;p">
</treenode>
<treenode node="addSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcherInterface.php;f11;40;71;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds an event subscriber.&#10;The subscriber is asked for all the events it is&#10;interested in and added as a listener for these events.;;d-1,-1;;b1,0;;m0;;esubscriber;;p">
</treenode>
<treenode node="dispatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher-contracts\EventDispatcherInterface.php;f15;34;70;55;;;;vpos;;v;;aobject;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Dispatches an event to all registered listeners.&#10;For BC with Symfony 4, the $eventName argument is not declared explicitly on the&#10;signature of the method. Implementations that are not bound by this BC constraint&#10;MUST declare it explicitly, as allowed by PHP.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    object &lt;b&gt;$event&lt;/b&gt;: The event to pass to the event handlers/listeners&#10;    string|null &lt;b&gt;$eventName&lt;/b&gt;: The name of the event to dispatch. If not supplied, the class of $event should be used instead.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The passed $event MUST be returned;;d-1,-1;;b1,0;;m0;;eobject $event;;pstring|null $eventName;;p">
</treenode>
<treenode node="getListenerPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcherInterface.php;f11;71;62;71;;;;vpos;;v;;aint|null;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the listener priority for a specific event.&#10;Returns null if the event or the listener does not exist.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$eventName&lt;/b&gt;: The name of the event&#10;    callable &lt;b&gt;$listener&lt;/b&gt;: The listener&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The event listener priority;;d-1,-1;;b1,0;;m0;;estring $eventName;;pcallable $listener;;p">
</treenode>
<treenode node="getListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcherInterface.php;f11;59;51;59;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the listeners of a specific event or all listeners sorted by descending priority.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$eventName&lt;/b&gt;: The name of the event&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The event listeners for the specified event, or all event listeners by event name;;d-1,-1;;b1,0;;m0;;estring|null $eventName;;p">
</treenode>
<treenode node="hasListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcherInterface.php;f11;80;51;80;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks whether an event has any registered listeners.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$eventName&lt;/b&gt;: The name of the event&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the specified event has any listeners, false otherwise;;d-1,-1;;b1,0;;m0;;estring|null $eventName;;p">
</treenode>
<treenode node="removeListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcherInterface.php;f11;48;57;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Removes an event listener from the specified events.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$eventName&lt;/b&gt;: The event to remove a listener from&#10;    callable &lt;b&gt;$listener&lt;/b&gt;: The listener to remove;;d-1,-1;;b1,0;;m0;;estring $eventName;;pcallable $listener;;p">
</treenode>
<treenode node="removeSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcherInterface.php;f11;50;74;50;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;esubscriber;;p">
</treenode>
</treenode>
<treenode node="EventSubscriberInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventSubscriberInterface.php;f0;24;1;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface EventSubscriberInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    An EventSubscriber knows itself what events it is interested in.&#10;If an EventSubscriber is added to an EventDispatcherInterface, the manager invokes&#10;{&#10;&lt;b&gt;link&lt;/b&gt;: getSubscribedEvents} and registers the subscriber as a listener for all&#10;returned events.&#10;&lt;b&gt;author&lt;/b&gt;: Guilherme Blanco &lt;guilhermeblanco&#10;&lt;b&gt;hotmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Jonathan Wage &lt;jonwage&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Roman Borschel &lt;roman&#10;&lt;b&gt;code&lt;/b&gt;: -factory.org&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Bernhard Schussek &lt;bschussek&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="getSubscribedEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventSubscriberInterface.php;f18;44;48;44;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array of event names this subscriber wants to listen to.&#10;The array keys are event names and the value can be:&#10;* The method name to call (priority defaults to 0)&#10;* An array composed of the method name to call and the priority&#10;* An array of arrays composed of the method names to call and respective&#10;priorities, or 0 if unset&#10;For instance:&#10;* [&apos;eventName&apos; =&gt; &apos;methodName&apos;]&#10;* [&apos;eventName&apos; =&gt; [&apos;methodName&apos;, $priority]]&#10;* [&apos;eventName&apos; =&gt; [[&apos;methodName1&apos;, $priority], [&apos;methodName2&apos;]]]&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The event names to listen to;;d-1,-1;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="Exception;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Exception\Exception.php;f0;12;1;14;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Exception\Exception.php;f0;12;1;14;;;;vpos;;v;;a;;r;;d0,13;;b0,0;;m0;;e">
</treenode>
<treenode node="ExceptionInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ExceptionInterface.php;f0;18;1;20;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Exception\ExceptionInterface.php;f0;18;1;20;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Exception\ExceptionInterface.php;f0;18;1;20;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Exception\ExceptionInterface.php;f0;18;1;20;;;;vpos;;v;;aThrowable;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface ExceptionInterface extends \Throwable&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Marker Interface for the Process Component.&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
</treenode>
<treenode node="FileHandlerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileHandlerInterface.php;f0;19;1;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface FileHandlerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Andreas Möller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="getFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileHandlerInterface.php;f11;24;29;24;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="read;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileHandlerInterface.php;f11;29;26;29;;;;vpos;;v;;anull;;r&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |CacheInterface;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileHandlerInterface.php;f11;34;48;34;;;;vpos;;v;;a;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    CacheInterface &lt;b&gt;$cache&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;eCacheInterface $cache;;p">
</treenode>
</treenode>
<treenode node="FileSpecificCodeSampleInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FileSpecificCodeSampleInterface.php;f0;19;1;25;;;;vpos;;v;;aCodeSampleInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface FileSpecificCodeSampleInterface extends CodeSampleInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="getSplFileInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FileSpecificCodeSampleInterface.php;f11;24;36;24;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \SplFileInfo;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FixerConfigurationResolverInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerConfigurationResolverInterface.php;f0;14;1;27;;;;vpos;;v;;a;;r;;d0,15;;b0,0;;m0;;e">
<treenode node="getOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerConfigurationResolverInterface.php;f11;19;32;19;;;;vpos;;v;;aFixerOptionInterface;;r&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="resolve;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerConfigurationResolverInterface.php;f11;26;49;26;;;;vpos;;v;;aarray;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array&lt;string,: mixed&gt; $configuration&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;string, mixed&gt;;;d-1,-1;;b1,0;;m0;;earray&lt;string,;;p">
</treenode>
</treenode>
<treenode node="FixerDefinitionInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinitionInterface.php;f0;17;1;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface FixerDefinitionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="getCodeSamples;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinitionInterface.php;f11;53;36;53;;;;vpos;;v;;aCodeSampleInterface;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array of samples, where single sample is [code, configuration].&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getConfigurationDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinitionInterface.php;f11;34;49;34;;;;vpos;;v;;anull|string;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;deprecated&lt;/b&gt;: will be removed in 3.0&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   null for non-configurable fixer;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getDefaultConfiguration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinitionInterface.php;f11;41;45;41;;;;vpos;;v;;anull|array;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;deprecated&lt;/b&gt;: will be removed in 3.0&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   null for non-configurable fixer;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinitionInterface.php;f11;27;36;27;;;;vpos;;v;;anull;;r&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getRiskyDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinitionInterface.php;f11;46;41;46;;;;vpos;;v;;anull|string;;r&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   null for non-risky fixer;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getSummary;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinitionInterface.php;f11;22;32;22;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FixerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FixerInterface.php;f0;20;1;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface FixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="fix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FixerInterface.php;f11;52;59;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixes a file.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \SplFileInfo &lt;b&gt;$file&lt;/b&gt;: A \SplFileInfo instance&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: Tokens collection;;d-1,-1;;b1,0;;m0;;e\SplFileInfo $file;;pTokens $tokens;;p">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FixerInterface.php;f11;61;29;61;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the name of the fixer.&#10;The name must be all lowercase and without any spaces.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The name of the fixer;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FixerInterface.php;f11;70;33;70;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the priority of the fixer.&#10;The default priority is 0 and higher priorities are executed first.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FixerInterface.php;f11;35;47;35;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the fixer is a candidate for given Tokens collection.&#10;Fixer is a candidate when the collection contains tokens that may be fixed&#10;during fixer work. This could be considered as some kind of bloom filter.&#10;When this method returns true then to the Tokens collection may or may not&#10;need a fixing, but when this method returns false then the Tokens collection&#10;need no fixing for sure.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;eTokens $tokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FixerInterface.php;f11;44;29;44;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if fixer is risky or not.&#10;Risky fixer could change code behavior!;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="supports;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FixerInterface.php;f11;79;48;79;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the file is supported by this fixer.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \SplFileInfo &lt;b&gt;$file&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the file is supported by this fixer, false otherwise;;d-1,-1;;b1,0;;m0;;e\SplFileInfo $file;;p">
</treenode>
</treenode>
<treenode node="FixerOptionInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionInterface.php;f0;14;1;52;;;;vpos;;v;;a;;r;;d0,15;;b0,0;;m0;;e">
<treenode node="getAllowedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionInterface.php;f11;41;37;41;;;;vpos;;v;;anull;;r&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string[];;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionInterface.php;f11;46;38;46;;;;vpos;;v;;anull;;r&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |array;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionInterface.php;f11;36;32;36;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \LogicException when no default value is defined;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionInterface.php;f11;24;36;24;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionInterface.php;f11;19;29;19;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionInterface.php;f11;51;35;51;;;;vpos;;v;;anull;;r&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |\Closure;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="hasDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionInterface.php;f11;29;32;29;;;;vpos;;v;;abool;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="GithubClientInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\GithubClientInterface.php;f0;17;1;23;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface GithubClientInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="getTags;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\GithubClientInterface.php;f11;22;29;22;;;;vpos;;v;;aarray;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="HelperInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\HelperInterface.php;f0;18;1;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface HelperInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    HelperInterface is the interface all helpers must implement.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="getHelperSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\HelperInterface.php;f11;30;34;30;;;;vpos;;v;;aHelperSet;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the helper set associated with this helper.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A HelperSet instance;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\HelperInterface.php;f11;37;29;37;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the canonical name of this helper.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The canonical name;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="setHelperSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\HelperInterface.php;f11;23;61;23;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the helper set associated with this helper.;;d-1,-1;;b1,0;;m0;;ehelperSet;;p">
</treenode>
</treenode>
<treenode node="IOExceptionInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Exception\IOExceptionInterface.php;f0;18;1;26;;;;vpos;;v;;aExceptionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface IOExceptionInterface extends ExceptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    IOException interface for file and input/output stream related exceptions thrown by the component.&#10;&lt;b&gt;author&lt;/b&gt;: Christian Gärtner &lt;christiangaertner.film&#10;&lt;b&gt;googlemail&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="getPath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Exception\IOExceptionInterface.php;f11;25;29;25;;;;vpos;;v;;astring|null;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the associated path for the exception.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The path;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="InputAwareInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputAwareInterface.php;f0;19;1;25;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface InputAwareInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    InputAwareInterface should be implemented by classes that depends on the&#10;Console Input.&#10;&lt;b&gt;author&lt;/b&gt;: Wouter J &lt;waldio.webdesign&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="setInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputAwareInterface.php;f11;24;51;24;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the Console Input.;;d-1,-1;;b1,0;;m0;;einput;;p">
</treenode>
</treenode>
<treenode node="InputInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f0;21;1;162;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface InputInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    InputInterface is the interface implemented by all input classes.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="bind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;66;53;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Binds the current Input instance with the given arguments and options.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException;;d-1,-1;;b1,0;;m0;;edefinition;;p">
</treenode>
<treenode node="getArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;91;38;91;;;;vpos;;v;;astring|string[]|null;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the argument value for a given argument name.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When argument given doesn&apos;t exist&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The argument name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The argument value;;d-1,-1;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="getArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;80;34;80;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns all the given arguments merged with the default values.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getFirstArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;28;38;28;;;;vpos;;v;;astring|null;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the first argument from the raw parameters (not parsed).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The value of the first argument or null otherwise;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;128;36;128;;;;vpos;;v;;astring|string[]|bool|null;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the option value for a given option name.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When option given doesn&apos;t exist&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The option name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The option value;;d-1,-1;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="getOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;117;32;117;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns all the given options merged with the default values.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getParameterOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;59;86;59;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the value of a raw option (not parsed).&#10;This method is to be used to introspect the input parameters&#10;before they have been validated. It must be used carefully.&#10;Does not necessarily return the correct result for short options&#10;when multiple flags are combined in the same option.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array &lt;b&gt;$values&lt;/b&gt;: The value(s) to look for in the raw parameters (can be an array)&#10;    mixed &lt;b&gt;$default&lt;/b&gt;: The default value to return if no result is found&#10;    bool &lt;b&gt;$onlyParams&lt;/b&gt;: Only check real parameters, skip those following an end of options (--) signal&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The option value;;d-1,-1;;b1,0;;m0;;estring|array $values;;pmixed $default;;pbool $onlyParams;;p">
</treenode>
<treenode node="hasArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;110;38;110;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if an InputArgument object exists by name or position.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$name&lt;/b&gt;: The InputArgument name or position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the InputArgument object exists, false otherwise;;d-1,-1;;b1,0;;m0;;estring|int $name;;p">
</treenode>
<treenode node="hasOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;147;36;147;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if an InputOption object exists by name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The InputOption name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the InputOption object exists, false otherwise;;d-1,-1;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="hasParameterOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;43;68;43;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the raw parameters (not parsed) contain a value.&#10;This method is to be used to introspect the input parameters&#10;before they have been validated. It must be used carefully.&#10;Does not necessarily return the correct result for short options&#10;when multiple flags are combined in the same option.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array &lt;b&gt;$values&lt;/b&gt;: The values to look for in the raw parameters (can be an array)&#10;    bool &lt;b&gt;$onlyParams&lt;/b&gt;: Only check real parameters, skip those following an end of options (--) signal&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the value is contained in the raw parameters;;d-1,-1;;b1,0;;m0;;estring|array $values;;pbool $onlyParams;;p">
</treenode>
<treenode node="isInteractive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;154;35;154;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Is this input means interactive?;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="setArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;101;46;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets an argument value by name.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When argument given doesn&apos;t exist&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The argument name&#10;    string|string[]|null &lt;b&gt;$value&lt;/b&gt;: The argument value;;d-1,-1;;b1,0;;m0;;estring $name;;pstring|string[]|null $value;;p">
</treenode>
<treenode node="setInteractive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;161;48;161;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the input interactivity.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$interactive&lt;/b&gt;: If the input should be interactive;;d-1,-1;;b1,0;;m0;;ebool $interactive;;p">
</treenode>
<treenode node="setOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;138;44;138;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets an option value by name.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When option given doesn&apos;t exist&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The option name&#10;    string|string[]|bool|null &lt;b&gt;$value&lt;/b&gt;: The option value;;d-1,-1;;b1,0;;m0;;estring $name;;pstring|string[]|bool|null $value;;p">
</treenode>
<treenode node="validate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputInterface.php;f11;73;30;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Validates the input.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When not enough arguments are given;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="IntegrationCaseFactoryInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCaseFactoryInterface.php;f0;21;1;29;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface IntegrationCaseFactoryInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="create;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCaseFactoryInterface.php;f11;28;45;28;;;;vpos;;v;;aIntegrationCase;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    SplFileInfo &lt;b&gt;$file&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;eSplFileInfo $file;;p">
</treenode>
</treenode>
<treenode node="LinterInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\LinterInterface.php;f0;19;1;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface LinterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Interface for PHP code linting process manager.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="isAsync;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\LinterInterface.php;f11;24;29;24;;;;vpos;;v;;abool;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="lintFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\LinterInterface.php;f11;33;35;33;;;;vpos;;v;;aLintingResultInterface;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Lint PHP file.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$path&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $path;;p">
</treenode>
<treenode node="lintSource;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\LinterInterface.php;f11;42;39;42;;;;vpos;;v;;aLintingResultInterface;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Lint PHP code.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$source&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $source;;p">
</treenode>
</treenode>
<treenode node="LintingResultInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\LintingResultInterface.php;f0;17;1;23;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface LintingResultInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="check;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\LintingResultInterface.php;f11;22;27;22;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if linting process was successful and raise LintingException if not.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="LoggerAwareInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerAwareInterface.php;f0;7;1;17;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface LoggerAwareInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Describes a logger-aware instance.;;d0,8;;b0,0;;m0;;e">
<treenode node="setLogger;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerAwareInterface.php;f11;16;54;16;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets a logger instance on the object.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    LoggerInterface &lt;b&gt;$logger&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;eLoggerInterface $logger;;p">
</treenode>
</treenode>
<treenode node="LoggerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerInterface.php;f0;19;1;122;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface LoggerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Describes a logger instance.&#10;The message MUST be a string or object implementing __toString().&#10;The message MAY contain placeholders in the form: {foo} where foo&#10;will be replaced by the context data in key &quot;foo&quot;.&#10;The context array can contain arbitrary data. The only assumption that&#10;can be made by implementors is that if an Exception instance is given&#10;to produce a stack trace, it MUST be in a key named &quot;exception&quot;.&#10;See https://github.com/php-fig/fig-standards/blob/master/accepted/PSR-3-logger-interface.md&#10;for the full interface specification.;;d0,20;;b0,0;;m0;;e">
<treenode node="alert;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerInterface.php;f11;42;61;42;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Action must be taken immediately.&#10;Example: Entire website down, database unavailable, etc. This should&#10;trigger the SMS alerts and wake you up.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="critical;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerInterface.php;f11;54;64;54;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Critical conditions.&#10;Example: Application component unavailable, unexpected exception.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="debug;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerInterface.php;f11;110;61;110;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Detailed debug information.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="emergency;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerInterface.php;f11;29;65;29;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    System is unusable.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="error;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerInterface.php;f11;65;61;65;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runtime errors that do not require immediate action but should typically&#10;be logged and monitored.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="info;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerInterface.php;f11;100;60;100;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Interesting events.&#10;Example: User logs in, SQL logs.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="log;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerInterface.php;f11;121;67;121;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Logs with an arbitrary level.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$level&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;emixed $level;;pstring $message;;parray $context;;p">
</treenode>
<treenode node="notice;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerInterface.php;f11;88;62;88;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Normal but significant events.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="warning;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerInterface.php;f11;78;63;78;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exceptional occurrences that are not errors.&#10;Example: Use of deprecated APIs, poor use of an API, undesirable things&#10;that are not necessarily wrong.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
</treenode>
<treenode node="LongestCommonSubsequence;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\LCS\LongestCommonSubsequence.php;f0;15;1;26;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface LongestCommonSubsequence&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Interface for implementations of longest common subsequence calculation.;;d0,16;;b0,0;;m0;;e">
<treenode node="calculate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\LCS\LongestCommonSubsequence.php;f11;25;53;25;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculates the longest common subsequence of two arrays.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$from&lt;/b&gt;&#10;    array &lt;b&gt;$to&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;earray $from;;parray $to;;p">
</treenode>
</treenode>
<treenode node="LongestCommonSubsequenceCalculator;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\LongestCommonSubsequenceCalculator.php;f0;12;1;23;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\LongestCommonSubsequenceCalculator.php;f0;12;1;23;;;;vpos;;v;;a;;r;;d0,13;;b0,0;;m0;;e">
<treenode node="calculate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\LongestCommonSubsequenceCalculator.php;f11;22;53;22;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\LongestCommonSubsequenceCalculator.php;f11;22;53;22;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculates the longest common subsequence of two arrays.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$from&lt;/b&gt;&#10;    array &lt;b&gt;$to&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;earray $from;;parray $to;;p">
</treenode>
</treenode>
<treenode node="MB_CASE_LOWER;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f12;15;25;15;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="MB_CASE_TITLE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f12;16;25;16;;;;vpos;;v;;a;;r2;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="MB_CASE_UPPER;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f12;14;25;14;;;;vpos;;v;;a;;r0;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="NewVersionCheckerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\NewVersionCheckerInterface.php;f0;17;1;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface NewVersionCheckerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="compareVersions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\NewVersionCheckerInterface.php;f11;44;57;44;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns -1, 0, or 1 if the first version is respectively less than,&#10;equal to, or greater than the second.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$versionA&lt;/b&gt;&#10;    string &lt;b&gt;$versionB&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $versionA;;pstring $versionB;;p">
</treenode>
<treenode node="getLatestVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\NewVersionCheckerInterface.php;f11;24;38;24;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the tag of the latest version.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getLatestVersionOfMajor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\NewVersionCheckerInterface.php;f11;33;58;33;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the tag of the latest minor/patch version of the given major version.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$majorVersion&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d-1,-1;;b1,0;;m0;;eint $majorVersion;;p">
</treenode>
</treenode>
<treenode node="NotFoundExceptionInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\container\src\NotFoundExceptionInterface.php;f0;10;1;12;;;;vpos;;v;;aContainerExceptionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface NotFoundExceptionInterface extends ContainerExceptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    No entry was found in the container.;;d0,11;;b0,0;;m0;;e">
</treenode>
<treenode node="Options;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Options.php;f0;19;1;21;;;;vpos;;v;;aArrayAccess;;cCountable;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface Options extends \ArrayAccess, \Countable&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Contains resolved option values.&#10;&lt;b&gt;author&lt;/b&gt;: Bernhard Schussek &lt;bschussek&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Tobias Schultze &lt;http://tobion.de&gt;;;d0,20;;b0,0;;m0;;e">
</treenode>
<treenode node="OutputFormatterInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterInterface.php;f0;18;1;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface OutputFormatterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formatter interface for console output.&#10;&lt;b&gt;author&lt;/b&gt;: Konstantin Kudryashov &lt;ever.zet&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="format;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterInterface.php;f11;69;36;69;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a message according to the given styles.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;: The message to style&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The styled message;;d-1,-1;;b1,0;;m0;;estring $message;;p">
</treenode>
<treenode node="getStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterInterface.php;f11;60;35;60;;;;vpos;;v;;aOutputFormatterStyleInterface;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets style options from style with specified name.&#10;&lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException When style isn&apos;t defined&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="hasStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterInterface.php;f11;49;35;49;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if output formatter has style with specified name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="isDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterInterface.php;f11;32;33;32;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the decorated flag.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the output will decorate messages, false otherwise;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="setDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterInterface.php;f11;25;44;25;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the decorated flag.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$decorated&lt;/b&gt;: Whether to decorate the messages or not;;d-1,-1;;b1,0;;m0;;ebool $decorated;;p">
</treenode>
<treenode node="setStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterInterface.php;f11;40;73;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets a new style.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The style name&#10;    OutputFormatterStyleInterface &lt;b&gt;$style&lt;/b&gt;: The style instance;;d-1,-1;;b1,0;;m0;;estring $name;;pOutputFormatterStyleInterface $style;;p">
</treenode>
</treenode>
<treenode node="OutputFormatterStyleInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleInterface.php;f0;18;1;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface OutputFormatterStyleInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formatter style interface for defining styles.&#10;&lt;b&gt;author&lt;/b&gt;: Konstantin Kudryashov &lt;ever.zet&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="apply;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleInterface.php;f11;60;32;60;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Applies the style to a given text.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$text&lt;/b&gt;: The text to style;;d-1,-1;;b1,0;;m0;;estring $text;;p">
</treenode>
<treenode node="setBackground;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleInterface.php;f11;32;48;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets style background color.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$color&lt;/b&gt;: The color name;;d-1,-1;;b1,0;;m0;;estring $color;;p">
</treenode>
<treenode node="setForeground;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleInterface.php;f11;25;48;25;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets style foreground color.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$color&lt;/b&gt;: The color name;;d-1,-1;;b1,0;;m0;;estring|null $color;;p">
</treenode>
<treenode node="setOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleInterface.php;f11;39;38;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets some specific style option.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The option name;;d-1,-1;;b1,0;;m0;;estring $option;;p">
</treenode>
<treenode node="setOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleInterface.php;f11;51;46;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets multiple style options at once.;;d-1,-1;;b1,0;;m0;;eoptions;;p">
</treenode>
<treenode node="unsetOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleInterface.php;f11;46;40;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unsets some specific style option.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The option name;;d-1,-1;;b1,0;;m0;;estring $option;;p">
</treenode>
</treenode>
<treenode node="OutputInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f0;20;1;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface OutputInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    OutputInterface is the interface implemented by all Output classes.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="OUTPUT_NORMAL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f9;28;23;28;;;;vpos;;v;;a;;r1;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="OUTPUT_PLAIN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f9;30;22;30;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="OUTPUT_RAW;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f9;29;20;29;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERBOSITY_DEBUG;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f9;26;25;26;;;;vpos;;v;;a;;r256;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERBOSITY_NORMAL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f9;23;26;23;;;;vpos;;v;;a;;r32;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERBOSITY_QUIET;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f9;22;25;22;;;;vpos;;v;;a;;r16;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="VERBOSITY_VERBOSE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f9;24;27;24;;;;vpos;;v;;a;;r64;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERBOSITY_VERY_VERBOSE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f9;25;32;25;;;;vpos;;v;;a;;r128;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="getFormatter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f11;112;34;112;;;;vpos;;v;;aOutputFormatterInterface;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns current output formatter instance.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f11;61;34;61;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the current verbosity of the output.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The current level of verbosity (one of the VERBOSITY constants);;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="isDebug;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f11;89;29;89;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether verbosity is debug (-vvv).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if verbosity is set to VERBOSITY_DEBUG, false otherwise;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="isDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f11;103;33;103;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the decorated flag.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the output will decorate messages, false otherwise;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="isQuiet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f11;68;29;68;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether verbosity is quiet (-q).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if verbosity is set to VERBOSITY_QUIET, false otherwise;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="isVerbose;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f11;75;31;75;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether verbosity is verbose (-v).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if verbosity is set to VERBOSITY_VERBOSE, false otherwise;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="isVeryVerbose;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f11;82;35;82;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether verbosity is very verbose (-vv).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if verbosity is set to VERBOSITY_VERY_VERBOSE, false otherwise;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="setDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f11;96;44;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the decorated flag.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$decorated&lt;/b&gt;: Whether to decorate the messages;;d-1,-1;;b1,0;;m0;;ebool $decorated;;p">
</treenode>
<treenode node="setFormatter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f11;105;69;105;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;eformatter;;p">
</treenode>
<treenode node="setVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f11;54;40;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the verbosity of the output.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$level&lt;/b&gt;: The level of verbosity (one of the VERBOSITY constants);;d-1,-1;;b1,0;;m0;;eint $level;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f11;39;68;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Writes a message to the output.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|iterable &lt;b&gt;$messages&lt;/b&gt;: The message as an iterable of strings or a single string&#10;    bool &lt;b&gt;$newline&lt;/b&gt;: Whether to add a newline&#10;    int &lt;b&gt;$options&lt;/b&gt;: A bitmask of options (one of the OUTPUT or VERBOSITY constants), 0 is considered the same as self::OUTPUT_NORMAL | self::VERBOSITY_NORMAL;;d-1,-1;;b1,0;;m0;;estring|iterable $messages;;pbool $newline;;pint $options;;p">
</treenode>
<treenode node="writeln;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\OutputInterface.php;f11;47;52;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Writes a message to the output and adds a newline at the end.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|iterable &lt;b&gt;$messages&lt;/b&gt;: The message as an iterable of strings or a single string&#10;    int &lt;b&gt;$options&lt;/b&gt;: A bitmask of options (one of the OUTPUT or VERBOSITY constants), 0 is considered the same as self::OUTPUT_NORMAL | self::VERBOSITY_NORMAL;;d-1,-1;;b1,0;;m0;;estring|iterable $messages;;pint $options;;p">
</treenode>
</treenode>
<treenode node="PATH_BLOG;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\racine.php;f8;1;17;1;;;;vpos;;v;;a;;r$_SERVER[&apos;DOCUMENT_ROOT&apos;;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="PATH_CONTROLLER;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\racine.php;f8;3;23;3;;;;vpos;;v;;a;;r$_SERVER[&apos;DOCUMENT_ROOT&apos;;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="PATH_MODEL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\racine.php;f8;2;18;2;;;;vpos;;v;;a;;r$_SERVER[&apos;DOCUMENT_ROOT&apos;;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="PATH_VUE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\racine.php;f8;4;16;4;;;;vpos;;v;;a;;r$_SERVER[&apos;DOCUMENT_ROOT&apos;;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="PHP_INT_MIN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\bootstrap.php;f16;15;27;15;;;;vpos;;v;;a;;r~PHP_INT_MAX;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="PHP_OS_FAMILY;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\bootstrap.php;f16;28;29;28;;;;vpos;;v;;a;;rp\Php72::php_os_family(;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="PREG_SPLIT_DELIM_CAPTURE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f9;7;34;7;;;;vpos;;v;;a;;r;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="PREG_SPLIT_NO_EMPTY;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f9;8;29;8;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="PREG_SPLIT_OFFSET_CAPTURE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f9;9;35;9;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="PharCheckerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\PharCheckerInterface.php;f0;17;1;25;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface PharCheckerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="checkFileValidity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\PharCheckerInterface.php;f11;24;48;24;;;;vpos;;v;;anull|string;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$filename&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the invalidity reason if any, null otherwise;;d-1,-1;;b1,0;;m0;;estring $filename;;p">
</treenode>
</treenode>
<treenode node="PipesInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\PipesInterface.php;f0;20;1;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface PipesInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    PipesInterface manages descriptors and pipes for the use of proc_open.&#10;&lt;b&gt;author&lt;/b&gt;: Romain Neutron &lt;imprec&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="CHUNK_SIZE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\PipesInterface.php;f9;22;20;22;;;;vpos;;v;;a;;r16384;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="areOpen;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\PipesInterface.php;f11;53;29;53;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns if the current state has open file handles or pipes.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="close;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\PipesInterface.php;f11;65;27;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Closes file handles and pipes.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescriptors;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\PipesInterface.php;f11;29;36;29;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array of descriptors for the use of proc_open.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getFiles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\PipesInterface.php;f11;36;30;36;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array of filenames indexed by their related stream in case these pipes use temporary files.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="haveReadSupport;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\PipesInterface.php;f11;60;37;60;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns if pipes are able to read output.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="readAndWrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\PipesInterface.php;f11;46;59;46;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reads data in file handles and pipes.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$blocking&lt;/b&gt;: Whether to use blocking calls or not&#10;    bool &lt;b&gt;$close&lt;/b&gt;: Whether to close pipes if they&apos;ve reached EOF&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] An array of read data indexed by their fd;;d-1,-1;;b1,0;;m0;;ebool $blocking;;pbool $close;;p">
</treenode>
</treenode>
<treenode node="ProcessOutputInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\ProcessOutputInterface.php;f0;17;1;20;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface ProcessOutputInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="printLegend;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\ProcessOutputInterface.php;f11;19;33;19;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Reader;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Reader.php;f0;26;1;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface Reader&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Interface for annotation readers.&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="getClassAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Reader.php;f4;47;73;47;;;;vpos;;v;;aobject|null;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets a class annotation.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \ReflectionClass &lt;b&gt;$class&lt;/b&gt;: The ReflectionClass of the class from which the class annotations should be read.&#10;    string &lt;b&gt;$annotationName&lt;/b&gt;: The name of the annotation.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The Annotation or NULL, if the requested annotation does not exist.;;d-1,-1;;b0,0;;m0;;e\ReflectionClass $class;;pstring $annotationName;;p">
</treenode>
<treenode node="getClassAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Reader.php;f4;36;57;36;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the annotations applied to a class.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \ReflectionClass &lt;b&gt;$class&lt;/b&gt;: The ReflectionClass of the class from which the class annotations should be read.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of Annotations.;;d-1,-1;;b0,0;;m0;;e\ReflectionClass $class;;p">
</treenode>
<treenode node="getMethodAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Reader.php;f4;67;76;67;;;;vpos;;v;;aobject|null;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets a method annotation.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \ReflectionMethod &lt;b&gt;$method&lt;/b&gt;: The ReflectionMethod to read the annotations from.&#10;    string &lt;b&gt;$annotationName&lt;/b&gt;: The name of the annotation.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The Annotation or NULL, if the requested annotation does not exist.;;d-1,-1;;b0,0;;m0;;e\ReflectionMethod $method;;pstring $annotationName;;p">
</treenode>
<treenode node="getMethodAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Reader.php;f4;57;60;57;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the annotations applied to a method.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \ReflectionMethod &lt;b&gt;$method&lt;/b&gt;: The ReflectionMethod of the method from which the annotations should be read.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of Annotations.;;d-1,-1;;b0,0;;m0;;e\ReflectionMethod $method;;p">
</treenode>
<treenode node="getPropertyAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Reader.php;f4;87;82;87;;;;vpos;;v;;aobject|null;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets a property annotation.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \ReflectionProperty &lt;b&gt;$property&lt;/b&gt;: The ReflectionProperty to read the annotations from.&#10;    string &lt;b&gt;$annotationName&lt;/b&gt;: The name of the annotation.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The Annotation or NULL, if the requested annotation does not exist.;;d-1,-1;;b0,0;;m0;;e\ReflectionProperty $property;;pstring $annotationName;;p">
</treenode>
<treenode node="getPropertyAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Reader.php;f4;77;66;77;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the annotations applied to a property.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \ReflectionProperty &lt;b&gt;$property&lt;/b&gt;: The ReflectionProperty of the property from which the annotations should be read.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of Annotations.;;d-1,-1;;b0,0;;m0;;e\ReflectionProperty $property;;p">
</treenode>
</treenode>
<treenode node="ReporterInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReporterInterface.php;f0;17;1;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface ReporterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Boris Gorbylev &lt;ekho&#10;&lt;b&gt;ekho&lt;/b&gt;: .name&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="generate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReporterInterface.php;f11;31;58;31;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Process changed files array. Returns generated report.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ReportSummary &lt;b&gt;$reportSummary&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;eReportSummary $reportSummary;;p">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReporterInterface.php;f11;22;31;22;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ResetInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ResetInterface.php;f0;26;1;29;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface ResetInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Provides a way to reset an object to its initial state.&#10;When calling the &quot;reset()&quot; method on an object, it should be put back to its&#10;initial state. This usually means clearing any internal buffers and forwarding&#10;the call to internal dependencies. All properties of the object should be put&#10;back to the same state it had when it was first ready to use.&#10;This method could be called, for example, to recycle objects that are used as&#10;services, so that they can be used to handle several requests in the same&#10;process loop (note that we advise making your services stateless instead of&#10;implementing this interface when possible.);;d0,27;;b0,0;;m0;;e">
<treenode node="reset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ResetInterface.php;f11;28;27;28;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="RuleSetInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSetInterface.php;f0;21;1;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface RuleSetInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set of rules to be used by fixer.&#10;Example of set: [&quot;&#10;&lt;b&gt;PSR2&lt;/b&gt;: &quot; =&gt; true, &quot;&#10;&lt;b&gt;PSR1&lt;/b&gt;: &quot; =&gt; false, &quot;strict&quot; =&gt; true].&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSetInterface.php;f11;23;48;23;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;eset;;p">
</treenode>
<treenode node="create;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSetInterface.php;f18;25;50;25;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;eset;;p">
</treenode>
<treenode node="getRuleConfiguration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSetInterface.php;f11;34;47;34;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get configuration for given rule.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$rule&lt;/b&gt;: name of rule&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |array;;d-1,-1;;b1,0;;m0;;estring $rule;;p">
</treenode>
<treenode node="getRules;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSetInterface.php;f11;41;30;41;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get all rules from rules set.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getSetDefinitionNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSetInterface.php;f11;48;43;48;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get names of all set definitions.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="hasRule;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSetInterface.php;f11;57;34;57;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check given rule is in rules set.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$rule&lt;/b&gt;: name of rule;;d-1,-1;;b1,0;;m0;;estring $rule;;p">
</treenode>
</treenode>
<treenode node="ServiceProviderInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceProviderInterface.php;f0;21;1;35;;;;vpos;;v;;aContainerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface ServiceProviderInterface extends ContainerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A ServiceProviderInterface exposes the identifiers and the types of services provided by a container.&#10;&lt;b&gt;author&lt;/b&gt;: Nicolas Grekas &lt;p&#10;&lt;b&gt;tchwork&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Mateusz Sip &lt;mateusz.sip&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="getProvidedServices;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceProviderInterface.php;f11;34;48;34;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an associative array of service types keyed by the identifiers provided by the current container.&#10;Examples:&#10;* [&apos;logger&apos; =&gt; &apos;Psr\Log\LoggerInterface&apos;] means the object provides a service named &quot;logger&quot; that implements Psr\Log\LoggerInterface&#10;* [&apos;foo&apos; =&gt; &apos;?&apos;] means the container provides service name &quot;foo&quot; of unspecified type&#10;* [&apos;bar&apos; =&gt; &apos;?Bar\Baz&apos;] means the container provides a service &quot;bar&quot; of type Bar\Baz|null&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] The provided service types, keyed by service names;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ServiceSubscriberInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceSubscriberInterface.php;f0;28;1;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface ServiceSubscriberInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A ServiceSubscriber exposes its dependencies via the static {&#10;&lt;b&gt;link&lt;/b&gt;: getSubscribedServices} method.&#10;The getSubscribedServices method returns an array of service types required by such instances,&#10;optionally keyed by the service names used internally. Service types that start with an interrogation&#10;mark &quot;?&quot; are optional, while the other ones are mandatory service dependencies.&#10;The injected service locators SHOULD NOT allow access to any other services not specified by the method.&#10;It is expected that ServiceSubscriber instances consume PSR-11-based service locators internally.&#10;This interface does not dictate any injection method for these service locators, although constructor&#10;injection is recommended.&#10;&lt;b&gt;author&lt;/b&gt;: Nicolas Grekas &lt;p&#10;&lt;b&gt;tchwork&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="getSubscribedServices;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceSubscriberInterface.php;f18;51;50;51;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array of service types required by such instances, optionally keyed by the service names used internally.&#10;For mandatory dependencies:&#10;* [&apos;logger&apos; =&gt; &apos;Psr\Log\LoggerInterface&apos;] means the objects use the &quot;logger&quot; name&#10;internally to fetch a service which must implement Psr\Log\LoggerInterface.&#10;* [&apos;loggers&apos; =&gt; &apos;Psr\Log\LoggerInterface[]&apos;] means the objects use the &quot;loggers&quot; name&#10;internally to fetch an iterable of Psr\Log\LoggerInterface instances.&#10;* [&apos;Psr\Log\LoggerInterface&apos;] is a shortcut for&#10;* [&apos;Psr\Log\LoggerInterface&apos; =&gt; &apos;Psr\Log\LoggerInterface&apos;]&#10;otherwise:&#10;* [&apos;logger&apos; =&gt; &apos;?Psr\Log\LoggerInterface&apos;] denotes an optional dependency&#10;* [&apos;loggers&apos; =&gt; &apos;?Psr\Log\LoggerInterface[]&apos;] denotes an optional iterable dependency&#10;* [&apos;?Psr\Log\LoggerInterface&apos;] is a shortcut for&#10;* [&apos;Psr\Log\LoggerInterface&apos; =&gt; &apos;?Psr\Log\LoggerInterface&apos;]&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The required service types, optionally keyed by service names;;d-1,-1;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="SessionUpdateTimestampHandlerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Resources\stubs\SessionUpdateTimestampHandlerInterface.php;f0;2;1;22;;;;vpos;;v;;a;;r;;d0,3;;b0,0;;m0;;e">
<treenode node="updateTimestamp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Resources\stubs\SessionUpdateTimestampHandlerInterface.php;f11;21;47;21;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Updates the timestamp of a session when its data didn&apos;t change.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;&#10;    string &lt;b&gt;$val&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $key;;pstring $val;;p">
</treenode>
<treenode node="validateId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Resources\stubs\SessionUpdateTimestampHandlerInterface.php;f11;11;36;11;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if a session identifier already exists or not.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $key;;p">
</treenode>
</treenode>
<treenode node="SignatureInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\SignatureInterface.php;f0;19;1;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface SignatureInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Andreas Möller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="equals;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\SignatureInterface.php;f11;51;43;51;;;;vpos;;v;;abool;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    SignatureInterface &lt;b&gt;$signature&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;eSignatureInterface $signature;;p">
</treenode>
<treenode node="getFixerVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\SignatureInterface.php;f11;29;37;29;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\SignatureInterface.php;f11;34;31;34;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getLineEnding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\SignatureInterface.php;f11;39;35;39;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getPhpVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\SignatureInterface.php;f11;24;35;24;;;;vpos;;v;;astring;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getRules;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\SignatureInterface.php;f11;44;30;44;;;;vpos;;v;;aarray;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="StartEndTokenAwareAnalysis;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\StartEndTokenAwareAnalysis.php;f0;14;1;29;;;;vpos;;v;;a;;r;;d0,15;;b0,0;;m0;;e">
<treenode node="getEndIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\StartEndTokenAwareAnalysis.php;f11;28;33;28;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The end index of the analyzed subject inside of the Tokens.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getStartIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\StartEndTokenAwareAnalysis.php;f11;21;35;21;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The start index of the analyzed subject inside of the Tokens.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="StreamableInputInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\StreamableInputInterface.php;f0;19;1;36;;;;vpos;;v;;aInputInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface StreamableInputInterface extends InputInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    StreamableInputInterface is the interface implemented by all input classes&#10;that have an input stream.&#10;&lt;b&gt;author&lt;/b&gt;: Robin Chalas &lt;robin.chalas&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="getStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\StreamableInputInterface.php;f11;35;31;35;;;;vpos;;v;;aresource;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the input stream.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="setStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\StreamableInputInterface.php;f11;28;38;28;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the input stream to read from when interacting with the user.&#10;This is mainly useful for testing purpose.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource &lt;b&gt;$stream&lt;/b&gt;: The input stream;;d-1,-1;;b1,0;;m0;;eresource $stream;;p">
</treenode>
</treenode>
<treenode node="StyleInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f0;18;1;152;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface StyleInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output style helpers.&#10;&lt;b&gt;author&lt;/b&gt;: Kevin Bond &lt;kevinbond&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="ask;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;95;70;95;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Asks a question.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$question&lt;/b&gt;&#10;    string|null &lt;b&gt;$default&lt;/b&gt;&#10;    callable|null &lt;b&gt;$validator&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $question;;pstring|null $default;;pcallable|null $validator;;p">
</treenode>
<treenode node="askHidden;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;105;59;105;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Asks a question with the user input hidden.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$question&lt;/b&gt;&#10;    callable|null &lt;b&gt;$validator&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $question;;pcallable|null $validator;;p">
</treenode>
<treenode node="caution;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;79;37;79;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a caution admonition.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array &lt;b&gt;$message&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring|array $message;;p">
</treenode>
<treenode node="choice;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;125;70;125;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Asks a choice question.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$question&lt;/b&gt;&#10;    string|int|null &lt;b&gt;$default&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;equestion;;pchoices;;pdefault;;p">
</treenode>
<treenode node="confirm;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;115;55;115;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Asks for confirmation.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$question&lt;/b&gt;&#10;    bool &lt;b&gt;$default&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $question;;pbool $default;;p">
</treenode>
<treenode node="error;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;58;35;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats an error result bar.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array &lt;b&gt;$message&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring|array $message;;p">
</treenode>
<treenode node="listing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;37;44;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a list.;;d-1,-1;;b1,0;;m0;;eelements;;p">
</treenode>
<treenode node="newLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;132;39;132;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add newline(s).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$count&lt;/b&gt;: The number of newlines;;d-1,-1;;b1,0;;m0;;eint $count;;p">
</treenode>
<treenode node="note;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;72;34;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a note admonition.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array &lt;b&gt;$message&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring|array $message;;p">
</treenode>
<treenode node="progressAdvance;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;146;46;146;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Advances the progress output X steps.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$step&lt;/b&gt;: Number of steps to advance;;d-1,-1;;b1,0;;m0;;eint $step;;p">
</treenode>
<treenode node="progressFinish;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;151;36;151;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finishes the progress output.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="progressStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;139;43;139;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Starts the progress output.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$max&lt;/b&gt;: Maximum steps (0 if unknown);;d-1,-1;;b1,0;;m0;;eint $max;;p">
</treenode>
<treenode node="section;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;32;37;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a section title.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $message;;p">
</treenode>
<treenode node="success;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;51;37;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a success result bar.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array &lt;b&gt;$message&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring|array $message;;p">
</treenode>
<treenode node="table;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;84;54;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a table.;;d-1,-1;;b1,0;;m0;;eheaders;;prows;;p">
</treenode>
<treenode node="text;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;44;34;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats informational text.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array &lt;b&gt;$message&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring|array $message;;p">
</treenode>
<treenode node="title;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;25;35;25;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a command title.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring $message;;p">
</treenode>
<treenode node="warning;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\StyleInterface.php;f11;65;37;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats an warning result bar.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array &lt;b&gt;$message&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;estring|array $message;;p">
</treenode>
</treenode>
<treenode node="ToolInfoInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfoInterface.php;f0;17;1;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface ToolInfoInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="getComposerInstallationDetails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfoInterface.php;f11;19;52;19;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getComposerVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfoInterface.php;f11;21;40;21;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getPharDownloadUri;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfoInterface.php;f11;29;48;29;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;eversion;;p">
</treenode>
<treenode node="getVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfoInterface.php;f11;23;32;23;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="isInstalledAsPhar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfoInterface.php;f11;25;39;25;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="isInstalledByComposer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfoInterface.php;f11;27;43;27;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="TraceableEventDispatcherInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcherInterface.php;f0;22;1;41;;;;vpos;;v;;aEventDispatcherInterface;;cResetInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface TraceableEventDispatcherInterface extends EventDispatcherInterface, ResetInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;deprecated&lt;/b&gt;: since Symfony 4.1&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="getCalledListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcherInterface.php;f11;31;69;31;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the called listeners.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Request|null &lt;b&gt;$request&lt;/b&gt;: The request to get listeners for&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of called listeners;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getNotCalledListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcherInterface.php;f11;40;72;40;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the not called listeners.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Request|null &lt;b&gt;$request&lt;/b&gt;: The request to get listeners for&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of not called listeners;;d-1,-1;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="TransformerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TransformerInterface.php;f0;26;1;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface TransformerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Interface for Transformer class.&#10;Transformer role is to register custom tokens and transform Tokens collection to use them.&#10;Custom token is a user defined token type and is used to separate different meaning of original token type.&#10;For example T_ARRAY is a token for both creating new array and typehinting a parameter. This two meaning should have two token types.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TransformerInterface.php;f11;33;37;33;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get tokens created by Transformer.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TransformerInterface.php;f11;42;29;42;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the name of the transformer.&#10;The name must be all lowercase and without any spaces.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The name of the fixer;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TransformerInterface.php;f11;51;33;51;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the priority of the transformer.&#10;The default priority is 0 and higher priorities are executed first.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TransformerInterface.php;f11;63;45;63;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return minimal required PHP version id to transform the code.&#10;Custom Token kinds from Transformers are always registered, but sometimes&#10;there is no need to analyse the Tokens if for sure we cannot find examined&#10;token kind, eg transforming `T_FUNCTION` in `&lt;?php use function Foo\\bar;s`&#10;code.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TransformerInterface.php;f11;72;65;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Process Token to transform it into custom token when needed.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    Token &lt;b&gt;$token&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;eTokens $tokens;;pToken $token;;pint $index;;p">
</treenode>
</treenode>
<treenode node="VersionSpecificCodeSampleInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\VersionSpecificCodeSampleInterface.php;f0;17;1;25;;;;vpos;;v;;aCodeSampleInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface VersionSpecificCodeSampleInterface extends CodeSampleInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Andreas Moeller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="isSuitableFor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\VersionSpecificCodeSampleInterface.php;f11;24;43;24;;;;vpos;;v;;abool;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;eint $version;;p">
</treenode>
</treenode>
<treenode node="VersionSpecificationInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\VersionSpecificationInterface.php;f0;17;1;25;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface VersionSpecificationInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Andreas Möller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="isSatisfiedBy;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\VersionSpecificationInterface.php;f11;24;43;24;;;;vpos;;v;;abool;;r&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$version&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;eint $version;;p">
</treenode>
</treenode>
<treenode node="WhitespacesAwareFixerInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\WhitespacesAwareFixerInterface.php;f0;19;1;22;;;;vpos;;v;;aFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface WhitespacesAwareFixerInterface extends FixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="setWhitespacesConfig;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\WhitespacesAwareFixerInterface.php;f11;21;72;21;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;econfig;;p">
</treenode>
</treenode>
<treenode node="WrappableOutputFormatterInterface;PHP:Interface Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\WrappableOutputFormatterInterface.php;f0;18;1;24;;;;vpos;;v;;aOutputFormatterInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interface WrappableOutputFormatterInterface extends OutputFormatterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formatter interface for console output that supports word wrapping.&#10;&lt;b&gt;author&lt;/b&gt;: Roland Franssen &lt;franssen.roland&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="formatAndWrap;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\WrappableOutputFormatterInterface.php;f11;23;62;23;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a message according to the given styles, wrapping at `$width` (0 means no wrapping).;;d-1,-1;;b1,0;;m0;;emessage;;pwidth;;p">
</treenode>
</treenode>
<treenode node="footer.inc.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\livres.php;f9;34;23;34;;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\contact.php;f9;74;23;74;;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\articles.php;f9;59;23;59;;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\article.php;f11;84;25;84;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="header.inc.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\livres.php;f9;1;23;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\contact.php;f15;2;29;2;;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\articles.php;f9;3;23;3;;C:\xampp3\htdocs\openclass\p5\myp5blog\index_old.php;f15;1;29;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\apropos.php;f15;0;29;0;;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\article.php;f17;0;31;0;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="lib/byte_safe_strings.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\paragonie\random_compat\psalm-autoload.php;f14;2;39;2;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="lib/cast_to_int.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\paragonie\random_compat\psalm-autoload.php;f14;3;33;3;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="lib/error_polyfill.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\paragonie\random_compat\psalm-autoload.php;f14;4;36;4;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="lib/random.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\paragonie\random_compat\psalm-autoload.php;f14;6;28;6;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="model/Database.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\home.php;f14;3;32;3;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="other/ide_stubs/libsodium.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\paragonie\random_compat\psalm-autoload.php;f14;5;43;5;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="vue/footer.inc.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\home.php;f9;79;27;79;;C:\xampp3\htdocs\openclass\p5\myp5blog\vue\home.php;f9;78;27;78;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="vue/header.inc.php;PHP:PHP Include;C:\xampp3\htdocs\openclass\p5\myp5blog\home.php;f9;2;27;2;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="AbstractAlignFixerHelper;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractAlignFixerHelper.php;f9;23;1;124;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractAlignFixerHelper&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Carlos Cirello &lt;carlos.cirello.nl&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;&#10;&lt;b&gt;deprecated&lt;/b&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="ALIGNABLE_PLACEHOLDER;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractAlignFixerHelper.php;f9;28;31;28;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;const&lt;/b&gt;: Placeholder used as anchor for right alignment.;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="fix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractAlignFixerHelper.php;f11;39;5;53;;;;vpos;;v;;a;;r;;d4,40;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="injectAlignmentPlaceholders;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractAlignFixerHelper.php;f23;62;93;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Inject into the text placeholders of candidates of vertical alignment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startAt&lt;/b&gt;&#10;    int &lt;b&gt;$endAt&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;eTokens $tokens;;pint $startAt;;pint $endAt;;p">
</treenode>
<treenode node="replacePlaceholder;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractAlignFixerHelper.php;f14;71;5;123;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    replacePlaceholder(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Look for group of placeholders, and provide vertical alignment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;;;d4,72;;b2,0;;m0;;eTokens $tokens;;p">
</treenode>
</treenode>
<treenode node="AbstractChunkOutputBuilder;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\AbstractChunkOutputBuilder.php;f9;12;1;55;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Output\AbstractChunkOutputBuilder.php;f9;12;1;55;;;;vpos;;v;;aDiffOutputBuilderInterface;;c;;r;;d0,13;;b0,0;;m0;;e">
<treenode node="getCommonChunks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\AbstractChunkOutputBuilder.php;f14;23;5;54;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Output\AbstractChunkOutputBuilder.php;f14;23;5;54;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommonChunks(array $diff, $lineThreshold = 5)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Takes input of the diff array and returns the common parts.&#10;Iterates through diff line by line.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$diff&lt;/b&gt;&#10;    int &lt;b&gt;$lineThreshold&lt;/b&gt;;;d4,24;;b2,0;;m0;;earray $diff;;pint $lineThreshold;;p">
</treenode>
</treenode>
<treenode node="AbstractConstraint;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\AbstractConstraint.php;f9;18;1;62;;;;vpos;;v;;aConstraintInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractConstraint implements ConstraintInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Base constraint class.;;d0,19;;b0,0;;m0;;e">
<treenode node="getPrettyString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\AbstractConstraint.php;f11;50;5;57;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPrettyString()&#10;;;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="matches;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\AbstractConstraint.php;f11;28;5;37;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    matches(ConstraintInterface $provider)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ConstraintInterface &lt;b&gt;$provider&lt;/b&gt;;;d4,29;;b1,0;;m0;;eConstraintInterface $provider;;p">
</treenode>
<treenode node="setPrettyString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\AbstractConstraint.php;f11;42;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPrettyString($prettyString)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$prettyString&lt;/b&gt;;;d4,43;;b1,0;;m0;;estring $prettyString;;p">
</treenode>
</treenode>
<treenode node="AbstractDescriptorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f9;21;1;106;;;;vpos;;v;;aTestCase;;c;;r;;d0,22;;b0,0;;m0;;e">
<treenode node="assertDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f14;100;5;105;;;;vpos;;v;;a;;r;;d4,101;;b2,0;;m0;;eexpectedDescription;;pdescribedObject;;poptions;;p">
</treenode>
<treenode node="getDescribeApplicationTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f11;80;5;83;;;;vpos;;v;;a;;r;;d4,81;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescribeCommandTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f11;75;5;78;;;;vpos;;v;;a;;r;;d4,76;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescribeInputArgumentTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f11;60;5;63;;;;vpos;;v;;a;;r;;d4,61;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescribeInputDefinitionTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f11;70;5;73;;;;vpos;;v;;a;;r;;d4,71;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescribeInputOptionTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f11;65;5;68;;;;vpos;;v;;a;;r;;d4,66;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescriptionTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f14;89;5;98;;;;vpos;;v;;a;;r;;d4,90;;b2,0;;m0;;eobjects;;p">
</treenode>
<treenode node="getDescriptor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f23;85;47;85;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f23;87;43;87;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;e">
</treenode>
<treenode node="testDescribeApplication;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f11;48;5;58;;;;vpos;;v;;a;;r;;d4,49;;b1,0;;m0;;eapplication;;pexpectedDescription;;p">
</treenode>
<treenode node="testDescribeCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f11;42;5;45;;;;vpos;;v;;a;;r;;d4,43;;b1,0;;m0;;ecommand;;pexpectedDescription;;p">
</treenode>
<treenode node="testDescribeInputArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f11;24;5;27;;;;vpos;;v;;a;;r;;d4,25;;b1,0;;m0;;eargument;;pexpectedDescription;;p">
</treenode>
<treenode node="testDescribeInputDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f11;36;5;39;;;;vpos;;v;;a;;r;;d4,37;;b1,0;;m0;;edefinition;;pexpectedDescription;;p">
</treenode>
<treenode node="testDescribeInputOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\AbstractDescriptorTest.php;f11;30;5;33;;;;vpos;;v;;a;;r;;d4,31;;b1,0;;m0;;eoption;;pexpectedDescription;;p">
</treenode>
</treenode>
<treenode node="AbstractDoctrineAnnotationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractDoctrineAnnotationFixer.php;f9;25;1;223;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractDoctrineAnnotationFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractDoctrineAnnotationFixer.php;f14;43;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, PhpTokens $phpTokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b2,0;;m0;;efile;;pphpTokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractDoctrineAnnotationFixer.php;f14;74;5;195;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,75;;b2,0;;m0;;e">
</treenode>
<treenode node="fixAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractDoctrineAnnotationFixer.php;f23;69;98;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixes Doctrine annotations from the given PHPDoc style comment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DoctrineAnnotationTokens &lt;b&gt;$doctrineAnnotationTokens&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;eDoctrineAnnotationTokens $doctrineAnnotationTokens;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractDoctrineAnnotationFixer.php;f11;35;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(PhpTokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="nextElementAcceptsDoctrineAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractDoctrineAnnotationFixer.php;f12;203;5;222;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    nextElementAcceptsDoctrineAnnotations(PhpTokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    PhpTokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,204;;b3,0;;m0;;ePhpTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="AbstractFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFixer.php;f9;35;1;226;;;;vpos;;v;;aFixerInterface;;cDefinedFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractFixer implements FixerInterface, DefinedFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,36;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFixer.php;f11;52;5;65;;;;vpos;;v;;a;;r;;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFixer.php;f23;202;76;202;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFixer.php;f11;113;5;175;;;;vpos;;v;;a;;r;;d4,114;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFixer.php;f14;207;5;214;;;;vpos;;v;;aFixerConfigurationResolverInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;;;d4,208;;b2,0;;m0;;e">
</treenode>
<treenode node="fix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFixer.php;f17;67;5;76;;;;vpos;;v;;a;;r;;d4,68;;b1,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFixer.php;f11;180;5;191;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,181;;b1,0;;m0;;e">
</treenode>
<treenode node="getDefaultWhitespacesFixerConfig;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFixer.php;f12;216;5;225;;;;vpos;;v;;a;;r;;d4,217;;b3,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFixer.php;f11;89;5;95;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,90;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFixer.php;f11;100;5;103;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,101;;b1,0;;m0;;e">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFixer.php;f11;81;5;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,82;;b1,0;;m0;;e">
</treenode>
<treenode node="setWhitespacesConfig;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFixer.php;f11;193;5;200;;;;vpos;;v;;a;;r;;d4,194;;b1,0;;m0;;econfig;;p">
</treenode>
<treenode node="supports;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFixer.php;f11;108;5;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    supports(\SplFileInfo $file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,109;;b1,0;;m0;;efile;;p">
</treenode>
</treenode>
<treenode node="AbstractFixerTestCase;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractFixerTestCase.php;f9;30;1;231;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\AbstractFixerTestCase.php;f9;21;1;35;;;;vpos;;v;;aTestCase;;cAssertTokensTrait;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractFixerTestCase extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,31;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\AbstractFixerTestCase.php;f11;23;5;34;;;;vpos;;v;;a;;r;;d4,24;;b1,0;;m0;;ename;;pdata;;pdataName;;p">
</treenode>
<treenode node="createFixer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractFixerTestCase.php;f14;71;5;76;;;;vpos;;v;;aFixerInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createFixer()&#10;;;d4,72;;b2,0;;m0;;e">
</treenode>
<treenode node="createIsIdenticalStringConstraint;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractFixerTestCase.php;f19;215;5;230;;;;vpos;;v;;aPhpCsFixer;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createIsIdenticalStringConstraint($expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;todo&lt;/b&gt;: Remove me when this class will end up in dedicated package.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$expected&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   \PhpunitConstraintIsIdenticalString\Constraint\IsIdenticalString|PHPUnit\Framework\Constraint\IsIdentical|PHPUnit_Framework_Constraint_IsIdentical;;d4,216;;b3,5;;m0;;estring $expected;;p">
</treenode>
<treenode node="doTest;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractFixerTestCase.php;f14;108;5;168;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    doTest($expected, $input = null, \SplFileInfo $file = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tests if a fixer fixes a given string to match the expected result.&#10;It is used both if you want to test if something is fixed or if it is not touched by the fixer.&#10;It also makes sure that the expected output does not change when run through the fixer. That means that you&#10;do not need two test cases like [$expected] and [$expected, $input] (where $expected is the same in both cases)&#10;as the latter covers both of them.&#10;This method throws an exception if $expected and $input are equal to prevent test cases that accidentally do&#10;not test anything.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$expected&lt;/b&gt;: The expected fixer output&#10;    null|string &lt;b&gt;$input&lt;/b&gt;: The fixer input, or null if it should intentionally be equal to the output&#10;    null|\SplFileInfo &lt;b&gt;$file&lt;/b&gt;: The file to fix, or null if unneeded;;d4,109;;b2,0;;m0;;estring $expected;;pnull|string $input;;pnull|\SplFileInfo $file;;p">
</treenode>
<treenode node="getLinter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractFixerTestCase.php;f12;187;5;206;;;;vpos;;v;;aLinterInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLinter()&#10;;;d4,188;;b3,0;;m0;;e">
</treenode>
<treenode node="getTestFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractFixerTestCase.php;f14;83;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTestFile($filename = __FILE__)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \SplFileInfo&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$filename&lt;/b&gt;;;d4,84;;b2,0;;m0;;estring $filename;;p">
</treenode>
<treenode node="lintSource;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractFixerTestCase.php;f14;175;5;182;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lintSource($source)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$source&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,176;;b2,0;;m0;;estring $source;;p">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractFixerTestCase.php;f14;44;5;55;;;;vpos;;v;;a;;r;;d4,45;;b2,0;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractFixerTestCase.php;f14;57;5;66;;;;vpos;;v;;a;;r;;d4,58;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="AbstractFopenFlagFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFopenFlagFixer.php;f9;22;1;126;;;;vpos;;v;;aAbstractFunctionReferenceFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractFopenFlagFixer extends AbstractFunctionReferenceFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,23;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFopenFlagFixer.php;f14;35;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixFopenFlagToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFopenFlagFixer.php;f23;73;105;73;;;;vpos;;v;;a;;r;;d-1,-1;;b2,0;;m0;;etokens;;pargumentStartIndex;;pargumentEndIndex;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFopenFlagFixer.php;f11;27;5;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isValidModeString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFopenFlagFixer.php;f14;80;5;125;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isValidModeString($mode)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$mode&lt;/b&gt;;;d4,81;;b2,0;;m0;;estring $mode;;p">
</treenode>
</treenode>
<treenode node="AbstractFunctionReferenceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFunctionReferenceFixer.php;f9;22;1;67;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractFunctionReferenceFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Vladimir Reznichenko &lt;kalessil&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="find;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFunctionReferenceFixer.php;f14;43;5;66;;;;vpos;;v;;anull|int[];;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    find($functionNameToSearch, Tokens $tokens, $start = 0, $end = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Looks up Tokens sequence for suitable candidates and delivers boundaries information,&#10;which can be supplied by other methods in this abstract class.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$functionNameToSearch&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;&#10;    null|int &lt;b&gt;$end&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   returns $functionName, $openParenthesis, $closeParenthesis packed into array;;d4,44;;b2,0;;m0;;estring $functionNameToSearch;;pTokens $tokens;;pint $start;;pnull|int $end;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractFunctionReferenceFixer.php;f11;27;5;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="AbstractIntegrationCaseFactory;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationCaseFactory.php;f9;22;1;262;;;;vpos;;v;;aIntegrationCaseFactoryInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractIntegrationCaseFactory implements IntegrationCaseFactoryInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="create;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationCaseFactory.php;f11;29;5;76;;;;vpos;;v;;aIntegrationCase;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    create(SplFileInfo $file)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    SplFileInfo &lt;b&gt;$file&lt;/b&gt;;;d4,30;;b1,0;;m0;;eSplFileInfo $file;;p">
</treenode>
<treenode node="determineCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationCaseFactory.php;f12;219;5;229;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    determineCode(SplFileInfo $file, $code, $suffix)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    SplFileInfo &lt;b&gt;$file&lt;/b&gt;&#10;    null|string &lt;b&gt;$code&lt;/b&gt;&#10;    string &lt;b&gt;$suffix&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,220;;b3,0;;m0;;eSplFileInfo $file;;pnull|string $code;;pstring $suffix;;p">
</treenode>
<treenode node="determineConfig;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationCaseFactory.php;f14;86;5;108;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    determineConfig(SplFileInfo $file, $config)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses the &apos;--CONFIG--&apos; block of a &apos;.test&apos; file.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    SplFileInfo &lt;b&gt;$file&lt;/b&gt;&#10;    string &lt;b&gt;$config&lt;/b&gt;;;d4,87;;b2,0;;m0;;eSplFileInfo $file;;pstring $config;;p">
</treenode>
<treenode node="determineExpectedCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationCaseFactory.php;f14;190;5;199;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    determineExpectedCode(SplFileInfo $file, $code)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    SplFileInfo &lt;b&gt;$file&lt;/b&gt;&#10;    null|string &lt;b&gt;$code&lt;/b&gt;;;d4,191;;b2,0;;m0;;eSplFileInfo $file;;pnull|string $code;;p">
</treenode>
<treenode node="determineInputCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationCaseFactory.php;f14;207;5;210;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    determineInputCode(SplFileInfo $file, $code)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    SplFileInfo &lt;b&gt;$file&lt;/b&gt;&#10;    null|string &lt;b&gt;$code&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,208;;b2,0;;m0;;eSplFileInfo $file;;pnull|string $code;;p">
</treenode>
<treenode node="determineRequirements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationCaseFactory.php;f14;118;5;132;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    determineRequirements(SplFileInfo $file, $config)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses the &apos;--REQUIREMENTS--&apos; block of a &apos;.test&apos; file and determines requirements.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    SplFileInfo &lt;b&gt;$file&lt;/b&gt;&#10;    string &lt;b&gt;$config&lt;/b&gt;;;d4,119;;b2,0;;m0;;eSplFileInfo $file;;pstring $config;;p">
</treenode>
<treenode node="determineRuleset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationCaseFactory.php;f14;142;5;145;;;;vpos;;v;;aRuleSet;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    determineRuleset(SplFileInfo $file, $config)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses the &apos;--RULESET--&apos; block of a &apos;.test&apos; file and determines what fixers should be used.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    SplFileInfo &lt;b&gt;$file&lt;/b&gt;&#10;    string &lt;b&gt;$config&lt;/b&gt;;;d4,143;;b2,0;;m0;;eSplFileInfo $file;;pstring $config;;p">
</treenode>
<treenode node="determineSettings;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationCaseFactory.php;f14;168;5;182;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    determineSettings(SplFileInfo $file, $config)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses the &apos;--SETTINGS--&apos; block of a &apos;.test&apos; file and determines settings.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    SplFileInfo &lt;b&gt;$file&lt;/b&gt;&#10;    string &lt;b&gt;$config&lt;/b&gt;;;d4,169;;b2,0;;m0;;eSplFileInfo $file;;pstring $config;;p">
</treenode>
<treenode node="determineTitle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationCaseFactory.php;f14;155;5;158;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    determineTitle(SplFileInfo $file, $config)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses the &apos;--TEST--&apos; block of a &apos;.test&apos; file and determines title.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    SplFileInfo &lt;b&gt;$file&lt;/b&gt;&#10;    string &lt;b&gt;$config&lt;/b&gt;;;d4,156;;b2,0;;m0;;eSplFileInfo $file;;pstring $config;;p">
</treenode>
<treenode node="parseJson;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationCaseFactory.php;f12;237;5;261;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseJson($encoded, array $template = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|string &lt;b&gt;$encoded&lt;/b&gt;&#10;    null|array &lt;b&gt;$template&lt;/b&gt;;;d4,238;;b3,0;;m0;;enull|string $encoded;;pnull|array $template;;p">
</treenode>
</treenode>
<treenode node="AbstractIntegrationTestCase;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f9;62;1;430;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\AbstractIntegrationTestCase.php;f9;21;1;35;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractIntegrationTestCase extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Integration test base class.&#10;This test searches for &apos;.test&apos; fixture files in the given directory.&#10;Each fixture file will be parsed and tested against the expected result.&#10;Fixture files have the following format:&#10;--TEST--&#10;Example test description.&#10;--RULESET--&#10;{&quot;&#10;&lt;b&gt;PSR2&lt;/b&gt;: &quot;: true, &quot;strict&quot;: true}&#10;--CONFIG--*&#10;{&quot;indent&quot;: &quot;    &quot;, &quot;lineEnding&quot;: &quot;\n&quot;}&#10;--SETTINGS--*&#10;{&quot;key&quot;: &quot;value&quot;} # optional extension point for custom IntegrationTestCase class&#10;--EXPECT--&#10;Expected code after fixing&#10;--INPUT--*&#10;Code to fix&#10;* Section or any line in it may be omitted.&#10;** PHP minimum version. Default to current running php version (no effect).&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,63;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\AbstractIntegrationTestCase.php;f11;23;5;34;;;;vpos;;v;;a;;r;;d4,24;;b1,0;;m0;;ename;;pdata;;pdataName;;p">
</treenode>
<treenode node="assertRevertedOrderFixing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f21;319;5;338;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    assertRevertedOrderFixing(IntegrationCase $case, $fixedInputCode, $fixedInputCodeWithReversedFixers)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    IntegrationCase &lt;b&gt;$case&lt;/b&gt;&#10;    string &lt;b&gt;$fixedInputCode&lt;/b&gt;&#10;    string &lt;b&gt;$fixedInputCodeWithReversedFixers&lt;/b&gt;;;d4,320;;b2,5;;m0;;eIntegrationCase $case;;pstring $fixedInputCode;;pstring $fixedInputCodeWithReversedFixers;;p">
</treenode>
<treenode node="createFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f19;345;5;357;;;;vpos;;v;;aFixerInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createFixers(IntegrationCase $case)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    IntegrationCase &lt;b&gt;$case&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,346;;b3,5;;m0;;eIntegrationCase $case;;p">
</treenode>
<treenode node="createIntegrationCaseFactory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f21;168;5;171;;;;vpos;;v;;aIntegrationCaseFactoryInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createIntegrationCaseFactory()&#10;;;d4,169;;b2,5;;m0;;e">
</treenode>
<treenode node="createIsIdenticalStringConstraint;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f19;414;5;429;;;;vpos;;v;;aPhpCsFixer;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createIsIdenticalStringConstraint($expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;todo&lt;/b&gt;: Remove me when this class will end up in dedicated package.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$expected&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   \PhpunitConstraintIsIdenticalString\Constraint\IsIdenticalString||PHPUnit\Framework\Constraint\IsIdentical|PHPUnit_Framework_Constraint_IsIdentical;;d4,415;;b3,5;;m0;;estring $expected;;p">
</treenode>
<treenode node="doTest;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f14;202;5;312;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    doTest(IntegrationCase $case)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Applies the given fixers on the input and checks the result.&#10;It will write the input to a temp file. The file will be fixed by a Fixer instance&#10;configured with the given fixers. The result is compared with the expected output.&#10;It checks if no errors were reported during the fixing.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    IntegrationCase &lt;b&gt;$case&lt;/b&gt;;;d4,203;;b2,0;;m0;;eIntegrationCase $case;;p">
</treenode>
<treenode node="getFixturesDir;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f21;178;5;181;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFixturesDir()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the full path to directory which contains the tests.;;d4,179;;b2,5;;m0;;e">
</treenode>
<treenode node="getLinter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f12;378;5;405;;;;vpos;;v;;aLinterInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLinter()&#10;;;d4,379;;b3,0;;m0;;e">
</treenode>
<treenode node="getTempFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f21;188;5;191;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTempFile()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the full path to the temporary file where the test will write to.;;d4,189;;b2,5;;m0;;e">
</treenode>
<treenode node="implodeErrors;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f12;364;5;373;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    implodeErrors(array $errors)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Error[] &lt;b&gt;$errors&lt;/b&gt;;;d4,365;;b3,0;;m0;;eError[] $errors;;p">
</treenode>
<treenode node="provideIntegrationCases;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f11;141;5;163;;;;vpos;;v;;aIntegrationCase;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    provideIntegrationCases()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates test data by parsing &apos;.test&apos; files.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [][];;d4,142;;b1,0;;m0;;e">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f14;102;5;112;;;;vpos;;v;;a;;r;;d4,103;;b2,0;;m0;;e">
</treenode>
<treenode node="setUpBeforeClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f18;74;5;90;;;;vpos;;v;;a;;r;;d4,75;;b1,5;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f14;114;5;122;;;;vpos;;v;;a;;r;;d4,115;;b2,0;;m0;;e">
</treenode>
<treenode node="tearDownAfterClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f18;92;5;100;;;;vpos;;v;;a;;r;;d4,93;;b1,5;;m0;;e">
</treenode>
<treenode node="testIntegration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\AbstractIntegrationTestCase.php;f11;131;5;134;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testIntegration(IntegrationCase $case)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideIntegrationCases&#10;&lt;b&gt;see&lt;/b&gt;: doTest()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    IntegrationCase &lt;b&gt;$case&lt;/b&gt;;;d4,132;;b1,0;;m0;;eIntegrationCase $case;;p">
</treenode>
</treenode>
<treenode node="AbstractLexer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f9;19;1;327;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractLexer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Base class for writing simple lexers, i.e. for creating small DSLs.;;d0,20;;b0,0;;m0;;e">
<treenode node="getCatchablePatterns;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f23;310;54;310;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Lexical catchable patterns.;;d-1,-1;;b2,0;;m0;;e">
</treenode>
<treenode node="getInputUntilPosition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f11;137;5;140;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getInputUntilPosition($position)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Retrieve the original lexer&apos;s input until a given position.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$position&lt;/b&gt;;;d4,138;;b1,0;;m0;;eint $position;;p">
</treenode>
<treenode node="getLiteral;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f11;280;5;293;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLiteral($token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the literal for a given token.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|string &lt;b&gt;$token&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,281;;b1,0;;m0;;eint|string $token;;p">
</treenode>
<treenode node="getModifiers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f14;300;5;303;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getModifiers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Regex modifiers;;d4,301;;b2,0;;m0;;e">
</treenode>
<treenode node="getNonCatchablePatterns;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f23;317;57;317;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Lexical non-catchable patterns.;;d-1,-1;;b2,0;;m0;;e">
</treenode>
<treenode node="getType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f23;326;48;326;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Retrieve token type. Also processes the token value if necessary.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$value&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string|null;;d-1,-1;;b2,0;;m0;;estring $value;;p">
</treenode>
<treenode node="glimpse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f11;227;5;233;;;;vpos;;v;;aarray|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    glimpse()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Peeks at the next token, returns it and immediately resets the peek.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The next token or NULL if there are no more tokens ahead.;;d4,228;;b1,0;;m0;;e">
</treenode>
<treenode node="isA;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f11;203;5;206;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isA($value, $token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if given value is identical to the given token.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$value&lt;/b&gt;&#10;    int|string &lt;b&gt;$token&lt;/b&gt;;;d4,204;;b1,0;;m0;;emixed $value;;pint|string $token;;p">
</treenode>
<treenode node="isNextToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f11;149;5;152;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isNextToken($token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks whether a given token matches the current lookahead.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|string &lt;b&gt;$token&lt;/b&gt;;;d4,150;;b1,0;;m0;;eint|string $token;;p">
</treenode>
<treenode node="isNextTokenAny;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f11;161;5;164;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isNextTokenAny(array $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks whether any of the given tokens matches the current lookahead.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$tokens&lt;/b&gt;;;d4,162;;b1,0;;m0;;earray $tokens;;p">
</treenode>
<treenode node="moveNext;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f11;171;5;179;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    moveNext()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Moves to the next token in the input string.;;d4,172;;b1,0;;m0;;e">
</treenode>
<treenode node="peek;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f11;213;5;220;;;;vpos;;v;;aarray|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    peek()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Moves the lookahead token forward.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The next token or NULL if there are no more tokens ahead.;;d4,214;;b1,0;;m0;;e">
</treenode>
<treenode node="reset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f11;100;5;106;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    reset()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Resets the lexer.;;d4,101;;b1,0;;m0;;e">
</treenode>
<treenode node="resetPeek;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f11;113;5;116;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resetPeek()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Resets the peek pointer to 0.;;d4,114;;b1,0;;m0;;e">
</treenode>
<treenode node="resetPosition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f11;125;5;128;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resetPosition($position = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Resets the lexer position on the input to the given position.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$position&lt;/b&gt;: Position to place the lexical scanner.;;d4,126;;b1,0;;m0;;eint $position;;p">
</treenode>
<treenode node="scan;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f14;242;5;271;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    scan($input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Scans the input string for tokens.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$input&lt;/b&gt;: A query string.;;d4,243;;b2,0;;m0;;estring $input;;p">
</treenode>
<treenode node="setInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f11;86;5;93;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setInput($input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the input data to be tokenized.&#10;The Lexer is immediately reset and the new input tokenized.&#10;Any unprocessed tokens from any previous input are lost.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$input&lt;/b&gt;: The input to be tokenized.;;d4,87;;b1,0;;m0;;estring $input;;p">
</treenode>
<treenode node="skipUntil;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f11;188;5;193;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    skipUntil($type)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tells the lexer to skip input tokens until it sees a token with the given value.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$type&lt;/b&gt;: The token type to skip until.;;d4,189;;b1,0;;m0;;estring $type;;p">
</treenode>
</treenode>
<treenode node="AbstractLinesBeforeNamespaceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractLinesBeforeNamespaceFixer.php;f9;26;1;109;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractLinesBeforeNamespaceFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This abstract fixer is responsible for ensuring that a certain number of&#10;lines prefix a namespace declaration.&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="fixLinesBeforeNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractLinesBeforeNamespaceFixer.php;f14;36;5;108;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixLinesBeforeNamespace(Tokens $tokens, $index, $expectedMin, $expectedMax)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Make sure # of line breaks prefixing namespace is within given range.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    int &lt;b&gt;$expectedMin&lt;/b&gt;: min. # of line breaks&#10;    int &lt;b&gt;$expectedMax&lt;/b&gt;: max. # of line breaks;;d4,37;;b2,0;;m0;;eTokens $tokens;;pint $index;;pint $expectedMin;;pint $expectedMax;;p">
</treenode>
</treenode>
<treenode node="AbstractLogger;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\AbstractLogger.php;f9;11;1;127;;;;vpos;;v;;aLoggerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractLogger implements LoggerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This is a simple Logger implementation that other Loggers can inherit from.&#10;It simply delegates all log-level-specific methods to the `log` method to&#10;reduce boilerplate code that a simple Logger that does the same thing with&#10;messages regardless of the error level has to implement.;;d0,12;;b0,0;;m0;;e">
<treenode node="alert;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\AbstractLogger.php;f11;37;5;40;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    alert($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Action must be taken immediately.&#10;Example: Entire website down, database unavailable, etc. This should&#10;trigger the SMS alerts and wake you up.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,38;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="critical;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\AbstractLogger.php;f11;52;5;55;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    critical($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Critical conditions.&#10;Example: Application component unavailable, unexpected exception.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,53;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="debug;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\AbstractLogger.php;f11;123;5;126;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    debug($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Detailed debug information.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,124;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="emergency;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\AbstractLogger.php;f11;21;5;24;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    emergency($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    System is unusable.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,22;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="error;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\AbstractLogger.php;f11;66;5;69;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    error($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runtime errors that do not require immediate action but should typically&#10;be logged and monitored.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,67;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="info;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\AbstractLogger.php;f11;110;5;113;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    info($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Interesting events.&#10;Example: User logs in, SQL logs.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,111;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="notice;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\AbstractLogger.php;f11;95;5;98;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    notice($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Normal but significant events.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,96;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="warning;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\AbstractLogger.php;f11;82;5;85;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    warning($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exceptional occurrences that are not errors.&#10;Example: Use of deprecated APIs, poor use of an API, undesirable things&#10;that are not necessarily wrong.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,83;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
</treenode>
<treenode node="AbstractNoUselessElseFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractNoUselessElseFixer.php;f9;19;1;210;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractNoUselessElseFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,20;;b0,0;;m0;;e">
<treenode node="getPreviousBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractNoUselessElseFixer.php;f12;98;5;115;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPreviousBlock(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the first and last token index of the previous block.&#10;[0] First is either T_IF, T_ELSE or T_ELSEIF&#10;[1] Last is either &apos;}&apos; or &apos;;s&apos; / T_CLOSE_TAG for short notation blocks&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: T_IF, T_ELSE, T_ELSEIF&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,99;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractNoUselessElseFixer.php;f11;24;5;28;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,25;;b1,0;;m0;;e">
</treenode>
<treenode node="isInConditionWithoutBraces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractNoUselessElseFixer.php;f12;156;5;209;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isInConditionWithoutBraces(Tokens $tokens, $index, $lowerLimitIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    For internal use only, as it is not perfect.&#10;Returns if the token at given index is part of a if/elseif/else statement&#10;without {}. Assumes not passing the last `;s`/close tag of the statement, not&#10;out of range index, etc.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: Index of the token to check&#10;    int &lt;b&gt;$lowerLimitIndex&lt;/b&gt;;;d4,157;;b3,0;;m0;;eTokens $tokens;;pint $index;;pint $lowerLimitIndex;;p">
</treenode>
<treenode node="isInConditional;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractNoUselessElseFixer.php;f12;124;5;141;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isInConditional(Tokens $tokens, $index, $lowerLimitIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: Index of the token to check&#10;    int &lt;b&gt;$lowerLimitIndex&lt;/b&gt;: Lower limit index. Since the token to check will always be in a conditional we must stop checking at this index;;d4,125;;b3,0;;m0;;eTokens $tokens;;pint $index;;pint $lowerLimitIndex;;p">
</treenode>
<treenode node="isSuperfluousElse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractNoUselessElseFixer.php;f14;36;5;85;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isSuperfluousElse(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,37;;b2,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="AbstractPhpdocTypesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractPhpdocTypesFixer.php;f9;26;1;136;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractPhpdocTypesFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This abstract fixer provides a base for fixers to fix types in PHPDoc.&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractPhpdocTypesFixer.php;f11;38;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractPhpdocTypesFixer.php;f14;56;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractPhpdocTypesFixer.php;f12;96;5;105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixTypes(Annotation $annotation)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fix the types at the given line.&#10;We must be super careful not to modify parts of words.&#10;This will be nicely handled behind the scenes for us by the annotation class.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Annotation &lt;b&gt;$annotation&lt;/b&gt;;;d4,97;;b3,0;;m0;;eAnnotation $annotation;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractPhpdocTypesFixer.php;f11;48;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="normalize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractPhpdocTypesFixer.php;f23;85;48;85;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Actually normalize the given type.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$type&lt;/b&gt;;;d-1,-1;;b2,0;;m0;;estring $type;;p">
</treenode>
<treenode node="normalizeType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractPhpdocTypesFixer.php;f12;128;5;135;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    normalizeType($type)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Prepare the type and normalize it.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$type&lt;/b&gt;;;d4,129;;b3,0;;m0;;estring $type;;p">
</treenode>
<treenode node="normalizeTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractPhpdocTypesFixer.php;f12;112;5;119;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    normalizeTypes(array $types)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$types&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,113;;b3,0;;m0;;estring[] $types;;p">
</treenode>
</treenode>
<treenode node="AbstractPipes;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\AbstractPipes.php;f9;20;1;181;;;;vpos;;v;;aPipesInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractPipes implements PipesInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Romain Neutron &lt;imprec&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\AbstractPipes.php;f11;32;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($input)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource|string|int|float|bool|\Iterator|null &lt;b&gt;$input&lt;/b&gt;;;d4,33;;b1,0;;m0;;eresource|string|int|float|bool|\Iterator|null $input;;p">
</treenode>
<treenode node="close;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\AbstractPipes.php;f11;46;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    close()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="handleError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\AbstractPipes.php;f11;177;5;180;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    handleError($type, $msg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d4,178;;b1,0;;m0;;etype;;pmsg;;p">
</treenode>
<treenode node="hasSystemCallBeenInterrupted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\AbstractPipes.php;f14;59;5;66;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasSystemCallBeenInterrupted()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if a system call has been interrupted.;;d4,60;;b2,0;;m0;;e">
</treenode>
<treenode node="unblock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\AbstractPipes.php;f14;71;5;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    unblock()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unblocks streams.;;d4,72;;b2,0;;m0;;e">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\AbstractPipes.php;f14;94;5;172;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    write()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Writes input to stdin.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When an input iterator yields a non supported value&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,95;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="AbstractProxyFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractProxyFixer.php;f9;23;1;121;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractProxyFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractProxyFixer.php;f11;30;5;37;;;;vpos;;v;;a;;r;;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractProxyFixer.php;f14;110;5;115;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,111;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createProxyFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractProxyFixer.php;f23;120;51;120;;;;vpos;;v;;aFixerInterface;;r&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d-1,-1;;b2,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractProxyFixer.php;f11;70;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,71;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractProxyFixer.php;f11;42;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,43;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractProxyFixer.php;f11;56;5;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b1,0;;m0;;e">
</treenode>
<treenode node="setWhitespacesConfig;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractProxyFixer.php;f11;96;5;105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setWhitespacesConfig(WhitespacesFixerConfig $config)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,97;;b1,0;;m0;;econfig;;p">
</treenode>
<treenode node="supports;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractProxyFixer.php;f11;82;5;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    supports(\SplFileInfo $file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,83;;b1,0;;m0;;efile;;p">
</treenode>
</treenode>
<treenode node="AbstractPsrAutoloadingFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractPsrAutoloadingFixer.php;f9;25;1;86;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractPsrAutoloadingFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jordi Boggiano &lt;j.boggiano&#10;&lt;b&gt;seld&lt;/b&gt;: .be&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Bram Gotink &lt;bram&#10;&lt;b&gt;gotink&lt;/b&gt;: .me&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractPsrAutoloadingFixer.php;f11;46;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractPsrAutoloadingFixer.php;f11;30;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractPsrAutoloadingFixer.php;f11;38;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="supports;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\AbstractPsrAutoloadingFixer.php;f11;54;5;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    supports(\SplFileInfo $file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b1,0;;m0;;efile;;p">
</treenode>
</treenode>
<treenode node="AbstractQuestionHelperTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\AbstractQuestionHelperTest.php;f9;16;1;33;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="createStreamableInputInterfaceMock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\AbstractQuestionHelperTest.php;f14;18;5;32;;;;vpos;;v;;a;;r;;d4,19;;b2,0;;m0;;estream;;pinteractive;;p">
</treenode>
</treenode>
<treenode node="AbstractTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\AbstractTransformer.php;f9;21;1;41;;;;vpos;;v;;aTransformerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AbstractTransformer implements TransformerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\AbstractTransformer.php;f11;26;5;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,27;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\AbstractTransformer.php;f11;37;5;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="AccessDeniedException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Exception\AccessDeniedException.php;f0;16;1;18;;;;vpos;;v;;aUnexpectedValueException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AccessDeniedException extends \UnexpectedValueException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jean-François Simon &lt;jeanfrancois.simon&#10;&lt;b&gt;sensiolabs&lt;/b&gt;: .com&gt;;;d0,17;;b0,0;;m0;;e">
</treenode>
<treenode node="AccessException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Exception\AccessException.php;f0;19;1;21;;;;vpos;;v;;aLogicException;;cExceptionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AccessException extends \LogicException implements ExceptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Thrown when trying to read an option outside of or write it inside of&#10;{&#10;&lt;b&gt;link&lt;/b&gt;: \Symfony\Component\OptionsResolver\Options::resolve()}.&#10;&lt;b&gt;author&lt;/b&gt;: Bernhard Schussek &lt;bschussek&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,20;;b0,0;;m0;;e">
</treenode>
<treenode node="AccessibleObject;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\AccessibleObject.php;f6;19;1;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AccessibleObject&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;deprecated&lt;/b&gt;: since v2.5. Use &quot;php-cs-fixer/accessible-object&quot; package instead.;;d0,20;;b0,0;;m0;;e">
<treenode node="__call;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\AccessibleObject.php;f11;41;5;51;;;;vpos;;v;;a;;r;;d4,42;;b1,0;;m0;;ename;;parguments;;p">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\AccessibleObject.php;f11;27;5;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($object)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    object &lt;b&gt;$object&lt;/b&gt;;;d4,28;;b1,0;;m0;;eobject $object;;p">
</treenode>
<treenode node="__get;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\AccessibleObject.php;f11;64;5;74;;;;vpos;;v;;a;;r;;d4,65;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="__isset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\AccessibleObject.php;f11;53;5;62;;;;vpos;;v;;a;;r;;d4,54;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="__set;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\AccessibleObject.php;f11;76;5;86;;;;vpos;;v;;a;;r;;d4,77;;b1,0;;m0;;ename;;pvalue;;p">
</treenode>
<treenode node="create;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\AccessibleObject.php;f18;88;5;91;;;;vpos;;v;;a;;r;;d4,89;;b1,5;;m0;;eobject;;p">
</treenode>
</treenode>
<treenode node="AddConsoleCommandPass;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\DependencyInjection\AddConsoleCommandPass.php;f0;26;1;97;;;;vpos;;v;;aCompilerPassInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AddConsoleCommandPass implements CompilerPassInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Registers console commands.&#10;&lt;b&gt;author&lt;/b&gt;: Grégoire Pineau &lt;lyrixx&#10;&lt;b&gt;lyrixx&lt;/b&gt;: .info&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\DependencyInjection\AddConsoleCommandPass.php;f11;31;5;35;;;;vpos;;v;;a;;r;;d4,32;;b1,0;;m0;;ecommandLoaderServiceId;;pcommandTag;;p">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\DependencyInjection\AddConsoleCommandPass.php;f11;37;5;96;;;;vpos;;v;;a;;r;;d4,38;;b1,0;;m0;;econtainer;;p">
</treenode>
</treenode>
<treenode node="AddConsoleCommandPassTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\DependencyInjection\AddConsoleCommandPassTest.php;f0;24;1;242;;;;vpos;;v;;aTestCase;;c;;r;;d0,25;;b0,0;;m0;;e">
<treenode node="testProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\DependencyInjection\AddConsoleCommandPassTest.php;f11;29;5;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testProcess($public)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: visibilityProvider;;d4,30;;b1,0;;m0;;epublic;;p">
</treenode>
<treenode node="testProcessFallsBackToDefaultName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\DependencyInjection\AddConsoleCommandPassTest.php;f11;80;5;110;;;;vpos;;v;;a;;r;;d4,81;;b1,0;;m0;;e">
</treenode>
<treenode node="testProcessOnChildDefinitionWithClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\DependencyInjection\AddConsoleCommandPassTest.php;f11;172;5;195;;;;vpos;;v;;a;;r;;d4,173;;b1,0;;m0;;e">
</treenode>
<treenode node="testProcessOnChildDefinitionWithParentClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\DependencyInjection\AddConsoleCommandPassTest.php;f11;197;5;219;;;;vpos;;v;;a;;r;;d4,198;;b1,0;;m0;;e">
</treenode>
<treenode node="testProcessOnChildDefinitionWithoutClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\DependencyInjection\AddConsoleCommandPassTest.php;f11;221;5;241;;;;vpos;;v;;a;;r;;d4,222;;b1,0;;m0;;e">
</treenode>
<treenode node="testProcessPrivateServicesWithSameCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\DependencyInjection\AddConsoleCommandPassTest.php;f11;151;5;170;;;;vpos;;v;;a;;r;;d4,152;;b1,0;;m0;;e">
</treenode>
<treenode node="testProcessRegistersLazyCommands;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\DependencyInjection\AddConsoleCommandPassTest.php;f11;58;5;78;;;;vpos;;v;;a;;r;;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="testProcessThrowAnExceptionIfTheServiceIsAbstract;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\DependencyInjection\AddConsoleCommandPassTest.php;f11;120;5;134;;;;vpos;;v;;a;;r;;d4,121;;b1,0;;m0;;e">
</treenode>
<treenode node="testProcessThrowAnExceptionIfTheServiceIsNotASubclassOfCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\DependencyInjection\AddConsoleCommandPassTest.php;f11;136;5;149;;;;vpos;;v;;a;;r;;d4,137;;b1,0;;m0;;e">
</treenode>
<treenode node="visibilityProvider;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\DependencyInjection\AddConsoleCommandPassTest.php;f11;112;5;118;;;;vpos;;v;;a;;r;;d4,113;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="AliasedEvent;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f6;255;1;257;;;;vpos;;v;;a;;r;;d0,256;;b0,0;;m0;;e">
</treenode>
<treenode node="AliasedFixerOption;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOption.php;f6;21;1;102;;;;vpos;;v;;aFixerOptionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AliasedFixerOption implements FixerOptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: ntzm&#10;&lt;b&gt;internal&lt;/b&gt;&#10;&lt;b&gt;todo&lt;/b&gt;: 3.0 Drop this class;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOption.php;f11;33;5;37;;;;vpos;;v;;a;;r;;d4,34;;b1,0;;m0;;efixerOption;;palias;;p">
</treenode>
<treenode node="getAlias;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOption.php;f11;42;5;45;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAlias()&#10;;;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="getAllowedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOption.php;f11;82;5;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllowedTypes()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,83;;b1,0;;m0;;e">
</treenode>
<treenode node="getAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOption.php;f11;90;5;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllowedValues()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,91;;b1,0;;m0;;e">
</treenode>
<treenode node="getDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOption.php;f11;74;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefault()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,75;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOption.php;f11;58;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDescription()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOption.php;f11;50;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="getNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOption.php;f11;98;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNormalizer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,99;;b1,0;;m0;;e">
</treenode>
<treenode node="hasDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOption.php;f11;66;5;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasDefault()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="AliasedFixerOptionBuilder;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOptionBuilder.php;f6;21;1;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AliasedFixerOptionBuilder&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: ntzm&#10;&lt;b&gt;internal&lt;/b&gt;&#10;&lt;b&gt;todo&lt;/b&gt;: 3.0 Drop this class;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOptionBuilder.php;f11;33;5;37;;;;vpos;;v;;a;;r;;d4,34;;b1,0;;m0;;eoptionBuilder;;palias;;p">
</treenode>
<treenode node="getOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOptionBuilder.php;f11;90;5;96;;;;vpos;;v;;aAliasedFixerOption;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOption()&#10;;;d4,91;;b1,0;;m0;;e">
</treenode>
<treenode node="setAllowedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOptionBuilder.php;f11;56;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAllowedTypes(array $allowedTypes)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$allowedTypes&lt;/b&gt;;;d4,57;;b1,0;;m0;;estring[] $allowedTypes;;p">
</treenode>
<treenode node="setAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOptionBuilder.php;f11;68;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAllowedValues(array $allowedValues)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$allowedValues&lt;/b&gt;;;d4,69;;b1,0;;m0;;earray $allowedValues;;p">
</treenode>
<treenode node="setDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOptionBuilder.php;f11;44;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDefault($default)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$default&lt;/b&gt;;;d4,45;;b1,0;;m0;;emixed $default;;p">
</treenode>
<treenode node="setNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AliasedFixerOptionBuilder.php;f11;80;5;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setNormalizer(\Closure $normalizer)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \Closure &lt;b&gt;$normalizer&lt;/b&gt;;;d4,81;;b1,0;;m0;;e\Closure $normalizer;;p">
</treenode>
</treenode>
<treenode node="AliasedSubscriber;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f6;245;1;253;;;;vpos;;v;;aEventSubscriberInterface;;c;;r;;d0,246;;b0,0;;m0;;e">
<treenode node="getSubscribedEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f18;247;5;252;;;;vpos;;v;;a array;;r;;d4,248;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="AlignDoubleArrowFixerHelper;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\AlignDoubleArrowFixerHelper.php;f6;26;1;151;;;;vpos;;v;;aAbstractAlignFixerHelper;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AlignDoubleArrowFixerHelper extends AbstractAlignFixerHelper&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Carlos Cirello &lt;carlos.cirello.nl&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;deprecated&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\AlignDoubleArrowFixerHelper.php;f11;37;5;46;;;;vpos;;v;;a;;r;;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="injectAlignmentPlaceholders;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\AlignDoubleArrowFixerHelper.php;f14;51;5;134;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    injectAlignmentPlaceholders(Tokens $tokens, $startAt, $endAt)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b2,0;;m0;;etokens;;pstartAt;;pendAt;;p">
</treenode>
<treenode node="injectArrayAlignmentPlaceholders;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\AlignDoubleArrowFixerHelper.php;f12;141;5;150;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    injectArrayAlignmentPlaceholders(Tokens $tokens, $from, $until)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$from&lt;/b&gt;&#10;    int &lt;b&gt;$until&lt;/b&gt;;;d4,142;;b3,0;;m0;;eTokens $tokens;;pint $from;;pint $until;;p">
</treenode>
</treenode>
<treenode node="AlignEqualsFixerHelper;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\AlignEqualsFixerHelper.php;f6;25;1;77;;;;vpos;;v;;aAbstractAlignFixerHelper;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AlignEqualsFixerHelper extends AbstractAlignFixerHelper&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Carlos Cirello &lt;carlos.cirello.nl&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;deprecated&lt;/b&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\AlignEqualsFixerHelper.php;f11;27;5;36;;;;vpos;;v;;a;;r;;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="injectAlignmentPlaceholders;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\AlignEqualsFixerHelper.php;f14;41;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    injectAlignmentPlaceholders(Tokens $tokens, $startAt, $endAt)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b2,0;;m0;;etokens;;pstartAt;;pendAt;;p">
</treenode>
</treenode>
<treenode node="AlignMultilineCommentFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\AlignMultilineCommentFixer.php;f6;29;1;169;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AlignMultilineCommentFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Julien Falque &lt;julien.falque&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\AlignMultilineCommentFixer.php;f14;105;5;155;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,106;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\AlignMultilineCommentFixer.php;f11;36;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,37;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\AlignMultilineCommentFixer.php;f14;160;5;168;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,161;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\AlignMultilineCommentFixer.php;f11;49;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\AlignMultilineCommentFixer.php;f11;88;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,89;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\AlignMultilineCommentFixer.php;f11;97;5;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,98;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="AllowedValueSubset;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AllowedValueSubset.php;f6;17;1;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AllowedValueSubset&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AllowedValueSubset.php;f11;21;5;24;;;;vpos;;v;;a;;r;;d4,22;;b1,0;;m0;;eallowedValues;;p">
</treenode>
<treenode node="__invoke;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AllowedValueSubset.php;f11;33;5;46;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __invoke($values)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks whether the given values are a subset of the allowed ones.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$values&lt;/b&gt;: the value to validate;;d4,34;;b1,0;;m0;;emixed $values;;p">
</treenode>
<treenode node="getAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\AllowedValueSubset.php;f11;48;5;51;;;;vpos;;v;;a;;r;;d4,49;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Annotation;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f0;22;1;306;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation.php;f0;29;1;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Annotation&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This represents an entire annotation from a docblock.&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="REGEX_TYPES;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f9;29;21;29;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Regex to match any types, shall be used with `x` modifier.&#10;&lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f11;123;5;131;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation.php;f17;43;5;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(array $lines)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create a new line instance.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line[] &lt;b&gt;$lines&lt;/b&gt;;;d4,124;;b1,0;;m0;;eLine[] $lines;;p">
</treenode>
<treenode node="__get;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation.php;f11;57;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __get($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Error handler for unknown property accessor in Annotation class.&#10;&lt;b&gt;throws&lt;/b&gt;: \BadMethodCallException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: Unknown property name.;;d4,58;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="__set;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation.php;f11;72;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __set($name, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Error handler for unknown property mutator in Annotation class.&#10;&lt;b&gt;throws&lt;/b&gt;: \BadMethodCallException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: Unknown property name.&#10;    mixed &lt;b&gt;$value&lt;/b&gt;: Property value.;;d4,73;;b1,0;;m0;;estring $name;;pmixed $value;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f11;138;5;141;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __toString()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the string representation of object.;;d4,139;;b1,0;;m0;;e">
</treenode>
<treenode node="clearCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f12;301;5;305;;;;vpos;;v;;a;;r;;d4,302;;b3,0;;m0;;e">
</treenode>
<treenode node="getContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f11;261;5;264;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getContent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the annotation content.;;d4,262;;b1,0;;m0;;e">
</treenode>
<treenode node="getEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f11;168;5;171;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEnd()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the end position of this annotation.;;d4,169;;b1,0;;m0;;e">
</treenode>
<treenode node="getNormalizedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f11;233;5;242;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNormalizedTypes()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the normalized types associated with this annotation, so they can easily be compared.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,234;;b1,0;;m0;;e">
</treenode>
<treenode node="getStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f11;158;5;161;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStart()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the start position of this annotation.;;d4,159;;b1,0;;m0;;e">
</treenode>
<treenode node="getTag;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f11;178;5;185;;;;vpos;;v;;aTag;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTag()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the associated tag.;;d4,179;;b1,0;;m0;;e">
</treenode>
<treenode node="getTagsWithTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f18;148;5;151;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTagsWithTypes()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get all the annotation tag names with types.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,149;;b1,5;;m0;;e">
</treenode>
<treenode node="getTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f11;192;5;212;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTypes()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the types associated with this annotation.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,193;;b1,0;;m0;;e">
</treenode>
<treenode node="getTypesContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f12;278;5;299;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTypesContent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the current types content.&#10;Be careful modifying the underlying line as that won&apos;t flush the cache.;;d4,279;;b3,0;;m0;;e">
</treenode>
<treenode node="remove;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f11;247;5;254;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    remove()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Remove this annotation by removing all its lines.;;d4,248;;b1,0;;m0;;e">
</treenode>
<treenode node="setTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f11;219;5;226;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTypes(array $types)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the types associated with this annotation.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$types&lt;/b&gt;;;d4,220;;b1,0;;m0;;estring[] $types;;p">
</treenode>
<treenode node="supportTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Annotation.php;f11;266;5;269;;;;vpos;;v;;a;;r;;d4,267;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="AnnotationException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationException.php;f0;30;1;196;;;;vpos;;v;;aException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AnnotationException extends \Exception&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Description of AnnotationException&#10;&lt;b&gt;since&lt;/b&gt;: 2.0&#10;&lt;b&gt;author&lt;/b&gt;: Benjamin Eberlei &lt;kontakt&#10;&lt;b&gt;beberlei&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Guilherme Blanco &lt;guilhermeblanco&#10;&lt;b&gt;hotmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Jonathan Wage &lt;jonwage&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Roman Borschel &lt;roman&#10;&lt;b&gt;code&lt;/b&gt;: -factory.org&gt;;;d0,31;;b0,0;;m0;;e">
<treenode node="attributeTypeError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationException.php;f18;117;5;127;;;;vpos;;v;;aAnnotationException;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    attributeTypeError($attributeName, $annotationName, $context, $expected, $actual)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new AnnotationException describing an type error of an attribute.&#10;&lt;b&gt;since&lt;/b&gt;: 2.2&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$attributeName&lt;/b&gt;&#10;    string &lt;b&gt;$annotationName&lt;/b&gt;&#10;    string &lt;b&gt;$context&lt;/b&gt;&#10;    string &lt;b&gt;$expected&lt;/b&gt;&#10;    mixed &lt;b&gt;$actual&lt;/b&gt;;;d4,118;;b1,5;;m0;;estring $attributeName;;pstring $annotationName;;pstring $context;;pstring $expected;;pmixed $actual;;p">
</treenode>
<treenode node="creationError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationException.php;f18;66;5;69;;;;vpos;;v;;aAnnotationException;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    creationError($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new AnnotationException describing an error which occurred during&#10;the creation of the annotation.&#10;&lt;b&gt;since&lt;/b&gt;: 2.2&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;;;d4,67;;b1,5;;m0;;estring $message;;p">
</treenode>
<treenode node="enumeratorError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationException.php;f18;165;5;175;;;;vpos;;v;;aAnnotationException;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    enumeratorError($attributeName, $annotationName, $context, $available, $given)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new AnnotationException describing a invalid enummerator.&#10;&lt;b&gt;since&lt;/b&gt;: 2.4&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$attributeName&lt;/b&gt;&#10;    string &lt;b&gt;$annotationName&lt;/b&gt;&#10;    string &lt;b&gt;$context&lt;/b&gt;&#10;    array &lt;b&gt;$available&lt;/b&gt;&#10;    mixed &lt;b&gt;$given&lt;/b&gt;;;d4,166;;b1,5;;m0;;estring $attributeName;;pstring $annotationName;;pstring $context;;parray $available;;pmixed $given;;p">
</treenode>
<treenode node="optimizerPlusLoadComments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationException.php;f18;190;5;195;;;;vpos;;v;;aAnnotationException;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    optimizerPlusLoadComments()&#10;;;d4,191;;b1,5;;m0;;e">
</treenode>
<treenode node="optimizerPlusSaveComments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationException.php;f18;180;5;185;;;;vpos;;v;;aAnnotationException;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    optimizerPlusSaveComments()&#10;;;d4,181;;b1,5;;m0;;e">
</treenode>
<treenode node="requiredError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationException.php;f18;141;5;150;;;;vpos;;v;;aAnnotationException;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    requiredError($attributeName, $annotationName, $context, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new AnnotationException describing an required error of an attribute.&#10;&lt;b&gt;since&lt;/b&gt;: 2.2&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$attributeName&lt;/b&gt;&#10;    string &lt;b&gt;$annotationName&lt;/b&gt;&#10;    string &lt;b&gt;$context&lt;/b&gt;&#10;    string &lt;b&gt;$expected&lt;/b&gt;;;d4,142;;b1,5;;m0;;estring $attributeName;;pstring $annotationName;;pstring $context;;pstring $expected;;p">
</treenode>
<treenode node="semanticalError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationException.php;f18;51;5;54;;;;vpos;;v;;aAnnotationException;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    semanticalError($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new AnnotationException describing a Semantical error.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;: Exception message;;d4,52;;b1,5;;m0;;estring $message;;p">
</treenode>
<treenode node="semanticalErrorConstants;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationException.php;f18;95;5;102;;;;vpos;;v;;aAnnotationException;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    semanticalErrorConstants($identifier, $context = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new AnnotationException describing a constant semantical error.&#10;&lt;b&gt;since&lt;/b&gt;: 2.3&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$identifier&lt;/b&gt;&#10;    string &lt;b&gt;$context&lt;/b&gt;;;d4,96;;b1,5;;m0;;estring $identifier;;pstring $context;;p">
</treenode>
<treenode node="syntaxError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationException.php;f18;39;5;42;;;;vpos;;v;;aAnnotationException;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    syntaxError($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new AnnotationException describing a Syntax error.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;: Exception message;;d4,40;;b1,5;;m0;;estring $message;;p">
</treenode>
<treenode node="typeError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationException.php;f18;80;5;83;;;;vpos;;v;;aAnnotationException;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    typeError($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new AnnotationException describing a type error.&#10;&lt;b&gt;since&lt;/b&gt;: 1.1&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;;;d4,81;;b1,5;;m0;;estring $message;;p">
</treenode>
</treenode>
<treenode node="AnnotationReader;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f0;36;1;414;;;;vpos;;v;;aReader;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class AnnotationReader implements Reader&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A reader for docblock annotations.&#10;&lt;b&gt;author&lt;/b&gt;: Benjamin Eberlei &lt;kontakt&#10;&lt;b&gt;beberlei&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Guilherme Blanco &lt;guilhermeblanco&#10;&lt;b&gt;hotmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Jonathan Wage &lt;jonwage&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Roman Borschel &lt;roman&#10;&lt;b&gt;code&lt;/b&gt;: -factory.org&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,37;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f11;184;5;205;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(DocParser $parser = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constructor.&#10;Initializes a new AnnotationReader.&#10;&lt;b&gt;throws&lt;/b&gt;: AnnotationException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocParser &lt;b&gt;$parser&lt;/b&gt;;;d4,185;;b1,0;;m0;;eDocParser $parser;;p">
</treenode>
<treenode node="addGlobalIgnoredName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f18;125;5;128;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addGlobalIgnoredName($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a new annotation to the globally ignored annotation names with regard to exception handling.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d4,126;;b1,5;;m0;;estring $name;;p">
</treenode>
<treenode node="addGlobalIgnoredNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f18;135;5;138;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addGlobalIgnoredNamespace($namespace)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a new annotation to the globally ignored annotation namespaces with regard to exception handling.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$namespace&lt;/b&gt;;;d4,136;;b1,5;;m0;;estring $namespace;;p">
</treenode>
<treenode node="collectParsingMetadata;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f12;391;5;413;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    collectParsingMetadata(ReflectionClass $class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Collects parsing metadata for a given class.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \ReflectionClass &lt;b&gt;$class&lt;/b&gt;;;d4,392;;b3,0;;m0;;e\ReflectionClass $class;;p">
</treenode>
<treenode node="getClassAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f11;223;5;234;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassAnnotation(ReflectionClass $class, $annotationName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,224;;b1,0;;m0;;eclass;;pannotationName;;p">
</treenode>
<treenode node="getClassAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f11;210;5;218;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassAnnotations(ReflectionClass $class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,211;;b1,0;;m0;;eclass;;p">
</treenode>
<treenode node="getClassImports;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f12;326;5;336;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassImports(ReflectionClass $class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Retrieves imports.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \ReflectionClass &lt;b&gt;$class&lt;/b&gt;;;d4,327;;b3,0;;m0;;e\ReflectionClass $class;;p">
</treenode>
<treenode node="getIgnoredAnnotationNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f12;307;5;317;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIgnoredAnnotationNames(ReflectionClass $class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the ignored annotations for the given class.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \ReflectionClass &lt;b&gt;$class&lt;/b&gt;;;d4,308;;b3,0;;m0;;e\ReflectionClass $class;;p">
</treenode>
<treenode node="getMethodAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f11;287;5;298;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMethodAnnotation(ReflectionMethod $method, $annotationName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,288;;b1,0;;m0;;emethod;;pannotationName;;p">
</treenode>
<treenode node="getMethodAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f11;271;5;282;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMethodAnnotations(ReflectionMethod $method)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,272;;b1,0;;m0;;emethod;;p">
</treenode>
<treenode node="getMethodImports;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f12;345;5;361;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMethodImports(ReflectionMethod $method)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Retrieves imports for methods.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \ReflectionMethod &lt;b&gt;$method&lt;/b&gt;;;d4,346;;b3,0;;m0;;e\ReflectionMethod $method;;p">
</treenode>
<treenode node="getPropertyAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f11;255;5;266;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPropertyAnnotation(ReflectionProperty $property, $annotationName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,256;;b1,0;;m0;;eproperty;;pannotationName;;p">
</treenode>
<treenode node="getPropertyAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f11;239;5;250;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPropertyAnnotations(ReflectionProperty $property)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,240;;b1,0;;m0;;eproperty;;p">
</treenode>
<treenode node="getPropertyImports;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationReader.php;f12;370;5;384;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPropertyImports(ReflectionProperty $property)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Retrieves imports for properties.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \ReflectionProperty &lt;b&gt;$property&lt;/b&gt;;;d4,371;;b3,0;;m0;;e\ReflectionProperty $property;;p">
</treenode>
</treenode>
<treenode node="AnnotationRegistry;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php;f6;21;1;173;;;;vpos;;v;;a;;r;;d0,22;;b0,0;;m0;;e">
<treenode node="loadAnnotationClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php;f18;133;5;172;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    loadAnnotationClass(string $class) : bool&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Autoloads an annotation class silently.;;d4,134;;b1,5;;m0;;eclass;;p">
</treenode>
<treenode node="registerAutoloadNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php;f18;80;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registerAutoloadNamespace(string $namespace, $dirs = null) : void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a namespace with one or many directories to look for files or null for the include path.&#10;Loading of this namespaces will be done with a PSR-0 namespace loading algorithm.&#10;&lt;b&gt;deprecated&lt;/b&gt;: this method is deprecated and will be removed in doctrine/annotations 2.0&#10;autoloading should be deferred to the globally registered autoloader by then. For now,&#10;use&#10;&lt;b&gt;example&lt;/b&gt;: AnnotationRegistry::registerLoader(&apos;class_exists&apos;)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$namespace&lt;/b&gt;&#10;    string|array|null &lt;b&gt;$dirs&lt;/b&gt;;;d4,81;;b1,5;;m0;;estring $namespace;;pstring|array|null $dirs;;p">
</treenode>
<treenode node="registerAutoloadNamespaces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php;f18;96;5;99;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registerAutoloadNamespaces(array $namespaces) : void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Registers multiple namespaces.&#10;Loading of this namespaces will be done with a PSR-0 namespace loading algorithm.&#10;&lt;b&gt;deprecated&lt;/b&gt;: this method is deprecated and will be removed in doctrine/annotations 2.0&#10;autoloading should be deferred to the globally registered autoloader by then. For now,&#10;use&#10;&lt;b&gt;example&lt;/b&gt;: AnnotationRegistry::registerLoader(&apos;class_exists&apos;)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[][]|string[]|null[] &lt;b&gt;$namespaces&lt;/b&gt;: indexed by namespace name;;d4,97;;b1,5;;m0;;estring[][]|string[]|null[] $namespaces;;p">
</treenode>
<treenode node="registerFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php;f18;63;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registerFile(string $file) : void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Registers file.&#10;&lt;b&gt;deprecated&lt;/b&gt;: this method is deprecated and will be removed in doctrine/annotations 2.0&#10;autoloading should be deferred to the globally registered autoloader by then. For now,&#10;use&#10;&lt;b&gt;example&lt;/b&gt;: AnnotationRegistry::registerLoader(&apos;class_exists&apos;);;d4,64;;b1,5;;m0;;efile;;p">
</treenode>
<treenode node="registerLoader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php;f18;111;5;116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registerLoader(callable $callable) : void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Registers an autoloading callable for annotations, much like spl_autoload_register().&#10;NOTE: These class loaders HAVE to be silent when a class was not found!&#10;IMPORTANT: Loaders have to return true if they loaded a class that could contain the searched annotation class.&#10;&lt;b&gt;deprecated&lt;/b&gt;: this method is deprecated and will be removed in doctrine/annotations 2.0&#10;autoloading should be deferred to the globally registered autoloader by then. For now,&#10;use&#10;&lt;b&gt;example&lt;/b&gt;: AnnotationRegistry::registerLoader(&apos;class_exists&apos;);;d4,112;;b1,5;;m0;;ecallable;;p">
</treenode>
<treenode node="registerUniqueLoader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php;f18;123;5;128;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registerUniqueLoader(callable $callable) : void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Registers an autoloading callable for annotations, if it is not already registered&#10;&lt;b&gt;deprecated&lt;/b&gt;: this method is deprecated and will be removed in doctrine/annotations 2.0;;d4,124;;b1,5;;m0;;ecallable;;p">
</treenode>
<treenode node="reset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\AnnotationRegistry.php;f18;49;5;54;;;;vpos;;v;;a void;;r;;d4,50;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="Application;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f0;63;1;1205;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Application.php;f6;35;1;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Application&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    An Application is the container for a collection of commands.&#10;It is the main entry point of a Console application.&#10;This class is optimized for a standard CLI environment.&#10;Usage:&#10;$app = new Application(&apos;myapp&apos;, &apos;1.0 (stable)&apos;);s&#10;$app-&gt;add(new SimpleCommand());s&#10;$app-&gt;run();s&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,64;;b0,0;;m0;;e">
<treenode node="VERSION;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Application.php;f9;37;17;37;;;;vpos;;v;;a;;r&apos;2.15.3&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="VERSION_CODENAME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Application.php;f9;38;26;38;;;;vpos;;v;;a;;r&apos;Europe Round&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;85;5;91;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Application.php;f11;45;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $name = &apos;UNKNOWN&apos;, string $version = &apos;UNKNOWN&apos;)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The name of the application&#10;    string &lt;b&gt;$version&lt;/b&gt;: The version of the application;;d4,86;;b1,0;;m0;;estring $name;;pstring $version;;p">
</treenode>
<treenode node="add;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;465;5;491;;;;vpos;;v;;aCommand|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    add(Command $command)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a command object.&#10;If a command with the same name already exists, it will be overridden.&#10;If the command is not enabled it will not be added.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The registered command if enabled or null;;d4,466;;b1,0;;m0;;ecommand;;p">
</treenode>
<treenode node="addCommands;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;450;5;455;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addCommands(array $commands)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds an array of command objects.&#10;If a Command is not enabled it will not be added.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Command[] &lt;b&gt;$commands&lt;/b&gt;: An array of commands;;d4,451;;b1,0;;m0;;eCommand[] $commands;;p">
</treenode>
<treenode node="all;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;711;5;746;;;;vpos;;v;;aCommand;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    all($namespace = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the commands (registered in the given namespace if provided).&#10;The array keys are the full names and the values the command instances.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$namespace&lt;/b&gt;: A namespace name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] An array of Command instances;;d4,712;;b1,0;;m0;;estring $namespace;;p">
</treenode>
<treenode node="areExceptionsCaught;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;338;5;341;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    areExceptionsCaught()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets whether to catch exceptions or not during commands execution.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Whether to catch exceptions or not during commands execution;;d4,339;;b1,0;;m0;;e">
</treenode>
<treenode node="configureIO;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f14;861;5;914;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configureIO(InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Configures the input and output instances based on the user arguments and options.;;d4,862;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="doRenderException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f14;783;5;856;;;;vpos;;v;;a;;r;;d4,784;;b2,0;;m0;;ee;;poutput;;p">
</treenode>
<treenode node="doRun;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;197;5;276;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Application.php;f11;68;5;84;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    doRun(InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runs the current application.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   0 if everything went fine, or an error code;;d4,198;;b1,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="doRunCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f14;924;5;973;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    doRunCommand(Command $command, InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runs the current command.&#10;If an event dispatcher has been attached to the application,&#10;events are also dispatched during the life-cycle of the command.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   0 if everything went fine, or an error code;;d4,925;;b2,0;;m0;;ecommand;;pinput;;poutput;;p">
</treenode>
<treenode node="extractAllNamespaces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f12;1177;5;1192;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    extractAllNamespaces($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns all namespaces of the command name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The full name of the command&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] The namespaces of the command;;d4,1178;;b3,0;;m0;;estring $name;;p">
</treenode>
<treenode node="extractNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;1052;5;1057;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    extractNamespace($name, $limit = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the namespace part of the command name.&#10;This method is not part of public API and should not be used directly.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The full name of the command&#10;    string &lt;b&gt;$limit&lt;/b&gt;: The maximum number of parts of the namespace&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The namespace of the command;;d4,1053;;b1,0;;m0;;estring $name;;pstring $limit;;p">
</treenode>
<treenode node="find;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;614;5;700;;;;vpos;;v;;aCommand;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    find($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds a command by name or alias.&#10;Contrary to get, this command tries to find the best&#10;match if you give it an abbreviation of a name or alias.&#10;&lt;b&gt;throws&lt;/b&gt;: CommandNotFoundException When command name is incorrect or ambiguous&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: A command name or a command alias&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A Command instance;;d4,615;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="findAlternatives;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f12;1068;5;1108;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findAlternatives($name, $collection)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds alternative of $name among $collection,&#10;if nothing is found in $collection, try in $abbrevs.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The string&#10;    iterable &lt;b&gt;$collection&lt;/b&gt;: The collection&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] A sorted array of similar string;;d4,1069;;b3,0;;m0;;estring $name;;piterable $collection;;p">
</treenode>
<treenode node="findNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;572;5;600;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findNamespace($namespace)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds a registered namespace by a name or an abbreviation.&#10;&lt;b&gt;throws&lt;/b&gt;: NamespaceNotFoundException When namespace is incorrect or ambiguous&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$namespace&lt;/b&gt;: A namespace or abbreviation to search for&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A registered namespace;;d4,573;;b1,0;;m0;;estring $namespace;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;502;5;522;;;;vpos;;v;;aCommand;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    get($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a registered command by name or alias.&#10;&lt;b&gt;throws&lt;/b&gt;: CommandNotFoundException When given command name does not exist&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The command name or alias&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A Command object;;d4,503;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="getAbbreviationSuggestions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f12;1037;5;1040;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAbbreviationSuggestions($abbrevs)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns abbreviated suggestions in string format.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$abbrevs&lt;/b&gt;: Abbreviated suggestions to convert&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A formatted string of abbreviated suggestions;;d4,1038;;b3,0;;m0;;earray $abbrevs;;p">
</treenode>
<treenode node="getAbbreviations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f18;755;5;766;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAbbreviations($names)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array of possible abbreviations given a set of names.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$names&lt;/b&gt;: An array of names&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of abbreviations;;d4,756;;b1,5;;m0;;earray $names;;p">
</treenode>
<treenode node="getCommandName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f14;980;5;983;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommandName(InputInterface $input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the name of the command based on input.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,981;;b2,0;;m0;;einput;;p">
</treenode>
<treenode node="getDefaultCommands;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f14;1010;5;1013;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Application.php;f14;109;5;112;;;;vpos;;v;;aCommand;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefaultCommands()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the default commands that should always be available.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] An array of default Command instances;;d4,1011;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefaultHelperSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f14;1020;5;1028;;;;vpos;;v;;aHelperSet;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefaultHelperSet()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the default helper set with the helpers that should always be available.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A HelperSet instance;;d4,1021;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefaultInputDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f14;990;5;1003;;;;vpos;;v;;aInputDefinition;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefaultInputDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the default input definition.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An InputDefinition instance;;d4,991;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;307;5;321;;;;vpos;;v;;aInputDefinition;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the InputDefinition related to this Application.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The InputDefinition instance;;d4,308;;b1,0;;m0;;e">
</treenode>
<treenode node="getHelp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;328;5;331;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHelp()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the help message.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A help message;;d4,329;;b1,0;;m0;;e">
</treenode>
<treenode node="getHelperSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;288;5;295;;;;vpos;;v;;aHelperSet;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHelperSet()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the helper set associated with the command.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The HelperSet instance associated with this command;;d4,289;;b1,0;;m0;;e">
</treenode>
<treenode node="getLongVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;418;5;429;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Application.php;f11;89;5;104;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLongVersion()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the long version of the application.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The long application version;;d4,419;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;378;5;381;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the name of the application.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The application name;;d4,379;;b1,0;;m0;;e">
</treenode>
<treenode node="getNamespaces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;545;5;561;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNamespaces()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array of all unique namespaces used by currently registered commands.&#10;It does not return the global namespace which always exists.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] An array of namespaces;;d4,546;;b1,0;;m0;;e">
</treenode>
<treenode node="getVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;398;5;401;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getVersion()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the application version.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The application version;;d4,399;;b1,0;;m0;;e">
</treenode>
<treenode node="has;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;531;5;536;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    has($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the command exists, false otherwise.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The command name or alias&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the command exists, false otherwise;;d4,532;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="init;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f12;1194;5;1204;;;;vpos;;v;;a;;r;;d4,1195;;b3,0;;m0;;e">
</treenode>
<treenode node="isAutoExitEnabled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;358;5;361;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAutoExitEnabled()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets whether to automatically exit after a command execution or not.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Whether to automatically exit after a command execution or not;;d4,359;;b1,0;;m0;;e">
</treenode>
<treenode node="isSingleCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;1135;5;1138;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isSingleCommand()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d4,1136;;b1,0;;m0;;e">
</treenode>
<treenode node="register;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;438;5;441;;;;vpos;;v;;aCommand;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    register($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Registers a new command.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The command name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The newly created command;;d4,439;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="renderException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;771;5;781;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    renderException(\Exception $e, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Renders a caught exception.;;d4,772;;b1,0;;m0;;ee;;poutput;;p">
</treenode>
<treenode node="run;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;113;5;190;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    run(InputInterface $input = null, OutputInterface $output = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runs the current application.&#10;&lt;b&gt;throws&lt;/b&gt;: \Exception When running fails. Bypass this when {&#10;&lt;b&gt;link&lt;/b&gt;: setCatchExceptions()}.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   0 if everything went fine, or an error code;;d4,114;;b1,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="setAutoExit;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;368;5;371;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAutoExit($boolean)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets whether to automatically exit after a command execution or not.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$boolean&lt;/b&gt;: Whether to automatically exit after a command execution or not;;d4,369;;b1,0;;m0;;ebool $boolean;;p">
</treenode>
<treenode node="setCatchExceptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;348;5;351;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCatchExceptions($boolean)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets whether to catch exceptions or not during commands execution.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$boolean&lt;/b&gt;: Whether to catch exceptions or not during commands execution;;d4,349;;b1,0;;m0;;ebool $boolean;;p">
</treenode>
<treenode node="setCommandLoader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;101;5;104;;;;vpos;;v;;a;;r;;d4,102;;b1,0;;m0;;ecommandLoader;;p">
</treenode>
<treenode node="setDefaultCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;1118;5;1130;;;;vpos;;v;;aself;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDefaultCommand($commandName, $isSingleCommand = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the default Command name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$commandName&lt;/b&gt;: The Command name&#10;    bool &lt;b&gt;$isSingleCommand&lt;/b&gt;: Set to true if there is only one command in this application;;d4,1119;;b1,0;;m0;;estring $commandName;;pbool $isSingleCommand;;p">
</treenode>
<treenode node="setDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;297;5;300;;;;vpos;;v;;a;;r;;d4,298;;b1,0;;m0;;edefinition;;p">
</treenode>
<treenode node="setDispatcher;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;96;5;99;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDispatcher(EventDispatcherInterface $dispatcher)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;final&lt;/b&gt;: since Symfony 4.3, the type-hint will be updated to the interface from symfony/contracts in 5.0;;d4,97;;b1,0;;m0;;edispatcher;;p">
</treenode>
<treenode node="setHelperSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;278;5;281;;;;vpos;;v;;a;;r;;d4,279;;b1,0;;m0;;ehelperSet;;p">
</treenode>
<treenode node="setName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;388;5;391;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setName($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the application name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The application name;;d4,389;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="setVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f11;408;5;411;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setVersion($version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the application version.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$version&lt;/b&gt;: The application version;;d4,409;;b1,0;;m0;;estring $version;;p">
</treenode>
<treenode node="splitStringByWidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Application.php;f12;1140;5;1168;;;;vpos;;v;;a;;r;;d4,1141;;b3,0;;m0;;estring;;pwidth;;p">
</treenode>
</treenode>
<treenode node="ApplicationDescription;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\ApplicationDescription.php;f0;22;1;143;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ApplicationDescription&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jean-François Simon &lt;jeanfrancois.simon&#10;&lt;b&gt;sensiolabs&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="GLOBAL_NAMESPACE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\ApplicationDescription.php;f9;24;26;24;;;;vpos;;v;;a;;r&apos;_global&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\ApplicationDescription.php;f11;45;5;50;;;;vpos;;v;;a;;r;;d4,46;;b1,0;;m0;;eapplication;;pnamespace;;pshowHidden;;p">
</treenode>
<treenode node="getCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\ApplicationDescription.php;f11;83;5;90;;;;vpos;;v;;aCommand;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommand($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: CommandNotFoundException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d4,84;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="getCommands;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\ApplicationDescription.php;f11;67;5;74;;;;vpos;;v;;aCommand;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommands()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,68;;b1,0;;m0;;e">
</treenode>
<treenode node="getNamespaces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\ApplicationDescription.php;f11;55;5;62;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNamespaces()&#10;;;d4,56;;b1,0;;m0;;e">
</treenode>
<treenode node="inspectApplication;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\ApplicationDescription.php;f12;92;5;118;;;;vpos;;v;;a;;r;;d4,93;;b3,0;;m0;;e">
</treenode>
<treenode node="sortCommands;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\ApplicationDescription.php;f12;120;5;142;;;;vpos;;v;;a array;;r;;d4,121;;b3,0;;m0;;ecommands;;p">
</treenode>
</treenode>
<treenode node="ApplicationTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f0;39;1;1736;;;;vpos;;v;;aTestCase;;c;;r;;d0,40;;b0,0;;m0;;e">
<treenode node="ensureStaticCommandHelp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f14;90;5;95;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ensureStaticCommandHelp(Application $application)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replaces the dynamic placeholders of the command help text with a static version.&#10;The placeholder %command.full_name% includes the script path that is not predictable&#10;and can not be tested against.;;d4,91;;b2,0;;m0;;eapplication;;p">
</treenode>
<treenode node="getAddingAlreadySetDefinitionElementData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1154;5;1161;;;;vpos;;v;;a;;r;;d4,1155;;b1,0;;m0;;e">
</treenode>
<treenode node="getDispatcher;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f14;1665;5;1689;;;;vpos;;v;;a;;r;;d4,1666;;b2,0;;m0;;eskipCommand;;p">
</treenode>
<treenode node="normalizeLineBreaks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f14;80;5;83;;;;vpos;;v;;a;;r;;d4,81;;b2,0;;m0;;etext;;p">
</treenode>
<treenode node="provideAmbiguousAbbreviations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;422;5;441;;;;vpos;;v;;a;;r;;d4,423;;b1,0;;m0;;e">
</treenode>
<treenode node="provideInvalidCommandNamesSingle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;528;5;534;;;;vpos;;v;;a;;r;;d4,529;;b1,0;;m0;;e">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f14;45;5;48;;;;vpos;;v;;a void;;r;;d4,46;;b2,0;;m0;;e">
</treenode>
<treenode node="setUpBeforeClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f18;58;5;78;;;;vpos;;v;;a void;;r;;d4,59;;b1,5;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f14;50;5;56;;;;vpos;;v;;a void;;r;;d4,51;;b2,0;;m0;;e">
</treenode>
<treenode node="testAdd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;190;5;201;;;;vpos;;v;;a;;r;;d4,191;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddCommandWithEmptyConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;203;5;209;;;;vpos;;v;;a;;r;;d4,204;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddingAlreadySetDefinitionElementData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1137;5;1152;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testAddingAlreadySetDefinitionElementData($def)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getAddingAlreadySetDefinitionElementData;;d4,1138;;b1,0;;m0;;edef;;p">
</treenode>
<treenode node="testAddingOptionWithDuplicateShortcut;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1109;5;1132;;;;vpos;;v;;a;;r;;d4,1110;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddingSingleHelperSetOverwritesDefaultValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1174;5;1189;;;;vpos;;v;;a;;r;;d4,1175;;b1,0;;m0;;e">
</treenode>
<treenode node="testAll;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;131;5;140;;;;vpos;;v;;a;;r;;d4,132;;b1,0;;m0;;e">
</treenode>
<treenode node="testAllExcludesDisabledLazyCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1658;5;1663;;;;vpos;;v;;a;;r;;d4,1659;;b1,0;;m0;;e">
</treenode>
<treenode node="testAllWithCommandLoader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;142;5;159;;;;vpos;;v;;a;;r;;d4,143;;b1,0;;m0;;e">
</treenode>
<treenode node="testAutoExitSetting;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;737;5;744;;;;vpos;;v;;a;;r;;d4,738;;b1,0;;m0;;e">
</treenode>
<treenode node="testCanRunAlternativeCommandName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;500;5;512;;;;vpos;;v;;a;;r;;d4,501;;b1,0;;m0;;e">
</treenode>
<treenode node="testConsoleErrorEventIsTriggeredOnCommandNotFound;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1391;5;1408;;;;vpos;;v;;a;;r;;d4,1392;;b1,0;;m0;;e">
</treenode>
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;97;5;103;;;;vpos;;v;;a;;r;;d4,98;;b1,0;;m0;;e">
</treenode>
<treenode node="testDontRunAlternativeCommandName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;514;5;526;;;;vpos;;v;;a;;r;;d4,515;;b1,0;;m0;;e">
</treenode>
<treenode node="testDontRunAlternativeNamespaceName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;482;5;498;;;;vpos;;v;;a;;r;;d4,483;;b1,0;;m0;;e">
</treenode>
<treenode node="testErrorIsRethrownIfNotHandledByConsoleErrorEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1410;5;1429;;;;vpos;;v;;a;;r;;d4,1411;;b1,0;;m0;;e">
</treenode>
<treenode node="testErrorIsRethrownIfNotHandledByConsoleErrorEventWithCatchingEnabled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1691;5;1709;;;;vpos;;v;;a;;r;;d4,1692;;b1,0;;m0;;e">
</treenode>
<treenode node="testFind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;346;5;356;;;;vpos;;v;;a;;r;;d4,347;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindAlternativeCommands;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;579;5;609;;;;vpos;;v;;a;;r;;d4,580;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindAlternativeCommandsWithAnAlias;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;611;5;622;;;;vpos;;v;;a;;r;;d4,612;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindAlternativeExceptionMessageMultiple;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;536;5;577;;;;vpos;;v;;a;;r;;d4,537;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindAlternativeExceptionMessageSingle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;473;5;480;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testFindAlternativeExceptionMessageSingle($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideInvalidCommandNamesSingle;;d4,474;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="testFindAlternativeNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;624;5;657;;;;vpos;;v;;a;;r;;d4,625;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindAlternativesOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;659;5;688;;;;vpos;;v;;a;;r;;d4,660;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindAmbiguousNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;303;5;316;;;;vpos;;v;;a;;r;;d4,304;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindCaseInsensitiveAsFallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;370;5;378;;;;vpos;;v;;a;;r;;d4,371;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindCaseInsensitiveSuggestions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;380;5;389;;;;vpos;;v;;a;;r;;d4,381;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindCaseSensitiveFirst;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;358;5;368;;;;vpos;;v;;a;;r;;d4,359;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindCommandEqualNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;443;5;451;;;;vpos;;v;;a;;r;;d4,444;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindCommandWithAmbiguousNamespacesButUniqueName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;453;5;460;;;;vpos;;v;;a;;r;;d4,454;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindCommandWithMissingNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;462;5;468;;;;vpos;;v;;a;;r;;d4,463;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindInvalidNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;326;5;332;;;;vpos;;v;;a;;r;;d4,327;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;285;5;293;;;;vpos;;v;;a;;r;;d4,286;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindNamespaceDoesNotFailOnDeepSimilarNamespaces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;690;5;698;;;;vpos;;v;;a;;r;;d4,691;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindNamespaceWithSubnamespaces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;295;5;301;;;;vpos;;v;;a;;r;;d4,296;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindNonAmbiguous;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;318;5;324;;;;vpos;;v;;a;;r;;d4,319;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindUniqueNameButNamespaceName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;334;5;344;;;;vpos;;v;;a;;r;;d4,335;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindWithAmbiguousAbbreviations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;408;5;420;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testFindWithAmbiguousAbbreviations($abbreviation, $expectedExceptionMessage)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideAmbiguousAbbreviations;;d4,409;;b1,0;;m0;;eabbreviation;;pexpectedExceptionMessage;;p">
</treenode>
<treenode node="testFindWithCommandLoader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;391;5;403;;;;vpos;;v;;a;;r;;d4,392;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindWithDoubleColonInNameThrowsException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;700;5;708;;;;vpos;;v;;a;;r;;d4,701;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDefaultHelperSetReturnsDefaultValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1163;5;1172;;;;vpos;;v;;a;;r;;d4,1164;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDefaultInputDefinitionReturnsDefaultValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1208;5;1225;;;;vpos;;v;;a;;r;;d4,1209;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDisabledLazyCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1643;5;1649;;;;vpos;;v;;a;;r;;d4,1644;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetInvalidCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;269;5;275;;;;vpos;;v;;a;;r;;d4,270;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetLongVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;119;5;123;;;;vpos;;v;;a;;r;;d4,120;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetNamespaces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;277;5;283;;;;vpos;;v;;a;;r;;d4,278;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasGet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;211;5;231;;;;vpos;;v;;a;;r;;d4,212;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasGetWithCommandLoader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;233;5;255;;;;vpos;;v;;a;;r;;d4,234;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasReturnsFalseForDisabledLazyCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1651;5;1656;;;;vpos;;v;;a;;r;;d4,1652;;b1,0;;m0;;e">
</treenode>
<treenode node="testHelp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;125;5;129;;;;vpos;;v;;a;;r;;d4,126;;b1,0;;m0;;e">
</treenode>
<treenode node="testOverwritingDefaultHelperSetOverwritesDefaultValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1191;5;1206;;;;vpos;;v;;a;;r;;d4,1192;;b1,0;;m0;;e">
</treenode>
<treenode node="testOverwritingDefaultInputDefinitionOverwritesDefaultValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1227;5;1247;;;;vpos;;v;;a;;r;;d4,1228;;b1,0;;m0;;e">
</treenode>
<treenode node="testRegister;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;161;5;166;;;;vpos;;v;;a;;r;;d4,162;;b1,0;;m0;;e">
</treenode>
<treenode node="testRegisterAmbiguous;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;168;5;188;;;;vpos;;v;;a;;r;;d4,169;;b1,0;;m0;;e">
</treenode>
<treenode node="testRenderAnonymousException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;847;5;870;;;;vpos;;v;;a;;r;;d4,848;;b1,0;;m0;;e">
</treenode>
<treenode node="testRenderException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;746;5;786;;;;vpos;;v;;a;;r;;d4,747;;b1,0;;m0;;e">
</treenode>
<treenode node="testRenderExceptionEscapesLines;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;816;5;829;;;;vpos;;v;;a;;r;;d4,817;;b1,0;;m0;;e">
</treenode>
<treenode node="testRenderExceptionLineBreaks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;831;5;845;;;;vpos;;v;;a;;r;;d4,832;;b1,0;;m0;;e">
</treenode>
<treenode node="testRenderExceptionStackTraceContainsRootException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;872;5;895;;;;vpos;;v;;a;;r;;d4,873;;b1,0;;m0;;e">
</treenode>
<treenode node="testRenderExceptionWithDoubleWidthCharacters;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;788;5;814;;;;vpos;;v;;a;;r;;d4,789;;b1,0;;m0;;e">
</treenode>
<treenode node="testRun;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;897;5;989;;;;vpos;;v;;a;;r;;d4,898;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunAllowsErrorListenersToSilenceTheException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1364;5;1389;;;;vpos;;v;;a;;r;;d4,1365;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunDispatchesAllEventsWithError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1451;5;1466;;;;vpos;;v;;a;;r;;d4,1452;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunDispatchesAllEventsWithException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1305;5;1320;;;;vpos;;v;;a;;r;;d4,1306;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunDispatchesAllEventsWithExceptionInListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1322;5;1340;;;;vpos;;v;;a;;r;;d4,1323;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunDispatchesExitCodeOneForExceptionCodeZero;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1085;5;1107;;;;vpos;;v;;a;;r;;d4,1086;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunDispatchesIntegerExitCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1046;5;1068;;;;vpos;;v;;a;;r;;d4,1047;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunLazyCommandService;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1613;5;1641;;;;vpos;;v;;a;;r;;d4,1614;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunReturnsExitCodeOneForExceptionCodeZero;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1070;5;1083;;;;vpos;;v;;a;;r;;d4,1071;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunReturnsIntegerExitCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1031;5;1044;;;;vpos;;v;;a;;r;;d4,1032;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunWithDispatcher;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1273;5;1286;;;;vpos;;v;;a;;r;;d4,1274;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunWithDispatcherAccessingInputOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1501;5;1527;;;;vpos;;v;;a;;r;;d4,1502;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunWithDispatcherAddingInputOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1529;5;1556;;;;vpos;;v;;a;;r;;d4,1530;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunWithDispatcherSkippingCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1485;5;1499;;;;vpos;;v;;a;;r;;d4,1486;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunWithError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1342;5;1362;;;;vpos;;v;;a;;r;;d4,1343;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunWithErrorAndDispatcher;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1431;5;1449;;;;vpos;;v;;a;;r;;d4,1432;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunWithErrorFailingStatusCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1468;5;1483;;;;vpos;;v;;a;;r;;d4,1469;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunWithExceptionAndDispatcher;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1288;5;1303;;;;vpos;;v;;a;;r;;d4,1289;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunWithGlobalOptionAndNoCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;991;5;1002;;;;vpos;;v;;a;;r;;d4,992;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetCatchExceptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;710;5;735;;;;vpos;;v;;a;;r;;d4,711;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetGetName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;105;5;110;;;;vpos;;v;;a;;r;;d4,106;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetGetVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;112;5;117;;;;vpos;;v;;a;;r;;d4,113;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetRunCustomDefaultCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1558;5;1578;;;;vpos;;v;;a;;r;;d4,1559;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetRunCustomDefaultCommandWithOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1580;5;1593;;;;vpos;;v;;a;;r;;d4,1581;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetRunCustomSingleCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1595;5;1611;;;;vpos;;v;;a;;r;;d4,1596;;b1,0;;m0;;e">
</treenode>
<treenode node="testSettingCustomInputDefinitionOverwritesDefaultValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1249;5;1271;;;;vpos;;v;;a;;r;;d4,1250;;b1,0;;m0;;e">
</treenode>
<treenode node="testSilentHelp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;257;5;267;;;;vpos;;v;;a;;r;;d4,258;;b1,0;;m0;;e">
</treenode>
<treenode node="testThrowingErrorListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1711;5;1735;;;;vpos;;v;;a;;r;;d4,1712;;b1,0;;m0;;e">
</treenode>
<treenode node="testVerboseValueNotBreakArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1011;5;1029;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testVerboseValueNotBreakArguments()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Issue #9285.&#10;If the &quot;verbose&quot; option is just before an argument in ArgvInput,&#10;an argument value should not be treated as verbosity value.&#10;This test will fail with &quot;Not enough arguments.&quot; if broken;;d4,1012;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ApplicationTester;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\ApplicationTester.php;f0;26;1;76;;;;vpos;;v;;aTesterTrait;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ApplicationTester&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Eases the testing of console applications.&#10;When testing an application, don&apos;t forget to disable the auto exit flag:&#10;$application = new Application();s&#10;$application-&gt;setAutoExit(false);s&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\ApplicationTester.php;f11;34;5;37;;;;vpos;;v;;a;;r;;d4,35;;b1,0;;m0;;eapplication;;p">
</treenode>
<treenode node="run;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\ApplicationTester.php;f11;54;5;75;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    run(array $input, $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Executes the application.&#10;Available options:&#10;* interactive:               Sets the input interactive flag&#10;* decorated:                 Sets the output decorated flag&#10;* verbosity:                 Sets the output verbosity flag&#10;* capture_stderr_separately: Make output of stdOut and stdErr separately available&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$input&lt;/b&gt;: An array of arguments and options&#10;    array &lt;b&gt;$options&lt;/b&gt;: An array of options&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The command exit code;;d4,55;;b1,0;;m0;;earray $input;;parray $options;;p">
</treenode>
</treenode>
<treenode node="ApplicationTesterTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\ApplicationTesterTest.php;f0;20;1;112;;;;vpos;;v;;aTestCase;;c;;r;;d0,21;;b0,0;;m0;;e">
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\ApplicationTesterTest.php;f14;25;5;38;;;;vpos;;v;;a void;;r;;d4,26;;b2,0;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\ApplicationTesterTest.php;f14;40;5;44;;;;vpos;;v;;a void;;r;;d4,41;;b2,0;;m0;;e">
</treenode>
<treenode node="testErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\ApplicationTesterTest.php;f11;93;5;111;;;;vpos;;v;;a;;r;;d4,94;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDisplay;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\ApplicationTesterTest.php;f11;64;5;67;;;;vpos;;v;;a;;r;;d4,65;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\ApplicationTesterTest.php;f11;53;5;56;;;;vpos;;v;;a;;r;;d4,54;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\ApplicationTesterTest.php;f11;58;5;62;;;;vpos;;v;;a;;r;;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetStatusCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\ApplicationTesterTest.php;f11;88;5;91;;;;vpos;;v;;a;;r;;d4,89;;b1,0;;m0;;e">
</treenode>
<treenode node="testRun;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\ApplicationTesterTest.php;f11;46;5;51;;;;vpos;;v;;a;;r;;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetInputs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\ApplicationTesterTest.php;f11;69;5;86;;;;vpos;;v;;a;;r;;d4,70;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ArgumentAnalysis;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\ArgumentAnalysis.php;f6;17;1;108;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ArgumentAnalysis&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\ArgumentAnalysis.php;f11;53;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($name, $nameIndex, $default, TypeAnalysis $typeAnalysis = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;&#10;    int &lt;b&gt;$nameIndex&lt;/b&gt;&#10;    null|string &lt;b&gt;$default&lt;/b&gt;&#10;    null|TypeAnalysis &lt;b&gt;$typeAnalysis&lt;/b&gt;;;d4,54;;b1,0;;m0;;estring $name;;pint $nameIndex;;pnull|string $default;;pnull|TypeAnalysis $typeAnalysis;;p">
</treenode>
<treenode node="getDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\ArgumentAnalysis.php;f11;64;5;67;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefault()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,65;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\ArgumentAnalysis.php;f11;80;5;83;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;;;d4,81;;b1,0;;m0;;e">
</treenode>
<treenode node="getNameIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\ArgumentAnalysis.php;f11;88;5;91;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNameIndex()&#10;;;d4,89;;b1,0;;m0;;e">
</treenode>
<treenode node="getTypeAnalysis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\ArgumentAnalysis.php;f11;96;5;99;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTypeAnalysis()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |TypeAnalysis;;d4,97;;b1,0;;m0;;e">
</treenode>
<treenode node="hasDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\ArgumentAnalysis.php;f11;72;5;75;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasDefault()&#10;;;d4,73;;b1,0;;m0;;e">
</treenode>
<treenode node="hasTypeAnalysis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\ArgumentAnalysis.php;f11;104;5;107;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasTypeAnalysis()&#10;;;d4,105;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ArgumentsAnalyzer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\ArgumentsAnalyzer.php;f6;24;1;142;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ArgumentsAnalyzer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Vladimir Reznichenko &lt;kalessil&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="countArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\ArgumentsAnalyzer.php;f11;35;5;38;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    countArguments(Tokens $tokens, $openParenthesis, $closeParenthesis)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Count amount of parameters in a function/method reference.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$openParenthesis&lt;/b&gt;&#10;    int &lt;b&gt;$closeParenthesis&lt;/b&gt;;;d4,36;;b1,0;;m0;;eTokens $tokens;;pint $openParenthesis;;pint $closeParenthesis;;p">
</treenode>
<treenode node="getArgumentInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\ArgumentsAnalyzer.php;f11;99;5;141;;;;vpos;;v;;aArgumentAnalysis;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArgumentInfo(Tokens $tokens, $argumentStart, $argumentEnd)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$argumentStart&lt;/b&gt;&#10;    int &lt;b&gt;$argumentEnd&lt;/b&gt;;;d4,100;;b1,0;;m0;;eTokens $tokens;;pint $argumentStart;;pint $argumentEnd;;p">
</treenode>
<treenode node="getArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\ArgumentsAnalyzer.php;f11;54;5;90;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArguments(Tokens $tokens, $openParenthesis, $closeParenthesis)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns start and end token indexes of arguments.&#10;Returns an array with each key being the first token of an&#10;argument and the value the last. Including non-function tokens&#10;such as comments and white space tokens, but without the separation&#10;tokens like &apos;(&apos;, &apos;,&apos; and &apos;)&apos;.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$openParenthesis&lt;/b&gt;&#10;    int &lt;b&gt;$closeParenthesis&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;int, int&gt;;;d4,55;;b1,0;;m0;;eTokens $tokens;;pint $openParenthesis;;pint $closeParenthesis;;p">
</treenode>
</treenode>
<treenode node="ArgvInput;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f0;40;1;366;;;;vpos;;v;;aInput;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ArgvInput extends Input&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ArgvInput represents an input coming from the CLI arguments.&#10;Usage:&#10;$input = new ArgvInput();s&#10;By default, the `$_SERVER[&apos;argv&apos;]` array is used for the input values.&#10;This can be overridden by explicitly passing the input values in the constructor:&#10;$input = new ArgvInput($_SERVER[&apos;argv&apos;]);s&#10;If you pass it yourself, don&apos;t forget that the first element of the array&#10;is the name of the running application.&#10;When passing an argument to the constructor, be sure that it respects&#10;the same rules as the argv one. It&apos;s almost always better to use the&#10;`StringInput` when you want to provide your own input.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;see&lt;/b&gt;: http://www.gnu.org/software/libc/manual/html_node/Argument-Syntax.html&#10;&lt;b&gt;see&lt;/b&gt;: http://www.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap12.html#tag_12_02;;d0,41;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f11;49;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(array $argv = null, InputDefinition $definition = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array|null &lt;b&gt;$argv&lt;/b&gt;: An array of parameters from the CLI (in the argv format)&#10;    InputDefinition|null &lt;b&gt;$definition&lt;/b&gt;: A InputDefinition instance;;d4,50;;b1,0;;m0;;earray|null $argv;;pInputDefinition|null $definition;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f11;350;5;365;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __toString()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a stringified representation of the args passed to the command.;;d4,351;;b1,0;;m0;;e">
</treenode>
<treenode node="addLongOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f12;214;5;252;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addLongOption($name, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a long option value.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When option given doesn&apos;t exist&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The long option key&#10;    mixed &lt;b&gt;$value&lt;/b&gt;: The value for the option;;d4,215;;b3,0;;m0;;estring $name;;pmixed $value;;p">
</treenode>
<treenode node="addShortOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f12;197;5;204;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addShortOption($shortcut, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a short option value.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When option given doesn&apos;t exist&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$shortcut&lt;/b&gt;: The short option key&#10;    mixed &lt;b&gt;$value&lt;/b&gt;: The value for the option;;d4,198;;b3,0;;m0;;estring $shortcut;;pmixed $value;;p">
</treenode>
<treenode node="getFirstArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f11;257;5;287;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFirstArgument()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,258;;b1,0;;m0;;e">
</treenode>
<treenode node="getParameterOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f11;317;5;343;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getParameterOption($values, $default = false, $onlyParams = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,318;;b1,0;;m0;;evalues;;pdefault;;ponlyParams;;p">
</treenode>
<treenode node="hasParameterOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f11;292;5;312;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasParameterOption($values, $onlyParams = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,293;;b1,0;;m0;;evalues;;ponlyParams;;p">
</treenode>
<treenode node="parse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f14;71;5;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parse()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,72;;b2,0;;m0;;e">
</treenode>
<treenode node="parseArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f12;164;5;187;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseArgument($token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses an argument.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When too many arguments are given&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$token&lt;/b&gt;: The current token;;d4,165;;b3,0;;m0;;estring $token;;p">
</treenode>
<treenode node="parseLongOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f12;143;5;155;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseLongOption($token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses a long option.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$token&lt;/b&gt;: The current token;;d4,144;;b3,0;;m0;;estring $token;;p">
</treenode>
<treenode node="parseShortOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f12;95;5;109;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseShortOption($token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses a short option.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$token&lt;/b&gt;: The current token;;d4,96;;b3,0;;m0;;estring $token;;p">
</treenode>
<treenode node="parseShortOptionSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f12;118;5;136;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseShortOptionSet($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses a short option set.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When option given doesn&apos;t exist&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The current token;;d4,119;;b3,0;;m0;;estring $name;;p">
</treenode>
<treenode node="setTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArgvInput.php;f14;63;5;66;;;;vpos;;v;;a;;r;;d4,64;;b2,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="ArgvInputTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f0;19;1;461;;;;vpos;;v;;aTestCase;;c;;r;;d0,20;;b0,0;;m0;;e">
<treenode node="provideGetParameterOptionValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;412;5;427;;;;vpos;;v;;a;;r;;d4,413;;b1,0;;m0;;e">
</treenode>
<treenode node="provideInvalidInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;191;5;250;;;;vpos;;v;;a;;r;;d4,192;;b1,0;;m0;;e">
</treenode>
<treenode node="provideOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;53;5;177;;;;vpos;;v;;a;;r;;d4,54;;b1,0;;m0;;e">
</treenode>
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;21;5;30;;;;vpos;;v;;a;;r;;d4,22;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetFirstArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;303;5;318;;;;vpos;;v;;a;;r;;d4,304;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetParameterOptionEqualSign;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;406;5;410;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testGetParameterOptionEqualSign($argv, $key, $default, $onlyParams, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideGetParameterOptionValues;;d4,407;;b1,0;;m0;;eargv;;pkey;;pdefault;;ponlyParams;;pexpected;;p">
</treenode>
<treenode node="testHasParameterOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;320;5;337;;;;vpos;;v;;a;;r;;d4,321;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasParameterOptionEdgeCasesAndLimitations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;354;5;379;;;;vpos;;v;;a;;r;;d4,355;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasParameterOptionOnlyOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;339;5;352;;;;vpos;;v;;a;;r;;d4,340;;b1,0;;m0;;e">
</treenode>
<treenode node="testInvalidInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;182;5;189;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testInvalidInput($argv, $definition, $expectedExceptionMessage)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideInvalidInput;;d4,183;;b1,0;;m0;;eargv;;pdefinition;;pexpectedExceptionMessage;;p">
</treenode>
<treenode node="testNoWarningOnInvalidParameterOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;381;5;392;;;;vpos;;v;;a;;r;;d4,382;;b1,0;;m0;;e">
</treenode>
<treenode node="testParseArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;32;5;40;;;;vpos;;v;;a;;r;;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="testParseArrayArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;252;5;258;;;;vpos;;v;;a;;r;;d4,253;;b1,0;;m0;;e">
</treenode>
<treenode node="testParseArrayOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;260;5;281;;;;vpos;;v;;a;;r;;d4,261;;b1,0;;m0;;e">
</treenode>
<treenode node="testParseEmptyStringArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;295;5;301;;;;vpos;;v;;a;;r;;d4,296;;b1,0;;m0;;e">
</treenode>
<treenode node="testParseNegativeNumberAfterDoubleDash;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;283;5;293;;;;vpos;;v;;a;;r;;d4,284;;b1,0;;m0;;e">
</treenode>
<treenode node="testParseOptionWithValueOptionalGivenEmptyAndOptionalArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;449;5;460;;;;vpos;;v;;a;;r;;d4,450;;b1,0;;m0;;e">
</treenode>
<treenode node="testParseOptionWithValueOptionalGivenEmptyAndRequiredArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;436;5;447;;;;vpos;;v;;a;;r;;d4,437;;b1,0;;m0;;e">
</treenode>
<treenode node="testParseOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;45;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testParseOptions($input, $options, $expectedOptions, $message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideOptions;;d4,46;;b1,0;;m0;;einput;;poptions;;pexpectedOptions;;pmessage;;p">
</treenode>
<treenode node="testParseSingleDashAsArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;429;5;434;;;;vpos;;v;;a;;r;;d4,430;;b1,0;;m0;;e">
</treenode>
<treenode node="testToString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArgvInputTest.php;f11;394;5;401;;;;vpos;;v;;a;;r;;d4,395;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ArithmeticError;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Resources\stubs\ArithmeticError.php;f0;2;1;4;;;;vpos;;v;;aError;;c;;r;;d0,3;;b0,0;;m0;;e">
</treenode>
<treenode node="ArrayIndentationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f6;23;1;375;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f14;56;5;123;;;;vpos;;v;;a;;r;;d4,57;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="computeArrayLineSignificantBraces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f12;213;5;226;;;;vpos;;v;;a;;r;;d4,214;;b3,0;;m0;;etokens;;parray;;p">
</treenode>
<treenode node="computeNewLineContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f12;365;5;374;;;;vpos;;v;;a;;r;;d4,366;;b3,0;;m0;;etokens;;pindex;;p">
</treenode>
<treenode node="extractIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f12;301;5;308;;;;vpos;;v;;a;;r;;d4,302;;b3,0;;m0;;econtent;;p">
</treenode>
<treenode node="findArrayTokenRanges;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f12;145;5;211;;;;vpos;;v;;a;;r;;d4,146;;b3,0;;m0;;etokens;;pfrom;;pto;;p">
</treenode>
<treenode node="findArrays;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f12;125;5;143;;;;vpos;;v;;a;;r;;d4,126;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f11;28;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="getLineIndentation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f12;290;5;299;;;;vpos;;v;;a;;r;;d4,291;;b3,0;;m0;;etokens;;pindex;;p">
</treenode>
<treenode node="getLineSignificantBraces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f12;228;5;281;;;;vpos;;v;;a;;r;;d4,229;;b3,0;;m0;;etokens;;pindex;;parray;;p">
</treenode>
<treenode node="getPreviousNewlineTokenIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f12;310;5;325;;;;vpos;;v;;a;;r;;d4,311;;b3,0;;m0;;etokens;;pindex;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f11;49;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="indexIsInArrayTokenRanges;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f12;341;5;354;;;;vpos;;v;;a;;r;;d4,342;;b3,0;;m0;;eindex;;parray;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f11;41;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isClosingLineWithMeaningfulContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f12;283;5;288;;;;vpos;;v;;a;;r;;d4,284;;b3,0;;m0;;etokens;;pnewLineIndex;;p">
</treenode>
<treenode node="isNewLineToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f12;356;5;363;;;;vpos;;v;;a;;r;;d4,357;;b3,0;;m0;;etokens;;pindex;;p">
</treenode>
<treenode node="newlineIsInArrayScope;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\ArrayIndentationFixer.php;f12;327;5;339;;;;vpos;;v;;a;;r;;d4,328;;b3,0;;m0;;etokens;;pindex;;parray;;p">
</treenode>
</treenode>
<treenode node="ArrayInput;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArrayInput.php;f0;25;1;207;;;;vpos;;v;;aInput;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ArrayInput extends Input&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ArrayInput represents an input provided as an array.&#10;Usage:&#10;$input = new ArrayInput([&apos;command&apos; =&gt; &apos;foo:bar&apos;, &apos;foo&apos; =&gt; &apos;bar&apos;, &apos;--bar&apos; =&gt; &apos;foobar&apos;]);s&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArrayInput.php;f11;29;5;34;;;;vpos;;v;;a;;r;;d4,30;;b1,0;;m0;;eparameters;;pdefinition;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArrayInput.php;f11;105;5;123;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __toString()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a stringified representation of the args passed to the command.;;d4,106;;b1,0;;m0;;e">
</treenode>
<treenode node="addArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArrayInput.php;f12;199;5;206;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addArgument($name, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds an argument value.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When argument given doesn&apos;t exist&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The argument name&#10;    mixed &lt;b&gt;$value&lt;/b&gt;: The value for the argument;;d4,200;;b3,0;;m0;;estring $name;;pmixed $value;;p">
</treenode>
<treenode node="addLongOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArrayInput.php;f12;170;5;189;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addLongOption($name, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a long option value.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidOptionException When option given doesn&apos;t exist&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidOptionException When a required value is missing&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The long option key&#10;    mixed &lt;b&gt;$value&lt;/b&gt;: The value for the option;;d4,171;;b3,0;;m0;;estring $name;;pmixed $value;;p">
</treenode>
<treenode node="addShortOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArrayInput.php;f12;152;5;159;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addShortOption($shortcut, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a short option value.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidOptionException When option given doesn&apos;t exist&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$shortcut&lt;/b&gt;: The short option key&#10;    mixed &lt;b&gt;$value&lt;/b&gt;: The value for the option;;d4,153;;b3,0;;m0;;estring $shortcut;;pmixed $value;;p">
</treenode>
<treenode node="getFirstArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArrayInput.php;f11;39;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFirstArgument()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="getParameterOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArrayInput.php;f11;79;5;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getParameterOption($values, $default = false, $onlyParams = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,80;;b1,0;;m0;;evalues;;pdefault;;ponlyParams;;p">
</treenode>
<treenode node="hasParameterOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArrayInput.php;f11;55;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasParameterOption($values, $onlyParams = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b1,0;;m0;;evalues;;ponlyParams;;p">
</treenode>
<treenode node="parse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\ArrayInput.php;f14;128;5;142;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parse()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,129;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ArrayInputTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArrayInputTest.php;f0;19;1;172;;;;vpos;;v;;aTestCase;;c;;r;;d0,20;;b0,0;;m0;;e">
<treenode node="provideInvalidInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArrayInputTest.php;f11;135;5;159;;;;vpos;;v;;a;;r;;d4,136;;b1,0;;m0;;e">
</treenode>
<treenode node="provideOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArrayInputTest.php;f11;76;5;122;;;;vpos;;v;;a;;r;;d4,77;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetFirstArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArrayInputTest.php;f11;21;5;29;;;;vpos;;v;;a;;r;;d4,22;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetParameterOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArrayInputTest.php;f11;45;5;57;;;;vpos;;v;;a;;r;;d4,46;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasParameterOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArrayInputTest.php;f11;31;5;43;;;;vpos;;v;;a;;r;;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="testParseArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArrayInputTest.php;f11;59;5;64;;;;vpos;;v;;a;;r;;d4,60;;b1,0;;m0;;e">
</treenode>
<treenode node="testParseInvalidInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArrayInputTest.php;f11;127;5;133;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testParseInvalidInput($parameters, $definition, $expectedExceptionMessage)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideInvalidInput;;d4,128;;b1,0;;m0;;eparameters;;pdefinition;;pexpectedExceptionMessage;;p">
</treenode>
<treenode node="testParseOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArrayInputTest.php;f11;69;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testParseOptions($input, $options, $expectedOptions, $message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideOptions;;d4,70;;b1,0;;m0;;einput;;poptions;;pexpectedOptions;;pmessage;;p">
</treenode>
<treenode node="testToString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\ArrayInputTest.php;f11;161;5;171;;;;vpos;;v;;a;;r;;d4,162;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ArraySyntaxFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\ArraySyntaxFixer.php;f6;32;1;149;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ArraySyntaxFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gregor Harlan &lt;gharlan&#10;&lt;b&gt;web&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Sebastiaan Stok &lt;s.stok&#10;&lt;b&gt;rollerscapes&lt;/b&gt;: .net&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,33;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\ArraySyntaxFixer.php;f14;88;5;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,89;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\ArraySyntaxFixer.php;f11;40;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\ArraySyntaxFixer.php;f14;101;5;109;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,102;;b2,0;;m0;;e">
</treenode>
<treenode node="fixToLongArraySyntax;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\ArraySyntaxFixer.php;f12;115;5;123;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixToLongArraySyntax(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,116;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixToShortArraySyntax;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\ArraySyntaxFixer.php;f12;129;5;138;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixToShortArraySyntax(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,130;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\ArraySyntaxFixer.php;f11;51;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\ArraySyntaxFixer.php;f11;71;5;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,72;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\ArraySyntaxFixer.php;f11;80;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,81;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="resolveCandidateTokenKind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\ArraySyntaxFixer.php;f12;145;5;148;;;;vpos;;v;;a;;r;;d4,146;;b3,0;;m0;;e">
</treenode>
<treenode node="resolveFixCallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\ArraySyntaxFixer.php;f12;140;5;143;;;;vpos;;v;;a;;r;;d4,141;;b3,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ArrayTypehintTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ArrayTypehintTransformer.php;f6;26;1;60;;;;vpos;;v;;aAbstractTransformer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ArrayTypehintTransformer extends AbstractTransformer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform `array` typehint from T_ARRAY into CT::T_ARRAY_TYPEHINT.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ArrayTypehintTransformer.php;f11;31;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ArrayTypehintTransformer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredPhpVersionId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ArrayTypehintTransformer.php;f11;47;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    process(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
</treenode>
<treenode node="Articles;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\model\Articles.php;f0;11;1;49;;;;vpos;;v;;aDatabase;;c;;r;;d0,12;;b0,0;;m0;;e">
<treenode node="getListArticles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\model\Articles.php;f8;15;2;28;;;;vpos;;v;;a;;r;;d1,16;;b1,0;;m0;;e">
</treenode>
<treenode node="singleArticle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\model\Articles.php;f8;32;2;47;;;;vpos;;v;;a;;r;;d1,33;;b1,0;;m0;;eidArticle;;p">
</treenode>
</treenode>
<treenode node="AssertTokensTrait;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\Assert\AssertTokensTrait.php;f0;22;1;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    trait AssertTokensTrait&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="assertTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\Assert\AssertTokensTrait.php;f19;24;5;46;;;;vpos;;v;;a;;r;;d4,25;;b3,5;;m0;;eexpectedTokens;;pinputTokens;;p">
</treenode>
</treenode>
<treenode node="AssertionError;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Resources\stubs\AssertionError.php;f0;2;1;4;;;;vpos;;v;;aError;;c;;r;;d0,3;;b0,0;;m0;;e">
</treenode>
<treenode node="Attribute;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\Attribute.php;f6;30;1;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Attribute&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Annotation that can be used to signal to the parser&#10;to check the attribute type during the parsing process.&#10;&lt;b&gt;author&lt;/b&gt;: Fabio B. Silva &lt;fabio.bat.silva&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;Annotation&lt;/b&gt;;;d0,31;;b0,0;;m0;;e">
</treenode>
<treenode node="Attributes;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\Attributes.php;f6;30;1;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Attributes&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Annotation that can be used to signal to the parser&#10;to check the types of all declared attributes during the parsing process.&#10;&lt;b&gt;author&lt;/b&gt;: Fabio B. Silva &lt;fabio.bat.silva&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;Annotation&lt;/b&gt;;;d0,31;;b0,0;;m0;;e">
</treenode>
<treenode node="AutocompleteValues;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f0;759;1;772;;;;vpos;;v;;aIteratorAggregate;;c;;r;;d0,760;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;763;5;766;;;;vpos;;v;;a;;r;;d4,764;;b1,0;;m0;;evalues;;p">
</treenode>
<treenode node="getIterator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;768;5;771;;;;vpos;;v;;a;;r;;d4,769;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="BacktickToShellExecFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\BacktickToShellExecFixer.php;f6;24;1;146;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class BacktickToShellExecFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\BacktickToShellExecFixer.php;f14;67;5;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,68;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixBackticks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\BacktickToShellExecFixer.php;f12;96;5;145;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixBackticks(Tokens $tokens, array $backtickTokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Override backtick code with corresponding double-quoted string.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    array &lt;b&gt;$backtickTokens&lt;/b&gt;;;d4,97;;b3,0;;m0;;eTokens $tokens;;parray $backtickTokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\BacktickToShellExecFixer.php;f11;37;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\BacktickToShellExecFixer.php;f11;58;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\BacktickToShellExecFixer.php;f11;29;5;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="BarBucCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\BarBucCommand.php;f0;4;1;10;;;;vpos;;v;;aCommand;;c;;r;;d0,5;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\BarBucCommand.php;f14;6;5;9;;;;vpos;;v;;a;;r;;d4,7;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="BinaryOperatorSpacesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f6;33;1;838;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class BinaryOperatorSpacesFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,34;;b0,0;;m0;;e">
<treenode node="ALIGN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f9;48;15;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="ALIGN_PLACEHOLDER;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f9;64;27;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;&#10;&lt;b&gt;const&lt;/b&gt;: Placeholder used as anchor for right alignment.;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="ALIGN_SINGLE_SPACE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f9;53;28;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="ALIGN_SINGLE_SPACE_MINIMAL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f9;58;36;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="NO_SPACE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f9;43;18;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="SINGLE_SPACE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f9;38;22;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f14;241;5;269;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,242;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f11;158;5;170;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,159;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f14;274;5;323;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,275;;b2,0;;m0;;e">
</treenode>
<treenode node="fixAlignment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f12;538;5;584;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixAlignment(Tokens $tokens, array $toAlign)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    array&lt;string,: string&gt; $toAlign;;d4,539;;b3,0;;m0;;eTokens $tokens;;parray&lt;string,;;p">
</treenode>
<treenode node="fixWhiteSpaceAroundOperator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f12;329;5;366;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixWhiteSpaceAroundOperator(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,330;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixWhiteSpaceAroundOperatorToNoSpace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f12;399;5;416;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixWhiteSpaceAroundOperatorToNoSpace(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,400;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixWhiteSpaceAroundOperatorToSingleSpace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f12;372;5;393;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixWhiteSpaceAroundOperatorToSingleSpace(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,373;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixWhiteSpaceBeforeOperator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f12;739;5;756;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixWhiteSpaceBeforeOperator(Tokens $tokens, $index, $alignStrategy)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    string &lt;b&gt;$alignStrategy&lt;/b&gt;;;d4,740;;b3,0;;m0;;eTokens $tokens;;pint $index;;pstring $alignStrategy;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f11;175;5;219;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,176;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f11;224;5;228;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,225;;b1,0;;m0;;e">
</treenode>
<treenode node="injectAlignmentPlaceholders;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f12;592;5;632;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    injectAlignmentPlaceholders(Tokens $tokens, $startAt, $endAt, $tokenContent)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startAt&lt;/b&gt;&#10;    int &lt;b&gt;$endAt&lt;/b&gt;&#10;    string &lt;b&gt;$tokenContent&lt;/b&gt;;;d4,593;;b3,0;;m0;;eTokens $tokens;;pint $startAt;;pint $endAt;;pstring $tokenContent;;p">
</treenode>
<treenode node="injectAlignmentPlaceholdersForArrow;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f12;639;5;716;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    injectAlignmentPlaceholdersForArrow(Tokens $tokens, $startAt, $endAt)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startAt&lt;/b&gt;&#10;    int &lt;b&gt;$endAt&lt;/b&gt;;;d4,640;;b3,0;;m0;;eTokens $tokens;;pint $startAt;;pint $endAt;;p">
</treenode>
<treenode node="injectArrayAlignmentPlaceholders;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f12;723;5;732;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    injectArrayAlignmentPlaceholders(Tokens $tokens, $from, $until)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$from&lt;/b&gt;&#10;    int &lt;b&gt;$until&lt;/b&gt;;;d4,724;;b3,0;;m0;;eTokens $tokens;;pint $from;;pint $until;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f11;233;5;236;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,234;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isEqualPartOfDeclareStatement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f12;424;5;438;;;;vpos;;v;;afalse|int;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isEqualPartOfDeclareStatement(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   index of T_DECLARE where the `=` belongs to or `false`;;d4,425;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="replacePlaceholders;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f12;766;5;837;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    replacePlaceholders(Tokens $tokens, $alignStrategy)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Look for group of placeholders and provide vertical alignment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    string &lt;b&gt;$alignStrategy&lt;/b&gt;;;d4,767;;b3,0;;m0;;eTokens $tokens;;pstring $alignStrategy;;p">
</treenode>
<treenode node="resolveOldConfig;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f12;477;5;530;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resolveOldConfig(array $configuration)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$configuration&lt;/b&gt;;;d4,478;;b3,0;;m0;;earray $configuration;;p">
</treenode>
<treenode node="resolveOperatorsFromConfig;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\BinaryOperatorSpacesFixer.php;f12;443;5;470;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resolveOperatorsFromConfig()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;string, string&gt;;;d4,444;;b3,0;;m0;;e">
</treenode>
</treenode>
<treenode node="BlankLineAfterNamespaceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\BlankLineAfterNamespaceFixer.php;f6;27;1;143;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class BlankLineAfterNamespaceFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶3.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\BlankLineAfterNamespaceFixer.php;f14;63;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,64;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\BlankLineAfterNamespaceFixer.php;f11;32;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="getIndexToEnsureBlankLineAfter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\BlankLineAfterNamespaceFixer.php;f12;98;5;126;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIndexToEnsureBlankLineAfter(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,99;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\BlankLineAfterNamespaceFixer.php;f11;46;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="getTokenToInsert;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\BlankLineAfterNamespaceFixer.php;f12;134;5;142;;;;vpos;;v;;aToken;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTokenToInsert($currentContent, $isLastIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$currentContent&lt;/b&gt;&#10;    bool &lt;b&gt;$isLastIndex&lt;/b&gt;;;d4,135;;b3,0;;m0;;estring $currentContent;;pbool $isLastIndex;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\BlankLineAfterNamespaceFixer.php;f11;55;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="BlankLineAfterOpeningTagFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\BlankLineAfterOpeningTagFixer.php;f6;24;1;95;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class BlankLineAfterOpeningTagFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Ceeram &lt;ceeram&#10;&lt;b&gt;cakephp&lt;/b&gt;: .org&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\BlankLineAfterOpeningTagFixer.php;f14;57;5;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\BlankLineAfterOpeningTagFixer.php;f11;29;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\BlankLineAfterOpeningTagFixer.php;f11;40;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\BlankLineAfterOpeningTagFixer.php;f11;49;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="BlankLineBeforeReturnFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\BlankLineBeforeReturnFixer.php;f6;29;1;60;;;;vpos;;v;;aAbstractProxyFixer;;cDeprecatedFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class BlankLineBeforeReturnFixer extends AbstractProxyFixer implements DeprecatedFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;deprecated&lt;/b&gt;: since 2.4, replaced by BlankLineBeforeStatementFixer&#10;&lt;b&gt;todo&lt;/b&gt;: To be removed at 3.0&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Andreas Möller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="createProxyFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\BlankLineBeforeReturnFixer.php;f14;53;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProxyFixers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,54;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\BlankLineBeforeReturnFixer.php;f11;34;5;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;e">
</treenode>
<treenode node="getSuccessorsNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\BlankLineBeforeReturnFixer.php;f11;45;5;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSuccessorsNames()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,46;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="BlankLineBeforeStatementFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\BlankLineBeforeStatementFixer.php;f6;31;1;329;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class BlankLineBeforeStatementFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Andreas Möller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,32;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\BlankLineBeforeStatementFixer.php;f14;270;5;307;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,271;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\BlankLineBeforeStatementFixer.php;f11;69;5;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,70;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\BlankLineBeforeStatementFixer.php;f14;312;5;328;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,313;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\BlankLineBeforeStatementFixer.php;f11;83;5;248;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,84;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\BlankLineBeforeStatementFixer.php;f11;253;5;257;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,254;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\BlankLineBeforeStatementFixer.php;f11;262;5;265;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,263;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="BraceClassInstantiationTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\BraceClassInstantiationTransformer.php;f6;27;1;87;;;;vpos;;v;;aAbstractTransformer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class BraceClassInstantiationTransformer extends AbstractTransformer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform braced class instantiation braces in `(new Foo())` into CT::T_BRACE_CLASS_INSTANTIATION_OPEN&#10;and CT::T_BRACE_CLASS_INSTANTIATION_CLOSE.&#10;&lt;b&gt;author&lt;/b&gt;: Sebastiaans Stok &lt;s.stok&#10;&lt;b&gt;rollerscapes&lt;/b&gt;: .net&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\BraceClassInstantiationTransformer.php;f11;32;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\BraceClassInstantiationTransformer.php;f11;40;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\BraceClassInstantiationTransformer.php;f11;49;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredPhpVersionId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\BraceClassInstantiationTransformer.php;f11;57;5;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    process(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
</treenode>
<treenode node="BracesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f6;32;1;1056;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class BracesFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶4.1, ¶4.4, ¶5.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,33;;b0,0;;m0;;e">
<treenode node="LINE_NEXT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f9;37;19;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="LINE_SAME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f9;42;19;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f14;143;5;151;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,144;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f14;156;5;176;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,157;;b2,0;;m0;;e">
</treenode>
<treenode node="detectIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;683;5;710;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    detectIndent(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,684;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="ensureWhitespaceAtIndexAndIndentMultilineComment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;914;5;945;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ensureWhitespaceAtIndexAndIndentMultilineComment(Tokens $tokens, $index, $whitespace)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    string &lt;b&gt;$whitespace&lt;/b&gt;;;d4,915;;b3,0;;m0;;eTokens $tokens;;pint $index;;pstring $whitespace;;p">
</treenode>
<treenode node="findParenthesisEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;718;5;729;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findParenthesisEnd(Tokens $tokens, $structureTokenIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$structureTokenIndex&lt;/b&gt;;;d4,719;;b3,0;;m0;;eTokens $tokens;;pint $structureTokenIndex;;p">
</treenode>
<treenode node="findStatementEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;737;5;800;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findStatementEnd(Tokens $tokens, $parenthesisEndIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$parenthesisEndIndex&lt;/b&gt;;;d4,738;;b3,0;;m0;;eTokens $tokens;;pint $parenthesisEndIndex;;p">
</treenode>
<treenode node="fixCommentBeforeBrace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;178;5;231;;;;vpos;;v;;a;;r;;d4,179;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="fixControlContinuationBraces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;233;5;259;;;;vpos;;v;;a;;r;;d4,234;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="fixDeclareStatement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;874;5;890;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixDeclareStatement(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,875;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixDoWhile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;261;5;282;;;;vpos;;v;;a;;r;;d4,262;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="fixIndents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;284;5;599;;;;vpos;;v;;a;;r;;d4,285;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="fixMissingControlBraces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;601;5;643;;;;vpos;;v;;a;;r;;d4,602;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="fixSingleLineWhitespaceForDeclare;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;896;5;907;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSingleLineWhitespaceForDeclare(Tokens $tokens, $startBraceIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startBraceIndex&lt;/b&gt;;;d4,897;;b3,0;;m0;;eTokens $tokens;;pint $startBraceIndex;;p">
</treenode>
<treenode node="fixSpaceAroundToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;645;5;675;;;;vpos;;v;;a;;r;;d4,646;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="getControlContinuationTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;822;5;832;;;;vpos;;v;;a;;r;;d4,823;;b3,0;;m0;;e">
</treenode>
<treenode node="getControlContinuationTokensForOpeningToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;834;5;855;;;;vpos;;v;;a;;r;;d4,835;;b3,0;;m0;;eopeningTokenKind;;p">
</treenode>
<treenode node="getControlTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;802;5;820;;;;vpos;;v;;a;;r;;d4,803;;b3,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f11;47;5;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="getFinalControlContinuationTokensForOpeningToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;857;5;868;;;;vpos;;v;;a;;r;;d4,858;;b3,0;;m0;;eopeningTokenKind;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f11;126;5;130;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,127;;b1,0;;m0;;e">
</treenode>
<treenode node="getSiblingContinuousSingleLineComment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;1028;5;1055;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSiblingContinuousSingleLineComment(Tokens $tokens, $index, $after)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    bool &lt;b&gt;$after&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,1029;;b3,0;;m0;;eTokens $tokens;;pint $index;;pbool $after;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f11;135;5;138;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,136;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isCommentWithFixableIndentation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;978;5;1019;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCommentWithFixableIndentation(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether the token at given index is a comment whose indentation&#10;can be fixed.&#10;Indentation of a comment is not changed when the comment is part of a&#10;multi-line message whose lines are all single-line comments and at least&#10;one line has meaningful content.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,979;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isMultilined;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\BracesFixer.php;f12;954;5;963;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isMultilined(Tokens $tokens, $startParenthesisIndex, $endParenthesisIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startParenthesisIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endParenthesisIndex&lt;/b&gt;;;d4,955;;b3,0;;m0;;eTokens $tokens;;pint $startParenthesisIndex;;pint $endParenthesisIndex;;p">
</treenode>
</treenode>
<treenode node="BufferedOutput;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\BufferedOutput.php;f0;16;1;44;;;;vpos;;v;;aOutput;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class BufferedOutput extends Output&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jean-François Simon &lt;contact&#10;&lt;b&gt;jfsimon&lt;/b&gt;: .fr&gt;;;d0,17;;b0,0;;m0;;e">
<treenode node="doWrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\BufferedOutput.php;f14;36;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    doWrite($message, $newline)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,37;;b2,0;;m0;;emessage;;pnewline;;p">
</treenode>
<treenode node="fetch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\BufferedOutput.php;f11;25;5;31;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fetch()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Empties buffer and returns its content.;;d4,26;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="CT;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f6;17;1;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CT&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="T_ARRAY_INDEX_CURLY_BRACE_CLOSE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;19;41;19;;;;vpos;;v;;a;;r10001;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="T_ARRAY_INDEX_CURLY_BRACE_OPEN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;20;40;20;;;;vpos;;v;;a;;r10002;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_ARRAY_SQUARE_BRACE_CLOSE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;21;36;21;;;;vpos;;v;;a;;r10003;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_ARRAY_SQUARE_BRACE_OPEN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;22;35;22;;;;vpos;;v;;a;;r10004;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_ARRAY_TYPEHINT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;23;26;23;;;;vpos;;v;;a;;r10005;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_BRACE_CLASS_INSTANTIATION_CLOSE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;24;43;24;;;;vpos;;v;;a;;r10006;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_BRACE_CLASS_INSTANTIATION_OPEN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;25;42;25;;;;vpos;;v;;a;;r10007;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_CLASS_CONSTANT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;26;26;26;;;;vpos;;v;;a;;r10008;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_CONST_IMPORT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;27;24;27;;;;vpos;;v;;a;;r10009;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_CURLY_CLOSE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;28;23;28;;;;vpos;;v;;a;;r10010;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_DESTRUCTURING_SQUARE_BRACE_CLOSE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;29;44;29;;;;vpos;;v;;a;;r10011;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_DESTRUCTURING_SQUARE_BRACE_OPEN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;30;43;30;;;;vpos;;v;;a;;r10012;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_DOLLAR_CLOSE_CURLY_BRACES;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;31;37;31;;;;vpos;;v;;a;;r10013;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_DYNAMIC_PROP_BRACE_CLOSE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;32;36;32;;;;vpos;;v;;a;;r10014;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_DYNAMIC_PROP_BRACE_OPEN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;33;35;33;;;;vpos;;v;;a;;r10015;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_DYNAMIC_VAR_BRACE_CLOSE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;34;35;34;;;;vpos;;v;;a;;r10016;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_DYNAMIC_VAR_BRACE_OPEN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;35;34;35;;;;vpos;;v;;a;;r10017;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_FUNCTION_IMPORT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;36;27;36;;;;vpos;;v;;a;;r10018;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_GROUP_IMPORT_BRACE_CLOSE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;37;36;37;;;;vpos;;v;;a;;r10019;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_GROUP_IMPORT_BRACE_OPEN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;38;35;38;;;;vpos;;v;;a;;r10020;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_NAMESPACE_OPERATOR;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;39;30;39;;;;vpos;;v;;a;;r10021;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_NULLABLE_TYPE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;40;25;40;;;;vpos;;v;;a;;r10022;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_RETURN_REF;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;41;22;41;;;;vpos;;v;;a;;r10023;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_TYPE_ALTERNATION;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;42;28;42;;;;vpos;;v;;a;;r10024;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_TYPE_COLON;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;43;22;43;;;;vpos;;v;;a;;r10025;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_USE_LAMBDA;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;44;22;44;;;;vpos;;v;;a;;r10026;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_USE_TRAIT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f9;45;21;45;;;;vpos;;v;;a;;r10027;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f12;47;5;49;;;;vpos;;v;;a;;r;;d4,48;;b3,0;;m0;;e">
</treenode>
<treenode node="getMapById;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f19;83;5;93;;;;vpos;;v;;a;;r;;d4,84;;b3,5;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f18;58;5;67;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName($value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get name for custom token.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$value&lt;/b&gt;: custom token value;;d4,59;;b1,5;;m0;;eint $value;;p">
</treenode>
<treenode node="has;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CT.php;f18;76;5;81;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    has($value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if given custom token exists.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$value&lt;/b&gt;: custom token value;;d4,77;;b1,5;;m0;;eint $value;;p">
</treenode>
</treenode>
<treenode node="Cache;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Cache.php;f6;19;1;144;;;;vpos;;v;;aCacheInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Cache implements CacheInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Andreas Möller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Cache.php;f11;31;5;34;;;;vpos;;v;;a;;r;;d4,32;;b1,0;;m0;;esignature;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Cache.php;f11;67;5;70;;;;vpos;;v;;a;;r;;d4,68;;b1,0;;m0;;efile;;p">
</treenode>
<treenode node="fromJson;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Cache.php;f18;100;5;143;;;;vpos;;v;;aCache;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fromJson($json)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$json&lt;/b&gt;;;d4,101;;b1,5;;m0;;estring $json;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Cache.php;f11;46;5;53;;;;vpos;;v;;a;;r;;d4,47;;b1,0;;m0;;efile;;p">
</treenode>
<treenode node="getSignature;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Cache.php;f11;36;5;39;;;;vpos;;v;;a;;r;;d4,37;;b1,0;;m0;;e">
</treenode>
<treenode node="has;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Cache.php;f11;41;5;44;;;;vpos;;v;;a;;r;;d4,42;;b1,0;;m0;;efile;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Cache.php;f11;55;5;65;;;;vpos;;v;;a;;r;;d4,56;;b1,0;;m0;;efile;;phash;;p">
</treenode>
<treenode node="toJson;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Cache.php;f11;72;5;91;;;;vpos;;v;;a;;r;;d4,73;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="CachedReader;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f6;30;1;261;;;;vpos;;v;;aReader;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CachedReader implements Reader&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A cache aware annotation reader.&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Benjamin Eberlei &lt;kontakt&#10;&lt;b&gt;beberlei&lt;/b&gt;: .de&gt;;;d0,31;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f11;59;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(Reader $reader, Cache $cache, $debug = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constructor.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Reader &lt;b&gt;$reader&lt;/b&gt;&#10;    Cache &lt;b&gt;$cache&lt;/b&gt;&#10;    bool &lt;b&gt;$debug&lt;/b&gt;;;d4,60;;b1,0;;m0;;eReader $reader;;pCache $cache;;pbool $debug;;p">
</treenode>
<treenode node="clearLoadedAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f11;172;5;175;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearLoadedAnnotations()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clears loaded annotations.;;d4,173;;b1,0;;m0;;e">
</treenode>
<treenode node="fetchFromCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f12;185;5;194;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fetchFromCache($cacheKey, ReflectionClass $class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fetches a value from the cache.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cacheKey&lt;/b&gt;: The cache key.&#10;    ReflectionClass &lt;b&gt;$class&lt;/b&gt;: The related class.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The cached value or false when the value is not in cache.;;d4,186;;b3,0;;m0;;estring $cacheKey;;pReflectionClass $class;;p">
</treenode>
<treenode node="getClassAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f11;88;5;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassAnnotation(ReflectionClass $class, $annotationName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,89;;b1,0;;m0;;eclass;;pannotationName;;p">
</treenode>
<treenode node="getClassAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f11;69;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassAnnotations(ReflectionClass $class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,70;;b1,0;;m0;;eclass;;p">
</treenode>
<treenode node="getLastModification;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f12;235;5;246;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLastModification(ReflectionClass $class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the time the class was last modified, testing traits and parents&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ReflectionClass &lt;b&gt;$class&lt;/b&gt;;;d4,236;;b3,0;;m0;;eReflectionClass $class;;p">
</treenode>
<treenode node="getMethodAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f11;156;5;165;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMethodAnnotation(\ReflectionMethod $method, $annotationName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,157;;b1,0;;m0;;emethod;;pannotationName;;p">
</treenode>
<treenode node="getMethodAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f11;136;5;151;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMethodAnnotations(\ReflectionMethod $method)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,137;;b1,0;;m0;;emethod;;p">
</treenode>
<treenode node="getPropertyAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f11;122;5;131;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPropertyAnnotation(\ReflectionProperty $property, $annotationName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,123;;b1,0;;m0;;eproperty;;pannotationName;;p">
</treenode>
<treenode node="getPropertyAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f11;102;5;117;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPropertyAnnotations(\ReflectionProperty $property)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,103;;b1,0;;m0;;eproperty;;p">
</treenode>
<treenode node="getTraitLastModificationTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f12;252;5;260;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTraitLastModificationTime(ReflectionClass $reflectionTrait)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ReflectionClass &lt;b&gt;$reflectionTrait&lt;/b&gt;;;d4,253;;b3,0;;m0;;eReflectionClass $reflectionTrait;;p">
</treenode>
<treenode node="isCacheFresh;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f12;220;5;227;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCacheFresh($cacheKey, ReflectionClass $class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if the cache is fresh.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cacheKey&lt;/b&gt;&#10;    ReflectionClass &lt;b&gt;$class&lt;/b&gt;;;d4,221;;b3,0;;m0;;estring $cacheKey;;pReflectionClass $class;;p">
</treenode>
<treenode node="saveToCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\CachedReader.php;f12;204;5;210;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    saveToCache($cacheKey, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Saves a value to the cache.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cacheKey&lt;/b&gt;: The cache key.&#10;    mixed &lt;b&gt;$value&lt;/b&gt;: The value.;;d4,205;;b3,0;;m0;;estring $cacheKey;;pmixed $value;;p">
</treenode>
</treenode>
<treenode node="CachingLinter;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\CachingLinter.php;f6;19;1;74;;;;vpos;;v;;aLinterInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CachingLinter implements LinterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\CachingLinter.php;f11;34;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(LinterInterface $linter)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    LinterInterface &lt;b&gt;$linter&lt;/b&gt;: Linter instance;;d4,35;;b1,0;;m0;;eLinterInterface $linter;;p">
</treenode>
<treenode node="isAsync;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\CachingLinter.php;f11;42;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAsync()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="lintFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\CachingLinter.php;f11;50;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lintFile($path)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;epath;;p">
</treenode>
<treenode node="lintSource;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\CachingLinter.php;f11;64;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lintSource($source)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,65;;b1,0;;m0;;esource;;p">
</treenode>
</treenode>
<treenode node="CallableClass;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f0;441;1;446;;;;vpos;;v;;a;;r;;d0,442;;b0,0;;m0;;e">
<treenode node="__invoke;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;443;5;445;;;;vpos;;v;;a;;r;;d4,444;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="CastSpacesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\CastSpacesFixer.php;f6;26;1;127;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CastSpacesFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="INSIDE_CAST_SPACE_REPLACE_MAP;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\CastSpacesFixer.php;f9;31;39;31;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\CastSpacesFixer.php;f14;83;5;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,84;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\CastSpacesFixer.php;f14;118;5;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,119;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\CastSpacesFixer.php;f11;43;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\CastSpacesFixer.php;f11;66;5;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\CastSpacesFixer.php;f11;75;5;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,76;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="CheckstyleReporter;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\CheckstyleReporter.php;f6;21;1;74;;;;vpos;;v;;aReporterInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CheckstyleReporter implements ReporterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Kévin Gomez &lt;contact&#10;&lt;b&gt;kevingomez&lt;/b&gt;: .fr&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="createError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\CheckstyleReporter.php;f12;65;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createError(\DOMDocument $dom, $appliedFixer)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \DOMElement&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \DOMDocument &lt;b&gt;$dom&lt;/b&gt;&#10;    string &lt;b&gt;$appliedFixer&lt;/b&gt;;;d4,66;;b3,0;;m0;;e\DOMDocument $dom;;pstring $appliedFixer;;p">
</treenode>
<treenode node="generate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\CheckstyleReporter.php;f11;34;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    generate(ReportSummary $reportSummary)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;ereportSummary;;p">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\CheckstyleReporter.php;f11;26;5;29;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormat()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,27;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ChildEventDispatcher;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\ChildEventDispatcherTest.php;f0;23;1;25;;;;vpos;;v;;aEventDispatcher;;c;;r;;d0,24;;b0,0;;m0;;e">
</treenode>
<treenode node="ChildEventDispatcherTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\ChildEventDispatcherTest.php;f0;15;1;21;;;;vpos;;v;;aEventDispatcherTest;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="createEventDispatcher;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\ChildEventDispatcherTest.php;f14;17;5;20;;;;vpos;;v;;a;;r;;d4,18;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ChoiceQuestion;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\ChoiceQuestion.php;f0;20;1;181;;;;vpos;;v;;aQuestion;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ChoiceQuestion extends Question&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Represents a choice question.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\ChoiceQuestion.php;f11;32;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $question, array $choices, $default = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$question&lt;/b&gt;: The question to ask to the user&#10;    array &lt;b&gt;$choices&lt;/b&gt;: The list of available choices&#10;    mixed &lt;b&gt;$default&lt;/b&gt;: The default answer to return;;d4,33;;b1,0;;m0;;estring $question;;parray $choices;;pmixed $default;;p">
</treenode>
<treenode node="getChoices;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\ChoiceQuestion.php;f11;50;5;53;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getChoices()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns available choices.;;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="getDefaultValidator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\ChoiceQuestion.php;f12;123;5;180;;;;vpos;;v;;a callable;;r;;d4,124;;b3,0;;m0;;e">
</treenode>
<treenode node="getPrompt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\ChoiceQuestion.php;f11;87;5;90;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPrompt()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the prompt for choices.;;d4,88;;b1,0;;m0;;e">
</treenode>
<treenode node="isMultiselect;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\ChoiceQuestion.php;f11;77;5;80;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isMultiselect()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether the choices are multiselect.;;d4,78;;b1,0;;m0;;e">
</treenode>
<treenode node="setErrorMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\ChoiceQuestion.php;f11;115;5;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setErrorMessage($errorMessage)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the error message for invalid values.&#10;The error message has a string placeholder (%s) for the invalid value.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$errorMessage&lt;/b&gt;;;d4,116;;b1,0;;m0;;estring $errorMessage;;p">
</treenode>
<treenode node="setMultiselect;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\ChoiceQuestion.php;f11;64;5;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setMultiselect($multiselect)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets multiselect option.&#10;When multiselect is set to true, multiple choices can be answered.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$multiselect&lt;/b&gt;;;d4,65;;b1,0;;m0;;ebool $multiselect;;p">
</treenode>
<treenode node="setPrompt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\ChoiceQuestion.php;f11;99;5;104;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPrompt($prompt)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the prompt for choices.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$prompt&lt;/b&gt;;;d4,100;;b1,0;;m0;;estring $prompt;;p">
</treenode>
</treenode>
<treenode node="ChoiceQuestionTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\ChoiceQuestionTest.php;f0;16;1;63;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="selectUseCases;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\ChoiceQuestionTest.php;f11;40;5;62;;;;vpos;;v;;a;;r;;d4,41;;b1,0;;m0;;e">
</treenode>
<treenode node="testSelectUseCases;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\ChoiceQuestionTest.php;f11;21;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testSelectUseCases($multiSelect, $answers, $expected, $message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: selectUseCases;;d4,22;;b1,0;;m0;;emultiSelect;;panswers;;pexpected;;pmessage;;p">
</treenode>
</treenode>
<treenode node="Chunk;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Chunk.php;f6;12;1;77;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Chunk.php;f6;12;1;77;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Chunk.php;f0;12;1;102;;;;vpos;;v;;a;;r;;d0,13;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Chunk.php;f11;39;5;46;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Chunk.php;f11;39;5;46;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Chunk.php;f11;46;5;53;;;;vpos;;v;;a;;r;;d4,40;;b1,0;;m0;;estart;;pstartRange;;pend;;pendRange;;plines;;p">
</treenode>
<treenode node="getEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Chunk.php;f11;58;5;61;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Chunk.php;f11;58;5;61;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Chunk.php;f11;74;5;77;;;;vpos;;v;;a;;r;;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="getEndRange;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Chunk.php;f11;63;5;66;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Chunk.php;f11;63;5;66;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Chunk.php;f11;82;5;85;;;;vpos;;v;;a;;r;;d4,64;;b1,0;;m0;;e">
</treenode>
<treenode node="getLines;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Chunk.php;f11;68;5;71;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Chunk.php;f11;68;5;71;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Chunk.php;f11;90;5;93;;;;vpos;;v;;a;;r;;d4,69;;b1,0;;m0;;e">
</treenode>
<treenode node="getStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Chunk.php;f11;48;5;51;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Chunk.php;f11;48;5;51;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Chunk.php;f11;58;5;61;;;;vpos;;v;;a;;r;;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="getStartRange;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Chunk.php;f11;53;5;56;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Chunk.php;f11;53;5;56;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Chunk.php;f11;66;5;69;;;;vpos;;v;;a;;r;;d4,54;;b1,0;;m0;;e">
</treenode>
<treenode node="setLines;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Chunk.php;f11;73;5;76;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Chunk.php;f11;73;5;76;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Chunk.php;f11;98;5;101;;;;vpos;;v;;a;;r;;d4,74;;b1,0;;m0;;elines;;p">
</treenode>
</treenode>
<treenode node="ClassAttributesSeparationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassAttributesSeparationFixer.php;f6;35;1;393;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ClassAttributesSeparationFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Make sure there is one blank line above and below class elements.&#10;The exception is when an element is the first or last item in a &apos;classy&apos;.&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,36;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassAttributesSeparationFixer.php;f14;124;5;159;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,125;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassAttributesSeparationFixer.php;f11;45;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,46;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="correctLineBreaks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassAttributesSeparationFixer.php;f12;303;5;351;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    correctLineBreaks(Tokens $tokens, $startIndex, $endIndex, $reqLineCount = 2)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;&#10;    int &lt;b&gt;$reqLineCount&lt;/b&gt;;;d4,304;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;pint $reqLineCount;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassAttributesSeparationFixer.php;f14;164;5;175;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,165;;b2,0;;m0;;e">
</treenode>
<treenode node="findCommentBlockStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassAttributesSeparationFixer.php;f12;376;5;392;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findCommentBlockStart(Tokens $tokens, $commentIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$commentIndex&lt;/b&gt;;;d4,377;;b3,0;;m0;;eTokens $tokens;;pint $commentIndex;;p">
</treenode>
<treenode node="fixSpaceAboveClassElement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassAttributesSeparationFixer.php;f12;231;5;295;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSpaceAboveClassElement(Tokens $tokens, $classStartIndex, $elementIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fix spacing above an element of a class, interface or trait.&#10;Deals with comments, PHPDocs and spaces above the element with respect to the position of the&#10;element within the class, interface or trait.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classStartIndex&lt;/b&gt;: index of the class Token the element is in&#10;    int &lt;b&gt;$elementIndex&lt;/b&gt;: index of the element to fix;;d4,232;;b3,0;;m0;;eTokens $tokens;;pint $classStartIndex;;pint $elementIndex;;p">
</treenode>
<treenode node="fixSpaceBelowClassElement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassAttributesSeparationFixer.php;f12;187;5;202;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSpaceBelowClassElement(Tokens $tokens, $classEndIndex, $elementEndIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fix spacing below an element of a class, interface or trait.&#10;Deals with comments, PHPDocs and spaces above the element with respect to the position of the&#10;element within the class, interface or trait.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classEndIndex&lt;/b&gt;&#10;    int &lt;b&gt;$elementEndIndex&lt;/b&gt;;;d4,188;;b3,0;;m0;;eTokens $tokens;;pint $classEndIndex;;pint $elementEndIndex;;p">
</treenode>
<treenode node="fixSpaceBelowClassMethod;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassAttributesSeparationFixer.php;f12;214;5;219;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSpaceBelowClassMethod(Tokens $tokens, $classEndIndex, $elementEndIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fix spacing below a method of a class or trait.&#10;Deals with comments, PHPDocs and spaces above the method with respect to the position of the&#10;method within the class or trait.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classEndIndex&lt;/b&gt;&#10;    int &lt;b&gt;$elementEndIndex&lt;/b&gt;;;d4,215;;b3,0;;m0;;eTokens $tokens;;pint $classEndIndex;;pint $elementEndIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassAttributesSeparationFixer.php;f11;58;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="getLineBreakCount;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassAttributesSeparationFixer.php;f12;360;5;368;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLineBreakCount(Tokens $tokens, $whiteSpaceStartIndex, $whiteSpaceEndIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$whiteSpaceStartIndex&lt;/b&gt;&#10;    int &lt;b&gt;$whiteSpaceEndIndex&lt;/b&gt;;;d4,361;;b3,0;;m0;;eTokens $tokens;;pint $whiteSpaceStartIndex;;pint $whiteSpaceEndIndex;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassAttributesSeparationFixer.php;f11;106;5;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,107;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassAttributesSeparationFixer.php;f11;116;5;119;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,117;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="ClassConstantTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ClassConstantTransformer.php;f6;26;1;63;;;;vpos;;v;;aAbstractTransformer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ClassConstantTransformer extends AbstractTransformer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform `class` class&apos; constant from T_CLASS into CT::T_CLASS_CONSTANT.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ClassConstantTransformer.php;f11;31;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ClassConstantTransformer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredPhpVersionId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ClassConstantTransformer.php;f11;47;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    process(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
</treenode>
<treenode node="ClassDefinitionFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassDefinitionFixer.php;f6;33;1;447;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ClassDefinitionFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for part of the rules defined in PSR2 ¶4.1 Extends and Implements and PSR12 ¶8. Anonymous Classes.&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,34;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassDefinitionFixer.php;f14;110;5;118;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,111;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassDefinitionFixer.php;f14;123;5;148;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,124;;b2,0;;m0;;e">
</treenode>
<treenode node="fixClassyDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassDefinitionFixer.php;f12;154;5;195;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixClassyDefinition(Tokens $tokens, $classyIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classyIndex&lt;/b&gt;: Class definition token start index;;d4,155;;b3,0;;m0;;eTokens $tokens;;pint $classyIndex;;p">
</treenode>
<treenode node="fixClassyDefinitionExtends;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassDefinitionFixer.php;f12;204;5;220;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixClassyDefinitionExtends(Tokens $tokens, $classOpenIndex, array $classExtendsInfo)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classOpenIndex&lt;/b&gt;&#10;    array &lt;b&gt;$classExtendsInfo&lt;/b&gt;;;d4,205;;b3,0;;m0;;eTokens $tokens;;pint $classOpenIndex;;parray $classExtendsInfo;;p">
</treenode>
<treenode node="fixClassyDefinitionImplements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassDefinitionFixer.php;f12;229;5;245;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixClassyDefinitionImplements(Tokens $tokens, $classOpenIndex, array $classImplementsInfo)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classOpenIndex&lt;/b&gt;&#10;    array &lt;b&gt;$classImplementsInfo&lt;/b&gt;;;d4,230;;b3,0;;m0;;eTokens $tokens;;pint $classOpenIndex;;parray $classImplementsInfo;;p">
</treenode>
<treenode node="fixClassyDefinitionOpenSpacing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassDefinitionFixer.php;f12;253;5;283;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixClassyDefinitionOpenSpacing(Tokens $tokens, array $classDefInfo)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    array &lt;b&gt;$classDefInfo&lt;/b&gt;;;d4,254;;b3,0;;m0;;eTokens $tokens;;parray $classDefInfo;;p">
</treenode>
<treenode node="getClassyDefinitionInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassDefinitionFixer.php;f12;291;5;321;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassyDefinitionInfo(Tokens $tokens, $classyIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classyIndex&lt;/b&gt;;;d4,292;;b3,0;;m0;;eTokens $tokens;;pint $classyIndex;;p">
</treenode>
<treenode node="getClassyInheritanceInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassDefinitionFixer.php;f12;330;5;349;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassyInheritanceInfo(Tokens $tokens, $startIndex, $label)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    string &lt;b&gt;$label&lt;/b&gt;;;d4,331;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pstring $label;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassDefinitionFixer.php;f11;38;5;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassDefinitionFixer.php;f11;102;5;105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,103;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="makeClassyDefinitionSingleLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassDefinitionFixer.php;f12;356;5;404;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    makeClassyDefinitionSingleLine(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,357;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="makeClassyInheritancePartMultiLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ClassDefinitionFixer.php;f12;411;5;446;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    makeClassyInheritancePartMultiLine(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,412;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
</treenode>
<treenode node="ClassKeywordRemoveFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ClassKeywordRemoveFixer.php;f6;25;1;251;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ClassKeywordRemoveFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Sullivan Senechal &lt;soullivaneuh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ClassKeywordRemoveFixer.php;f14;63;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,64;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ClassKeywordRemoveFixer.php;f11;35;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ClassKeywordRemoveFixer.php;f11;55;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="makeClassFQN;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ClassKeywordRemoveFixer.php;f12;231;5;250;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    makeClassFQN($classImport, $classString)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    false|string &lt;b&gt;$classImport&lt;/b&gt;&#10;    string &lt;b&gt;$classString&lt;/b&gt;;;d4,232;;b3,0;;m0;;efalse|string $classImport;;pstring $classString;;p">
</treenode>
<treenode node="replaceClassKeyword;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ClassKeywordRemoveFixer.php;f12;173;5;223;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    replaceClassKeyword(Tokens $tokens, $classIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classIndex&lt;/b&gt;;;d4,174;;b3,0;;m0;;eTokens $tokens;;pint $classIndex;;p">
</treenode>
<treenode node="replaceClassKeywords;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ClassKeywordRemoveFixer.php;f12;76;5;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    replaceClassKeywords(Tokens $tokens, $namespaceNumber = -1)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replaces ::class keyword, namespace by namespace.&#10;It uses recursive method to get rid of token index changes.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$namespaceNumber&lt;/b&gt;;;d4,77;;b3,0;;m0;;eTokens $tokens;;pint $namespaceNumber;;p">
</treenode>
<treenode node="replaceClassKeywordsSection;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ClassKeywordRemoveFixer.php;f12;160;5;167;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    replaceClassKeywordsSection(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,161;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="storeImports;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ClassKeywordRemoveFixer.php;f12;107;5;153;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    storeImports(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,108;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
</treenode>
<treenode node="ClassLoader;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f0;42;1;434;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ClassLoader&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ClassLoader implements a PSR-0, PSR-4 and classmap class loader.&#10;$loader = new \Composer\Autoload\ClassLoader();s&#10;// register classes with namespaces&#10;$loader-&gt;add(&apos;Symfony\Component&apos;, __DIR__.&apos;/component&apos;);s&#10;$loader-&gt;add(&apos;Symfony&apos;,           __DIR__.&apos;/framework&apos;);s&#10;// activate the autoloader&#10;$loader-&gt;register();s&#10;// to enable searching the include path (eg. for PEAR packages)&#10;$loader-&gt;setUseIncludePath(true);s&#10;In this example, if you try to use a class in the Symfony\Component&#10;namespace or one of its children (Symfony\Component\Console for instance),&#10;the autoloader will first look for the class under the component/&#10;directory, and it will then fallback to the framework/ directory if not&#10;found before giving up.&#10;This class is loosely based on the Symfony UniversalClassLoader.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Jordi Boggiano &lt;j.boggiano&#10;&lt;b&gt;seld&lt;/b&gt;: .be&gt;&#10;&lt;b&gt;see&lt;/b&gt;: http://www.php-fig.org/psr/psr-0/&#10;&lt;b&gt;see&lt;/b&gt;: http://www.php-fig.org/psr/psr-4/;;d0,43;;b0,0;;m0;;e">
<treenode node="add;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;108;5;143;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    add($prefix, $paths, $prepend = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Registers a set of PSR-0 directories for a given prefix, either&#10;appending or prepending to the ones previously set for this prefix.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$prefix&lt;/b&gt;: The prefix&#10;    array|string &lt;b&gt;$paths&lt;/b&gt;: The PSR-0 root directories&#10;    bool &lt;b&gt;$prepend&lt;/b&gt;: Whether to prepend the directories;;d4,109;;b1,0;;m0;;estring $prefix;;parray|string $paths;;pbool $prepend;;p">
</treenode>
<treenode node="addClassMap;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;91;5;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addClassMap(array $classMap)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$classMap&lt;/b&gt;: Class to filename map;;d4,92;;b1,0;;m0;;earray $classMap;;p">
</treenode>
<treenode node="addPsr4;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;155;5;191;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addPsr4($prefix, $paths, $prepend = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Registers a set of PSR-4 directories for a given namespace, either&#10;appending or prepending to the ones previously set for this namespace.&#10;&lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$prefix&lt;/b&gt;: The prefix/namespace, with trailing &apos;\\&apos;&#10;    array|string &lt;b&gt;$paths&lt;/b&gt;: The PSR-4 base directories&#10;    bool &lt;b&gt;$prepend&lt;/b&gt;: Whether to prepend the directories;;d4,156;;b1,0;;m0;;estring $prefix;;parray|string $paths;;pbool $prepend;;p">
</treenode>
<treenode node="findFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;334;5;367;;;;vpos;;v;;astring|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findFile($class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds the path to the file where the class is defined.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$class&lt;/b&gt;: The name of the class&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The path if found, false otherwise;;d4,335;;b1,0;;m0;;estring $class;;p">
</treenode>
<treenode node="findFileWithExtension;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f12;369;5;433;;;;vpos;;v;;a;;r;;d4,370;;b3,0;;m0;;eclass;;pext;;p">
</treenode>
<treenode node="getApcuPrefix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;289;5;292;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getApcuPrefix()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The APCu prefix in use, or null if APCu caching is not enabled.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,290;;b1,0;;m0;;e">
</treenode>
<treenode node="getClassMap;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;83;5;86;;;;vpos;;v;;a;;r;;d4,84;;b1,0;;m0;;e">
</treenode>
<treenode node="getFallbackDirs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;73;5;76;;;;vpos;;v;;a;;r;;d4,74;;b1,0;;m0;;e">
</treenode>
<treenode node="getFallbackDirsPsr4;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;78;5;81;;;;vpos;;v;;a;;r;;d4,79;;b1,0;;m0;;e">
</treenode>
<treenode node="getPrefixes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;59;5;66;;;;vpos;;v;;a;;r;;d4,60;;b1,0;;m0;;e">
</treenode>
<treenode node="getPrefixesPsr4;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;68;5;71;;;;vpos;;v;;a;;r;;d4,69;;b1,0;;m0;;e">
</treenode>
<treenode node="getUseIncludePath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;248;5;251;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUseIncludePath()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Can be used to check if the autoloader uses the include path to check&#10;for classes.;;d4,249;;b1,0;;m0;;e">
</treenode>
<treenode node="isClassMapAuthoritative;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;269;5;272;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isClassMapAuthoritative()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Should class lookup fail if not found in the current class map?;;d4,270;;b1,0;;m0;;e">
</treenode>
<treenode node="loadClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;318;5;325;;;;vpos;;v;;abool|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    loadClass($class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Loads the given class or interface.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$class&lt;/b&gt;: The name of the class&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   True if loaded, null otherwise;;d4,319;;b1,0;;m0;;estring $class;;p">
</treenode>
<treenode node="register;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;299;5;302;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    register($prepend = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Registers this instance as an autoloader.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$prepend&lt;/b&gt;: Whether to prepend the autoloader or not;;d4,300;;b1,0;;m0;;ebool $prepend;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;200;5;207;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    set($prefix, $paths)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Registers a set of PSR-0 directories for a given prefix,&#10;replacing any others previously set for this prefix.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$prefix&lt;/b&gt;: The prefix&#10;    array|string &lt;b&gt;$paths&lt;/b&gt;: The PSR-0 base directories;;d4,201;;b1,0;;m0;;estring $prefix;;parray|string $paths;;p">
</treenode>
<treenode node="setApcuPrefix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;279;5;282;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setApcuPrefix($apcuPrefix)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    APCu prefix to use to cache found/not-found classes, if the extension is enabled.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$apcuPrefix&lt;/b&gt;;;d4,280;;b1,0;;m0;;estring|null $apcuPrefix;;p">
</treenode>
<treenode node="setClassMapAuthoritative;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;259;5;262;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setClassMapAuthoritative($classMapAuthoritative)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Turns off searching the prefix and fallback directories for classes&#10;that have not been registered with the class map.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$classMapAuthoritative&lt;/b&gt;;;d4,260;;b1,0;;m0;;ebool $classMapAuthoritative;;p">
</treenode>
<treenode node="setPsr4;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;218;5;230;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPsr4($prefix, $paths)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Registers a set of PSR-4 directories for a given namespace,&#10;replacing any others previously set for this namespace.&#10;&lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$prefix&lt;/b&gt;: The prefix/namespace, with trailing &apos;\\&apos;&#10;    array|string &lt;b&gt;$paths&lt;/b&gt;: The PSR-4 base directories;;d4,219;;b1,0;;m0;;estring $prefix;;parray|string $paths;;p">
</treenode>
<treenode node="setUseIncludePath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;237;5;240;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setUseIncludePath($useIncludePath)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Turns on searching the include path for class files.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$useIncludePath&lt;/b&gt;;;d4,238;;b1,0;;m0;;ebool $useIncludePath;;p">
</treenode>
<treenode node="unregister;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f11;307;5;310;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    unregister()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unregisters this instance as an autoloader.;;d4,308;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ClassThatInheritFinder;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\ClassThatInheritFinder.php;f0;15;1;24;;;;vpos;;v;;aFinder;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="sortByName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\ClassThatInheritFinder.php;f11;20;5;23;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortByName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this;;d4,21;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="CodeHasher;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CodeHasher.php;f6;19;1;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CodeHasher&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CodeHasher.php;f12;21;5;24;;;;vpos;;v;;a;;r;;d4,22;;b3,0;;m0;;e">
</treenode>
<treenode node="calculateCodeHash;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\CodeHasher.php;f18;33;5;36;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calculateCodeHash($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculate hash for code.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;;;d4,34;;b1,5;;m0;;estring $code;;p">
</treenode>
</treenode>
<treenode node="CodeSample;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\CodeSample.php;f6;17;1;54;;;;vpos;;v;;aCodeSampleInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CodeSample implements CodeSampleInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\CodeSample.php;f11;33;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($code, array $configuration = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;&#10;    null|array &lt;b&gt;$configuration&lt;/b&gt;;;d4,34;;b1,0;;m0;;estring $code;;pnull|array $configuration;;p">
</treenode>
<treenode node="getCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\CodeSample.php;f11;42;5;45;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCode()&#10;;;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="getConfiguration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\CodeSample.php;f11;50;5;53;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getConfiguration()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |array;;d4,51;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="CombineConsecutiveIssetsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveIssetsFixer.php;f6;23;1;163;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CombineConsecutiveIssetsFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveIssetsFixer.php;f14;56;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="clearTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveIssetsFixer.php;f12;107;5;112;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearTokens(Tokens $tokens, array $indexes)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int[] &lt;b&gt;$indexes&lt;/b&gt;;;d4,108;;b3,0;;m0;;eTokens $tokens;;pint[] $indexes;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveIssetsFixer.php;f11;28;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="getIssetInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveIssetsFixer.php;f12;120;5;145;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIssetInfo(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: of T_ISSET&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] indexes of meaningful tokens belonging to the isset statement;;d4,121;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveIssetsFixer.php;f11;39;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="getTokenClones;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveIssetsFixer.php;f12;153;5;162;;;;vpos;;v;;aToken;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTokenClones(Tokens $tokens, array $indexes)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int[] &lt;b&gt;$indexes&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,154;;b3,0;;m0;;eTokens $tokens;;pint[] $indexes;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveIssetsFixer.php;f11;48;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="CombineConsecutiveUnsetsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveUnsetsFixer.php;f6;23;1;191;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CombineConsecutiveUnsetsFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveUnsetsFixer.php;f14;56;5;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="clearOffsetTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveUnsetsFixer.php;f12;105;5;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearOffsetTokens(Tokens $tokens, $offset, array $indices)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$offset&lt;/b&gt;&#10;    int[] &lt;b&gt;$indices&lt;/b&gt;;;d4,106;;b3,0;;m0;;eTokens $tokens;;pint $offset;;pint[] $indices;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveUnsetsFixer.php;f11;28;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="getPreviousUnsetCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveUnsetsFixer.php;f12;128;5;164;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPreviousUnsetCall(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Find a previous call to unset directly before the index.&#10;Returns an array with&#10;* unset index&#10;* opening brace index&#10;* closing brace index&#10;* end semicolon index&#10;Or the index to where the method looked for an call.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int[];;d4,129;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveUnsetsFixer.php;f11;39;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveUnsetsFixer.php;f11;48;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="moveTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\CombineConsecutiveUnsetsFixer.php;f12;174;5;190;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    moveTokens(Tokens $tokens, $start, $end, $to)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;: Index previous of the first token to move&#10;    int &lt;b&gt;$end&lt;/b&gt;: Index of the last token to move&#10;    int &lt;b&gt;$to&lt;/b&gt;: Upper boundary index&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Number of tokens inserted;;d4,175;;b3,0;;m0;;eTokens $tokens;;pint $start;;pint $end;;pint $to;;p">
</treenode>
</treenode>
<treenode node="CombineNestedDirnameFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\CombineNestedDirnameFixer.php;f6;25;1;239;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CombineNestedDirnameFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gregor Harlan;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\CombineNestedDirnameFixer.php;f14;74;5;120;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,75;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="combineDirnames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\CombineNestedDirnameFixer.php;f12;211;5;238;;;;vpos;;v;;a;;r;;d4,212;;b3,0;;m0;;etokens;;pdirnameInfoArray;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\CombineNestedDirnameFixer.php;f11;30;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getDirnameInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\CombineNestedDirnameFixer.php;f12;129;5;209;;;;vpos;;v;;aarray|bool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDirnameInfo(Tokens $tokens, $index, $firstArgumentEndIndex = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: Index of `dirname`&#10;    null|int &lt;b&gt;$firstArgumentEndIndex&lt;/b&gt;: Index of last token of first argument of `dirname` call&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   `false` when it is not a (supported) `dirname` call, an array with info about the dirname call otherwise;;d4,130;;b3,0;;m0;;eTokens $tokens;;pint $index;;pnull|int $firstArgumentEndIndex;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\CombineNestedDirnameFixer.php;f11;64;5;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,65;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\CombineNestedDirnameFixer.php;f11;48;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\CombineNestedDirnameFixer.php;f11;56;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Command;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f0;29;1;657;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Command&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Base class for all commands.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;68;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $name = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: LogicException When the command name is empty&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$name&lt;/b&gt;: The name of the command;s passing null means it must be set in configure();;d4,69;;b1,0;;m0;;estring|null $name;;p">
</treenode>
<treenode node="addArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;375;5;380;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addArgument($name, $mode = null, $description = &apos;&apos;, $default = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds an argument.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When argument mode is not valid&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The argument name&#10;    int|null &lt;b&gt;$mode&lt;/b&gt;: The argument mode: InputArgument::REQUIRED or InputArgument::OPTIONAL&#10;    string &lt;b&gt;$description&lt;/b&gt;: A description text&#10;    string|string[]|null &lt;b&gt;$default&lt;/b&gt;: The default value (for InputArgument::OPTIONAL mode only);;d4,376;;b1,0;;m0;;estring $name;;pint|null $mode;;pstring $description;;pstring|string[]|null $default;;p">
</treenode>
<treenode node="addOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;395;5;400;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addOption($name, $shortcut = null, $mode = null, $description = &apos;&apos;, $default = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds an option.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException If option mode is invalid or incompatible&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The option name&#10;    string|array|null &lt;b&gt;$shortcut&lt;/b&gt;: The shortcuts, can be null, a string of shortcuts delimited by | or an array of shortcuts&#10;    int|null &lt;b&gt;$mode&lt;/b&gt;: The option mode: One of the InputOption::VALUE_* constants&#10;    string &lt;b&gt;$description&lt;/b&gt;: A description text&#10;    string|string[]|int|bool|null &lt;b&gt;$default&lt;/b&gt;: The default value (must be null for InputOption::VALUE_NONE);;d4,396;;b1,0;;m0;;estring $name;;pstring|array|null $shortcut;;pint|null $mode;;pstring $description;;pstring|string[]|int|bool|null $default;;p">
</treenode>
<treenode node="addUsage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;604;5;613;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addUsage($usage)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add a command usage example.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$usage&lt;/b&gt;: The usage, it&apos;ll be prefixed with the command name;;d4,605;;b1,0;;m0;;estring $usage;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f14;140;5;142;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Configures the current command.;;d4,141;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f14;158;5;161;;;;vpos;;v;;aint|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    execute(InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Executes the current command.&#10;This method is not abstract because you can use this class&#10;as a concrete class. In this case, instead of defining the&#10;execute() method, you set the code to execute by passing&#10;a Closure to the setCode() method.&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException When this abstract method is not implemented&#10;&lt;b&gt;see&lt;/b&gt;: setCode()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   null or 0 if everything went fine, or an error code;;d4,159;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="getAliases;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;574;5;577;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAliases()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the aliases for the command.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of aliases for the command;;d4,575;;b1,0;;m0;;e">
</treenode>
<treenode node="getApplication;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;119;5;122;;;;vpos;;v;;aApplication|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getApplication()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the application instance for this command.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An Application instance;;d4,120;;b1,0;;m0;;e">
</treenode>
<treenode node="getDefaultName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f18;55;5;61;;;;vpos;;v;;astring|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefaultName()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The default command name or null when no default name is set;;d4,56;;b1,5;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;339;5;346;;;;vpos;;v;;aInputDefinition;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the InputDefinition attached to this Command.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An InputDefinition instance;;d4,340;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;493;5;496;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDescription()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the description for the command.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The description for the command;;d4,494;;b1,0;;m0;;e">
</treenode>
<treenode node="getHelp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;517;5;520;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHelp()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the help for the command.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The help for the command;;d4,518;;b1,0;;m0;;e">
</treenode>
<treenode node="getHelper;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;635;5;642;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHelper($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets a helper instance by name.&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException           if no HelperSet is defined&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException if the helper is not defined&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The helper name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The helper value;;d4,636;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="getHelperSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;109;5;112;;;;vpos;;v;;aHelperSet|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHelperSet()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the helper set.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A HelperSet instance;;d4,110;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;449;5;452;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the command name.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,450;;b1,0;;m0;;e">
</treenode>
<treenode node="getNativeDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;358;5;361;;;;vpos;;v;;aInputDefinition;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNativeDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the InputDefinition to be used to create representations of this Command.&#10;Can be overridden to provide the original command representation when it would otherwise&#10;be changed by merging with the application InputDefinition.&#10;This method is not part of public API and should not be used directly.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An InputDefinition instance;;d4,359;;b1,0;;m0;;e">
</treenode>
<treenode node="getProcessedHelp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;528;5;543;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getProcessedHelp()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the processed help for the command replacing the %command.name% and&#10;%command.full_name% patterns with the real values dynamically.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The processed help for the command;;d4,529;;b1,0;;m0;;e">
</treenode>
<treenode node="getSynopsis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;586;5;595;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSynopsis($short = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the synopsis for the command.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$short&lt;/b&gt;: Whether to show the short version of the synopsis (with options folded) or not&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The synopsis;;d4,587;;b1,0;;m0;;ebool $short;;p">
</treenode>
<treenode node="getUsages;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;620;5;623;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUsages()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns alternative usages of the command.;;d4,621;;b1,0;;m0;;e">
</treenode>
<treenode node="ignoreValidationErrors;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;84;5;87;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ignoreValidationErrors()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Ignores validation errors.&#10;This is mainly useful for the help command.;;d4,85;;b1,0;;m0;;e">
</treenode>
<treenode node="initialize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f14;184;5;186;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    initialize(InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Initializes the command after the input has been bound and before the input&#10;is validated.&#10;This is mainly useful when a lot of commands extends one main command&#10;where some things need to be initialized based on the input arguments and options.&#10;&lt;b&gt;see&lt;/b&gt;: InputInterface::bind()&#10;&lt;b&gt;see&lt;/b&gt;: InputInterface::validate();;d4,185;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="interact;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f14;170;5;172;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interact(InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Interacts with the user.&#10;This method is executed before the InputDefinition is validated.&#10;This means that this is the only place where the command can&#10;interactively ask for values of missing required arguments.;;d4,171;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="isEnabled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;132;5;135;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isEnabled()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks whether the command is enabled or not in the current environment.&#10;Override this to check for x or y and return false if the command can not&#10;run properly under the current conditions.;;d4,133;;b1,0;;m0;;e">
</treenode>
<treenode node="isHidden;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;469;5;472;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isHidden()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   whether the command should be publicly shown or not;;d4,470;;b1,0;;m0;;e">
</treenode>
<treenode node="mergeApplicationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;295;5;312;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mergeApplicationDefinition($mergeArgs = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Merges the application definition with the command definition.&#10;This method is not part of public API and should not be used directly.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$mergeArgs&lt;/b&gt;: Whether to merge or not the Application definition arguments to Command definition arguments;;d4,296;;b1,0;;m0;;ebool $mergeArgs;;p">
</treenode>
<treenode node="run;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;202;5;258;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    run(InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runs the command.&#10;The code to execute is either defined directly with the&#10;setCode() method or by overriding the execute() method&#10;in a sub-class.&#10;&lt;b&gt;throws&lt;/b&gt;: \Exception When binding input fails. Bypass this by calling {&#10;&lt;b&gt;link&lt;/b&gt;: ignoreValidationErrors()}.&#10;&lt;b&gt;see&lt;/b&gt;: setCode()&#10;&lt;b&gt;see&lt;/b&gt;: execute()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The command exit code;;d4,203;;b1,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="setAliases;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;554;5;567;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAliases($aliases)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the aliases for the command.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When an alias is invalid&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$aliases&lt;/b&gt;: An array of aliases for the command;;d4,555;;b1,0;;m0;;estring[] $aliases;;p">
</treenode>
<treenode node="setApplication;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;89;5;97;;;;vpos;;v;;a;;r;;d4,90;;b1,0;;m0;;eapplication;;p">
</treenode>
<treenode node="setCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;274;5;286;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCode(callable $code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the code to execute when running this command.&#10;If this method is used, it overrides the code defined&#10;in the execute() method.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException&#10;&lt;b&gt;see&lt;/b&gt;: execute()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    callable &lt;b&gt;$code&lt;/b&gt;: A callable(InputInterface $input, OutputInterface $output);;d4,275;;b1,0;;m0;;ecallable $code;;p">
</treenode>
<treenode node="setDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;321;5;332;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDefinition($definition)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets an array of argument and option instances.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array|InputDefinition &lt;b&gt;$definition&lt;/b&gt;: An array of argument and option instances or a definition instance;;d4,322;;b1,0;;m0;;earray|InputDefinition $definition;;p">
</treenode>
<treenode node="setDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;481;5;486;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDescription($description)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the description for the command.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$description&lt;/b&gt;: The description for the command;;d4,482;;b1,0;;m0;;estring $description;;p">
</treenode>
<treenode node="setHelp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;505;5;510;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHelp($help)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the help for the command.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$help&lt;/b&gt;: The help for the command;;d4,506;;b1,0;;m0;;estring $help;;p">
</treenode>
<treenode node="setHelperSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;99;5;102;;;;vpos;;v;;a;;r;;d4,100;;b1,0;;m0;;ehelperSet;;p">
</treenode>
<treenode node="setHidden;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;459;5;464;;;;vpos;;v;;aCommand;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHidden($hidden)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$hidden&lt;/b&gt;: Whether or not the command should be hidden from the list of commands&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The current instance;;d4,460;;b1,0;;m0;;ebool $hidden;;p">
</treenode>
<treenode node="setName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;416;5;423;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setName($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the name of the command.&#10;This method can set both the namespace and the name if&#10;you separate them by a colon (:)&#10;$command-&gt;setName(&apos;foo:bar&apos;);s&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When the name is invalid&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The command name;;d4,417;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="setProcessTitle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f11;437;5;442;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setProcessTitle($title)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the process title of the command.&#10;This feature should be used only when creating a long process command,&#10;like a daemon.&#10;PHP 5.5+ or the proctitle PECL library is required&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$title&lt;/b&gt;: The process title;;d4,438;;b1,0;;m0;;estring $title;;p">
</treenode>
<treenode node="validateName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\Command.php;f12;651;5;656;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    validateName(string $name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Validates a command name.&#10;It must be non-empty and parts can optionally be separated by &quot;:&quot;.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When the name is invalid;;d4,652;;b3,0;;m0;;ename;;p">
</treenode>
</treenode>
<treenode node="CommandNotFoundException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Exception\CommandNotFoundException.php;f0;18;1;42;;;;vpos;;v;;aInvalidArgumentException;;cExceptionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CommandNotFoundException extends \InvalidArgumentException implements ExceptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Represents an incorrect command name typed in the console.&#10;&lt;b&gt;author&lt;/b&gt;: Jérôme Tamarelle &lt;jerome&#10;&lt;b&gt;tamarelle&lt;/b&gt;: .net&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Exception\CommandNotFoundException.php;f11;28;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $message, array $alternatives = [], int $code = 0, \Throwable $previous = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;: Exception message to throw&#10;    array &lt;b&gt;$alternatives&lt;/b&gt;: List of similar defined names&#10;    int &lt;b&gt;$code&lt;/b&gt;: Exception code&#10;    \Throwable &lt;b&gt;$previous&lt;/b&gt;: Previous exception used for the exception chaining;;d4,29;;b1,0;;m0;;estring $message;;parray $alternatives;;pint $code;;p\Throwable $previous;;p">
</treenode>
<treenode node="getAlternatives;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Exception\CommandNotFoundException.php;f11;38;5;41;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAlternatives()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A list of similar defined names;;d4,39;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="CommandTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f0;26;1;414;;;;vpos;;v;;aTestCase;;c;;r;;d0,27;;b0,0;;m0;;e">
<treenode node="callableMethodCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;410;5;413;;;;vpos;;v;;a;;r;;d4,411;;b1,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="createClosure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f19;393;5;398;;;;vpos;;v;;a;;r;;d4,394;;b3,5;;m0;;e">
</treenode>
<treenode node="getSetCodeBindToClosureTests;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;358;5;364;;;;vpos;;v;;a;;r;;d4,359;;b1,0;;m0;;e">
</treenode>
<treenode node="provideInvalidCommandNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;124;5;130;;;;vpos;;v;;a;;r;;d4,125;;b1,0;;m0;;e">
</treenode>
<treenode node="setUpBeforeClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f18;30;5;34;;;;vpos;;v;;a void;;r;;d4,31;;b1,5;;m0;;e">
</treenode>
<treenode node="testAddArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;77;5;83;;;;vpos;;v;;a;;r;;d4,78;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddGetUsages;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;196;5;203;;;;vpos;;v;;a;;r;;d4,197;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;85;5;91;;;;vpos;;v;;a;;r;;d4,86;;b1,0;;m0;;e">
</treenode>
<treenode node="testCommandNameCannotBeEmpty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;42;5;47;;;;vpos;;v;;a;;r;;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;36;5;40;;;;vpos;;v;;a;;r;;d4,37;;b1,0;;m0;;e">
</treenode>
<treenode node="testExecuteMethodNeedsToBeOverridden;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;285;5;291;;;;vpos;;v;;a;;r;;d4,286;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetHelper;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;205;5;212;;;;vpos;;v;;a;;r;;d4,206;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetHelperWithoutHelperSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;214;5;220;;;;vpos;;v;;a;;r;;d4,215;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetNamespaceGetNameSetName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;100;5;110;;;;vpos;;v;;a;;r;;d4,101;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetProcessedHelp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;152;5;170;;;;vpos;;v;;a;;r;;d4,153;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetSetAliases;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;172;5;179;;;;vpos;;v;;a;;r;;d4,173;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetSetDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;132;5;139;;;;vpos;;v;;a;;r;;d4,133;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetSetHelp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;141;5;150;;;;vpos;;v;;a;;r;;d4,142;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetSynopsis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;188;5;194;;;;vpos;;v;;a;;r;;d4,189;;b1,0;;m0;;e">
</treenode>
<treenode node="testInvalidCommandNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;115;5;122;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testInvalidCommandNames($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideInvalidCommandNames;;d4,116;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="testMergeApplicationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;222;5;242;;;;vpos;;v;;a;;r;;d4,223;;b1,0;;m0;;e">
</treenode>
<treenode node="testMergeApplicationDefinitionWithoutArgsThenWithArgsAddsArgs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;244;5;265;;;;vpos;;v;;a;;r;;d4,245;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunInteractive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;267;5;274;;;;vpos;;v;;a;;r;;d4,268;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunNonInteractive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;276;5;283;;;;vpos;;v;;a;;r;;d4,277;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunReturnsAlwaysInteger;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;325;5;330;;;;vpos;;v;;a;;r;;d4,326;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunReturnsIntegerExitCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;302;5;314;;;;vpos;;v;;a;;r;;d4,303;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunWithApplication;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;316;5;323;;;;vpos;;v;;a;;r;;d4,317;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunWithInvalidOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;293;5;300;;;;vpos;;v;;a;;r;;d4,294;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunWithProcessTitle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;332;5;344;;;;vpos;;v;;a;;r;;d4,333;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetAliasesNull;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;181;5;186;;;;vpos;;v;;a;;r;;d4,182;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetApplication;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;49;5;56;;;;vpos;;v;;a;;r;;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetApplicationNull;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;58;5;63;;;;vpos;;v;;a;;r;;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;346;5;356;;;;vpos;;v;;a;;r;;d4,347;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetCodeBindToClosure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;369;5;381;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testSetCodeBindToClosure($previouslyBound, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getSetCodeBindToClosureTests;;d4,370;;b1,0;;m0;;epreviouslyBound;;pexpected;;p">
</treenode>
<treenode node="testSetCodeWithNonClosureCallable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;400;5;408;;;;vpos;;v;;a;;r;;d4,401;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetCodeWithStaticClosure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;383;5;391;;;;vpos;;v;;a;;r;;d4,384;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetGetDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;65;5;75;;;;vpos;;v;;a;;r;;d4,66;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetHidden;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f11;93;5;98;;;;vpos;;v;;a;;r;;d4,94;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="CommandTester;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\CommandTester.php;f0;22;1;77;;;;vpos;;v;;aTesterTrait;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CommandTester&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Eases the testing of console commands.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Robin Chalas &lt;robin.chalas&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\CommandTester.php;f11;30;5;33;;;;vpos;;v;;a;;r;;d4,31;;b1,0;;m0;;ecommand;;p">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\CommandTester.php;f11;50;5;76;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    execute(array $input, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Executes the command.&#10;Available execution options:&#10;* interactive:               Sets the input interactive flag&#10;* decorated:                 Sets the output decorated flag&#10;* verbosity:                 Sets the output verbosity flag&#10;* capture_stderr_separately: Make output of stdOut and stdErr separately available&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$input&lt;/b&gt;: An array of command arguments and options&#10;    array &lt;b&gt;$options&lt;/b&gt;: An array of execution options&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The command exit code;;d4,51;;b1,0;;m0;;earray $input;;parray $options;;p">
</treenode>
</treenode>
<treenode node="CommandTesterTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f0;24;1;230;;;;vpos;;v;;aTestCase;;c;;r;;d0,25;;b0,0;;m0;;e">
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f14;29;5;38;;;;vpos;;v;;a void;;r;;d4,30;;b2,0;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f14;40;5;44;;;;vpos;;v;;a void;;r;;d4,41;;b2,0;;m0;;e">
</treenode>
<treenode node="testCommandFromApplication;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f11;74;5;88;;;;vpos;;v;;a;;r;;d4,75;;b1,0;;m0;;e">
</treenode>
<treenode node="testCommandWithDefaultInputs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f11;115;5;138;;;;vpos;;v;;a;;r;;d4,116;;b1,0;;m0;;e">
</treenode>
<treenode node="testCommandWithInputs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f11;90;5;113;;;;vpos;;v;;a;;r;;d4,91;;b1,0;;m0;;e">
</treenode>
<treenode node="testCommandWithQuestionsButNoInputs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f11;165;5;187;;;;vpos;;v;;a;;r;;d4,166;;b1,0;;m0;;e">
</treenode>
<treenode node="testCommandWithWrongInputsNumber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f11;140;5;163;;;;vpos;;v;;a;;r;;d4,141;;b1,0;;m0;;e">
</treenode>
<treenode node="testErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f11;212;5;229;;;;vpos;;v;;a;;r;;d4,213;;b1,0;;m0;;e">
</treenode>
<treenode node="testExecute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f11;46;5;51;;;;vpos;;v;;a;;r;;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDisplay;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f11;64;5;67;;;;vpos;;v;;a;;r;;d4,65;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f11;53;5;56;;;;vpos;;v;;a;;r;;d4,54;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f11;58;5;62;;;;vpos;;v;;a;;r;;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetStatusCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f11;69;5;72;;;;vpos;;v;;a;;r;;d4,70;;b1,0;;m0;;e">
</treenode>
<treenode node="testSymfonyStyleCommandWithInputs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Tester\CommandTesterTest.php;f11;189;5;210;;;;vpos;;v;;a;;r;;d4,190;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="CommentToPhpdocFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\CommentToPhpdocFixer.php;f6;27;1;190;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CommentToPhpdocFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Kuba Werlos &lt;werlos&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\CommentToPhpdocFixer.php;f14;70;5;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,71;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixComment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\CommentToPhpdocFixer.php;f12;120;5;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixComment(Tokens $tokens, $indices)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int[] &lt;b&gt;$indices&lt;/b&gt;;;d4,121;;b3,0;;m0;;eTokens $tokens;;pint[] $indices;;p">
</treenode>
<treenode node="fixCommentMultiLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\CommentToPhpdocFixer.php;f12;152;5;177;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixCommentMultiLine(Tokens $tokens, array $indices)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int[] &lt;b&gt;$indices&lt;/b&gt;;;d4,153;;b3,0;;m0;;eTokens $tokens;;pint[] $indices;;p">
</treenode>
<treenode node="fixCommentSingleLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\CommentToPhpdocFixer.php;f12;133;5;146;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixCommentSingleLine(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,134;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\CommentToPhpdocFixer.php;f11;57;5;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="getMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\CommentToPhpdocFixer.php;f12;179;5;189;;;;vpos;;v;;a;;r;;d4,180;;b3,0;;m0;;econtent;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\CommentToPhpdocFixer.php;f11;48;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\CommentToPhpdocFixer.php;f11;32;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isCommentCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\CommentToPhpdocFixer.php;f12;105;5;114;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCommentCandidate(Tokens $tokens, array $indices)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int[] &lt;b&gt;$indices&lt;/b&gt;;;d4,106;;b3,0;;m0;;eTokens $tokens;;pint[] $indices;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\CommentToPhpdocFixer.php;f11;40;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Comments;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\Comments.php;f1;3;2;21;;;;vpos;;v;;aDatabase;;c;;r;;d1,4;;b0,0;;m0;;e">
<treenode node="getCommentsFromArticle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\Comments.php;f12;5;6;20;;;;vpos;;v;;a;;r;;d5,6;;b1,0;;m0;;earticleId;;p">
</treenode>
</treenode>
<treenode node="CommentsAnalyzer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\CommentsAnalyzer.php;f6;25;1;304;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CommentsAnalyzer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Kuba Werlos &lt;werlos&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="TYPE_DOUBLE_SLASH;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\CommentsAnalyzer.php;f9;28;27;28;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="TYPE_HASH;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\CommentsAnalyzer.php;f9;27;19;27;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="TYPE_SLASH_ASTERISK;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\CommentsAnalyzer.php;f9;29;29;29;;;;vpos;;v;;a;;r3;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="getCommentBlockIndices;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\CommentsAnalyzer.php;f11;104;5;137;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommentBlockIndices(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return array of indices that are part of a comment started at given index.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: T_COMMENT index&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |array;;d4,105;;b1,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getCommentType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\CommentsAnalyzer.php;f12;275;5;286;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommentType($content)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;;;d4,276;;b3,0;;m0;;estring $content;;p">
</treenode>
<treenode node="getLineBreakCount;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\CommentsAnalyzer.php;f12;295;5;303;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLineBreakCount(Tokens $tokens, $whiteStart, $whiteEnd)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$whiteStart&lt;/b&gt;&#10;    int &lt;b&gt;$whiteEnd&lt;/b&gt;;;d4,296;;b3,0;;m0;;eTokens $tokens;;pint $whiteStart;;pint $whiteEnd;;p">
</treenode>
<treenode node="isBeforeStructuralElement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\CommentsAnalyzer.php;f11;58;5;94;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isBeforeStructuralElement(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if comment at given index precedes structural element.&#10;&lt;b&gt;see&lt;/b&gt;: https://github.com/php-fig/fig-standards/blob/master/proposed/phpdoc.md#3-definitions&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,59;;b1,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isHeaderComment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\CommentsAnalyzer.php;f11;37;5;46;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isHeaderComment(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,38;;b1,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isStructuralElement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\CommentsAnalyzer.php;f12;146;5;166;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isStructuralElement(Token $token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;see&lt;/b&gt;: https://github.com/phpDocumentor/fig-standards/blob/master/proposed/phpdoc.md#3-definitions&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Token &lt;b&gt;$token&lt;/b&gt;;;d4,147;;b3,0;;m0;;eToken $token;;p">
</treenode>
<treenode node="isValidControl;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\CommentsAnalyzer.php;f12;177;5;207;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isValidControl(Tokens $tokens, Token $docsToken, $controlIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks control structures (for, foreach, if, switch, while) for correct docblock usage.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    Token &lt;b&gt;$docsToken&lt;/b&gt;: docs Token&#10;    int &lt;b&gt;$controlIndex&lt;/b&gt;: index of control structure Token;;d4,178;;b3,0;;m0;;eTokens $tokens;;pToken $docsToken;;pint $controlIndex;;p">
</treenode>
<treenode node="isValidLanguageConstruct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\CommentsAnalyzer.php;f12;218;5;249;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isValidLanguageConstruct(Tokens $tokens, Token $docsToken, $languageConstructIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks variable assignments through `list()`, `print()` etc. calls for correct docblock usage.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    Token &lt;b&gt;$docsToken&lt;/b&gt;: docs Token&#10;    int &lt;b&gt;$languageConstructIndex&lt;/b&gt;: index of variable Token;;d4,219;;b3,0;;m0;;eTokens $tokens;;pToken $docsToken;;pint $languageConstructIndex;;p">
</treenode>
<treenode node="isValidVariable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\CommentsAnalyzer.php;f12;259;5;268;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isValidVariable(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks variable assignments for correct docblock usage.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: index of variable Token;;d4,260;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="CompactNullableTypehintFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\CompactNullableTypehintFixer.php;f6;24;1;78;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CompactNullableTypehintFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jack Cherng &lt;jfcherng&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\CompactNullableTypehintFixer.php;f14;54;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\CompactNullableTypehintFixer.php;f11;29;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\CompactNullableTypehintFixer.php;f11;46;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="Comparator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Comparator\Comparator.php;f0;18;1;97;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Comparator.php;f0;15;1;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Comparator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Comparator.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="compare;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Comparator.php;f18;104;5;109;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    compare($version1, $operator, $version2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Evaluates the expression: $version1 $operator $version2.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$version1&lt;/b&gt;&#10;    string &lt;b&gt;$operator&lt;/b&gt;&#10;    string &lt;b&gt;$version2&lt;/b&gt;;;d4,105;;b1,5;;m0;;estring $version1;;pstring $operator;;pstring $version2;;p">
</treenode>
<treenode node="equalTo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Comparator.php;f18;77;5;80;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    equalTo($version1, $version2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Evaluates the expression: $version1 == $version2.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$version1&lt;/b&gt;&#10;    string &lt;b&gt;$version2&lt;/b&gt;;;d4,78;;b1,5;;m0;;estring $version1;;pstring $version2;;p">
</treenode>
<treenode node="getOperator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Comparator\Comparator.php;f11;48;5;51;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOperator()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the comparison operator.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The operator;;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="getTarget;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Comparator\Comparator.php;f11;28;5;31;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTarget()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the target value.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The target value;;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="greaterThan;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Comparator.php;f18;25;5;28;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    greaterThan($version1, $version2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Evaluates the expression: $version1 &gt; $version2.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$version1&lt;/b&gt;&#10;    string &lt;b&gt;$version2&lt;/b&gt;;;d4,26;;b1,5;;m0;;estring $version1;;pstring $version2;;p">
</treenode>
<treenode node="greaterThanOrEqualTo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Comparator.php;f18;38;5;41;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    greaterThanOrEqualTo($version1, $version2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Evaluates the expression: $version1 &gt;= $version2.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$version1&lt;/b&gt;&#10;    string &lt;b&gt;$version2&lt;/b&gt;;;d4,39;;b1,5;;m0;;estring $version1;;pstring $version2;;p">
</treenode>
<treenode node="lessThan;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Comparator.php;f18;51;5;54;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lessThan($version1, $version2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Evaluates the expression: $version1 &lt; $version2.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$version1&lt;/b&gt;&#10;    string &lt;b&gt;$version2&lt;/b&gt;;;d4,52;;b1,5;;m0;;estring $version1;;pstring $version2;;p">
</treenode>
<treenode node="lessThanOrEqualTo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Comparator.php;f18;64;5;67;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lessThanOrEqualTo($version1, $version2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Evaluates the expression: $version1 &lt;= $version2.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$version1&lt;/b&gt;&#10;    string &lt;b&gt;$version2&lt;/b&gt;;;d4,65;;b1,5;;m0;;estring $version1;;pstring $version2;;p">
</treenode>
<treenode node="notEqualTo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Comparator.php;f18;90;5;93;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    notEqualTo($version1, $version2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Evaluates the expression: $version1 != $version2.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$version1&lt;/b&gt;&#10;    string &lt;b&gt;$version2&lt;/b&gt;;;d4,91;;b1,5;;m0;;estring $version1;;pstring $version2;;p">
</treenode>
<treenode node="setOperator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Comparator\Comparator.php;f11;60;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setOperator($operator)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the comparison operator.&#10;&lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$operator&lt;/b&gt;: A valid operator;;d4,61;;b1,0;;m0;;estring $operator;;p">
</treenode>
<treenode node="setTarget;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Comparator\Comparator.php;f11;38;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTarget($target)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the target value.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$target&lt;/b&gt;: The target value;;d4,39;;b1,0;;m0;;estring $target;;p">
</treenode>
<treenode node="test;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Comparator\Comparator.php;f11;80;5;96;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    test($test)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tests against the target.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$test&lt;/b&gt;: A test value;;d4,81;;b1,0;;m0;;emixed $test;;p">
</treenode>
</treenode>
<treenode node="ComparatorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\ComparatorTest.php;f0;16;1;64;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="getTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\ComparatorTest.php;f11;58;5;63;;;;vpos;;v;;a;;r;;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetSetOperator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\ComparatorTest.php;f11;18;5;31;;;;vpos;;v;;a;;r;;d4,19;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetSetTarget;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\ComparatorTest.php;f11;33;5;38;;;;vpos;;v;;a;;r;;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="testTest;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\ComparatorTest.php;f11;43;5;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testTest($operator, $target, $match, $noMatch)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getTestData;;d4,44;;b1,0;;m0;;eoperator;;ptarget;;pmatch;;pnoMatch;;p">
</treenode>
</treenode>
<treenode node="ComposerAutoloaderInit00c2591744aec49b360b03a92cc8f2dd;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\autoload_real.php;f0;4;1;60;;;;vpos;;v;;a;;r;;d0,5;;b0,0;;m0;;e">
<treenode node="getLoader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\autoload_real.php;f18;15;5;59;;;;vpos;;v;;a;;r;;d4,16;;b1,5;;m0;;e">
</treenode>
<treenode node="loadClassLoader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\autoload_real.php;f18;8;5;13;;;;vpos;;v;;a;;r;;d4,9;;b1,5;;m0;;eclass;;p">
</treenode>
</treenode>
<treenode node="ComposerStaticInit00c2591744aec49b360b03a92cc8f2dd;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\autoload_static.php;f0;6;1;242;;;;vpos;;v;;a;;r;;d0,7;;b0,0;;m0;;e">
<treenode node="getInitializer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\autoload_static.php;f18;233;5;241;;;;vpos;;v;;a;;r;;d4,234;;b1,5;;m0;;eloader;;p">
</treenode>
</treenode>
<treenode node="ConcatSpaceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\ConcatSpaceFixer.php;f6;27;1;153;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ConcatSpaceFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\ConcatSpaceFixer.php;f14;79;5;87;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,80;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\ConcatSpaceFixer.php;f11;34;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\ConcatSpaceFixer.php;f14;92;5;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,93;;b2,0;;m0;;e">
</treenode>
<treenode node="fixConcatenationToNoSpace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\ConcatSpaceFixer.php;f12;106;5;116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixConcatenationToNoSpace(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: index of concatenation &apos;.&apos; token;;d4,107;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixConcatenationToSingleSpace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\ConcatSpaceFixer.php;f12;122;5;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixConcatenationToSingleSpace(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: index of concatenation &apos;.&apos; token;;d4,123;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixWhiteSpaceAroundConcatToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\ConcatSpaceFixer.php;f12;133;5;152;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixWhiteSpaceAroundConcatToken(Tokens $tokens, $index, $offset)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: index of concatenation &apos;.&apos; token&#10;    int &lt;b&gt;$offset&lt;/b&gt;: 1 or -1;;d4,134;;b3,0;;m0;;eTokens $tokens;;pint $index;;pint $offset;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\ConcatSpaceFixer.php;f11;48;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\ConcatSpaceFixer.php;f11;71;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,72;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="Config;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f0;21;1;279;;;;vpos;;v;;aConfigInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Config implements ConfigInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Katsuhiro Ogawa &lt;ko.fivestar&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;36;5;39;;;;vpos;;v;;a;;r;;d4,37;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="addCustomFixer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f12;275;5;278;;;;vpos;;v;;a;;r;;d4,276;;b3,0;;m0;;efixer;;p">
</treenode>
<treenode node="create;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f18;44;5;47;;;;vpos;;v;;astatic;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    create()&#10;;;d4,45;;b1,5;;m0;;e">
</treenode>
<treenode node="getCacheFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;52;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCacheFile()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="getCustomFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;60;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomFixers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b1,0;;m0;;e">
</treenode>
<treenode node="getFinder;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;68;5;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFinder()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,69;;b1,0;;m0;;e">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;80;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormat()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,81;;b1,0;;m0;;e">
</treenode>
<treenode node="getHideProgress;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;88;5;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHideProgress()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,89;;b1,0;;m0;;e">
</treenode>
<treenode node="getIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;96;5;99;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIndent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,97;;b1,0;;m0;;e">
</treenode>
<treenode node="getLineEnding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;104;5;107;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLineEnding()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,105;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;112;5;115;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,113;;b1,0;;m0;;e">
</treenode>
<treenode node="getPhpExecutable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;120;5;123;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPhpExecutable()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,121;;b1,0;;m0;;e">
</treenode>
<treenode node="getRiskyAllowed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;128;5;131;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRiskyAllowed()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,129;;b1,0;;m0;;e">
</treenode>
<treenode node="getRules;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;136;5;139;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRules()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,137;;b1,0;;m0;;e">
</treenode>
<treenode node="getUsingCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;144;5;147;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUsingCache()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,145;;b1,0;;m0;;e">
</treenode>
<treenode node="registerCustomFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;152;5;166;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registerCustomFixers($fixers)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,153;;b1,0;;m0;;efixers;;p">
</treenode>
<treenode node="setCacheFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;171;5;176;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCacheFile($cacheFile)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,172;;b1,0;;m0;;ecacheFile;;p">
</treenode>
<treenode node="setFinder;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;181;5;193;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFinder($finder)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,182;;b1,0;;m0;;efinder;;p">
</treenode>
<treenode node="setFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;198;5;203;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFormat($format)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,199;;b1,0;;m0;;eformat;;p">
</treenode>
<treenode node="setHideProgress;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;208;5;213;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHideProgress($hideProgress)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,209;;b1,0;;m0;;ehideProgress;;p">
</treenode>
<treenode node="setIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;218;5;223;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setIndent($indent)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,219;;b1,0;;m0;;eindent;;p">
</treenode>
<treenode node="setLineEnding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;228;5;233;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLineEnding($lineEnding)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,229;;b1,0;;m0;;elineEnding;;p">
</treenode>
<treenode node="setPhpExecutable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;238;5;243;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPhpExecutable($phpExecutable)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,239;;b1,0;;m0;;ephpExecutable;;p">
</treenode>
<treenode node="setRiskyAllowed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;248;5;253;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setRiskyAllowed($isRiskyAllowed)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,249;;b1,0;;m0;;eisRiskyAllowed;;p">
</treenode>
<treenode node="setRules;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;258;5;263;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setRules(array $rules)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,259;;b1,0;;m0;;erules;;p">
</treenode>
<treenode node="setUsingCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Config.php;f11;268;5;273;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setUsingCache($usingCache)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,269;;b1,0;;m0;;eusingCache;;p">
</treenode>
</treenode>
<treenode node="ConfigurationException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Exception\ConfigurationException.php;f6;12;1;39;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\GeckoPackages\DiffOutputBuilder\ConfigurationException.php;f6;15;1;35;;;;vpos;;v;;aInvalidArgumentException;;c;;r;;d0,13;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Exception\ConfigurationException.php;f11;21;5;38;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\GeckoPackages\DiffOutputBuilder\ConfigurationException.php;f11;17;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        $option,&#10;        $expected,&#10;        $value,&#10;        $code = 0,&#10;        \Exception $previous = null&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;&#10;    string &lt;b&gt;$expected&lt;/b&gt;&#10;    mixed &lt;b&gt;$value&lt;/b&gt;&#10;    int &lt;b&gt;$code&lt;/b&gt;&#10;    null|\Exception &lt;b&gt;$previous&lt;/b&gt;;;d6,27;;b1,0;;m0;;estring $option;;pstring $expected;;pmixed $value;;pint $code;;pnull|\Exception $previous;;p">
</treenode>
</treenode>
<treenode node="ConfigurationResolver;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f6;54;1;935;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ConfigurationResolver&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The resolver that resolves configuration to use by command line options and config.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Katsuhiro Ogawa &lt;ko.fivestar&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,55;;b0,0;;m0;;e">
<treenode node="PATH_MODE_INTERSECTION;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f9;57;32;57;;;;vpos;;v;;a;;r&apos;intersection&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="PATH_MODE_OVERRIDE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f9;56;28;56;;;;vpos;;v;;a;;r&apos;override&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;157;5;170;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        ConfigInterface $config,&#10;        array $options,&#10;        $cwd,&#10;        ToolInfoInterface $toolInfo&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ConfigInterface &lt;b&gt;$config&lt;/b&gt;&#10;    array &lt;b&gt;$options&lt;/b&gt;&#10;    string &lt;b&gt;$cwd&lt;/b&gt;&#10;    ToolInfoInterface &lt;b&gt;$toolInfo&lt;/b&gt;;;d6,162;;b1,0;;m0;;eConfigInterface $config;;parray $options;;pstring $cwd;;pToolInfoInterface $toolInfo;;p">
</treenode>
<treenode node="computeConfigFiles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f12;563;5;598;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    computeConfigFiles()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Compute file candidates for config file.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,564;;b3,0;;m0;;e">
</treenode>
<treenode node="configFinderIsOverridden;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;549;5;556;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configFinderIsOverridden()&#10;;;d4,550;;b1,0;;m0;;e">
</treenode>
<treenode node="createFixerFactory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f12;603;5;614;;;;vpos;;v;;aFixerFactory;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createFixerFactory()&#10;;;d4,604;;b3,0;;m0;;e">
</treenode>
<treenode node="getCacheFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;175;5;190;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCacheFile()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,176;;b1,0;;m0;;e">
</treenode>
<treenode node="getCacheManager;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;195;5;217;;;;vpos;;v;;aCacheManagerInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCacheManager()&#10;;;d4,196;;b1,0;;m0;;e">
</treenode>
<treenode node="getConfig;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;222;5;249;;;;vpos;;v;;aConfigInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getConfig()&#10;;;d4,223;;b1,0;;m0;;e">
</treenode>
<treenode node="getConfigFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;254;5;261;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getConfigFile()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,255;;b1,0;;m0;;e">
</treenode>
<treenode node="getDiffer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;266;5;298;;;;vpos;;v;;aDifferInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDiffer()&#10;;;d4,267;;b1,0;;m0;;e">
</treenode>
<treenode node="getDirectory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;303;5;317;;;;vpos;;v;;aDirectoryInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDirectory()&#10;;;d4,304;;b1,0;;m0;;e">
</treenode>
<treenode node="getFinder;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;513;5;520;;;;vpos;;v;;a;;r;;d4,514;;b1,0;;m0;;e">
</treenode>
<treenode node="getFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;322;5;351;;;;vpos;;v;;aFixerInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFixers()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] An array of FixerInterface;;d4,323;;b1,0;;m0;;e">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f12;619;5;628;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormat()&#10;;;d4,620;;b3,0;;m0;;e">
</treenode>
<treenode node="getLinter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;356;5;363;;;;vpos;;v;;aLinterInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLinter()&#10;;;d4,357;;b1,0;;m0;;e">
</treenode>
<treenode node="getPath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;370;5;400;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPath()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns path.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,371;;b1,0;;m0;;e">
</treenode>
<treenode node="getProgress;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;407;5;445;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getProgress()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: InvalidConfigurationException;;d4,408;;b1,0;;m0;;e">
</treenode>
<treenode node="getReporter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;450;5;469;;;;vpos;;v;;aReporterInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getReporter()&#10;;;d4,451;;b1,0;;m0;;e">
</treenode>
<treenode node="getRiskyAllowed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;474;5;485;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRiskyAllowed()&#10;;;d4,475;;b1,0;;m0;;e">
</treenode>
<treenode node="getRuleSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f12;630;5;640;;;;vpos;;v;;a;;r;;d4,631;;b3,0;;m0;;e">
</treenode>
<treenode node="getRules;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;492;5;495;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRules()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns rules.;;d4,493;;b1,0;;m0;;e">
</treenode>
<treenode node="getUsingCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;500;5;511;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUsingCache()&#10;;;d4,501;;b1,0;;m0;;e">
</treenode>
<treenode node="isDryRun;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;527;5;539;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isDryRun()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns dry-run flag.;;d4,528;;b1,0;;m0;;e">
</treenode>
<treenode node="isStdIn;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f12;645;5;652;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isStdIn()&#10;;;d4,646;;b3,0;;m0;;e">
</treenode>
<treenode node="iterableToTraversable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f12;659;5;662;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    iterableToTraversable($iterable)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \Traversable&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    iterable &lt;b&gt;$iterable&lt;/b&gt;;;d4,660;;b3,0;;m0;;eiterable $iterable;;p">
</treenode>
<treenode node="parseRules;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f12;669;5;705;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseRules()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Compute rules.;;d4,670;;b3,0;;m0;;e">
</treenode>
<treenode node="resolveFinder;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f12;782;5;879;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resolveFinder()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Apply path on config instance.;;d4,783;;b3,0;;m0;;e">
</treenode>
<treenode node="resolveOptionBooleanValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f12;901;5;929;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resolveOptionBooleanValue($optionName)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$optionName&lt;/b&gt;;;d4,902;;b3,0;;m0;;estring $optionName;;p">
</treenode>
<treenode node="separatedContextLessInclude;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f19;931;5;934;;;;vpos;;v;;a;;r;;d4,932;;b3,5;;m0;;epath;;p">
</treenode>
<treenode node="setOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f12;887;5;894;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setOption($name, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set option that will be resolved.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;&#10;    mixed &lt;b&gt;$value&lt;/b&gt;;;d4,888;;b3,0;;m0;;estring $name;;pmixed $value;;p">
</treenode>
<treenode node="shouldStopOnViolation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f11;541;5;544;;;;vpos;;v;;a;;r;;d4,542;;b1,0;;m0;;e">
</treenode>
<treenode node="validateRules;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\ConfigurationResolver.php;f12;712;5;777;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    validateRules(array $rules)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: InvalidConfigurationException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$rules&lt;/b&gt;;;d4,713;;b3,0;;m0;;earray $rules;;p">
</treenode>
</treenode>
<treenode node="ConfirmationQuestion;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\ConfirmationQuestion.php;f0;18;1;58;;;;vpos;;v;;aQuestion;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ConfirmationQuestion extends Question&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Represents a yes/no question.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\ConfirmationQuestion.php;f11;27;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $question, bool $default = true, string $trueAnswerRegex = &apos;/^y/i&apos;)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$question&lt;/b&gt;: The question to ask to the user&#10;    bool &lt;b&gt;$default&lt;/b&gt;: The default answer to return, true or false&#10;    string &lt;b&gt;$trueAnswerRegex&lt;/b&gt;: A regex to match the &quot;yes&quot; answer;;d4,28;;b1,0;;m0;;estring $question;;pbool $default;;pstring $trueAnswerRegex;;p">
</treenode>
<treenode node="getDefaultNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\ConfirmationQuestion.php;f12;40;5;57;;;;vpos;;v;;acallable;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefaultNormalizer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the default answer normalizer.;;d4,41;;b3,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ConfirmationQuestionTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\ConfirmationQuestionTest.php;f0;16;1;61;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="normalizerUsecases;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\ConfirmationQuestionTest.php;f11;32;5;60;;;;vpos;;v;;a;;r;;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="testDefaultRegexUsecases;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\ConfirmationQuestionTest.php;f11;21;5;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testDefaultRegexUsecases($default, $answers, $expected, $message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: normalizerUsecases;;d4,22;;b1,0;;m0;;edefault;;panswers;;pexpected;;pmessage;;p">
</treenode>
</treenode>
<treenode node="ConsoleCommandEvent;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleCommandEvent.php;f0;18;1;59;;;;vpos;;v;;aConsoleEvent;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ConsoleCommandEvent extends ConsoleEvent&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Allows to do things before the command is executed, like skipping the command or changing the input.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="RETURN_CODE_DISABLED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleCommandEvent.php;f9;23;30;23;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The return code for skipped commands, this will also be passed into the terminate event.;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="commandShouldRun;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleCommandEvent.php;f11;55;5;58;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    commandShouldRun()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the command is runnable, false otherwise.;;d4,56;;b1,0;;m0;;e">
</treenode>
<treenode node="disableCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleCommandEvent.php;f11;35;5;38;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    disableCommand()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Disables the command, so it won&apos;t be run.;;d4,36;;b1,0;;m0;;e">
</treenode>
<treenode node="enableCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleCommandEvent.php;f11;45;5;48;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    enableCommand()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enables the command.;;d4,46;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ConsoleErrorEvent;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleErrorEvent.php;f6;22;1;57;;;;vpos;;v;;aConsoleEvent;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ConsoleErrorEvent extends ConsoleEvent&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Allows to handle throwables thrown while running a command.&#10;&lt;b&gt;author&lt;/b&gt;: Wouter de Jong &lt;wouter&#10;&lt;b&gt;wouterj&lt;/b&gt;: .nl&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleErrorEvent.php;f11;27;5;32;;;;vpos;;v;;a;;r;;d4,28;;b1,0;;m0;;einput;;poutput;;perror;;pcommand;;p">
</treenode>
<treenode node="getError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleErrorEvent.php;f11;34;31;34;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getExitCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleErrorEvent.php;f11;53;5;56;;;;vpos;;v;;a int;;r;;d4,54;;b1,0;;m0;;e">
</treenode>
<treenode node="setError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleErrorEvent.php;f11;39;5;42;;;;vpos;;v;;a void;;r;;d4,40;;b1,0;;m0;;eerror;;p">
</treenode>
<treenode node="setExitCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleErrorEvent.php;f11;44;5;51;;;;vpos;;v;;a void;;r;;d4,45;;b1,0;;m0;;eexitCode;;p">
</treenode>
</treenode>
<treenode node="ConsoleEvent;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleEvent.php;f0;23;1;66;;;;vpos;;v;;aEvent;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ConsoleEvent extends Event&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Allows to inspect input and output of a command.&#10;&lt;b&gt;author&lt;/b&gt;: Francesco Levorato &lt;git&#10;&lt;b&gt;flevour&lt;/b&gt;: .net&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleEvent.php;f11;30;5;35;;;;vpos;;v;;a;;r;;d4,31;;b1,0;;m0;;ecommand;;pinput;;poutput;;p">
</treenode>
<treenode node="getCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleEvent.php;f11;42;5;45;;;;vpos;;v;;aCommand|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommand()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the command that is executed.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A Command instance;;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="getInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleEvent.php;f11;52;5;55;;;;vpos;;v;;aInputInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getInput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the input instance.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An InputInterface instance;;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="getOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleEvent.php;f11;62;5;65;;;;vpos;;v;;aOutputInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOutput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the output instance.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An OutputInterface instance;;d4,63;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ConsoleEvents;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\ConsoleEvents.php;f6;18;1;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ConsoleEvents&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Contains all events dispatched by an Application.&#10;&lt;b&gt;author&lt;/b&gt;: Francesco Levorato &lt;git&#10;&lt;b&gt;flevour&lt;/b&gt;: .net&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="COMMAND;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\ConsoleEvents.php;f9;27;17;27;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The COMMAND event allows you to attach listeners before any command is&#10;executed by the console. It also allows you to modify the command, input and output&#10;before they are handled to the command.&#10;&lt;b&gt;Event&lt;/b&gt;: (&quot;Symfony\Component\Console\Event\ConsoleCommandEvent&quot;);;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="ERROR;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\ConsoleEvents.php;f9;45;15;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The ERROR event occurs when an uncaught exception or error appears.&#10;This event allows you to deal with the exception/error or&#10;to modify the thrown exception.&#10;&lt;b&gt;Event&lt;/b&gt;: (&quot;Symfony\Component\Console\Event\ConsoleErrorEvent&quot;);;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="TERMINATE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\ConsoleEvents.php;f9;35;19;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The TERMINATE event allows you to attach listeners after a command is&#10;executed by the console.&#10;&lt;b&gt;Event&lt;/b&gt;: (&quot;Symfony\Component\Console\Event\ConsoleTerminateEvent&quot;);;d-1,-1;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="ConsoleLogger;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Logger\ConsoleLogger.php;f0;26;1;123;;;;vpos;;v;;aAbstractLogger;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ConsoleLogger extends AbstractLogger&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    PSR-3 compliant console logger.&#10;&lt;b&gt;author&lt;/b&gt;: Kévin Dunglas &lt;dunglas&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;see&lt;/b&gt;: https://www.php-fig.org/psr/psr-3/;;d0,27;;b0,0;;m0;;e">
<treenode node="ERROR;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Logger\ConsoleLogger.php;f9;29;15;29;;;;vpos;;v;;a;;r&apos;error&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="INFO;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Logger\ConsoleLogger.php;f9;28;14;28;;;;vpos;;v;;a;;r&apos;info&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Logger\ConsoleLogger.php;f11;54;5;59;;;;vpos;;v;;a;;r;;d4,55;;b1,0;;m0;;eoutput;;pverbosityLevelMap;;pformatLevelMap;;p">
</treenode>
<treenode node="hasErrored;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Logger\ConsoleLogger.php;f11;92;5;95;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasErrored()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true when any messages have been logged at error levels.;;d4,93;;b1,0;;m0;;e">
</treenode>
<treenode node="interpolate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Logger\ConsoleLogger.php;f12;102;5;122;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    interpolate(string $message, array $context): string&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Interpolates context values into the message placeholders.&#10;&lt;b&gt;author&lt;/b&gt;: PHP Framework Interoperability Group;;d4,103;;b3,0;;m0;;emessage;;pcontext;;p">
</treenode>
<treenode node="log;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Logger\ConsoleLogger.php;f11;64;5;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    log($level, $message, array $context = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,65;;b1,0;;m0;;elevel;;pmessage;;pcontext;;p">
</treenode>
</treenode>
<treenode node="ConsoleLoggerTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f0;27;1;205;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ConsoleLoggerTest extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Console logger test.&#10;&lt;b&gt;author&lt;/b&gt;: Kévin Dunglas &lt;dunglas&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Jordi Boggiano &lt;j.boggiano&#10;&lt;b&gt;seld&lt;/b&gt;: .be&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="getLogger;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;37;5;51;;;;vpos;;v;;aLoggerInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLogger()&#10;;;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="getLogs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;58;5;61;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLogs()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the log messages in order.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="provideLevelsAndMessages;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;129;5;141;;;;vpos;;v;;a;;r;;d4,130;;b1,0;;m0;;e">
</treenode>
<treenode node="provideOutputMappingParams;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;75;5;93;;;;vpos;;v;;a;;r;;d4,76;;b1,0;;m0;;e">
</treenode>
<treenode node="testContextCanContainAnything;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;174;5;191;;;;vpos;;v;;a;;r;;d4,175;;b1,0;;m0;;e">
</treenode>
<treenode node="testContextExceptionKeyCanBeExceptionOrOtherValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;193;5;204;;;;vpos;;v;;a;;r;;d4,194;;b1,0;;m0;;e">
</treenode>
<treenode node="testContextReplacement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;150;5;157;;;;vpos;;v;;a;;r;;d4,151;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasErrored;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;95;5;106;;;;vpos;;v;;a;;r;;d4,96;;b1,0;;m0;;e">
</treenode>
<treenode node="testImplements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;108;5;111;;;;vpos;;v;;a;;r;;d4,109;;b1,0;;m0;;e">
</treenode>
<treenode node="testLogsAtAllLevels;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;116;5;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testLogsAtAllLevels($level, $message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideLevelsAndMessages;;d4,117;;b1,0;;m0;;elevel;;pmessage;;p">
</treenode>
<treenode node="testObjectCastToString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;159;5;172;;;;vpos;;v;;a;;r;;d4,160;;b1,0;;m0;;e">
</treenode>
<treenode node="testOutputMapping;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;66;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testOutputMapping($logLevel, $outputVerbosity, $isOutput, $addVerbosityLevelMap = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideOutputMappingParams;;d4,67;;b1,0;;m0;;elogLevel;;poutputVerbosity;;pisOutput;;paddVerbosityLevelMap;;p">
</treenode>
<treenode node="testThrowsOnInvalidLevel;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;143;5;148;;;;vpos;;v;;a;;r;;d4,144;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ConsoleOutput;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutput.php;f0;29;1;160;;;;vpos;;v;;aStreamOutput;;cConsoleOutputInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ConsoleOutput extends StreamOutput implements ConsoleOutputInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ConsoleOutput is the default class for all CLI output. It uses STDOUT and STDERR.&#10;This class is a convenient wrapper around `StreamOutput` for both STDOUT and STDERR.&#10;$output = new ConsoleOutput();s&#10;This is equivalent to:&#10;$output = new StreamOutput(fopen(&apos;php://stdout&apos;, &apos;w&apos;));s&#10;$stdErr = new StreamOutput(fopen(&apos;php://stderr&apos;, &apos;w&apos;));s&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutput.php;f11;39;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(int $verbosity = self::VERBOSITY_NORMAL, bool $decorated = null, OutputFormatterInterface $formatter = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$verbosity&lt;/b&gt;: The verbosity level (one of the VERBOSITY constants in OutputInterface)&#10;    bool|null &lt;b&gt;$decorated&lt;/b&gt;: Whether to decorate messages (null for auto-guessing)&#10;    OutputFormatterInterface|null &lt;b&gt;$formatter&lt;/b&gt;: Output formatter instance (null to use default OutputFormatter);;d4,40;;b1,0;;m0;;eint $verbosity;;pbool|null $decorated;;pOutputFormatterInterface|null $formatter;;p">
</treenode>
<treenode node="getErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutput.php;f11;89;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getErrorOutput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,90;;b1,0;;m0;;e">
</treenode>
<treenode node="hasStderrSupport;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutput.php;f14;119;5;122;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasStderrSupport()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if current environment supports writing console output to&#10;STDERR.;;d4,120;;b2,0;;m0;;e">
</treenode>
<treenode node="hasStdoutSupport;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutput.php;f14;108;5;111;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasStdoutSupport()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if current environment supports writing console output to&#10;STDOUT.;;d4,109;;b2,0;;m0;;e">
</treenode>
<treenode node="isRunningOS400;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutput.php;f12;130;5;139;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRunningOS400()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if current executing environment is IBM iSeries (OS400), which&#10;doesn&apos;t properly convert character-encodings between ASCII to EBCDIC.;;d4,131;;b3,0;;m0;;e">
</treenode>
<treenode node="openErrorStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutput.php;f12;156;5;159;;;;vpos;;v;;aresource;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    openErrorStream()&#10;;;d4,157;;b3,0;;m0;;e">
</treenode>
<treenode node="openOutputStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutput.php;f12;144;5;151;;;;vpos;;v;;aresource;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    openOutputStream()&#10;;;d4,145;;b3,0;;m0;;e">
</treenode>
<treenode node="section;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutput.php;f11;54;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    section(): ConsoleSectionOutput&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new output section.;;d4,55;;b1,0;;m0;;e">
</treenode>
<treenode node="setDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutput.php;f11;62;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDecorated($decorated)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b1,0;;m0;;edecorated;;p">
</treenode>
<treenode node="setErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutput.php;f11;97;5;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setErrorOutput(OutputInterface $error)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,98;;b1,0;;m0;;eerror;;p">
</treenode>
<treenode node="setFormatter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutput.php;f11;71;5;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFormatter(OutputFormatterInterface $formatter)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,72;;b1,0;;m0;;eformatter;;p">
</treenode>
<treenode node="setVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleOutput.php;f11;80;5;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setVerbosity($level)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,81;;b1,0;;m0;;elevel;;p">
</treenode>
</treenode>
<treenode node="ConsoleOutputTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleOutputTest.php;f0;18;1;41;;;;vpos;;v;;aTestCase;;c;;r;;d0,19;;b0,0;;m0;;e">
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleOutputTest.php;f11;20;5;25;;;;vpos;;v;;a;;r;;d4,21;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetFormatter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleOutputTest.php;f11;27;5;33;;;;vpos;;v;;a;;r;;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleOutputTest.php;f11;35;5;40;;;;vpos;;v;;a;;r;;d4,36;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ConsoleSectionOutput;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleSectionOutput.php;f0;21;1;142;;;;vpos;;v;;aStreamOutput;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ConsoleSectionOutput extends StreamOutput&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Pierre du Plessis &lt;pdples&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Gabriel Ostrolucký &lt;gabriel.ostrolucky&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleSectionOutput.php;f11;32;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($stream, array &amp;$sections, int $verbosity, bool $decorated, OutputFormatterInterface $formatter)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource &lt;b&gt;$stream&lt;/b&gt;&#10;    ConsoleSectionOutput[] &lt;b&gt;$sections&lt;/b&gt;;;d4,33;;b1,0;;m0;;estream;;psections;;pverbosity;;pdecorated;;pformatter;;p">
</treenode>
<treenode node="addContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleSectionOutput.php;f11;82;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addContent(string $input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d4,83;;b1,0;;m0;;einput;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleSectionOutput.php;f11;45;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clear(int $lines = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clears previous output for this section.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$lines&lt;/b&gt;: Number of lines to clear. If null, then the entire output of this section is cleared;;d4,46;;b1,0;;m0;;eint $lines;;p">
</treenode>
<treenode node="doWrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleSectionOutput.php;f14;94;5;108;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    doWrite($message, $newline)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,95;;b2,0;;m0;;emessage;;pnewline;;p">
</treenode>
<treenode node="getContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleSectionOutput.php;f11;74;5;77;;;;vpos;;v;;a string;;r;;d4,75;;b1,0;;m0;;e">
</treenode>
<treenode node="getDisplayLength;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleSectionOutput.php;f12;138;5;141;;;;vpos;;v;;a string;;r;;d4,139;;b3,0;;m0;;etext;;p">
</treenode>
<treenode node="overwrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleSectionOutput.php;f11;68;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    overwrite($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Overwrites the previous output with a new message.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array|string &lt;b&gt;$message&lt;/b&gt;;;d4,69;;b1,0;;m0;;earray|string $message;;p">
</treenode>
<treenode node="popStreamContentUntilCurrentSection;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\ConsoleSectionOutput.php;f12;114;5;136;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    popStreamContentUntilCurrentSection(int $numberOfLinesToClearFromCurrentSection = 0): string&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    At initial stage, cursor is at the end of stream output. This method makes cursor crawl upwards until it hits&#10;current section. Then it erases content it crawled through. Optionally, it erases part of current section too.;;d4,115;;b3,0;;m0;;enumberOfLinesToClearFromCurrentSection;;p">
</treenode>
</treenode>
<treenode node="ConsoleSectionOutputTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleSectionOutputTest.php;f0;22;1;162;;;;vpos;;v;;aTestCase;;c;;r;;d0,23;;b0,0;;m0;;e">
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleSectionOutputTest.php;f14;26;5;29;;;;vpos;;v;;a void;;r;;d4,27;;b2,0;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleSectionOutputTest.php;f14;31;5;34;;;;vpos;;v;;a void;;r;;d4,32;;b2,0;;m0;;e">
</treenode>
<treenode node="testAddingMultipleSections;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleSectionOutputTest.php;f11;117;5;124;;;;vpos;;v;;a;;r;;d4,118;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearAll;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleSectionOutputTest.php;f11;36;5;46;;;;vpos;;v;;a;;r;;d4,37;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearNumberOfLines;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleSectionOutputTest.php;f11;48;5;58;;;;vpos;;v;;a;;r;;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearNumberOfLinesWithMultipleSections;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleSectionOutputTest.php;f11;60;5;75;;;;vpos;;v;;a;;r;;d4,61;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearPreservingEmptyLines;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleSectionOutputTest.php;f11;77;5;91;;;;vpos;;v;;a;;r;;d4,78;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearSectionContainingQuestion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleSectionOutputTest.php;f11;143;5;161;;;;vpos;;v;;a;;r;;d4,144;;b1,0;;m0;;e">
</treenode>
<treenode node="testMultipleSectionsOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleSectionOutputTest.php;f11;126;5;141;;;;vpos;;v;;a;;r;;d4,127;;b1,0;;m0;;e">
</treenode>
<treenode node="testOverwrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleSectionOutputTest.php;f11;93;5;103;;;;vpos;;v;;a;;r;;d4,94;;b1,0;;m0;;e">
</treenode>
<treenode node="testOverwriteMultipleLines;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\ConsoleSectionOutputTest.php;f11;105;5;115;;;;vpos;;v;;a;;r;;d4,106;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ConsoleTerminateEvent;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleTerminateEvent.php;f0;22;1;52;;;;vpos;;v;;aConsoleEvent;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ConsoleTerminateEvent extends ConsoleEvent&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Allows to manipulate the exit code of a command after its execution.&#10;&lt;b&gt;author&lt;/b&gt;: Francesco Levorato &lt;git&#10;&lt;b&gt;flevour&lt;/b&gt;: .net&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleTerminateEvent.php;f11;26;5;31;;;;vpos;;v;;a;;r;;d4,27;;b1,0;;m0;;ecommand;;pinput;;poutput;;pexitCode;;p">
</treenode>
<treenode node="getExitCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleTerminateEvent.php;f11;48;5;51;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getExitCode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the exit code.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The command exit code;;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="setExitCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Event\ConsoleTerminateEvent.php;f11;38;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setExitCode($exitCode)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the exit code.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$exitCode&lt;/b&gt;: The command exit code;;d4,39;;b1,0;;m0;;eint $exitCode;;p">
</treenode>
</treenode>
<treenode node="Constraint;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f0;16;1;218;;;;vpos;;v;;aConstraintInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Constraint implements ConstraintInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines a constraint.;;d0,17;;b0,0;;m0;;e">
<treenode node="OP_EQ;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f9;19;15;19;;;;vpos;;v;;a;;r0;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="OP_GE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f9;23;15;23;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="OP_GT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f9;22;15;22;;;;vpos;;v;;a;;r3;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="OP_LE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f9;21;15;21;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="OP_LT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f9;20;15;20;;;;vpos;;v;;a;;r1;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="OP_NE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f9;24;15;24;;;;vpos;;v;;a;;r5;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f11;118;5;130;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($operator, $version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets operator and version to compare with.&#10;&lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException if invalid operator is given.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$operator&lt;/b&gt;&#10;    string &lt;b&gt;$version&lt;/b&gt;;;d4,119;;b1,0;;m0;;estring $operator;;pstring $version;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f11;214;5;217;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __toString()&#10;;;d4,215;;b1,0;;m0;;e">
</treenode>
<treenode node="getPrettyString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f11;91;5;98;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPrettyString()&#10;;;d4,92;;b1,0;;m0;;e">
</treenode>
<treenode node="getSupportedOperators;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f18;105;5;108;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSupportedOperators()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get all supported comparison operators.;;d4,106;;b1,5;;m0;;e">
</treenode>
<treenode node="matchSpecific;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f11;173;5;209;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    matchSpecific(Constraint $provider, $compareBranches = false)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Constraint &lt;b&gt;$provider&lt;/b&gt;&#10;    bool &lt;b&gt;$compareBranches&lt;/b&gt;;;d4,174;;b1,0;;m0;;eConstraint $provider;;pbool $compareBranches;;p">
</treenode>
<treenode node="matches;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f11;70;5;78;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    matches(ConstraintInterface $provider)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ConstraintInterface &lt;b&gt;$provider&lt;/b&gt;;;d4,71;;b1,0;;m0;;eConstraintInterface $provider;;p">
</treenode>
<treenode node="setPrettyString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f11;83;5;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPrettyString($prettyString)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$prettyString&lt;/b&gt;;;d4,84;;b1,0;;m0;;estring $prettyString;;p">
</treenode>
<treenode node="versionCompare;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\Constraint.php;f11;142;5;165;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    versionCompare($a, $b, $operator, $compareBranches = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException if invalid operator is given.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$a&lt;/b&gt;&#10;    string &lt;b&gt;$b&lt;/b&gt;&#10;    string &lt;b&gt;$operator&lt;/b&gt;&#10;    bool &lt;b&gt;$compareBranches&lt;/b&gt;;;d4,143;;b1,0;;m0;;estring $a;;pstring $b;;pstring $operator;;pbool $compareBranches;;p">
</treenode>
</treenode>
<treenode node="ContainerCommandLoader;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\ContainerCommandLoader.php;f0;21;1;63;;;;vpos;;v;;aCommandLoaderInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ContainerCommandLoader implements CommandLoaderInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Loads commands from a PSR-11 container.&#10;&lt;b&gt;author&lt;/b&gt;: Robin Chalas &lt;robin.chalas&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\ContainerCommandLoader.php;f11;30;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(ContainerInterface $container, array $commandMap)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ContainerInterface &lt;b&gt;$container&lt;/b&gt;: A container from which to load command services&#10;    array &lt;b&gt;$commandMap&lt;/b&gt;: An array with command names as keys and service ids as values;;d4,31;;b1,0;;m0;;eContainerInterface $container;;parray $commandMap;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\ContainerCommandLoader.php;f11;39;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    get($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="getNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\ContainerCommandLoader.php;f11;59;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNames()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,60;;b1,0;;m0;;e">
</treenode>
<treenode node="has;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\ContainerCommandLoader.php;f11;51;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    has($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;ename;;p">
</treenode>
</treenode>
<treenode node="ContainerCommandLoaderTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\CommandLoader\ContainerCommandLoaderTest.php;f0;18;1;58;;;;vpos;;v;;aTestCase;;c;;r;;d0,19;;b0,0;;m0;;e">
<treenode node="testGet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\CommandLoader\ContainerCommandLoaderTest.php;f11;32;5;41;;;;vpos;;v;;a;;r;;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetCommandNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\CommandLoader\ContainerCommandLoaderTest.php;f11;49;5;57;;;;vpos;;v;;a;;r;;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetUnknownCommandThrows;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\CommandLoader\ContainerCommandLoaderTest.php;f11;43;5;47;;;;vpos;;v;;a;;r;;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="testHas;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\CommandLoader\ContainerCommandLoaderTest.php;f11;20;5;30;;;;vpos;;v;;a;;r;;d4,21;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Ctype;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\Ctype.php;f6;20;1;226;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Ctype&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Ctype implementation through regex.&#10;&lt;b&gt;internal&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Gert de Pagter &lt;BackEndTea&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="convert_int_to_char_for_ctype;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\Ctype.php;f19;210;5;225;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    convert_int_to_char_for_ctype($int)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts integers to their char versions according to normal ctype behaviour, if needed.&#10;If an integer between -128 and 255 inclusive is provided,&#10;it is interpreted as the ASCII value of a single character&#10;(negative values have 256 added in order to allow characters in the Extended ASCII range).&#10;Any other integer is interpreted as a string containing the decimal digits of the integer.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$int&lt;/b&gt;;;d4,211;;b3,5;;m0;;estring|int $int;;p">
</treenode>
<treenode node="ctype_alnum;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\Ctype.php;f18;31;5;36;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ctype_alnum($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns TRUE if every character in text is either a letter or a digit, FALSE otherwise.&#10;&lt;b&gt;see&lt;/b&gt;: https://php.net/ctype-alnum&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$text&lt;/b&gt;;;d4,32;;b1,5;;m0;;estring|int $text;;p">
</treenode>
<treenode node="ctype_alpha;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\Ctype.php;f18;47;5;52;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ctype_alpha($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns TRUE if every character in text is a letter, FALSE otherwise.&#10;&lt;b&gt;see&lt;/b&gt;: https://php.net/ctype-alpha&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$text&lt;/b&gt;;;d4,48;;b1,5;;m0;;estring|int $text;;p">
</treenode>
<treenode node="ctype_cntrl;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\Ctype.php;f18;63;5;68;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ctype_cntrl($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns TRUE if every character in text is a control character from the current locale, FALSE otherwise.&#10;&lt;b&gt;see&lt;/b&gt;: https://php.net/ctype-cntrl&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$text&lt;/b&gt;;;d4,64;;b1,5;;m0;;estring|int $text;;p">
</treenode>
<treenode node="ctype_digit;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\Ctype.php;f18;79;5;84;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ctype_digit($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns TRUE if every character in the string text is a decimal digit, FALSE otherwise.&#10;&lt;b&gt;see&lt;/b&gt;: https://php.net/ctype-digit&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$text&lt;/b&gt;;;d4,80;;b1,5;;m0;;estring|int $text;;p">
</treenode>
<treenode node="ctype_graph;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\Ctype.php;f18;95;5;100;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ctype_graph($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns TRUE if every character in text is printable and actually creates visible output (no white space), FALSE otherwise.&#10;&lt;b&gt;see&lt;/b&gt;: https://php.net/ctype-graph&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$text&lt;/b&gt;;;d4,96;;b1,5;;m0;;estring|int $text;;p">
</treenode>
<treenode node="ctype_lower;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\Ctype.php;f18;111;5;116;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ctype_lower($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns TRUE if every character in text is a lowercase letter.&#10;&lt;b&gt;see&lt;/b&gt;: https://php.net/ctype-lower&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$text&lt;/b&gt;;;d4,112;;b1,5;;m0;;estring|int $text;;p">
</treenode>
<treenode node="ctype_print;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\Ctype.php;f18;127;5;132;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ctype_print($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns TRUE if every character in text will actually create output (including blanks). Returns FALSE if text contains control characters or characters that do not have any output or control function at all.&#10;&lt;b&gt;see&lt;/b&gt;: https://php.net/ctype-print&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$text&lt;/b&gt;;;d4,128;;b1,5;;m0;;estring|int $text;;p">
</treenode>
<treenode node="ctype_punct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\Ctype.php;f18;143;5;148;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ctype_punct($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns TRUE if every character in text is printable, but neither letter, digit or blank, FALSE otherwise.&#10;&lt;b&gt;see&lt;/b&gt;: https://php.net/ctype-punct&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$text&lt;/b&gt;;;d4,144;;b1,5;;m0;;estring|int $text;;p">
</treenode>
<treenode node="ctype_space;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\Ctype.php;f18;159;5;164;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ctype_space($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns TRUE if every character in text creates some sort of white space, FALSE otherwise. Besides the blank character this also includes tab, vertical tab, line feed, carriage return and form feed characters.&#10;&lt;b&gt;see&lt;/b&gt;: https://php.net/ctype-space&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$text&lt;/b&gt;;;d4,160;;b1,5;;m0;;estring|int $text;;p">
</treenode>
<treenode node="ctype_upper;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\Ctype.php;f18;175;5;180;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ctype_upper($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns TRUE if every character in text is an uppercase letter.&#10;&lt;b&gt;see&lt;/b&gt;: https://php.net/ctype-upper&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$text&lt;/b&gt;;;d4,176;;b1,5;;m0;;estring|int $text;;p">
</treenode>
<treenode node="ctype_xdigit;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\Ctype.php;f18;191;5;196;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ctype_xdigit($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns TRUE if every character in text is a hexadecimal &apos;digit&apos;, that is a decimal digit or a character from [A-Fa-f] , FALSE otherwise.&#10;&lt;b&gt;see&lt;/b&gt;: https://php.net/ctype-xdigit&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$text&lt;/b&gt;;;d4,192;;b1,5;;m0;;estring|int $text;;p">
</treenode>
</treenode>
<treenode node="CurlyBraceTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\CurlyBraceTransformer.php;f6;34;1;222;;;;vpos;;v;;aAbstractTransformer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CurlyBraceTransformer extends AbstractTransformer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform discriminate overloaded curly braces tokens.&#10;Performed transformations:&#10;- closing `}` for T_CURLY_OPEN into CT::T_CURLY_CLOSE,&#10;- closing `}` for T_DOLLAR_OPEN_CURLY_BRACES into CT::T_DOLLAR_CLOSE_CURLY_BRACES,&#10;- in `$foo-&gt;{$bar}` into CT::T_DYNAMIC_PROP_BRACE_OPEN and CT::T_DYNAMIC_PROP_BRACE_CLOSE,&#10;- in `${$foo}` into CT::T_DYNAMIC_VAR_BRACE_OPEN and CT::T_DYNAMIC_VAR_BRACE_CLOSE,&#10;- in `$array{$index}` into CT::T_ARRAY_INDEX_CURLY_BRACE_OPEN and CT::T_ARRAY_INDEX_CURLY_BRACE_CLOSE,&#10;- in `use some\a\{ClassA, ClassB, ClassC as C}` into CT::T_GROUP_IMPORT_BRACE_OPEN, CT::T_GROUP_IMPORT_BRACE_CLOSE.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,35;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\CurlyBraceTransformer.php;f11;39;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\CurlyBraceTransformer.php;f11;58;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredPhpVersionId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\CurlyBraceTransformer.php;f11;66;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    process(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b1,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
<treenode node="transformIntoCurlyCloseBrace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\CurlyBraceTransformer.php;f12;88;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    transformIntoCurlyCloseBrace(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform closing `}` for T_CURLY_OPEN into CT::T_CURLY_CLOSE.&#10;This should be done at very beginning of curly braces transformations.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    Token &lt;b&gt;$token&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,89;;b3,0;;m0;;eTokens $tokens;;pToken $token;;pint $index;;p">
</treenode>
<treenode node="transformIntoCurlyIndexBraces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\CurlyBraceTransformer.php;f12;165;5;203;;;;vpos;;v;;a;;r;;d4,166;;b3,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
<treenode node="transformIntoDollarCloseBrace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\CurlyBraceTransformer.php;f12;116;5;122;;;;vpos;;v;;a;;r;;d4,117;;b3,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
<treenode node="transformIntoDynamicPropBraces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\CurlyBraceTransformer.php;f12;124;5;139;;;;vpos;;v;;a;;r;;d4,125;;b3,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
<treenode node="transformIntoDynamicVarBraces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\CurlyBraceTransformer.php;f12;141;5;163;;;;vpos;;v;;a;;r;;d4,142;;b3,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
<treenode node="transformIntoGroupUseBraces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\CurlyBraceTransformer.php;f12;205;5;221;;;;vpos;;v;;a;;r;;d4,206;;b3,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
</treenode>
<treenode node="CustomApplication;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f0;1738;1;1759;;;;vpos;;v;;aApplication;;c;;r;;d0,1739;;b0,0;;m0;;e">
<treenode node="getDefaultHelperSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f14;1755;5;1758;;;;vpos;;v;;aHelperSet;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefaultHelperSet()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the default helper set with the helpers that should always be available.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A HelperSet instance;;d4,1756;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefaultInputDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f14;1745;5;1748;;;;vpos;;v;;aInputDefinition;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefaultInputDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Overwrites the default input definition.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An InputDefinition instance;;d4,1746;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="CustomDefaultCommandApplication;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f0;1761;1;1774;;;;vpos;;v;;aApplication;;c;;r;;d0,1762;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1766;5;1773;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Overwrites the constructor in order to set a different default command.;;d4,1767;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="CustomFilterIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\CustomFilterIterator.php;f0;21;1;60;;;;vpos;;v;;aFilterIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class CustomFilterIterator extends \FilterIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    CustomFilterIterator filters files by applying anonymous functions.&#10;The anonymous function receives a \SplFileInfo and must return false&#10;to remove files.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\CustomFilterIterator.php;f11;31;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(\Iterator $iterator, array $filters)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \Iterator &lt;b&gt;$iterator&lt;/b&gt;: The Iterator to filter&#10;    callable[] &lt;b&gt;$filters&lt;/b&gt;: An array of PHP callbacks;;d4,32;;b1,0;;m0;;e\Iterator $iterator;;pcallable[] $filters;;p">
</treenode>
<treenode node="accept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\CustomFilterIterator.php;f11;48;5;59;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    accept()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Filters the iterator values.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the value should be kept, false otherwise;;d4,49;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="CustomFilterIteratorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\CustomFilterIteratorTest.php;f0;15;1;43;;;;vpos;;v;;aIteratorTestCase;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="getAcceptData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\CustomFilterIteratorTest.php;f11;35;5;42;;;;vpos;;v;;a;;r;;d4,36;;b1,0;;m0;;e">
</treenode>
<treenode node="testAccept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\CustomFilterIteratorTest.php;f11;26;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testAccept($filters, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getAcceptData;;d4,27;;b1,0;;m0;;efilters;;pexpected;;p">
</treenode>
<treenode node="testWithInvalidFilter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\CustomFilterIteratorTest.php;f11;17;5;21;;;;vpos;;v;;a;;r;;d4,18;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Database;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\model\Database.php;f1;3;2;28;;;;vpos;;v;;a;;r;;d1,4;;b0,0;;m0;;e">
<treenode node="DB_HOST;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\model\Database.php;f7;5;15;5;;;;vpos;;v;;a;;r&apos;mysql:host=localhost;sdbname=p5blog;scharset=utf8&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="DB_PASS;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\model\Database.php;f10;7;18;7;;;;vpos;;v;;a;;r&apos;&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="DB_USER;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\model\Database.php;f10;6;18;6;;;;vpos;;v;;a;;r&apos;root&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="getConnectDB;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\model\Database.php;f11;9;5;27;;;;vpos;;v;;a;;r;;d4,10;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DateComparator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Comparator\DateComparator.php;f0;18;1;50;;;;vpos;;v;;aComparator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DateComparator extends Comparator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    DateCompare compiles date comparisons.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Comparator\DateComparator.php;f11;25;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $test)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException If the test is not understood&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$test&lt;/b&gt;: A comparison string;;d4,26;;b1,0;;m0;;estring $test;;p">
</treenode>
</treenode>
<treenode node="DateComparatorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\DateComparatorTest.php;f0;16;1;63;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="getTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\DateComparatorTest.php;f11;51;5;62;;;;vpos;;v;;a;;r;;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\DateComparatorTest.php;f11;18;5;33;;;;vpos;;v;;a;;r;;d4,19;;b1,0;;m0;;e">
</treenode>
<treenode node="testTest;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\DateComparatorTest.php;f11;38;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testTest($test, $match, $noMatch)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getTestData;;d4,39;;b1,0;;m0;;etest;;pmatch;;pnoMatch;;p">
</treenode>
</treenode>
<treenode node="DateRangeFilterIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\DateRangeFilterIterator.php;f0;20;1;57;;;;vpos;;v;;aFilterIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DateRangeFilterIterator extends \FilterIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    DateRangeFilterIterator filters out files that are not in the given date range (last modified dates).&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\DateRangeFilterIterator.php;f11;28;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(\Iterator $iterator, array $comparators)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \Iterator &lt;b&gt;$iterator&lt;/b&gt;: The Iterator to filter&#10;    DateComparator[] &lt;b&gt;$comparators&lt;/b&gt;: An array of DateComparator instances;;d4,29;;b1,0;;m0;;e\Iterator $iterator;;pDateComparator[] $comparators;;p">
</treenode>
<treenode node="accept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\DateRangeFilterIterator.php;f11;40;5;56;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    accept()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Filters the iterator values.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the value should be kept, false otherwise;;d4,41;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DateRangeFilterIteratorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\DateRangeFilterIteratorTest.php;f0;16;1;91;;;;vpos;;v;;aRealIteratorTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="getAcceptData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\DateRangeFilterIteratorTest.php;f11;32;5;90;;;;vpos;;v;;a;;r;;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="testAccept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\DateRangeFilterIteratorTest.php;f11;21;5;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testAccept($size, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getAcceptData;;d4,22;;b1,0;;m0;;esize;;pexpected;;p">
</treenode>
</treenode>
<treenode node="DateTimeImmutableFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassUsage\DateTimeImmutableFixer.php;f6;23;1;163;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DateTimeImmutableFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Kuba Werlos &lt;werlos&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassUsage\DateTimeImmutableFixer.php;f14;57;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixClassUsage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassUsage\DateTimeImmutableFixer.php;f12;109;5;141;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixClassUsage(Tokens $tokens, $index, $isInNamespace, $isImported)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    bool &lt;b&gt;$isInNamespace&lt;/b&gt;&#10;    bool &lt;b&gt;$isImported&lt;/b&gt;;;d4,110;;b3,0;;m0;;eTokens $tokens;;pint $index;;pbool $isInNamespace;;pbool $isImported;;p">
</treenode>
<treenode node="fixFunctionUsage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassUsage\DateTimeImmutableFixer.php;f12;148;5;162;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunctionUsage(Tokens $tokens, $index, $replacement)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    string &lt;b&gt;$replacement&lt;/b&gt;;;d4,149;;b3,0;;m0;;eTokens $tokens;;pint $index;;pstring $replacement;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassUsage\DateTimeImmutableFixer.php;f11;28;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassUsage\DateTimeImmutableFixer.php;f11;41;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassUsage\DateTimeImmutableFixer.php;f11;49;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DebugFormatterHelper;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\DebugFormatterHelper.php;f0;20;1;126;;;;vpos;;v;;aHelper;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DebugFormatterHelper extends Helper&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Helps outputting debug information when running an external program from a command.&#10;An external program can be a Process, an HTTP request, or anything else.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="getBorder;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\DebugFormatterHelper.php;f12;114;5;117;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBorder($id)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$id&lt;/b&gt;: The id of the formatting session;;d4,115;;b3,0;;m0;;estring $id;;p">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\DebugFormatterHelper.php;f11;122;5;125;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,123;;b1,0;;m0;;e">
</treenode>
<treenode node="progress;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\DebugFormatterHelper.php;f11;53;5;82;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    progress($id, $buffer, $error = false, $prefix = &apos;OUT&apos;, $errorPrefix = &apos;ERR&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds progress to a formatting session.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$id&lt;/b&gt;: The id of the formatting session&#10;    string &lt;b&gt;$buffer&lt;/b&gt;: The message to display&#10;    bool &lt;b&gt;$error&lt;/b&gt;: Whether to consider the buffer as error&#10;    string &lt;b&gt;$prefix&lt;/b&gt;: The prefix for output&#10;    string &lt;b&gt;$errorPrefix&lt;/b&gt;: The prefix for error output;;d4,54;;b1,0;;m0;;estring $id;;pstring $buffer;;pbool $error;;pstring $prefix;;pstring $errorPrefix;;p">
</treenode>
<treenode node="start;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\DebugFormatterHelper.php;f11;35;5;40;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    start($id, $message, $prefix = &apos;RUN&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Starts a debug formatting session.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$id&lt;/b&gt;: The id of the formatting session&#10;    string &lt;b&gt;$message&lt;/b&gt;: The message to display&#10;    string &lt;b&gt;$prefix&lt;/b&gt;: The prefix to use;;d4,36;;b1,0;;m0;;estring $id;;pstring $message;;pstring $prefix;;p">
</treenode>
<treenode node="stop;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\DebugFormatterHelper.php;f11;94;5;107;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    stop($id, $message, $successful, $prefix = &apos;RES&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stops a formatting session.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$id&lt;/b&gt;: The id of the formatting session&#10;    string &lt;b&gt;$message&lt;/b&gt;: The message to display&#10;    bool &lt;b&gt;$successful&lt;/b&gt;: Whether to consider the result as success&#10;    string &lt;b&gt;$prefix&lt;/b&gt;: The prefix for the end output;;d4,95;;b1,0;;m0;;estring $id;;pstring $message;;pbool $successful;;pstring $prefix;;p">
</treenode>
</treenode>
<treenode node="DeclareEqualNormalizeFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\DeclareEqualNormalizeFixer.php;f6;27;1;131;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DeclareEqualNormalizeFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\DeclareEqualNormalizeFixer.php;f14;69;5;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,70;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\DeclareEqualNormalizeFixer.php;f11;37;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\DeclareEqualNormalizeFixer.php;f14;86;5;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,87;;b2,0;;m0;;e">
</treenode>
<treenode node="ensureWhitespaceAroundToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\DeclareEqualNormalizeFixer.php;f12;100;5;117;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ensureWhitespaceAroundToken(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: of `=` token;;d4,101;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\DeclareEqualNormalizeFixer.php;f11;47;5;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\DeclareEqualNormalizeFixer.php;f11;61;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,62;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="removeWhitespaceAroundToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\DeclareEqualNormalizeFixer.php;f12;123;5;130;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeWhitespaceAroundToken(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: of `=` token;;d4,124;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="DeclareStrictTypesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\DeclareStrictTypesFixer.php;f6;26;1;165;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DeclareStrictTypesFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jordi Boggiano &lt;j.boggiano&#10;&lt;b&gt;seld&lt;/b&gt;: .be&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,27;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\DeclareStrictTypesFixer.php;f14;74;5;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,75;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixStrictTypesCasing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\DeclareStrictTypesFixer.php;f12;124;5;135;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixStrictTypesCasing(Tokens $tokens, array $sequence)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    array&lt;int,: Token&gt; $sequence;;d4,125;;b3,0;;m0;;eTokens $tokens;;parray&lt;int,;;p">
</treenode>
<treenode node="getDeclareStrictTypeSequence;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\DeclareStrictTypesFixer.php;f12;98;5;118;;;;vpos;;v;;aToken;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDeclareStrictTypeSequence()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,99;;b3,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\DeclareStrictTypesFixer.php;f11;31;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\DeclareStrictTypesFixer.php;f11;49;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="insertSequence;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\DeclareStrictTypesFixer.php;f12;137;5;164;;;;vpos;;v;;a;;r;;d4,138;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\DeclareStrictTypesFixer.php;f11;58;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\DeclareStrictTypesFixer.php;f11;66;5;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DeprecatedFixerOption;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\DeprecatedFixerOption.php;f6;14;1;99;;;;vpos;;v;;aDeprecatedFixerOptionInterface;;c;;r;;d0,15;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\DeprecatedFixerOption.php;f11;30;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(FixerOptionInterface $option, $deprecationMessage)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    FixerOptionInterface &lt;b&gt;$option&lt;/b&gt;&#10;    string &lt;b&gt;$deprecationMessage&lt;/b&gt;;;d4,31;;b1,0;;m0;;eFixerOptionInterface $option;;pstring $deprecationMessage;;p">
</treenode>
<treenode node="getAllowedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\DeprecatedFixerOption.php;f11;71;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllowedTypes()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,72;;b1,0;;m0;;e">
</treenode>
<treenode node="getAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\DeprecatedFixerOption.php;f11;79;5;82;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllowedValues()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,80;;b1,0;;m0;;e">
</treenode>
<treenode node="getDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\DeprecatedFixerOption.php;f11;63;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefault()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,64;;b1,0;;m0;;e">
</treenode>
<treenode node="getDeprecationMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\DeprecatedFixerOption.php;f11;95;5;98;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDeprecationMessage()&#10;;;d4,96;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\DeprecatedFixerOption.php;f11;47;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDescription()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\DeprecatedFixerOption.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="getNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\DeprecatedFixerOption.php;f11;87;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNormalizer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,88;;b1,0;;m0;;e">
</treenode>
<treenode node="hasDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\DeprecatedFixerOption.php;f11;55;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasDefault()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DepthRangeFilterIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\DepthRangeFilterIterator.php;f0;18;1;44;;;;vpos;;v;;aFilterIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DepthRangeFilterIterator extends \FilterIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    DepthRangeFilterIterator limits the directory depth.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\DepthRangeFilterIterator.php;f11;27;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(\RecursiveIteratorIterator $iterator, int $minDepth = 0, int $maxDepth = PHP_INT_MAX)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \RecursiveIteratorIterator &lt;b&gt;$iterator&lt;/b&gt;: The Iterator to filter&#10;    int &lt;b&gt;$minDepth&lt;/b&gt;: The min depth&#10;    int &lt;b&gt;$maxDepth&lt;/b&gt;: The max depth;;d4,28;;b1,0;;m0;;e\RecursiveIteratorIterator $iterator;;pint $minDepth;;pint $maxDepth;;p">
</treenode>
<treenode node="accept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\DepthRangeFilterIterator.php;f11;40;5;43;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    accept()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Filters the iterator values.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the value should be kept, false otherwise;;d4,41;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DepthRangeFilterIteratorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\DepthRangeFilterIteratorTest.php;f0;15;1;104;;;;vpos;;v;;aRealIteratorTestCase;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="getAcceptData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\DepthRangeFilterIteratorTest.php;f11;32;5;103;;;;vpos;;v;;a;;r;;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="testAccept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\DepthRangeFilterIteratorTest.php;f11;20;5;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testAccept($minDepth, $maxDepth, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getAcceptData;;d4,21;;b1,0;;m0;;eminDepth;;pmaxDepth;;pexpected;;p">
</treenode>
</treenode>
<treenode node="DescribeCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeCommand.php;f6;48;1;407;;;;vpos;;v;;aCommand;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DescribeCommand extends Command&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,49;;b0,0;;m0;;e">
<treenode node="COMMAND_NAME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeCommand.php;f9;50;22;50;;;;vpos;;v;;a;;r&apos;describe&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeCommand.php;f11;70;5;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(FixerFactory $fixerFactory = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|FixerFactory &lt;b&gt;$fixerFactory&lt;/b&gt;;;d4,71;;b1,0;;m0;;enull|FixerFactory $fixerFactory;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeCommand.php;f14;85;5;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,86;;b2,0;;m0;;e">
</treenode>
<treenode node="describeList;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeCommand.php;f12;386;5;406;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeList(OutputInterface $output, $type)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    OutputInterface &lt;b&gt;$output&lt;/b&gt;&#10;    string &lt;b&gt;$type&lt;/b&gt;: &apos;rule&apos;|&apos;set&apos;;;d4,387;;b3,0;;m0;;eOutputInterface $output;;pstring $type;;p">
</treenode>
<treenode node="describeRule;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeCommand.php;f12;135;5;308;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeRule(OutputInterface $output, $name)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    OutputInterface &lt;b&gt;$output&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d4,136;;b3,0;;m0;;eOutputInterface $output;;pstring $name;;p">
</treenode>
<treenode node="describeSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeCommand.php;f12;314;5;344;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeSet(OutputInterface $output, $name)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    OutputInterface &lt;b&gt;$output&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d4,315;;b3,0;;m0;;eOutputInterface $output;;pstring $name;;p">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeCommand.php;f14;101;5;129;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    execute(InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,102;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="getFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeCommand.php;f12;349;5;364;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFixers()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;string, FixerInterface&gt;;;d4,350;;b3,0;;m0;;e">
</treenode>
<treenode node="getSetNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeCommand.php;f12;369;5;380;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSetNames()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,370;;b3,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DescribeNameNotFoundException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeNameNotFoundException.php;f6;19;1;56;;;;vpos;;v;;aInvalidArgumentException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DescribeNameNotFoundException extends \InvalidArgumentException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeNameNotFoundException.php;f11;35;5;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($name, $type)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;&#10;    string &lt;b&gt;$type&lt;/b&gt;;;d4,36;;b1,0;;m0;;estring $name;;pstring $type;;p">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeNameNotFoundException.php;f11;44;5;47;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;;;d4,45;;b1,0;;m0;;e">
</treenode>
<treenode node="getType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\DescribeNameNotFoundException.php;f11;52;5;55;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getType()&#10;;;d4,53;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Descriptor;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\Descriptor.php;f9;26;1;106;;;;vpos;;v;;aDescriptorInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Descriptor implements DescriptorInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jean-François Simon &lt;jeanfrancois.simon&#10;&lt;b&gt;sensiolabs&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="describe;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\Descriptor.php;f11;36;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describe(OutputInterface $output, $object, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,37;;b1,0;;m0;;eoutput;;pobject;;poptions;;p">
</treenode>
<treenode node="describeApplication;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\Descriptor.php;f23;105;98;105;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Describes an Application instance.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |mixed;;d-1,-1;;b2,0;;m0;;eapplication;;poptions;;p">
</treenode>
<treenode node="describeCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\Descriptor.php;f23;98;86;98;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Describes a Command instance.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |mixed;;d-1,-1;;b2,0;;m0;;ecommand;;poptions;;p">
</treenode>
<treenode node="describeInputArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\Descriptor.php;f23;77;99;77;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Describes an InputArgument instance.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |mixed;;d-1,-1;;b2,0;;m0;;eargument;;poptions;;p">
</treenode>
<treenode node="describeInputDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\Descriptor.php;f23;91;105;91;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Describes an InputDefinition instance.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |mixed;;d-1,-1;;b2,0;;m0;;edefinition;;poptions;;p">
</treenode>
<treenode node="describeInputOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\Descriptor.php;f23;84;93;84;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Describes an InputOption instance.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |mixed;;d-1,-1;;b2,0;;m0;;eoption;;poptions;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\Descriptor.php;f14;67;5;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    write($content, $decorated = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Writes content to output.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;&#10;    bool &lt;b&gt;$decorated&lt;/b&gt;;;d4,68;;b2,0;;m0;;estring $content;;pbool $decorated;;p">
</treenode>
</treenode>
<treenode node="DescriptorApplication1;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorApplication1.php;f0;15;1;17;;;;vpos;;v;;aApplication;;c;;r;;d0,16;;b0,0;;m0;;e">
</treenode>
<treenode node="DescriptorApplication2;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorApplication2.php;f0;15;1;25;;;;vpos;;v;;aApplication;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorApplication2.php;f11;17;5;24;;;;vpos;;v;;a;;r;;d4,18;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DescriptorApplicationMbString;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorApplicationMbString.php;f0;15;1;23;;;;vpos;;v;;aApplication;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorApplicationMbString.php;f11;17;5;22;;;;vpos;;v;;a;;r;;d4,18;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DescriptorCommand1;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorCommand1.php;f0;15;1;26;;;;vpos;;v;;aCommand;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorCommand1.php;f14;17;5;25;;;;vpos;;v;;a;;r;;d4,18;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DescriptorCommand2;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorCommand2.php;f0;17;1;31;;;;vpos;;v;;aCommand;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorCommand2.php;f14;19;5;30;;;;vpos;;v;;a;;r;;d4,20;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DescriptorCommand3;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorCommand3.php;f0;15;1;26;;;;vpos;;v;;aCommand;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorCommand3.php;f14;17;5;25;;;;vpos;;v;;a;;r;;d4,18;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DescriptorCommand4;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorCommand4.php;f0;15;1;24;;;;vpos;;v;;aCommand;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorCommand4.php;f14;17;5;23;;;;vpos;;v;;a;;r;;d4,18;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DescriptorCommandMbString;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorCommandMbString.php;f0;17;1;31;;;;vpos;;v;;aCommand;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DescriptorCommandMbString.php;f14;19;5;30;;;;vpos;;v;;a;;r;;d4,20;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DescriptorHelper;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\DescriptorHelper.php;f0;26;1;90;;;;vpos;;v;;aHelper;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DescriptorHelper extends Helper&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class adds helper method to describe objects in various formats.&#10;&lt;b&gt;author&lt;/b&gt;: Jean-François Simon &lt;contact&#10;&lt;b&gt;jfsimon&lt;/b&gt;: .fr&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\DescriptorHelper.php;f11;33;5;41;;;;vpos;;v;;a;;r;;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="describe;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\DescriptorHelper.php;f11;54;5;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describe(OutputInterface $output, $object, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Describes an object if supported.&#10;Available options are:&#10;* format: string, the output format name&#10;* raw_text: boolean, sets output type as raw&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException when the given format is not supported&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    object &lt;b&gt;$object&lt;/b&gt;;;d4,55;;b1,0;;m0;;eoutput;;pobject;;poptions;;p">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\DescriptorHelper.php;f11;86;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,87;;b1,0;;m0;;e">
</treenode>
<treenode node="register;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\DescriptorHelper.php;f11;76;5;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    register($format, DescriptorInterface $descriptor)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Registers a descriptor.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$format&lt;/b&gt;;;d4,77;;b1,0;;m0;;eformat;;pdescriptor;;p">
</treenode>
</treenode>
<treenode node="Diff;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Diff.php;f6;12;1;66;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Diff.php;f6;12;1;66;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Diff.php;f0;12;1;72;;;;vpos;;v;;a;;r;;d0,13;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Diff.php;f11;34;5;39;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Diff.php;f11;34;5;39;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Diff.php;f11;34;5;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($from, $to, array $chunks = [])&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$from&lt;/b&gt;&#10;    string &lt;b&gt;$to&lt;/b&gt;&#10;    Chunk[] &lt;b&gt;$chunks&lt;/b&gt;;;d4,35;;b1,0;;m0;;estring $from;;pstring $to;;pChunk[] $chunks;;p">
</treenode>
<treenode node="getChunks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Diff.php;f11;54;5;57;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Diff.php;f11;54;5;57;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Diff.php;f11;60;5;63;;;;vpos;;v;;aChunk;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getChunks()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,55;;b1,0;;m0;;e">
</treenode>
<treenode node="getFrom;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Diff.php;f11;41;5;44;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Diff.php;f11;41;5;44;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Diff.php;f11;44;5;47;;;;vpos;;v;;a;;r;;d4,42;;b1,0;;m0;;e">
</treenode>
<treenode node="getTo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Diff.php;f11;46;5;49;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Diff.php;f11;46;5;49;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Diff.php;f11;52;5;55;;;;vpos;;v;;a;;r;;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="setChunks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Diff.php;f11;62;5;65;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Diff.php;f11;62;5;65;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Diff.php;f11;68;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setChunks(array $chunks)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Chunk[] &lt;b&gt;$chunks&lt;/b&gt;;;d4,63;;b1,0;;m0;;eChunk[] $chunks;;p">
</treenode>
</treenode>
<treenode node="DiffConsoleFormatter;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\DiffConsoleFormatter.php;f6;22;1;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DiffConsoleFormatter&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\DiffConsoleFormatter.php;f11;38;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($isDecoratedOutput, $template = &apos;%s&apos;)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$isDecoratedOutput&lt;/b&gt;&#10;    string &lt;b&gt;$template&lt;/b&gt;;;d4,39;;b1,0;;m0;;ebool $isDecoratedOutput;;pstring $template;;p">
</treenode>
<treenode node="format;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\DiffConsoleFormatter.php;f11;50;5;100;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    format($diff, $lineTemplate = &apos;%s&apos;)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$diff&lt;/b&gt;&#10;    string &lt;b&gt;$lineTemplate&lt;/b&gt;;;d4,51;;b1,0;;m0;;estring $diff;;pstring $lineTemplate;;p">
</treenode>
</treenode>
<treenode node="DiffOnlyOutputBuilder;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\DiffOnlyOutputBuilder.php;f6;18;1;65;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Output\DiffOnlyOutputBuilder.php;f6;15;1;62;;;;vpos;;v;;aDiffOutputBuilderInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DiffOnlyOutputBuilder implements DiffOutputBuilderInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Builds a diff string representation in a loose unified diff format&#10;listing only changes lines. Does not include line numbers.;;d0,19;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\DiffOnlyOutputBuilder.php;f11;25;5;28;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Output\DiffOnlyOutputBuilder.php;f11;22;5;25;;;;vpos;;v;;a;;r;;d4,26;;b1,0;;m0;;eheader;;p">
</treenode>
<treenode node="getDiff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\DiffOnlyOutputBuilder.php;f11;30;5;64;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Output\DiffOnlyOutputBuilder.php;f11;27;5;61;;;;vpos;;v;;a;;r;;d4,31;;b1,0;;m0;;ediff;;p">
</treenode>
</treenode>
<treenode node="Differ;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f6;18;1;328;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Differ.php;f6;18;1;320;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f0;19;1;398;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Differ&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Diff implementation.;;d0,19;;b0,0;;m0;;e">
<treenode node="ADDED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f9;21;15;21;;;;vpos;;v;;a;;r1;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="DIFF_LINE_END_WARNING;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f9;23;31;23;;;;vpos;;v;;a;;r3;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="NO_LINE_END_EOF_WARNING;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f9;24;33;24;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="OLD;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f9;20;13;20;;;;vpos;;v;;a;;r0;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="REMOVED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f9;22;17;22;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f11;36;5;55;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Differ.php;f11;30;5;49;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f11;35;5;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($outputBuilder = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DiffOutputBuilderInterface &lt;b&gt;$outputBuilder&lt;/b&gt;;;d4,37;;b1,0;;m0;;eDiffOutputBuilderInterface $outputBuilder;;p">
</treenode>
<treenode node="calculateEstimatedFootprint;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f12;215;5;220;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Differ.php;f12;207;5;212;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f12;331;5;336;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calculateEstimatedFootprint(array $from, array $to)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculates the estimated memory footprint for the DP-based method.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$from&lt;/b&gt;&#10;    array &lt;b&gt;$to&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,216;;b3,0;;m0;;earray $from;;parray $to;;p">
</treenode>
<treenode node="checkIfDiffInOld;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f12;90;5;113;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkIfDiffInOld(array $diff)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Takes input of the diff array and returns the old array.&#10;Iterates through diff line by line,&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$diff&lt;/b&gt;;;d4,91;;b3,0;;m0;;earray $diff;;p">
</treenode>
<treenode node="detectUnmatchedLineEndings;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f12;229;5;265;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Differ.php;f12;221;5;257;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f12;346;5;351;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    detectUnmatchedLineEndings(array $diff)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if line ends don&apos;t match in a diff.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$diff&lt;/b&gt;;;d4,230;;b3,0;;m0;;earray $diff;;p">
</treenode>
<treenode node="diff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f11;66;5;75;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Differ.php;f11;60;5;67;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f11;50;5;64;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    diff($from, $to, LongestCommonSubsequenceCalculator $lcs = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the diff between two arrays or strings as string.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array|string &lt;b&gt;$from&lt;/b&gt;&#10;    array|string &lt;b&gt;$to&lt;/b&gt;&#10;    null|LongestCommonSubsequenceCalculator &lt;b&gt;$lcs&lt;/b&gt;;;d4,67;;b1,0;;m0;;earray|string $from;;parray|string $to;;pnull|LongestCommonSubsequenceCalculator $lcs;;p">
</treenode>
<treenode node="diffToArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f11;94;5;156;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Differ.php;f11;102;5;164;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f11;203;5;274;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    diffToArray($from, $to, LongestCommonSubsequenceCalculator $lcs = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the diff between two arrays or strings as array.&#10;Each array element contains two elements:&#10;- [0] =&gt; mixed $token&#10;- [1] =&gt; 2|1|0&#10;- 2: REMOVED: $token was removed from $from&#10;- 1: ADDED: $token was added to $from&#10;- 0: OLD: $token is not changed in $to&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array|string &lt;b&gt;$from&lt;/b&gt;&#10;    array|string &lt;b&gt;$to&lt;/b&gt;&#10;    LongestCommonSubsequenceCalculator &lt;b&gt;$lcs&lt;/b&gt;;;d4,95;;b1,0;;m0;;earray|string $from;;parray|string $to;;pLongestCommonSubsequenceCalculator $lcs;;p">
</treenode>
<treenode node="getArrayDiffParted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f19;289;5;327;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Differ.php;f19;281;5;319;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f19;359;5;397;;;;vpos;;v;;a;;r;;d4,290;;b3,5;;m0;;efrom;;pto;;p">
</treenode>
<treenode node="getBuffer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f12;125;5;144;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBuffer(array $diff, array $old, $start, $end)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Generates buffer in string format, returning the patch.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$diff&lt;/b&gt;&#10;    array &lt;b&gt;$old&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;&#10;    int &lt;b&gt;$end&lt;/b&gt;;;d4,126;;b3,0;;m0;;earray $diff;;parray $old;;pint $start;;pint $end;;p">
</treenode>
<treenode node="getDiffBufferElement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f12;155;5;166;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDiffBufferElement(array $diff, $buffer, $diffIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets individual buffer element.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$diff&lt;/b&gt;&#10;    string &lt;b&gt;$buffer&lt;/b&gt;&#10;    int &lt;b&gt;$diffIndex&lt;/b&gt;;;d4,156;;b3,0;;m0;;earray $diff;;pstring $buffer;;pint $diffIndex;;p">
</treenode>
<treenode node="getDiffBufferElementNew;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f12;177;5;184;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDiffBufferElementNew(array $diff, $buffer, $diffIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets individual buffer element with opening.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$diff&lt;/b&gt;&#10;    string &lt;b&gt;$buffer&lt;/b&gt;&#10;    int &lt;b&gt;$diffIndex&lt;/b&gt;;;d4,178;;b3,0;;m0;;earray $diff;;pstring $buffer;;pint $diffIndex;;p">
</treenode>
<treenode node="getLinebreak;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f12;267;5;287;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Differ.php;f12;259;5;279;;;;vpos;;v;;a;;r;;d4,268;;b3,0;;m0;;eline;;p">
</treenode>
<treenode node="getNewLineMatches;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f12;283;5;288;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNewLineMatches($string)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get new strings denoting new lines from a given string.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$string&lt;/b&gt;;;d4,284;;b3,0;;m0;;estring $string;;p">
</treenode>
<treenode node="normalizeDiffInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f12;165;5;172;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    normalizeDiffInput($input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Casts variable to string if it is not a string or array.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$input&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,166;;b3,0;;m0;;emixed $input;;p">
</treenode>
<treenode node="selectLcsImplementation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f12;192;5;205;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Differ.php;f12;184;5;197;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f12;308;5;321;;;;vpos;;v;;aLongestCommonSubsequenceCalculator;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    selectLcsImplementation(array $from, array $to)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$from&lt;/b&gt;&#10;    array &lt;b&gt;$to&lt;/b&gt;;;d4,193;;b3,0;;m0;;earray $from;;parray $to;;p">
</treenode>
<treenode node="splitStringByLines;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Differ.php;f12;181;5;184;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Differ.php;f12;173;5;176;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f12;297;5;300;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    splitStringByLines($input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if input is string, if so it will split it line-by-line.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$input&lt;/b&gt;;;d4,182;;b3,0;;m0;;estring $input;;p">
</treenode>
<treenode node="validateDiffInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Differ.php;f12;76;5;83;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Differ.php;f12;73;5;80;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    validateDiffInput($input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Casts variable to string if it is not a string or array.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$input&lt;/b&gt;;;d4,77;;b3,0;;m0;;emixed $input;;p">
</treenode>
</treenode>
<treenode node="DirConstantFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\DirConstantFixer.php;f6;23;1;129;;;;vpos;;v;;aAbstractFunctionReferenceFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DirConstantFixer extends AbstractFunctionReferenceFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Vladimir Reznichenko &lt;kalessil&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\DirConstantFixer.php;f14;58;5;128;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\DirConstantFixer.php;f11;28;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\DirConstantFixer.php;f11;49;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\DirConstantFixer.php;f11;41;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="Directory;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Directory.php;f6;19;1;52;;;;vpos;;v;;aDirectoryInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Directory implements DirectoryInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Directory.php;f11;29;5;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($directoryName)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$directoryName&lt;/b&gt;;;d4,30;;b1,0;;m0;;estring $directoryName;;p">
</treenode>
<treenode node="getRelativePathTo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Directory.php;f11;34;5;46;;;;vpos;;v;;a;;r;;d4,35;;b1,0;;m0;;efile;;p">
</treenode>
<treenode node="normalizePath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Directory.php;f12;48;5;51;;;;vpos;;v;;a;;r;;d4,49;;b3,0;;m0;;epath;;p">
</treenode>
</treenode>
<treenode node="DirectoryNotFoundException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Exception\DirectoryNotFoundException.php;f0;16;1;18;;;;vpos;;v;;aInvalidArgumentException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DirectoryNotFoundException extends \InvalidArgumentException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Andreas Erhard &lt;andreas.erhard&#10;&lt;b&gt;i&lt;/b&gt;: -med.ac.at&gt;;;d0,17;;b0,0;;m0;;e">
</treenode>
<treenode node="DisabledCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f0;1784;1;1790;;;;vpos;;v;;aCommand;;c;;r;;d0,1785;;b0,0;;m0;;e">
<treenode node="isEnabled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1786;5;1789;;;;vpos;;v;;a;;r;;d4,1787;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DivisionByZeroError;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Resources\stubs\DivisionByZeroError.php;f0;2;1;4;;;;vpos;;v;;aError;;c;;r;;d0,3;;b0,0;;m0;;e">
</treenode>
<treenode node="DocBlock;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\DocBlock.php;f0;23;1;186;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DocBlock&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class represents a docblock.&#10;It internally splits it up into &quot;lines&quot; that we can manipulate.&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\DocBlock.php;f11;44;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($content)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create a new docblock instance.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;;;d4,45;;b1,0;;m0;;estring $content;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\DocBlock.php;f11;56;5;59;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __toString()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the string representation of object.;;d4,57;;b1,0;;m0;;e">
</treenode>
<treenode node="findAnnotationLength;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\DocBlock.php;f12;164;5;185;;;;vpos;;v;;a;;r;;d4,165;;b3,0;;m0;;estart;;p">
</treenode>
<treenode node="getAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\DocBlock.php;f11;119;5;126;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAnnotation($pos)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$pos&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |Annotation;;d4,120;;b1,0;;m0;;eint $pos;;p">
</treenode>
<treenode node="getAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\DocBlock.php;f11;90;5;112;;;;vpos;;v;;aAnnotation;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAnnotations()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get this docblock&apos;s annotations.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,91;;b1,0;;m0;;e">
</treenode>
<treenode node="getAnnotationsOfType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\DocBlock.php;f11;137;5;152;;;;vpos;;v;;aAnnotation;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAnnotationsOfType($types)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get specific types of annotations only.&#10;If none exist, we&apos;re returning an empty array.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$types&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,138;;b1,0;;m0;;estring|string[] $types;;p">
</treenode>
<treenode node="getContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\DocBlock.php;f11;159;5;162;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getContent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the actual content of this docblock.;;d4,160;;b1,0;;m0;;e">
</treenode>
<treenode node="getLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\DocBlock.php;f11;78;5;83;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLine($pos)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get a single line.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$pos&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |Line;;d4,79;;b1,0;;m0;;eint $pos;;p">
</treenode>
<treenode node="getLines;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\DocBlock.php;f11;66;5;69;;;;vpos;;v;;aLine;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLines()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get this docblock&apos;s lines.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,67;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DocLexer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f6;32;1;146;;;;vpos;;v;;aAbstractLexer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DocLexer extends AbstractLexer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Simple lexer for docblock annotations.&#10;&lt;b&gt;author&lt;/b&gt;: Benjamin Eberlei &lt;kontakt&#10;&lt;b&gt;beberlei&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Guilherme Blanco &lt;guilhermeblanco&#10;&lt;b&gt;hotmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Jonathan Wage &lt;jonwage&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Roman Borschel &lt;roman&#10;&lt;b&gt;code&lt;/b&gt;: -factory.org&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,33;;b0,0;;m0;;e">
<treenode node="T_AT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;41;14;41;;;;vpos;;v;;a;;r101;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_CLOSE_CURLY_BRACES;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;42;30;42;;;;vpos;;v;;a;;r102;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_CLOSE_PARENTHESIS;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;43;29;43;;;;vpos;;v;;a;;r103;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_COLON;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;52;17;52;;;;vpos;;v;;a;;r112;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_COMMA;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;44;17;44;;;;vpos;;v;;a;;r104;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_EQUALS;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;45;18;45;;;;vpos;;v;;a;;r105;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_FALSE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;46;17;46;;;;vpos;;v;;a;;r106;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_FLOAT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;37;17;37;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_IDENTIFIER;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;40;22;40;;;;vpos;;v;;a;;r100;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_INTEGER;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;35;19;35;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_MINUS;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;53;17;53;;;;vpos;;v;;a;;r113;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_NAMESPACE_SEPARATOR;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;47;31;47;;;;vpos;;v;;a;;r107;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_NONE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;34;16;34;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="T_NULL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;51;16;51;;;;vpos;;v;;a;;r111;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_OPEN_CURLY_BRACES;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;48;29;48;;;;vpos;;v;;a;;r108;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_OPEN_PARENTHESIS;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;49;28;49;;;;vpos;;v;;a;;r109;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_STRING;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;36;18;36;;;;vpos;;v;;a;;r3;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_TRUE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f9;50;16;50;;;;vpos;;v;;a;;r110;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="getCatchablePatterns;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f14;94;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCatchablePatterns()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,95;;b2,0;;m0;;e">
</treenode>
<treenode node="getNonCatchablePatterns;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f14;106;5;109;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNonCatchablePatterns()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,107;;b2,0;;m0;;e">
</treenode>
<treenode node="getType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f14;114;5;145;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getType(&amp;$value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,115;;b2,0;;m0;;evalue;;p">
</treenode>
<treenode node="nextTokenIsAdjacent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocLexer.php;f11;84;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    nextTokenIsAdjacent() : bool&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Whether the next token starts immediately, or if there were&#10;non-captured symbols before that;;d4,85;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DocParser;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f6;39;1;1196;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DocParser&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A parser for docblock annotations.&#10;It is strongly discouraged to change the default annotation parsing process.&#10;&lt;b&gt;author&lt;/b&gt;: Benjamin Eberlei &lt;kontakt&#10;&lt;b&gt;beberlei&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Guilherme Blanco &lt;guilhermeblanco&#10;&lt;b&gt;hotmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Jonathan Wage &lt;jonwage&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Roman Borschel &lt;roman&#10;&lt;b&gt;code&lt;/b&gt;: -factory.org&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Fabio B. Silva &lt;fabio.bat.silva&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,40;;b0,0;;m0;;e">
<treenode node="Annotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;679;5;845;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Annotation()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Annotation     ::= &quot;&#10;@&quot; AnnotationName MethodCall&#10;AnnotationName ::= QualifiedName | SimpleName&#10;QualifiedName  ::= NameSpacePart &quot;\&quot; {NameSpacePart &quot;\&quot;}* SimpleName&#10;NameSpacePart  ::= identifier | null | false | true&#10;SimpleName     ::= identifier | null | false | true&#10;&lt;b&gt;throws&lt;/b&gt;: AnnotationException&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   False if it is not a valid annotation.;;d4,680;;b3,0;;m0;;e">
</treenode>
<treenode node="Annotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;634;5;666;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Annotations()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Annotations ::= Annotation {[ &quot;*&quot; ]* [Annotation]}*;;d4,635;;b3,0;;m0;;e">
</treenode>
<treenode node="ArrayEntry;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;1151;5;1171;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ArrayEntry()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ArrayEntry ::= Value | KeyValuePair&#10;KeyValuePair ::= Key (&quot;=&quot; | &quot;:&quot;) PlainValue | Constant&#10;Key ::= string | integer | Constant;;d4,1152;;b3,0;;m0;;e">
</treenode>
<treenode node="Arrayx;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;1103;5;1142;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Arrayx()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Array ::= &quot;{&quot; ArrayEntry {&quot;,&quot; ArrayEntry}* [&quot;,&quot;] &quot;}&quot;;;d4,1104;;b3,0;;m0;;e">
</treenode>
<treenode node="Constant;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;923;5;981;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Constant()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constant ::= integer | string | float | boolean&#10;&lt;b&gt;throws&lt;/b&gt;: AnnotationException;;d4,924;;b3,0;;m0;;e">
</treenode>
<treenode node="FieldAssignment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;1084;5;1096;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    FieldAssignment()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    FieldAssignment ::= FieldName &quot;=&quot; PlainValue&#10;FieldName ::= identifier&#10;\stdClass;;d4,1085;;b3,0;;m0;;e">
</treenode>
<treenode node="Identifier;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;988;5;1011;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Identifier()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Identifier ::= string;;d4,989;;b3,0;;m0;;e">
</treenode>
<treenode node="MethodCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;852;5;869;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    MethodCall()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    MethodCall ::= [&quot;(&quot; [Values] &quot;)&quot;];;d4,853;;b3,0;;m0;;e">
</treenode>
<treenode node="PlainValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;1034;5;1076;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    PlainValue()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    PlainValue ::= integer | string | float | boolean | Array | Annotation;;d4,1035;;b3,0;;m0;;e">
</treenode>
<treenode node="Value;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;1018;5;1027;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Value()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Value ::= PlainValue | FieldAssignment;;d4,1019;;b3,0;;m0;;e">
</treenode>
<treenode node="Values;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;876;5;914;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Values()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Values ::= Array | Value {&quot;,&quot; Value}* [&quot;,&quot;];;d4,877;;b3,0;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f11;241;5;244;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constructs a new DocParser.;;d4,242;;b1,0;;m0;;e">
</treenode>
<treenode node="addNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f11;294;5;301;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addNamespace($namespace)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the default namespaces.&#10;&lt;b&gt;throws&lt;/b&gt;: \RuntimeException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$namespace&lt;/b&gt;;;d4,295;;b1,0;;m0;;estring $namespace;;p">
</treenode>
<treenode node="classExists;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;456;5;469;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    classExists($fqcn)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Attempts to check if a class exists or not. This never goes through the PHP autoloading mechanism&#10;but uses the {&#10;&lt;b&gt;link&lt;/b&gt;: AnnotationRegistry} to load classes.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$fqcn&lt;/b&gt;;;d4,457;;b3,0;;m0;;estring $fqcn;;p">
</treenode>
<treenode node="collectAnnotationMetadata;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;478;5;577;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    collectAnnotationMetadata($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Collects parsing metadata for a given annotation class&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The annotation name;;d4,479;;b3,0;;m0;;estring $name;;p">
</treenode>
<treenode node="collectAttributeTypeMetadata;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;587;5;627;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    collectAttributeTypeMetadata(&amp;$metadata, Attribute $attribute)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Collects parsing metadata for a given attribute.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$metadata&lt;/b&gt;&#10;    Attribute &lt;b&gt;$attribute&lt;/b&gt;;;d4,588;;b3,0;;m0;;earray $metadata;;pAttribute $attribute;;p">
</treenode>
<treenode node="findInitialTokenPosition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;363;5;380;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findInitialTokenPosition($input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds the first valid annotation&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$input&lt;/b&gt;: The docblock string to parse&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,364;;b3,0;;m0;;estring $input;;p">
</treenode>
<treenode node="isIgnoredAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;1180;5;1195;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isIgnoredAnnotation($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks whether the given $name matches any ignored annotation name or namespace&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d4,1181;;b3,0;;m0;;estring $name;;p">
</treenode>
<treenode node="match;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;390;5;397;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    match($token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Attempts to match the given token with the current lookahead token.&#10;If they match, updates the lookahead token;s otherwise raises a syntax error.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    integer &lt;b&gt;$token&lt;/b&gt;: Type of token.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   True if tokens match;s false otherwise.;;d4,391;;b3,0;;m0;;einteger $token;;p">
</treenode>
<treenode node="matchAny;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;409;5;416;;;;vpos;;v;;aboolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    matchAny(array $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Attempts to match the current lookahead token with any of the given tokens.&#10;If any of them matches, this method updates the lookahead token;s otherwise&#10;a syntax error is raised.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$tokens&lt;/b&gt;;;d4,410;;b3,0;;m0;;earray $tokens;;p">
</treenode>
<treenode node="parse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f11;341;5;354;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parse($input, $context = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses the given docblock string for annotations.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$input&lt;/b&gt;: The docblock string to parse.&#10;    string &lt;b&gt;$context&lt;/b&gt;: The parsing context.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Array of annotations. If no annotations are found, an empty array is returned.;;d4,342;;b1,0;;m0;;estring $input;;pstring $context;;p">
</treenode>
<treenode node="setIgnoreNotImportedAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f11;280;5;283;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setIgnoreNotImportedAnnotations($bool)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets ignore on not-imported annotations.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$bool&lt;/b&gt;;;d4,281;;b1,0;;m0;;eboolean $bool;;p">
</treenode>
<treenode node="setIgnoredAnnotationNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f11;256;5;259;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setIgnoredAnnotationNames(array $names)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the annotation names that are ignored during the parsing process.&#10;The names are supposed to be the raw names as used in the class, not the&#10;fully qualified class names.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool[] &lt;b&gt;$names&lt;/b&gt;: indexed by annotation name;;d4,257;;b1,0;;m0;;ebool[] $names;;p">
</treenode>
<treenode node="setIgnoredAnnotationNamespaces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f11;268;5;271;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setIgnoredAnnotationNamespaces($ignoredAnnotationNamespaces)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the annotation namespaces that are ignored during the parsing process.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool[] &lt;b&gt;$ignoredAnnotationNamespaces&lt;/b&gt;: indexed by annotation namespace name;;d4,269;;b1,0;;m0;;ebool[] $ignoredAnnotationNamespaces;;p">
</treenode>
<treenode node="setImports;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f11;312;5;319;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setImports(array $imports)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the imports.&#10;&lt;b&gt;throws&lt;/b&gt;: \RuntimeException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$imports&lt;/b&gt;;;d4,313;;b1,0;;m0;;earray $imports;;p">
</treenode>
<treenode node="setTarget;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f11;328;5;331;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTarget($target)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets current target context as bitmask.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    integer &lt;b&gt;$target&lt;/b&gt;;;d4,329;;b1,0;;m0;;einteger $target;;p">
</treenode>
<treenode node="syntaxError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php;f12;428;5;446;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    syntaxError($expected, $token = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Generates a new syntax error.&#10;&lt;b&gt;throws&lt;/b&gt;: AnnotationException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$expected&lt;/b&gt;: Expected string.&#10;    array|null &lt;b&gt;$token&lt;/b&gt;: Optional token.;;d4,429;;b3,0;;m0;;estring $expected;;parray|null $token;;p">
</treenode>
</treenode>
<treenode node="DoctrineAnnotationArrayAssignmentFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationArrayAssignmentFixer.php;f6;25;1;102;;;;vpos;;v;;aAbstractDoctrineAnnotationFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DoctrineAnnotationArrayAssignmentFixer extends AbstractDoctrineAnnotationFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Forces the configured operator for assignment in arrays in Doctrine Annotations.;;d0,26;;b0,0;;m0;;e">
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationArrayAssignmentFixer.php;f14;58;5;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b2,0;;m0;;e">
</treenode>
<treenode node="fixAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationArrayAssignmentFixer.php;f14;75;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixAnnotations(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,76;;b2,0;;m0;;etokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationArrayAssignmentFixer.php;f11;30;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationArrayAssignmentFixer.php;f11;49;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DoctrineAnnotationBracesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationBracesFixer.php;f6;26;1;128;;;;vpos;;v;;aAbstractDoctrineAnnotationFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DoctrineAnnotationBracesFixer extends AbstractDoctrineAnnotationFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds braces to Doctrine annotations when missing.;;d0,27;;b0,0;;m0;;e">
<treenode node="addBracesToAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationBracesFixer.php;f12;78;5;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addBracesToAnnotations(Tokens $tokens)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;;;d4,79;;b3,0;;m0;;eTokens $tokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationBracesFixer.php;f14;50;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b2,0;;m0;;e">
</treenode>
<treenode node="fixAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationBracesFixer.php;f14;66;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixAnnotations(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b2,0;;m0;;etokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationBracesFixer.php;f11;31;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="removesBracesFromAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationBracesFixer.php;f12;98;5;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removesBracesFromAnnotations(Tokens $tokens)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;;;d4,99;;b3,0;;m0;;eTokens $tokens;;p">
</treenode>
</treenode>
<treenode node="DoctrineAnnotationIndentationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationIndentationFixer.php;f6;23;1;201;;;;vpos;;v;;aAbstractDoctrineAnnotationFixer;;c;;r;;d0,24;;b0,0;;m0;;e">
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationIndentationFixer.php;f14;45;5;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,46;;b2,0;;m0;;e">
</treenode>
<treenode node="fixAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationIndentationFixer.php;f14;61;5;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixAnnotations(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,62;;b2,0;;m0;;etokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationIndentationFixer.php;f11;28;5;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="getLineBracesCount;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationIndentationFixer.php;f12;119;5;148;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLineBracesCount(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,120;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="indentationCanBeFixed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationIndentationFixer.php;f12;181;5;200;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    indentationCanBeFixed(Tokens $tokens, $newLineTokenIndex, array $annotationPositions)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$newLineTokenIndex&lt;/b&gt;&#10;    array&lt;array&lt;int&gt;&gt; &lt;b&gt;$annotationPositions&lt;/b&gt;: Pairs of begin and end indexes of main annotations;;d4,182;;b3,0;;m0;;eTokens $tokens;;pint $newLineTokenIndex;;parray&lt;array&lt;int&gt;&gt; $annotationPositions;;p">
</treenode>
<treenode node="isClosingLineWithMeaningfulContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationIndentationFixer.php;f12;156;5;172;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isClosingLineWithMeaningfulContent(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,157;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="DoctrineAnnotationSpacesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationSpacesFixer.php;f6;27;1;346;;;;vpos;;v;;aAbstractDoctrineAnnotationFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DoctrineAnnotationSpacesFixer extends AbstractDoctrineAnnotationFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixes spaces around commas and assignment operators in Doctrine annotations.;;d0,28;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationSpacesFixer.php;f11;45;5;72;;;;vpos;;v;;a;;r;;d4,46;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationSpacesFixer.php;f14;77;5;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,78;;b2,0;;m0;;e">
</treenode>
<treenode node="fixAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationSpacesFixer.php;f14;131;5;151;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixAnnotations(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,132;;b2,0;;m0;;etokens;;p">
</treenode>
<treenode node="fixAroundAssignments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationSpacesFixer.php;f12;250;5;301;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixAroundAssignments(Tokens $tokens)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;;;d4,251;;b3,0;;m0;;eTokens $tokens;;p">
</treenode>
<treenode node="fixSpacesAroundCommas;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationSpacesFixer.php;f12;208;5;245;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSpacesAroundCommas(Tokens $tokens)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;;;d4,209;;b3,0;;m0;;eTokens $tokens;;p">
</treenode>
<treenode node="fixSpacesAroundParentheses;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationSpacesFixer.php;f12;156;5;203;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSpacesAroundParentheses(Tokens $tokens)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;;;d4,157;;b3,0;;m0;;eTokens $tokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationSpacesFixer.php;f11;32;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="updateSpacesAfter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationSpacesFixer.php;f12;308;5;311;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    updateSpacesAfter(Tokens $tokens, $index, $insert)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    null|bool &lt;b&gt;$insert&lt;/b&gt;;;d4,309;;b3,0;;m0;;eTokens $tokens;;pint $index;;pnull|bool $insert;;p">
</treenode>
<treenode node="updateSpacesAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationSpacesFixer.php;f12;329;5;345;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    updateSpacesAt(Tokens $tokens, $index, $insertIndex, $insert)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    int &lt;b&gt;$insertIndex&lt;/b&gt;&#10;    null|bool &lt;b&gt;$insert&lt;/b&gt;;;d4,330;;b3,0;;m0;;eTokens $tokens;;pint $index;;pint $insertIndex;;pnull|bool $insert;;p">
</treenode>
<treenode node="updateSpacesBefore;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\DoctrineAnnotation\DoctrineAnnotationSpacesFixer.php;f12;318;5;321;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    updateSpacesBefore(Tokens $tokens, $index, $insert)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    null|bool &lt;b&gt;$insert&lt;/b&gt;;;d4,319;;b3,0;;m0;;eTokens $tokens;;pint $index;;pnull|bool $insert;;p">
</treenode>
</treenode>
<treenode node="DummyOutput;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DummyOutput.php;f0;20;1;35;;;;vpos;;v;;aBufferedOutput;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class DummyOutput extends BufferedOutput&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Dummy output.&#10;&lt;b&gt;author&lt;/b&gt;: Kévin Dunglas &lt;dunglas&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="getLogs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\DummyOutput.php;f11;25;5;34;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLogs()&#10;;;d4,26;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="DummyTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f0;207;1;212;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\LoggerInterfaceTest.php;f0;138;1;143;;;;vpos;;v;;a;;r;;d0,208;;b0,0;;m0;;e">
<treenode node="__toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Logger\ConsoleLoggerTest.php;f11;209;5;211;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\LoggerInterfaceTest.php;f11;140;5;142;;;;vpos;;v;;a;;r;;d4,210;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Dumper;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Dumper.php;f6;21;1;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Dumper&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Roland Franssen &lt;franssen.roland&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Dumper.php;f11;28;5;57;;;;vpos;;v;;a;;r;;d4,29;;b1,0;;m0;;eoutput;;pdumper;;pcloner;;p">
</treenode>
<treenode node="__invoke;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Dumper.php;f11;59;5;62;;;;vpos;;v;;a string;;r;;d4,60;;b1,0;;m0;;evar;;p">
</treenode>
</treenode>
<treenode node="DumperNativeFallbackTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\DumperNativeFallbackTest.php;f0;19;1;57;;;;vpos;;v;;aTestCase;;c;;r;;d0,20;;b0,0;;m0;;e">
<treenode node="provideVariables;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\DumperNativeFallbackTest.php;f11;44;5;56;;;;vpos;;v;;a;;r;;d4,45;;b1,0;;m0;;e">
</treenode>
<treenode node="setUpBeforeClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\DumperNativeFallbackTest.php;f18;21;5;27;;;;vpos;;v;;a void;;r;;d4,22;;b1,5;;m0;;e">
</treenode>
<treenode node="tearDownAfterClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\DumperNativeFallbackTest.php;f18;29;5;32;;;;vpos;;v;;a void;;r;;d4,30;;b1,5;;m0;;e">
</treenode>
<treenode node="testInvoke;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\DumperNativeFallbackTest.php;f11;37;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testInvoke($variable, $primitiveString)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideVariables;;d4,38;;b1,0;;m0;;evariable;;pprimitiveString;;p">
</treenode>
</treenode>
<treenode node="DumperTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\DumperTest.php;f0;18;1;60;;;;vpos;;v;;aTestCase;;cVarDumperTestTrait;;c;;r;;d0,19;;b0,0;;m0;;e">
<treenode node="provideVariables;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\DumperTest.php;f11;47;5;59;;;;vpos;;v;;a;;r;;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="setUpBeforeClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\DumperTest.php;f18;22;5;26;;;;vpos;;v;;a void;;r;;d4,23;;b1,5;;m0;;e">
</treenode>
<treenode node="tearDownAfterClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\DumperTest.php;f18;28;5;32;;;;vpos;;v;;a void;;r;;d4,29;;b1,5;;m0;;e">
</treenode>
<treenode node="testInvoke;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\DumperTest.php;f11;37;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testInvoke($variable)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideVariables;;d4,38;;b1,0;;m0;;evariable;;p">
</treenode>
</treenode>
<treenode node="ElseifFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\ElseifFixer.php;f6;25;1;90;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ElseifFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶5.1.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\ElseifFixer.php;f14;51;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replace all `else if` (T_ELSE T_IF) with `elseif` (T_ELSEIF).&#10;{&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\ElseifFixer.php;f11;30;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\ElseifFixer.php;f11;41;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="EmptyConstraint;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\EmptyConstraint.php;f0;16;1;58;;;;vpos;;v;;aConstraintInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class EmptyConstraint implements ConstraintInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the absence of a constraint.;;d0,17;;b0,0;;m0;;e">
<treenode node="__toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\EmptyConstraint.php;f11;54;5;57;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __toString()&#10;;;d4,55;;b1,0;;m0;;e">
</treenode>
<treenode node="getPrettyString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\EmptyConstraint.php;f11;42;5;49;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPrettyString()&#10;;;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="matches;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\EmptyConstraint.php;f11;26;5;29;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    matches(ConstraintInterface $provider)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ConstraintInterface &lt;b&gt;$provider&lt;/b&gt;;;d4,27;;b1,0;;m0;;eConstraintInterface $provider;;p">
</treenode>
<treenode node="setPrettyString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\EmptyConstraint.php;f11;34;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPrettyString($prettyString)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$prettyString&lt;/b&gt;;;d4,35;;b1,0;;m0;;e $prettyString;;p">
</treenode>
</treenode>
<treenode node="EncodingFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\EncodingFixer.php;f6;25;1;92;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class EncodingFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR1 ¶2.2.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\EncodingFixer.php;f11;29;5;34;;;;vpos;;v;;a;;r;;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\EncodingFixer.php;f14;74;5;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,75;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\EncodingFixer.php;f11;39;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\EncodingFixer.php;f11;57;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\EncodingFixer.php;f11;66;5;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="Enum;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\Enum.php;f6;35;1;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Enum&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Annotation that can be used to signal to the parser&#10;to check the available values during the parsing process.&#10;&lt;b&gt;since&lt;/b&gt;: 2.4&#10;&lt;b&gt;author&lt;/b&gt;: Fabio B. Silva &lt;fabio.bat.silva&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;Annotation&lt;/b&gt;&#10;&lt;b&gt;Attributes&lt;/b&gt;: ({&#10;&lt;b&gt;Attribute&lt;/b&gt;: (&quot;value&quot;,   required = true,  type = &quot;array&quot;),&#10;&lt;b&gt;Attribute&lt;/b&gt;: (&quot;literal&quot;, required = false, type = &quot;array&quot;)&#10;});;d0,36;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\Enum.php;f11;56;5;82;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(array $values)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Annotation constructor.&#10;&lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$values&lt;/b&gt;;;d4,57;;b1,0;;m0;;earray $values;;p">
</treenode>
</treenode>
<treenode node="EregToPregFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\EregToPregFixer.php;f6;27;1;183;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class EregToPregFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Matteo Beccati &lt;matteo&#10;&lt;b&gt;beccati&lt;/b&gt;: .com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\EregToPregFixer.php;f14;79;5;133;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,80;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="checkPreg;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\EregToPregFixer.php;f12;142;5;151;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkPreg($pattern)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check the validity of a PCRE.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pattern&lt;/b&gt;: the regular expression;;d4,143;;b3,0;;m0;;estring $pattern;;p">
</treenode>
<treenode node="getBestDelimiter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\EregToPregFixer.php;f12;160;5;182;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBestDelimiter($pattern)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the delimiter that would require the least escaping in a regular expression.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pattern&lt;/b&gt;: the regular expression&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the preg delimiter;;d4,161;;b3,0;;m0;;estring $pattern;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\EregToPregFixer.php;f11;50;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\EregToPregFixer.php;f11;63;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,64;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\EregToPregFixer.php;f11;71;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,72;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Error;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Resources\stubs\Error.php;f0;2;1;4;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\Error.php;f6;21;1;118;;;;vpos;;v;;aException;;c;;r;;d0,3;;b0,0;;m0;;e">
<treenode node="TYPE_EXCEPTION;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\Error.php;f9;31;24;31;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Error which has occurred during fixing phase.;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="TYPE_INVALID;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\Error.php;f9;26;22;26;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Error which has occurred in linting phase, before applying any fixers.;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="TYPE_LINT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\Error.php;f9;36;19;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Error which has occurred in linting phase, after applying any fixers.;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\Error.php;f11;70;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($type, $filePath, $source = null, array $appliedFixers = [], $diff = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$type&lt;/b&gt;&#10;    string &lt;b&gt;$filePath&lt;/b&gt;&#10;    null|\Throwable &lt;b&gt;$source&lt;/b&gt;&#10;    array &lt;b&gt;$appliedFixers&lt;/b&gt;&#10;    null|string &lt;b&gt;$diff&lt;/b&gt;;;d4,71;;b1,0;;m0;;eint $type;;pstring $filePath;;pnull|\Throwable $source;;parray $appliedFixers;;pnull|string $diff;;p">
</treenode>
<treenode node="getAppliedFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\Error.php;f11;106;5;109;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAppliedFixers()&#10;;;d4,107;;b1,0;;m0;;e">
</treenode>
<treenode node="getDiff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\Error.php;f11;114;5;117;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDiff()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,115;;b1,0;;m0;;e">
</treenode>
<treenode node="getFilePath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\Error.php;f11;82;5;85;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFilePath()&#10;;;d4,83;;b1,0;;m0;;e">
</treenode>
<treenode node="getSource;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\Error.php;f11;90;5;93;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSource()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |\Throwable;;d4,91;;b1,0;;m0;;e">
</treenode>
<treenode node="getType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\Error.php;f11;98;5;101;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getType()&#10;;;d4,99;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ErrorListener;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\EventListener\ErrorListener.php;f0;24;1;94;;;;vpos;;v;;aEventSubscriberInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ErrorListener implements EventSubscriberInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: James Halsall &lt;james.t.halsall&#10;&lt;b&gt;googlemail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Robin Chalas &lt;robin.chalas&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\EventListener\ErrorListener.php;f11;28;5;31;;;;vpos;;v;;a;;r;;d4,29;;b1,0;;m0;;elogger;;p">
</treenode>
<treenode node="getInputString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\EventListener\ErrorListener.php;f19;79;5;93;;;;vpos;;v;;a;;r;;d4,80;;b3,5;;m0;;eevent;;p">
</treenode>
<treenode node="getSubscribedEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\EventListener\ErrorListener.php;f18;71;5;77;;;;vpos;;v;;a;;r;;d4,72;;b1,5;;m0;;e">
</treenode>
<treenode node="onConsoleError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\EventListener\ErrorListener.php;f11;33;5;48;;;;vpos;;v;;a;;r;;d4,34;;b1,0;;m0;;eevent;;p">
</treenode>
<treenode node="onConsoleTerminate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\EventListener\ErrorListener.php;f11;50;5;69;;;;vpos;;v;;a;;r;;d4,51;;b1,0;;m0;;eevent;;p">
</treenode>
</treenode>
<treenode node="ErrorListenerTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f0;26;1;136;;;;vpos;;v;;aTestCase;;c;;r;;d0,27;;b0,0;;m0;;e">
<treenode node="getConsoleTerminateEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f12;127;5;130;;;;vpos;;v;;a;;r;;d4,128;;b3,0;;m0;;einput;;pexitCode;;p">
</treenode>
<treenode node="getLogger;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f12;122;5;125;;;;vpos;;v;;a;;r;;d4,123;;b3,0;;m0;;e">
</treenode>
<treenode node="getOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f12;132;5;135;;;;vpos;;v;;a;;r;;d4,133;;b3,0;;m0;;e">
</treenode>
<treenode node="testAllKindsOfInputCanBeLogged;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f11;94;5;107;;;;vpos;;v;;a;;r;;d4,95;;b1,0;;m0;;e">
</treenode>
<treenode node="testCommandNameIsDisplayedForNonStringableInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f11;109;5;120;;;;vpos;;v;;a;;r;;d4,110;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetSubscribedEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f11;83;5;92;;;;vpos;;v;;a;;r;;d4,84;;b1,0;;m0;;e">
</treenode>
<treenode node="testOnConsoleError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f11;28;5;41;;;;vpos;;v;;a;;r;;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="testOnConsoleErrorWithNoCommandAndNoInputString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f11;43;5;56;;;;vpos;;v;;a;;r;;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="testOnConsoleTerminateForNonZeroExitCodeWritesToLog;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f11;58;5;69;;;;vpos;;v;;a;;r;;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="testOnConsoleTerminateForZeroExitCodeDoesNotWriteToLog;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f11;71;5;81;;;;vpos;;v;;a;;r;;d4,72;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ErrorOutput;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\ErrorOutput.php;f6;25;1;153;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ErrorOutput&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\ErrorOutput.php;f11;37;5;41;;;;vpos;;v;;a;;r;;d4,38;;b1,0;;m0;;eoutput;;p">
</treenode>
<treenode node="listErrors;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\ErrorOutput.php;f11;47;5;118;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    listErrors($process, array $errors)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$process&lt;/b&gt;&#10;    Error[] &lt;b&gt;$errors&lt;/b&gt;;;d4,48;;b1,0;;m0;;estring $process;;pError[] $errors;;p">
</treenode>
<treenode node="outputTrace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\ErrorOutput.php;f12;123;5;139;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    outputTrace(array $trace)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$trace&lt;/b&gt;;;d4,124;;b3,0;;m0;;earray $trace;;p">
</treenode>
<treenode node="prepareOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\ErrorOutput.php;f12;146;5;152;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    prepareOutput($string)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$string&lt;/b&gt;;;d4,147;;b3,0;;m0;;estring $string;;p">
</treenode>
</treenode>
<treenode node="ErrorSuppressionFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ErrorSuppressionFixer.php;f6;28;1;175;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ErrorSuppressionFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jules Pietri &lt;jules&#10;&lt;b&gt;heahprod&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Kuba Werlos &lt;werlos&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="OPTION_MUTE_DEPRECATION_ERROR;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ErrorSuppressionFixer.php;f9;30;39;30;;;;vpos;;v;;a;;r&apos;mute_deprecation_error&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="OPTION_NOISE_REMAINING_USAGES;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ErrorSuppressionFixer.php;f9;31;39;31;;;;vpos;;v;;a;;r&apos;noise_remaining_usages&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="OPTION_NOISE_REMAINING_USAGES_EXCLUDE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ErrorSuppressionFixer.php;f9;32;47;32;;;;vpos;;v;;a;;r&apos;noise_remaining_usages_exclude&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ErrorSuppressionFixer.php;f14;100;5;152;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,101;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ErrorSuppressionFixer.php;f14;79;5;95;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,80;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ErrorSuppressionFixer.php;f11;37;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ErrorSuppressionFixer.php;f11;63;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,64;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isDeprecationErrorCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ErrorSuppressionFixer.php;f12;160;5;174;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isDeprecationErrorCall(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,161;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ErrorSuppressionFixer.php;f11;71;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,72;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ErrorsManager;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\ErrorsManager.php;f6;21;1;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ErrorsManager&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Manager of errors that occur during fixing.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="getExceptionErrors;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\ErrorsManager.php;f11;45;5;50;;;;vpos;;v;;aError;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getExceptionErrors()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns errors reported during fixing.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,46;;b1,0;;m0;;e">
</treenode>
<treenode node="getInvalidErrors;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\ErrorsManager.php;f11;33;5;38;;;;vpos;;v;;aError;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getInvalidErrors()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns errors reported during linting before fixing.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="getLintErrors;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\ErrorsManager.php;f11;57;5;62;;;;vpos;;v;;aError;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLintErrors()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns errors reported during linting after fixing.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="isEmpty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\ErrorsManager.php;f11;69;5;72;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isEmpty()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if no errors were reported.;;d4,70;;b1,0;;m0;;e">
</treenode>
<treenode node="report;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Error\ErrorsManager.php;f11;77;5;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    report(Error $error)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Error &lt;b&gt;$error&lt;/b&gt;;;d4,78;;b1,0;;m0;;eError $error;;p">
</treenode>
</treenode>
<treenode node="EscapeImplicitBackslashesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\EscapeImplicitBackslashesFixer.php;f6;27;1;165;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class EscapeImplicitBackslashesFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\EscapeImplicitBackslashesFixer.php;f14;95;5;143;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,96;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\EscapeImplicitBackslashesFixer.php;f14;148;5;164;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,149;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\EscapeImplicitBackslashesFixer.php;f11;32;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\EscapeImplicitBackslashesFixer.php;f11;86;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,87;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\EscapeImplicitBackslashesFixer.php;f11;78;5;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,79;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="Event;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher-contracts\Event.php;f4;31;5;94;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Event.php;f0;16;1;37;;;;vpos;;v;;aStoppableEventInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Event implements StoppableEventInterface&#10;    {&#10;        private $propagationStopped = false;s&#10;&#10;        /**&#10;         * Returns whether further event listeners should be triggered.&#10;         */&#10;        public  isPropagationStopped(): bool&#10;        {&#10;            return $this-&gt;propagationStopped;s&#10;        }&#10;&#10;        /**&#10;         * Stops the propagation of the event to further event listeners.&#10;         *&#10;         * If multiple event listeners are connected to the same event, no&#10;         * further event listener will be triggered once any trigger calls&#10;         * stopPropagation().&#10;         */&#10;        public function stopPropagation(): void&#10;        {&#10;            $this-&gt;propagationStopped = true;s&#10;        }&#10;    }&#10;} else {&#10;    /**&#10;     * Event is the base class for classes containing event data.&#10;     *&#10;     * This class contains no event data. It is used by events that do not pass&#10;     * state information to an event handler when an event is raised.&#10;     *&#10;     * You can call the method stopPropagation() to abort the execution of&#10;     * further listeners in your event listener.&#10;     *&#10;     * @author Guilherme Blanco &lt;guilhermeblanco@hotmail.com&gt;&#10;     * @author Jonathan Wage &lt;jonwage@gmail.com&gt;&#10;     * @author Roman Borschel &lt;roman@code-factory.org&gt;&#10;     * @author Bernhard Schussek &lt;bschussek@gmail.com&gt;&#10;     * @author Nicolas Grekas &lt;p@tchwork.com&gt;&#10;     */&#10;    class Event&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Event is the base class for classes containing event data.&#10;This class contains no event data. It is used by events that do not pass&#10;state information to an event handler when an event is raised.&#10;You can call the method stopPropagation() to abort the execution of&#10;further listeners in your event listener.&#10;&lt;b&gt;author&lt;/b&gt;: Guilherme Blanco &lt;guilhermeblanco&#10;&lt;b&gt;hotmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Jonathan Wage &lt;jonwage&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Roman Borschel &lt;roman&#10;&lt;b&gt;code&lt;/b&gt;: -factory.org&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Bernhard Schussek &lt;bschussek&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicolas Grekas &lt;p&#10;&lt;b&gt;tchwork&lt;/b&gt;: .com&gt;;;d4,72;;b0,0;;m0;;e">
<treenode node="isPropagationStopped;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher-contracts\Event.php;f15;38;9;81;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Event.php;f11;25;5;28;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isPropagationStopped(): bool&#10;        {&#10;            return $this-&gt;propagationStopped;s&#10;        }&#10;&#10;        /**&#10;         * Stops the propagation of the event to further event listeners.&#10;         *&#10;         * If multiple event listeners are connected to the same event, no&#10;         * further event listener will be triggered once any trigger calls&#10;         * stopPropagation().&#10;         */&#10;        public function stopPropagation(): void&#10;        {&#10;            $this-&gt;propagationStopped = true;s&#10;        }&#10;    }&#10;} else {&#10;    /**&#10;     * Event is the base class for classes containing event data.&#10;     *&#10;     * This class contains no event data. It is used by events that do not pass&#10;     * state information to an event handler when an event is raised.&#10;     *&#10;     * You can call the method stopPropagation() to abort the execution of&#10;     * further listeners in your event listener.&#10;     *&#10;     * @author Guilherme Blanco &lt;guilhermeblanco@hotmail.com&gt;&#10;     * @author Jonathan Wage &lt;jonwage@gmail.com&gt;&#10;     * @author Roman Borschel &lt;roman@code-factory.org&gt;&#10;     * @author Bernhard Schussek &lt;bschussek@gmail.com&gt;&#10;     * @author Nicolas Grekas &lt;p@tchwork.com&gt;&#10;     */&#10;    class Event&#10;    {&#10;        private $propagationStopped = false;s&#10;&#10;        /**&#10;         * Returns whether further event listeners should be triggered.&#10;         */&#10;        public function isPropagationStopped(): bool&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether further event listeners should be triggered.;;d8,79;;b1,0;;m0;;e">
</treenode>
<treenode node="stopPropagation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher-contracts\Event.php;f15;50;9;93;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Event.php;f11;33;5;36;;;;vpos;;v;;a void;;r;;d8,91;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="EventDispatcher;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f0;32;1;307;;;;vpos;;v;;aEventDispatcherInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class EventDispatcher implements EventDispatcherInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The EventDispatcherInterface is the central point of Symfony&apos;s event listener system.&#10;Listeners are registered on the manager and events are dispatched through the&#10;manager.&#10;&lt;b&gt;author&lt;/b&gt;: Guilherme Blanco &lt;guilhermeblanco&#10;&lt;b&gt;hotmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Jonathan Wage &lt;jonwage&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Roman Borschel &lt;roman&#10;&lt;b&gt;code&lt;/b&gt;: -factory.org&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Bernhard Schussek &lt;bschussek&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Jordi Boggiano &lt;j.boggiano&#10;&lt;b&gt;seld&lt;/b&gt;: .be&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Jordan Alliot &lt;jordan.alliot&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicolas Grekas &lt;p&#10;&lt;b&gt;tchwork&lt;/b&gt;: .com&gt;;;d0,33;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f11;38;5;43;;;;vpos;;v;;a;;r;;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="addListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f11;152;5;156;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addListener($eventName, $listener, $priority = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,153;;b1,0;;m0;;eeventName;;plistener;;ppriority;;p">
</treenode>
<treenode node="addSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f11;190;5;203;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addSubscriber(EventSubscriberInterface $subscriber)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,191;;b1,0;;m0;;esubscriber;;p">
</treenode>
<treenode node="callListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f14;231;5;248;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    callListeners(iterable $listeners, string $eventName, $event)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Triggers the listeners of an event.&#10;This method can be overridden to add functionality that is executed&#10;for each listener.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    callable[] &lt;b&gt;$listeners&lt;/b&gt;: The event listeners&#10;    string &lt;b&gt;$eventName&lt;/b&gt;: The name of the event to dispatch&#10;    object &lt;b&gt;$event&lt;/b&gt;: The event object to pass to the event handlers/listeners;;d4,232;;b2,0;;m0;;ecallable[] $listeners;;pstring $eventName;;pobject $event;;p">
</treenode>
<treenode node="dispatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f11;50;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    dispatch($event/*, string $eventName = null*/)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: }&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$eventName&lt;/b&gt;;;d4,51;;b1,0;;m0;;estring|null $eventName;;p">
</treenode>
<treenode node="doDispatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f14;253;5;261;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    doDispatch($listeners, $eventName, Event $event)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;deprecated&lt;/b&gt;: since Symfony 4.3, use callListeners() instead;;d4,254;;b2,0;;m0;;elisteners;;peventName;;pevent;;p">
</treenode>
<treenode node="getListenerPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f11;107;5;129;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getListenerPriority($eventName, $listener)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,108;;b1,0;;m0;;eeventName;;plistener;;p">
</treenode>
<treenode node="getListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f11;81;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getListeners($eventName = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,82;;b1,0;;m0;;eeventName;;p">
</treenode>
<treenode node="hasListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f11;134;5;147;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasListeners($eventName = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,135;;b1,0;;m0;;eeventName;;p">
</treenode>
<treenode node="optimizeListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f12;284;5;306;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    optimizeListeners(string $eventName): array&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Optimizes the internal list of listeners for the given event by priority.;;d4,285;;b3,0;;m0;;eeventName;;p">
</treenode>
<treenode node="removeListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f11;161;5;185;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeListener($eventName, $listener)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,162;;b1,0;;m0;;eeventName;;plistener;;p">
</treenode>
<treenode node="removeSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f11;208;5;219;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeSubscriber(EventSubscriberInterface $subscriber)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,209;;b1,0;;m0;;esubscriber;;p">
</treenode>
<treenode node="sortListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\EventDispatcher.php;f12;266;5;279;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortListeners(string $eventName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sorts the internal list of listeners for the given event by priority.;;d4,267;;b3,0;;m0;;eeventName;;p">
</treenode>
</treenode>
<treenode node="EventDispatcherTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f0;19;1;439;;;;vpos;;v;;aTestCase;;c;;r;;d0,20;;b0,0;;m0;;e">
<treenode node="postBar;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f9;25;17;25;;;;vpos;;v;;a;;r&apos;post.bar&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="postFoo;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f9;23;17;23;;;;vpos;;v;;a;;r&apos;post.foo&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="preBar;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f9;24;16;24;;;;vpos;;v;;a;;r&apos;pre.bar&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="preFoo;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f9;22;16;22;;;;vpos;;v;;a;;r&apos;pre.foo&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="createEventDispatcher;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f14;46;5;49;;;;vpos;;v;;a;;r;;d4,47;;b2,0;;m0;;e">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f14;34;5;38;;;;vpos;;v;;a void;;r;;d4,35;;b2,0;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f14;40;5;44;;;;vpos;;v;;a void;;r;;d4,41;;b2,0;;m0;;e">
</treenode>
<treenode node="testAddListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;58;5;68;;;;vpos;;v;;a;;r;;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;212;5;218;;;;vpos;;v;;a;;r;;d4,213;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddSubscriberWithMultipleListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;234;5;243;;;;vpos;;v;;a;;r;;d4,235;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddSubscriberWithPriorities;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;220;5;232;;;;vpos;;v;;a;;r;;d4,221;;b1,0;;m0;;e">
</treenode>
<treenode node="testDispatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;130;5;142;;;;vpos;;v;;a;;r;;d4,131;;b1,0;;m0;;e">
</treenode>
<treenode node="testDispatchByPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;184;5;201;;;;vpos;;v;;a;;r;;d4,185;;b1,0;;m0;;e">
</treenode>
<treenode node="testDispatchContractsEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;144;5;156;;;;vpos;;v;;a;;r;;d4,145;;b1,0;;m0;;e">
</treenode>
<treenode node="testDispatchForClosure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;158;5;168;;;;vpos;;v;;a;;r;;d4,159;;b1,0;;m0;;e">
</treenode>
<treenode node="testDispatchLazyListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;334;5;347;;;;vpos;;v;;a;;r;;d4,335;;b1,0;;m0;;e">
</treenode>
<treenode node="testEventReceivesTheDispatcherInstanceAsArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;275;5;284;;;;vpos;;v;;a;;r;;d4,276;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetAllListenersSortsByPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;92;5;114;;;;vpos;;v;;a;;r;;d4,93;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetLazyListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;378;5;389;;;;vpos;;v;;a;;r;;d4,379;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetListenerPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;116;5;128;;;;vpos;;v;;a;;r;;d4,117;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetListenersSortsByPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;70;5;90;;;;vpos;;v;;a;;r;;d4,71;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetListenersWhenAddedCallbackListenerIsRemoved;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;310;5;316;;;;vpos;;v;;a;;r;;d4,311;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasListenersIsLazy;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;324;5;332;;;;vpos;;v;;a;;r;;d4,325;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasListenersWhenAddedCallbackListenerIsRemoved;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;302;5;308;;;;vpos;;v;;a;;r;;d4,303;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasListenersWithoutEventsReturnsFalseAfterHasListenersWithEventHasBeenCalled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;318;5;322;;;;vpos;;v;;a;;r;;d4,319;;b1,0;;m0;;e">
</treenode>
<treenode node="testInitialState;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;51;5;56;;;;vpos;;v;;a;;r;;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="testLegacySignatureWithEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;428;5;431;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testLegacySignatureWithEvent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: legacy&#10;&lt;b&gt;expectedDeprecation&lt;/b&gt;: Calling the &quot;Symfony\Component\EventDispatcher\EventDispatcherInterface::dispatch()&quot; method with the event name as the first argument is deprecated since Symfony 4.3, pass it as the second argument and provide the event object as the first argument instead.;;d4,429;;b1,0;;m0;;e">
</treenode>
<treenode node="testLegacySignatureWithNewEventObject;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;433;5;438;;;;vpos;;v;;a;;r;;d4,434;;b1,0;;m0;;e">
</treenode>
<treenode node="testLegacySignatureWithoutEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;419;5;422;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testLegacySignatureWithoutEvent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: legacy&#10;&lt;b&gt;expectedDeprecation&lt;/b&gt;: Calling the &quot;Symfony\Component\EventDispatcher\EventDispatcherInterface::dispatch()&quot; method with the event name as the first argument is deprecated since Symfony 4.3, pass it as the second argument and provide the event object as the first argument instead.;;d4,420;;b1,0;;m0;;e">
</treenode>
<treenode node="testMutatingWhilePropagationIsStopped;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;391;5;413;;;;vpos;;v;;a;;r;;d4,392;;b1,0;;m0;;e">
</treenode>
<treenode node="testPriorityFindsLazyListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;365;5;376;;;;vpos;;v;;a;;r;;d4,366;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveFindsLazyListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;349;5;363;;;;vpos;;v;;a;;r;;d4,350;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;203;5;210;;;;vpos;;v;;a;;r;;d4,204;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;245;5;254;;;;vpos;;v;;a;;r;;d4,246;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveSubscriberWithMultipleListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;265;5;273;;;;vpos;;v;;a;;r;;d4,266;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveSubscriberWithPriorities;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;256;5;263;;;;vpos;;v;;a;;r;;d4,257;;b1,0;;m0;;e">
</treenode>
<treenode node="testStopEventPropagation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;170;5;182;;;;vpos;;v;;a;;r;;d4,171;;b1,0;;m0;;e">
</treenode>
<treenode node="testWorkaroundForPhpBug62976;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;294;5;300;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testWorkaroundForPhpBug62976()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;see&lt;/b&gt;: https://bugs.php.net/62976&#10;This bug affects:&#10;- The PHP 5.3 branch for versions &lt; 5.3.18&#10;- The PHP 5.4 branch for versions &lt; 5.4.8&#10;- The PHP 5.5 branch is not affected;;d4,295;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="EventSubscriber;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f0;312;1;318;;;;vpos;;v;;aEventSubscriberInterface;;c;;r;;d0,313;;b0,0;;m0;;e">
<treenode node="getSubscribedEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f18;314;5;317;;;;vpos;;v;;a;;r;;d4,315;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="EventTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventTest.php;f0;19;1;54;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class EventTest extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: legacy;;d0,20;;b0,0;;m0;;e">
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventTest.php;f14;30;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setUp(): void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets up the fixture, for example, opens a network connection.&#10;This method is called before a test is executed.;;d4,31;;b2,0;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventTest.php;f14;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    tearDown(): void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tears down the fixture, for example, closes a network connection.&#10;This method is called after a test is executed.;;d4,40;;b2,0;;m0;;e">
</treenode>
<treenode node="testIsPropagationStopped;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventTest.php;f11;44;5;47;;;;vpos;;v;;a;;r;;d4,45;;b1,0;;m0;;e">
</treenode>
<treenode node="testStopPropagationAndIsPropagationStopped;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventTest.php;f11;49;5;53;;;;vpos;;v;;a;;r;;d4,50;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ExceptionTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\ExceptionTest.php;f0;20;1;46;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ExceptionTest extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Test class for Filesystem.;;d0,21;;b0,0;;m0;;e">
<treenode node="testCustomMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\ExceptionTest.php;f11;41;5;45;;;;vpos;;v;;a;;r;;d4,42;;b1,0;;m0;;e">
</treenode>
<treenode node="testGeneratedMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\ExceptionTest.php;f11;28;5;33;;;;vpos;;v;;a;;r;;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="testGeneratedMessageWithoutPath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\ExceptionTest.php;f11;35;5;39;;;;vpos;;v;;a;;r;;d4,36;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetPath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\ExceptionTest.php;f11;22;5;26;;;;vpos;;v;;a;;r;;d4,23;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ExcludeDirectoryFilterIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\ExcludeDirectoryFilterIterator.php;f0;18;1;83;;;;vpos;;v;;aFilterIterator;;cRecursiveIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ExcludeDirectoryFilterIterator extends \FilterIterator implements \RecursiveIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ExcludeDirectoryFilterIterator filters out directories.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\ExcludeDirectoryFilterIterator.php;f11;29;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(\Iterator $iterator, array $directories)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \Iterator &lt;b&gt;$iterator&lt;/b&gt;: The Iterator to filter&#10;    string[] &lt;b&gt;$directories&lt;/b&gt;: An array of directories to exclude;;d4,30;;b1,0;;m0;;e\Iterator $iterator;;pstring[] $directories;;p">
</treenode>
<treenode node="accept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\ExcludeDirectoryFilterIterator.php;f11;54;5;68;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    accept()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Filters the iterator values.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   True if the value should be kept, false otherwise;;d4,55;;b1,0;;m0;;e">
</treenode>
<treenode node="getChildren;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\ExcludeDirectoryFilterIterator.php;f11;75;5;82;;;;vpos;;v;;a;;r;;d4,76;;b1,0;;m0;;e">
</treenode>
<treenode node="hasChildren;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\ExcludeDirectoryFilterIterator.php;f11;70;5;73;;;;vpos;;v;;a;;r;;d4,71;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ExcludeDirectoryFilterIteratorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\ExcludeDirectoryFilterIteratorTest.php;f0;16;1;109;;;;vpos;;v;;aRealIteratorTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="getAcceptData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\ExcludeDirectoryFilterIteratorTest.php;f11;30;5;108;;;;vpos;;v;;a;;r;;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="testAccept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\ExcludeDirectoryFilterIteratorTest.php;f11;21;5;28;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testAccept($directories, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getAcceptData;;d4,22;;b1,0;;m0;;edirectories;;pexpected;;p">
</treenode>
</treenode>
<treenode node="ExecutableFinder;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\ExecutableFinder.php;f0;19;1;87;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ExecutableFinder&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Generic executable finder.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="addSuffix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\ExecutableFinder.php;f11;36;5;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addSuffix($suffix)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds new possible suffix to check for executable.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$suffix&lt;/b&gt;;;d4,37;;b1,0;;m0;;estring $suffix;;p">
</treenode>
<treenode node="find;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\ExecutableFinder.php;f11;50;5;86;;;;vpos;;v;;astring|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    find($name, $default = null, array $extraDirs = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds an executable by name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The executable name (without the extension)&#10;    string|null &lt;b&gt;$default&lt;/b&gt;: The default to return if no executable is found&#10;    array &lt;b&gt;$extraDirs&lt;/b&gt;: Additional dirs to check into&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The executable path or default value;;d4,51;;b1,0;;m0;;estring $name;;pstring|null $default;;parray $extraDirs;;p">
</treenode>
<treenode node="setSuffixes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\ExecutableFinder.php;f11;26;5;29;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setSuffixes(array $suffixes)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replaces default suffixes of executable.;;d4,27;;b1,0;;m0;;esuffixes;;p">
</treenode>
</treenode>
<treenode node="ExecutableFinderTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ExecutableFinderTest.php;f0;19;1;177;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ExecutableFinderTest extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Chris Smith &lt;chris&#10;&lt;b&gt;cs278&lt;/b&gt;: .org&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="assertSamePath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ExecutableFinderTest.php;f12;164;5;171;;;;vpos;;v;;a;;r;;d4,165;;b3,0;;m0;;eexpected;;ptested;;p">
</treenode>
<treenode node="getPhpBinaryName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ExecutableFinderTest.php;f12;173;5;176;;;;vpos;;v;;a;;r;;d4,174;;b3,0;;m0;;e">
</treenode>
<treenode node="setPath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ExecutableFinderTest.php;f12;31;5;35;;;;vpos;;v;;a;;r;;d4,32;;b3,0;;m0;;epath;;p">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ExecutableFinderTest.php;f14;23;5;29;;;;vpos;;v;;a void;;r;;d4,24;;b2,0;;m0;;e">
</treenode>
<treenode node="testFind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ExecutableFinderTest.php;f11;37;5;49;;;;vpos;;v;;a;;r;;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindBatchExecutableOnWindows;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ExecutableFinderTest.php;f11;137;5;162;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testFindBatchExecutableOnWindows()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;requires&lt;/b&gt;: PHP 5.4;;d4,138;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindProcessInOpenBasedir;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ExecutableFinderTest.php;f11;116;5;132;;;;vpos;;v;;a;;r;;d4,117;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindWithDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ExecutableFinderTest.php;f11;51;5;65;;;;vpos;;v;;a;;r;;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindWithExtraDirs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ExecutableFinderTest.php;f11;82;5;96;;;;vpos;;v;;a;;r;;d4,83;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindWithNullAsDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ExecutableFinderTest.php;f11;67;5;80;;;;vpos;;v;;a;;r;;d4,68;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindWithOpenBaseDir;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ExecutableFinderTest.php;f11;98;5;114;;;;vpos;;v;;a;;r;;d4,99;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ExplicitIndirectVariableFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ExplicitIndirectVariableFixer.php;f6;25;1;90;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ExplicitIndirectVariableFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ExplicitIndirectVariableFixer.php;f14;62;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ExplicitIndirectVariableFixer.php;f11;30;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\ExplicitIndirectVariableFixer.php;f11;54;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="ExplicitStringVariableFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\ExplicitStringVariableFixer.php;f6;24;1;158;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ExplicitStringVariableFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\ExplicitStringVariableFixer.php;f14;62;5;141;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\ExplicitStringVariableFixer.php;f11;29;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\ExplicitStringVariableFixer.php;f11;54;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isStringPartToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\ExplicitStringVariableFixer.php;f12;150;5;157;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isStringPartToken(Token $token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token is a part of a string.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Token &lt;b&gt;$token&lt;/b&gt;: The token to check;;d4,151;;b3,0;;m0;;eToken $token;;p">
</treenode>
</treenode>
<treenode node="ExtractingEventDispatcher;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\DependencyInjection\RegisterListenersPass.php;f0;129;1;151;;;;vpos;;v;;aEventDispatcher;;cEventSubscriberInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ExtractingEventDispatcher extends EventDispatcher implements EventSubscriberInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,130;;b0,0;;m0;;e">
<treenode node="addListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\DependencyInjection\RegisterListenersPass.php;f11;136;5;139;;;;vpos;;v;;a;;r;;d4,137;;b1,0;;m0;;eeventName;;plistener;;ppriority;;p">
</treenode>
<treenode node="getSubscribedEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\DependencyInjection\RegisterListenersPass.php;f18;141;5;150;;;;vpos;;v;;a;;r;;d4,142;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="FactoryCommandLoader;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\FactoryCommandLoader.php;f0;20;1;61;;;;vpos;;v;;aCommandLoaderInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FactoryCommandLoader implements CommandLoaderInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A simple command loader using factories to instantiate commands lazily.&#10;&lt;b&gt;author&lt;/b&gt;: Maxime Steinhausser &lt;maxime.steinhausser&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\FactoryCommandLoader.php;f11;27;5;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(array $factories)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    callable[] &lt;b&gt;$factories&lt;/b&gt;: Indexed by command names;;d4,28;;b1,0;;m0;;ecallable[] $factories;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\FactoryCommandLoader.php;f11;43;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    get($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="getNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\FactoryCommandLoader.php;f11;57;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNames()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="has;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\CommandLoader\FactoryCommandLoader.php;f11;35;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    has($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b1,0;;m0;;ename;;p">
</treenode>
</treenode>
<treenode node="FactoryCommandLoaderTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\CommandLoader\FactoryCommandLoaderTest.php;f0;17;1;57;;;;vpos;;v;;aTestCase;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="testGet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\CommandLoader\FactoryCommandLoaderTest.php;f11;31;5;40;;;;vpos;;v;;a;;r;;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetCommandNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\CommandLoader\FactoryCommandLoaderTest.php;f11;48;5;56;;;;vpos;;v;;a;;r;;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetUnknownCommandThrows;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\CommandLoader\FactoryCommandLoaderTest.php;f11;42;5;46;;;;vpos;;v;;a;;r;;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="testHas;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\CommandLoader\FactoryCommandLoaderTest.php;f11;19;5;29;;;;vpos;;v;;a;;r;;d4,20;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FileCacheManager;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileCacheManager.php;f6;30;1;124;;;;vpos;;v;;aCacheManagerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FileCacheManager implements CacheManagerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Class supports caching information about state of fixing files.&#10;Cache is supported only for phar version and version installed via composer.&#10;File will be processed by PHP CS Fixer only if any of the following conditions is fulfilled:&#10;- cache is corrupt&#10;- fixer version changed&#10;- rules changed&#10;- file is new&#10;- file changed&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,31;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileCacheManager.php;f11;63;5;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        FileHandlerInterface $handler,&#10;        SignatureInterface $signature,&#10;        $isDryRun = false,&#10;        DirectoryInterface $cacheDirectory = null&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    FileHandlerInterface &lt;b&gt;$handler&lt;/b&gt;&#10;    SignatureInterface &lt;b&gt;$signature&lt;/b&gt;&#10;    bool &lt;b&gt;$isDryRun&lt;/b&gt;&#10;    null|DirectoryInterface &lt;b&gt;$cacheDirectory&lt;/b&gt;;;d6,68;;b1,0;;m0;;eFileHandlerInterface $handler;;pSignatureInterface $signature;;pbool $isDryRun;;pnull|DirectoryInterface $cacheDirectory;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileCacheManager.php;f11;77;5;80;;;;vpos;;v;;a;;r;;d4,78;;b1,0;;m0;;e">
</treenode>
<treenode node="calcHash;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileCacheManager.php;f12;120;5;123;;;;vpos;;v;;a;;r;;d4,121;;b3,0;;m0;;econtent;;p">
</treenode>
<treenode node="needFixing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileCacheManager.php;f11;82;5;87;;;;vpos;;v;;a;;r;;d4,83;;b1,0;;m0;;efile;;pfileContent;;p">
</treenode>
<treenode node="readCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileCacheManager.php;f12;104;5;113;;;;vpos;;v;;a;;r;;d4,105;;b3,0;;m0;;e">
</treenode>
<treenode node="setFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileCacheManager.php;f11;89;5;102;;;;vpos;;v;;a;;r;;d4,90;;b1,0;;m0;;efile;;pfileContent;;p">
</treenode>
<treenode node="writeCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileCacheManager.php;f12;115;5;118;;;;vpos;;v;;a;;r;;d4,116;;b3,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FileCacheReader;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\FileCacheReader.php;f0;31;1;289;;;;vpos;;v;;aReader;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FileCacheReader implements Reader&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    File cache reader for annotations.&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Benjamin Eberlei &lt;kontakt&#10;&lt;b&gt;beberlei&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;deprecated&lt;/b&gt;: the FileCacheReader is deprecated and will be removed&#10;in version 2.0.0 of doctrine/annotations. Please use the&#10;{&#10;&lt;b&gt;see&lt;/b&gt;: \Doctrine\Common\Annotations\CachedReader} instead.;;d0,32;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\FileCacheReader.php;f11;72;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(Reader $reader, $cacheDir, $debug = false, $umask = 0002)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constructor.&#10;&lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Reader &lt;b&gt;$reader&lt;/b&gt;&#10;    string &lt;b&gt;$cacheDir&lt;/b&gt;&#10;    boolean &lt;b&gt;$debug&lt;/b&gt;;;d4,73;;b1,0;;m0;;ereader;;pcacheDir;;pdebug;;pumask;;p">
</treenode>
<treenode node="clearLoadedAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\FileCacheReader.php;f11;285;5;288;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearLoadedAnnotations()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clears loaded annotations.;;d4,286;;b1,0;;m0;;e">
</treenode>
<treenode node="getClassAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\FileCacheReader.php;f11;235;5;246;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassAnnotation(\ReflectionClass $class, $annotationName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,236;;b1,0;;m0;;eclass;;pannotationName;;p">
</treenode>
<treenode node="getClassAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\FileCacheReader.php;f11;95;5;124;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassAnnotations(\ReflectionClass $class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,96;;b1,0;;m0;;eclass;;p">
</treenode>
<treenode node="getMethodAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\FileCacheReader.php;f11;251;5;262;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMethodAnnotation(\ReflectionMethod $method, $annotationName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,252;;b1,0;;m0;;emethod;;pannotationName;;p">
</treenode>
<treenode node="getMethodAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\FileCacheReader.php;f11;164;5;194;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMethodAnnotations(\ReflectionMethod $method)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,165;;b1,0;;m0;;emethod;;p">
</treenode>
<treenode node="getPropertyAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\FileCacheReader.php;f11;267;5;278;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPropertyAnnotation(\ReflectionProperty $property, $annotationName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,268;;b1,0;;m0;;eproperty;;pannotationName;;p">
</treenode>
<treenode node="getPropertyAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\FileCacheReader.php;f11;129;5;159;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPropertyAnnotations(\ReflectionProperty $property)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,130;;b1,0;;m0;;eproperty;;p">
</treenode>
<treenode node="saveCacheFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\FileCacheReader.php;f12;204;5;230;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    saveCacheFile($path, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Saves the cache file.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$path&lt;/b&gt;&#10;    mixed &lt;b&gt;$data&lt;/b&gt;;;d4,205;;b3,0;;m0;;estring $path;;pmixed $data;;p">
</treenode>
</treenode>
<treenode node="FileCachingLintingIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileCachingLintingIterator.php;f6;22;1;79;;;;vpos;;v;;aCachingIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FileCachingLintingIterator extends \CachingIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileCachingLintingIterator.php;f11;39;5;44;;;;vpos;;v;;a;;r;;d4,40;;b1,0;;m0;;eiterator;;plinter;;p">
</treenode>
<treenode node="currentLintingResult;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileCachingLintingIterator.php;f11;46;5;49;;;;vpos;;v;;a;;r;;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="handleItem;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileCachingLintingIterator.php;f12;75;5;78;;;;vpos;;v;;a;;r;;d4,76;;b3,0;;m0;;efile;;p">
</treenode>
<treenode node="next;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileCachingLintingIterator.php;f11;51;5;60;;;;vpos;;v;;a;;r;;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="rewind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileCachingLintingIterator.php;f11;62;5;73;;;;vpos;;v;;a;;r;;d4,63;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FileFilterIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileFilterIterator.php;f6;25;1;118;;;;vpos;;v;;aFilterIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FileFilterIterator extends \FilterIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileFilterIterator.php;f11;42;5;51;;;;vpos;;v;;a;;r;;d6,46;;b1,0;;m0;;eiterator;;peventDispatcher;;pcacheManager;;p">
</treenode>
<treenode node="accept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileFilterIterator.php;f11;53;5;95;;;;vpos;;v;;a;;r;;d4,54;;b1,0;;m0;;e">
</treenode>
<treenode node="dispatchEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileFilterIterator.php;f12;101;5;117;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    dispatchEvent($name, Event $event)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;&#10;    Event &lt;b&gt;$event&lt;/b&gt;;;d4,102;;b3,0;;m0;;estring $name;;pEvent $event;;p">
</treenode>
</treenode>
<treenode node="FileHandler;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileHandler.php;f6;21;1;98;;;;vpos;;v;;aFileHandlerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FileHandler implements FileHandlerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Andreas Möller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileHandler.php;f11;31;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($file)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;;;d4,32;;b1,0;;m0;;estring $file;;p">
</treenode>
<treenode node="getFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileHandler.php;f11;36;5;39;;;;vpos;;v;;a;;r;;d4,37;;b1,0;;m0;;e">
</treenode>
<treenode node="read;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileHandler.php;f11;41;5;56;;;;vpos;;v;;a;;r;;d4,42;;b1,0;;m0;;e">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\FileHandler.php;f11;58;5;97;;;;vpos;;v;;a;;r;;d4,59;;b1,0;;m0;;ecache;;p">
</treenode>
</treenode>
<treenode node="FileLintingIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileLintingIterator.php;f6;22;1;67;;;;vpos;;v;;aIteratorIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FileLintingIterator extends \IteratorIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileLintingIterator.php;f11;34;5;39;;;;vpos;;v;;a;;r;;d4,35;;b1,0;;m0;;eiterator;;plinter;;p">
</treenode>
<treenode node="currentLintingResult;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileLintingIterator.php;f11;44;5;47;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    currentLintingResult()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |LinterInterface;;d4,45;;b1,0;;m0;;e">
</treenode>
<treenode node="handleItem;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileLintingIterator.php;f12;63;5;66;;;;vpos;;v;;a;;r;;d4,64;;b3,0;;m0;;efile;;p">
</treenode>
<treenode node="next;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileLintingIterator.php;f11;49;5;54;;;;vpos;;v;;a;;r;;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="rewind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\FileLintingIterator.php;f11;56;5;61;;;;vpos;;v;;a;;r;;d4,57;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FileNotFoundException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Exception\FileNotFoundException.php;f0;19;1;33;;;;vpos;;v;;aIOException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FileNotFoundException extends IOException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exception class thrown when a file couldn&apos;t be found.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Christian Gärtner &lt;christiangaertner.film&#10;&lt;b&gt;googlemail&lt;/b&gt;: .com&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Exception\FileNotFoundException.php;f11;21;5;32;;;;vpos;;v;;a;;r;;d4,22;;b1,0;;m0;;emessage;;pcode;;pprevious;;ppath;;p">
</treenode>
</treenode>
<treenode node="FileReader;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FileReader.php;f6;23;1;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FileReader&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    File reader that unify access to regular file and stdin-alike file.&#10;Regular file could be read multiple times with `file_get_contents`, but file provided on stdin can not.&#10;Consecutive try will provide empty content for stdin-alike file.&#10;This reader unifies access to them.&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="createSingleton;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FileReader.php;f18;38;5;45;;;;vpos;;v;;aself;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createSingleton()&#10;;;d4,39;;b1,5;;m0;;e">
</treenode>
<treenode node="read;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FileReader.php;f11;52;5;63;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    read($filePath)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$filePath&lt;/b&gt;;;d4,53;;b1,0;;m0;;estring $filePath;;p">
</treenode>
<treenode node="readRaw;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FileReader.php;f12;70;5;85;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    readRaw($realPath)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$realPath&lt;/b&gt;;;d4,71;;b3,0;;m0;;estring $realPath;;p">
</treenode>
</treenode>
<treenode node="FileRemoval;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FileRemoval.php;f6;22;1;79;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FileRemoval&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Handles files removal with possibility to remove them on shutdown.&#10;&lt;b&gt;author&lt;/b&gt;: Adam Klvac &lt;adam&#10;&lt;b&gt;klva&lt;/b&gt;: .cz&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FileRemoval.php;f11;31;5;34;;;;vpos;;v;;a;;r;;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FileRemoval.php;f11;36;5;39;;;;vpos;;v;;a;;r;;d4,37;;b1,0;;m0;;e">
</treenode>
<treenode node="clean;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FileRemoval.php;f11;67;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clean()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Removes attached files.;;d4,68;;b1,0;;m0;;e">
</treenode>
<treenode node="delete;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FileRemoval.php;f11;56;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    delete($path)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Removes a file from shutdown removal.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$path&lt;/b&gt;;;d4,57;;b1,0;;m0;;estring $path;;p">
</treenode>
<treenode node="observe;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FileRemoval.php;f11;46;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    observe($path)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a file to be removed.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$path&lt;/b&gt;;;d4,47;;b1,0;;m0;;estring $path;;p">
</treenode>
<treenode node="unlink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FileRemoval.php;f12;75;5;78;;;;vpos;;v;;a;;r;;d4,76;;b3,0;;m0;;epath;;p">
</treenode>
</treenode>
<treenode node="FileSpecificCodeSample;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FileSpecificCodeSample.php;f6;19;1;68;;;;vpos;;v;;aFileSpecificCodeSampleInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FileSpecificCodeSample implements FileSpecificCodeSampleInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FileSpecificCodeSample.php;f11;36;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        $code,&#10;        \SplFileInfo $splFileInfo,&#10;        array $configuration = null&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;&#10;    \SplFileInfo &lt;b&gt;$splFileInfo&lt;/b&gt;&#10;    null|array &lt;b&gt;$configuration&lt;/b&gt;;;d6,40;;b1,0;;m0;;estring $code;;p\SplFileInfo $splFileInfo;;pnull|array $configuration;;p">
</treenode>
<treenode node="getCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FileSpecificCodeSample.php;f11;48;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="getConfiguration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FileSpecificCodeSample.php;f11;56;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getConfiguration()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b1,0;;m0;;e">
</treenode>
<treenode node="getSplFileInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FileSpecificCodeSample.php;f11;64;5;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSplFileInfo()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,65;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FileTypeFilterIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\FileTypeFilterIterator.php;f0;18;1;52;;;;vpos;;v;;aFilterIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FileTypeFilterIterator extends \FilterIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    FileTypeFilterIterator only keeps files, directories, or both.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="ONLY_DIRECTORIES;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\FileTypeFilterIterator.php;f9;21;26;21;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="ONLY_FILES;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\FileTypeFilterIterator.php;f9;20;20;20;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\FileTypeFilterIterator.php;f11;29;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(\Iterator $iterator, int $mode)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \Iterator &lt;b&gt;$iterator&lt;/b&gt;: The Iterator to filter&#10;    int &lt;b&gt;$mode&lt;/b&gt;: The mode (self::ONLY_FILES or self::ONLY_DIRECTORIES);;d4,30;;b1,0;;m0;;e\Iterator $iterator;;pint $mode;;p">
</treenode>
<treenode node="accept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\FileTypeFilterIterator.php;f11;41;5;51;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    accept()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Filters the iterator values.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the value should be kept, false otherwise;;d4,42;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FileTypeFilterIteratorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FileTypeFilterIteratorTest.php;f0;15;1;63;;;;vpos;;v;;aRealIteratorTestCase;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="getAcceptData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FileTypeFilterIteratorTest.php;f11;29;5;62;;;;vpos;;v;;a;;r;;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="testAccept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FileTypeFilterIteratorTest.php;f11;20;5;27;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testAccept($mode, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getAcceptData;;d4,21;;b1,0;;m0;;emode;;pexpected;;p">
</treenode>
</treenode>
<treenode node="FilecontentFilterIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\FilecontentFilterIterator.php;f0;19;1;57;;;;vpos;;v;;aMultiplePcreFilterIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FilecontentFilterIterator extends MultiplePcreFilterIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    FilecontentFilterIterator filters files by their contents using patterns (regexps or strings).&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier  &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Wlodzimierz Gajda &lt;gajdaw&#10;&lt;b&gt;gajdaw&lt;/b&gt;: .pl&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="accept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\FilecontentFilterIterator.php;f11;26;5;44;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    accept()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Filters the iterator values.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the value should be kept, false otherwise;;d4,27;;b1,0;;m0;;e">
</treenode>
<treenode node="toRegex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\FilecontentFilterIterator.php;f14;53;5;56;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    toRegex($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts string to regexp if necessary.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: Pattern: string or regexp&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   regexp corresponding to a given string or regexp;;d4,54;;b2,0;;m0;;estring $str;;p">
</treenode>
</treenode>
<treenode node="FilecontentFilterIteratorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FilecontentFilterIteratorTest.php;f0;15;1;85;;;;vpos;;v;;aIteratorTestCase;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="getTestFilterData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FilecontentFilterIteratorTest.php;f11;47;5;84;;;;vpos;;v;;a;;r;;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="testAccept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FilecontentFilterIteratorTest.php;f11;17;5;22;;;;vpos;;v;;a;;r;;d4,18;;b1,0;;m0;;e">
</treenode>
<treenode node="testDirectory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FilecontentFilterIteratorTest.php;f11;24;5;29;;;;vpos;;v;;a;;r;;d4,25;;b1,0;;m0;;e">
</treenode>
<treenode node="testFilter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FilecontentFilterIteratorTest.php;f11;41;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testFilter(\Iterator $inner, array $matchPatterns, array $noMatchPatterns, array $resultArray)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getTestFilterData;;d4,42;;b1,0;;m0;;einner;;pmatchPatterns;;pnoMatchPatterns;;presultArray;;p">
</treenode>
<treenode node="testUnreadableFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FilecontentFilterIteratorTest.php;f11;31;5;36;;;;vpos;;v;;a;;r;;d4,32;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FilenameFilterIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\FilenameFilterIterator.php;f0;20;1;46;;;;vpos;;v;;aMultiplePcreFilterIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FilenameFilterIterator extends MultiplePcreFilterIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    FilenameFilterIterator filters files by patterns (a regexp, a glob, or a string).&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="accept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\FilenameFilterIterator.php;f11;27;5;30;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    accept()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Filters the iterator values.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the value should be kept, false otherwise;;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="toRegex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\FilenameFilterIterator.php;f14;42;5;45;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    toRegex($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts glob to regexp.&#10;PCRE patterns are left unchanged.&#10;Glob strings are transformed with Glob::toRegex().&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: Pattern: glob or regexp&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   regexp corresponding to a given glob or regexp;;d4,43;;b2,0;;m0;;estring $str;;p">
</treenode>
</treenode>
<treenode node="FilenameFilterIteratorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FilenameFilterIteratorTest.php;f0;15;1;40;;;;vpos;;v;;aIteratorTestCase;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="getAcceptData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FilenameFilterIteratorTest.php;f11;29;5;39;;;;vpos;;v;;a;;r;;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="testAccept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FilenameFilterIteratorTest.php;f11;20;5;27;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testAccept($matchPatterns, $noMatchPatterns, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getAcceptData;;d4,21;;b1,0;;m0;;ematchPatterns;;pnoMatchPatterns;;pexpected;;p">
</treenode>
</treenode>
<treenode node="Filesystem;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f0;22;1;772;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Filesystem&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Provides basic utility to manipulate the file system.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="appendToFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;708;5;727;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    appendToFile($filename, $content)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Appends content to an existing file.&#10;&lt;b&gt;throws&lt;/b&gt;: IOException If the file is not writable&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$filename&lt;/b&gt;: The file to which to append content&#10;    string|resource &lt;b&gt;$content&lt;/b&gt;: The content to append;;d4,709;;b1,0;;m0;;estring $filename;;pstring|resource $content;;p">
</treenode>
<treenode node="box;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f19;749;5;763;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    box($func)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    callable &lt;b&gt;$func&lt;/b&gt;;;d4,750;;b3,5;;m0;;ecallable $func;;p">
</treenode>
<treenode node="chgrp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;246;5;262;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    chgrp($files, $group, $recursive = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Change the group of an array of files or directories.&#10;&lt;b&gt;throws&lt;/b&gt;: IOException When the change fails&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|iterable &lt;b&gt;$files&lt;/b&gt;: A filename, an array of files, or a \Traversable instance to change group&#10;    string &lt;b&gt;$group&lt;/b&gt;: The group name&#10;    bool &lt;b&gt;$recursive&lt;/b&gt;: Whether change the group recursively or not;;d4,247;;b1,0;;m0;;estring|iterable $files;;pstring $group;;pbool $recursive;;p">
</treenode>
<treenode node="chmod;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;198;5;208;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    chmod($files, $mode, $umask = 0000, $recursive = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Change mode for an array of files or directories.&#10;&lt;b&gt;throws&lt;/b&gt;: IOException When the change fails&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|iterable &lt;b&gt;$files&lt;/b&gt;: A filename, an array of files, or a \Traversable instance to change mode&#10;    int &lt;b&gt;$mode&lt;/b&gt;: The new mode (octal)&#10;    int &lt;b&gt;$umask&lt;/b&gt;: The mode mask (octal)&#10;    bool &lt;b&gt;$recursive&lt;/b&gt;: Whether change the mod recursively or not;;d4,199;;b1,0;;m0;;estring|iterable $files;;pint $mode;;pint $umask;;pbool $recursive;;p">
</treenode>
<treenode node="chown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;219;5;235;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    chown($files, $user, $recursive = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Change the owner of an array of files or directories.&#10;&lt;b&gt;throws&lt;/b&gt;: IOException When the change fails&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|iterable &lt;b&gt;$files&lt;/b&gt;: A filename, an array of files, or a \Traversable instance to change owner&#10;    string &lt;b&gt;$user&lt;/b&gt;: The new owner user name&#10;    bool &lt;b&gt;$recursive&lt;/b&gt;: Whether change the owner recursively or not;;d4,220;;b1,0;;m0;;estring|iterable $files;;pstring $user;;pbool $recursive;;p">
</treenode>
<treenode node="copy;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;40;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    copy($originFile, $targetFile, $overwriteNewerFiles = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Copies a file.&#10;If the target file is older than the origin file, it&apos;s always overwritten.&#10;If the target file is newer, it is overwritten only when the&#10;$overwriteNewerFiles option is set to true.&#10;&lt;b&gt;throws&lt;/b&gt;: FileNotFoundException When originFile doesn&apos;t exist&#10;&lt;b&gt;throws&lt;/b&gt;: IOException           When copy fails&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$originFile&lt;/b&gt;: The original filename&#10;    string &lt;b&gt;$targetFile&lt;/b&gt;: The target filename&#10;    bool &lt;b&gt;$overwriteNewerFiles&lt;/b&gt;: If true, target files newer than origin files are overwritten;;d4,41;;b1,0;;m0;;estring $originFile;;pstring $targetFile;;pbool $overwriteNewerFiles;;p">
</treenode>
<treenode node="dumpFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;671;5;698;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    dumpFile($filename, $content)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Atomically dumps content into a file.&#10;&lt;b&gt;throws&lt;/b&gt;: IOException if the file cannot be written to&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$filename&lt;/b&gt;: The file to be written to&#10;    string|resource &lt;b&gt;$content&lt;/b&gt;: The data to write into the file;;d4,672;;b1,0;;m0;;estring $filename;;pstring|resource $content;;p">
</treenode>
<treenode node="exists;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;119;5;134;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    exists($files)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks the existence of files or directories.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|iterable &lt;b&gt;$files&lt;/b&gt;: A filename, an array of files, or a \Traversable instance to check&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the file exists, false otherwise;;d4,120;;b1,0;;m0;;estring|iterable $files;;p">
</treenode>
<treenode node="getSchemeAndHierarchy;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f12;737;5;742;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSchemeAndHierarchy(string $filename): array&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets a 2-tuple of scheme (may be null) and hierarchical part of a filename (e.g. file:///tmp -&gt; [file, tmp]).;;d4,738;;b3,0;;m0;;efilename;;p">
</treenode>
<treenode node="handleError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f18;768;5;771;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    handleError($type, $msg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d4,769;;b1,5;;m0;;etype;;pmsg;;p">
</treenode>
<treenode node="hardlink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;358;5;380;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hardlink($originFile, $targetFiles)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a hard link, or several hard links to a file.&#10;&lt;b&gt;throws&lt;/b&gt;: FileNotFoundException When original file is missing or not a file&#10;&lt;b&gt;throws&lt;/b&gt;: IOException           When link fails, including if link already exists&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$originFile&lt;/b&gt;: The original file&#10;    string|string[] &lt;b&gt;$targetFiles&lt;/b&gt;: The target file(s);;d4,359;;b1,0;;m0;;estring $originFile;;pstring|string[] $targetFiles;;p">
</treenode>
<treenode node="isAbsolutePath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;600;5;609;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAbsolutePath($file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether the file path is an absolute path.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;: A file path;;d4,601;;b1,0;;m0;;estring $file;;p">
</treenode>
<treenode node="isReadable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f12;302;5;311;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isReadable($filename)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tells whether a file exists and is readable.&#10;&lt;b&gt;throws&lt;/b&gt;: IOException When windows path is longer than 258 characters&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$filename&lt;/b&gt;: Path to the file;;d4,303;;b3,0;;m0;;estring $filename;;p">
</treenode>
<treenode node="linkException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f12;387;5;395;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    linkException($origin, $target, $linkType)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$origin&lt;/b&gt;&#10;    string &lt;b&gt;$target&lt;/b&gt;&#10;    string &lt;b&gt;$linkType&lt;/b&gt;: Name of the link type, typically &apos;symbolic&apos; or &apos;hard&apos;;;d4,388;;b3,0;;m0;;estring $origin;;pstring $target;;pstring $linkType;;p">
</treenode>
<treenode node="makePathRelative;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;446;5;516;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    makePathRelative($endPath, $startPath)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Given an existing path, convert it to a path relative to a given starting path.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$endPath&lt;/b&gt;: Absolute path of target&#10;    string &lt;b&gt;$startPath&lt;/b&gt;: Absolute path where traversal begins&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Path of target relative to starting path;;d4,447;;b1,0;;m0;;estring $endPath;;pstring $startPath;;p">
</treenode>
<treenode node="mirror;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;537;5;591;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mirror($originDir, $targetDir, \Traversable $iterator = null, $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Mirrors a directory to another.&#10;Copies files and directories from the origin directory into the target directory. By default:&#10;- existing files in the target directory will be overwritten, except if they are newer (see the `override` option)&#10;- files in the target directory that do not exist in the source directory will not be deleted (see the `delete` option)&#10;&lt;b&gt;throws&lt;/b&gt;: IOException When file type is unknown&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$originDir&lt;/b&gt;: The origin directory&#10;    string &lt;b&gt;$targetDir&lt;/b&gt;: The target directory&#10;    \Traversable|null &lt;b&gt;$iterator&lt;/b&gt;: Iterator that filters which files and directories to copy, if null a recursive iterator is created&#10;    array &lt;b&gt;$options&lt;/b&gt;: An array of boolean options Valid options are: - $options[&apos;override&apos;] If true, target files newer than origin files are overwritten (see copy(), defaults to false) - $options[&apos;copy_on_windows&apos;] Whether to copy files instead of links on Windows (see symlink(), defaults to false) - $options[&apos;delete&apos;] Whether to delete files that are not in the source directory (defaults to false);;d4,538;;b1,0;;m0;;estring $originDir;;pstring $targetDir;;p\Traversable|null $iterator;;parray $options;;p">
</treenode>
<treenode node="mkdir;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;93;5;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mkdir($dirs, $mode = 0777)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a directory recursively.&#10;&lt;b&gt;throws&lt;/b&gt;: IOException On any directory creation failure&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|iterable &lt;b&gt;$dirs&lt;/b&gt;: The directory path&#10;    int &lt;b&gt;$mode&lt;/b&gt;: The directory mode;;d4,94;;b1,0;;m0;;estring|iterable $dirs;;pint $mode;;p">
</treenode>
<treenode node="readlink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;413;5;436;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    readlink($path, $canonicalize = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Resolves links in paths.&#10;With $canonicalize = false (default)&#10;- if $path does not exist or is not a link, returns null&#10;- if $path is a link, returns the next direct target of the link without considering the existence of the target&#10;With $canonicalize = true&#10;- if $path does not exist, returns null&#10;- if $path exists, returns its absolute fully resolved final version&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$path&lt;/b&gt;: A filesystem path&#10;    bool &lt;b&gt;$canonicalize&lt;/b&gt;: Whether or not to return a canonicalized path&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,414;;b1,0;;m0;;estring $path;;pbool $canonicalize;;p">
</treenode>
<treenode node="remove;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;162;5;186;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    remove($files)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Removes files or directories.&#10;&lt;b&gt;throws&lt;/b&gt;: IOException When removal fails&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|iterable &lt;b&gt;$files&lt;/b&gt;: A filename, an array of files, or a \Traversable instance to remove;;d4,163;;b1,0;;m0;;estring|iterable $files;;p">
</treenode>
<treenode node="rename;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;274;5;291;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rename($origin, $target, $overwrite = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Renames a file or a directory.&#10;&lt;b&gt;throws&lt;/b&gt;: IOException When target file or directory already exists&#10;&lt;b&gt;throws&lt;/b&gt;: IOException When origin cannot be renamed&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$origin&lt;/b&gt;: The origin filename or directory&#10;    string &lt;b&gt;$target&lt;/b&gt;: The new filename or directory&#10;    bool &lt;b&gt;$overwrite&lt;/b&gt;: Whether to overwrite the target if it already exists;;d4,275;;b1,0;;m0;;estring $origin;;pstring $target;;pbool $overwrite;;p">
</treenode>
<treenode node="symlink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;322;5;347;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    symlink($originDir, $targetDir, $copyOnWindows = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a symbolic link or copy a directory.&#10;&lt;b&gt;throws&lt;/b&gt;: IOException When symlink fails&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$originDir&lt;/b&gt;: The origin directory path&#10;    string &lt;b&gt;$targetDir&lt;/b&gt;: The symbolic link name&#10;    bool &lt;b&gt;$copyOnWindows&lt;/b&gt;: Whether to copy files if on Windows;;d4,323;;b1,0;;m0;;estring $originDir;;pstring $targetDir;;pbool $copyOnWindows;;p">
</treenode>
<treenode node="tempnam;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;620;5;661;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    tempnam($dir, $prefix)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a temporary file with support for custom stream wrappers.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$dir&lt;/b&gt;: The directory where the temporary filename will be created&#10;    string &lt;b&gt;$prefix&lt;/b&gt;: The prefix of the generated temporary filename Note: Windows uses only the first three characters of prefix&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The new temporary filename (with path), or throw an exception on failure;;d4,621;;b1,0;;m0;;estring $dir;;pstring $prefix;;p">
</treenode>
<treenode node="toIterable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f12;729;5;732;;;;vpos;;v;;a iterable;;r;;d4,730;;b3,0;;m0;;efiles;;p">
</treenode>
<treenode node="touch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Filesystem.php;f11;145;5;153;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    touch($files, $time = null, $atime = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets access and modification time of file.&#10;&lt;b&gt;throws&lt;/b&gt;: IOException When touch fails&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|iterable &lt;b&gt;$files&lt;/b&gt;: A filename, an array of files, or a \Traversable instance to create&#10;    int|null &lt;b&gt;$time&lt;/b&gt;: The touch time as a Unix timestamp, if not supplied the current system time is used&#10;    int|null &lt;b&gt;$atime&lt;/b&gt;: The access time as a Unix timestamp, if not supplied the current system time is used;;d4,146;;b1,0;;m0;;estring|iterable $files;;pint|null $time;;pint|null $atime;;p">
</treenode>
</treenode>
<treenode node="FilesystemTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f0;16;1;1711;;;;vpos;;v;;aFilesystemTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FilesystemTest extends FilesystemTestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Test class for Filesystem.;;d0,17;;b0,0;;m0;;e">
<treenode node="normalize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f12;1707;5;1710;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    normalize(string $path): string&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Normalize the given path (transform each blackslash into a real directory separator).;;d4,1708;;b3,0;;m0;;epath;;p">
</treenode>
<treenode node="providePathsForIsAbsolutePath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1358;5;1369;;;;vpos;;v;;a;;r;;d4,1359;;b1,0;;m0;;e">
</treenode>
<treenode node="providePathsForMakePathRelative;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1074;5;1120;;;;vpos;;v;;a;;r;;d4,1075;;b1,0;;m0;;e">
</treenode>
<treenode node="testAppendToFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1551;5;1572;;;;vpos;;v;;a;;r;;d4,1552;;b1,0;;m0;;e">
</treenode>
<treenode node="testAppendToFileCreateTheFileIfNotExists;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1655;5;1674;;;;vpos;;v;;a;;r;;d4,1656;;b1,0;;m0;;e">
</treenode>
<treenode node="testAppendToFileWithArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1578;5;1599;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testAppendToFileWithArray()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: legacy&#10;&lt;b&gt;expectedDeprecation&lt;/b&gt;: Calling &quot;Symfony\Component\Filesystem\Filesystem::appendToFile()&quot; with an array in the $content argument is deprecated since Symfony 4.3.;;d4,1579;;b1,0;;m0;;e">
</treenode>
<treenode node="testAppendToFileWithResource;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1601;5;1626;;;;vpos;;v;;a;;r;;d4,1602;;b1,0;;m0;;e">
</treenode>
<treenode node="testAppendToFileWithScheme;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1628;5;1638;;;;vpos;;v;;a;;r;;d4,1629;;b1,0;;m0;;e">
</treenode>
<treenode node="testAppendToFileWithZlibScheme;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1640;5;1653;;;;vpos;;v;;a;;r;;d4,1641;;b1,0;;m0;;e">
</treenode>
<treenode node="testChgrp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;640;5;651;;;;vpos;;v;;a;;r;;d4,641;;b1,0;;m0;;e">
</treenode>
<treenode node="testChgrpFail;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;732;5;741;;;;vpos;;v;;a;;r;;d4,733;;b1,0;;m0;;e">
</treenode>
<treenode node="testChgrpLink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;685;5;700;;;;vpos;;v;;a;;r;;d4,686;;b1,0;;m0;;e">
</treenode>
<treenode node="testChgrpLinkFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;717;5;730;;;;vpos;;v;;a;;r;;d4,718;;b1,0;;m0;;e">
</treenode>
<treenode node="testChgrpRecursive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;653;5;666;;;;vpos;;v;;a;;r;;d4,654;;b1,0;;m0;;e">
</treenode>
<treenode node="testChgrpSymlink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;668;5;683;;;;vpos;;v;;a;;r;;d4,669;;b1,0;;m0;;e">
</treenode>
<treenode node="testChgrpSymlinkFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;702;5;715;;;;vpos;;v;;a;;r;;d4,703;;b1,0;;m0;;e">
</treenode>
<treenode node="testChmodAppliesUmask;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;476;5;485;;;;vpos;;v;;a;;r;;d4,477;;b1,0;;m0;;e">
</treenode>
<treenode node="testChmodChangesFileMode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;430;5;444;;;;vpos;;v;;a;;r;;d4,431;;b1,0;;m0;;e">
</treenode>
<treenode node="testChmodChangesModeOfArrayOfFiles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;487;5;502;;;;vpos;;v;;a;;r;;d4,488;;b1,0;;m0;;e">
</treenode>
<treenode node="testChmodChangesModeOfTraversableFileObject;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;504;5;519;;;;vpos;;v;;a;;r;;d4,505;;b1,0;;m0;;e">
</treenode>
<treenode node="testChmodChangesZeroModeOnSubdirectoriesOnRecursive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;521;5;535;;;;vpos;;v;;a;;r;;d4,522;;b1,0;;m0;;e">
</treenode>
<treenode node="testChmodRecursive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;460;5;474;;;;vpos;;v;;a;;r;;d4,461;;b1,0;;m0;;e">
</treenode>
<treenode node="testChmodWithWrongModLeavesPreviousPermissionsUntouched;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;446;5;458;;;;vpos;;v;;a;;r;;d4,447;;b1,0;;m0;;e">
</treenode>
<treenode node="testChown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;537;5;548;;;;vpos;;v;;a;;r;;d4,538;;b1,0;;m0;;e">
</treenode>
<treenode node="testChownFail;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;629;5;638;;;;vpos;;v;;a;;r;;d4,630;;b1,0;;m0;;e">
</treenode>
<treenode node="testChownLink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;582;5;597;;;;vpos;;v;;a;;r;;d4,583;;b1,0;;m0;;e">
</treenode>
<treenode node="testChownLinkFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;614;5;627;;;;vpos;;v;;a;;r;;d4,615;;b1,0;;m0;;e">
</treenode>
<treenode node="testChownRecursive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;550;5;563;;;;vpos;;v;;a;;r;;d4,551;;b1,0;;m0;;e">
</treenode>
<treenode node="testChownSymlink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;565;5;580;;;;vpos;;v;;a;;r;;d4,566;;b1,0;;m0;;e">
</treenode>
<treenode node="testChownSymlinkFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;599;5;612;;;;vpos;;v;;a;;r;;d4,600;;b1,0;;m0;;e">
</treenode>
<treenode node="testCopyCreatesNewFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;18;5;29;;;;vpos;;v;;a;;r;;d4,19;;b1,0;;m0;;e">
</treenode>
<treenode node="testCopyCreatesTargetDirectoryIfItDoesNotExist;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;145;5;158;;;;vpos;;v;;a;;r;;d4,146;;b1,0;;m0;;e">
</treenode>
<treenode node="testCopyDoesNotOverrideExistingFileByDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;78;5;95;;;;vpos;;v;;a;;r;;d4,79;;b1,0;;m0;;e">
</treenode>
<treenode node="testCopyFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;31;5;38;;;;vpos;;v;;a;;r;;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="testCopyForOriginUrlsAndExistingLocalFileDefaultsToCopy;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;163;5;177;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testCopyForOriginUrlsAndExistingLocalFileDefaultsToCopy()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: network;;d4,164;;b1,0;;m0;;e">
</treenode>
<treenode node="testCopyOverridesExistingFileIfForced;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;97;5;114;;;;vpos;;v;;a;;r;;d4,98;;b1,0;;m0;;e">
</treenode>
<treenode node="testCopyOverridesExistingFileIfModified;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;63;5;76;;;;vpos;;v;;a;;r;;d4,64;;b1,0;;m0;;e">
</treenode>
<treenode node="testCopyShouldKeepExecutionPermission;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1689;5;1702;;;;vpos;;v;;a;;r;;d4,1690;;b1,0;;m0;;e">
</treenode>
<treenode node="testCopyUnreadableFileFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;40;5;61;;;;vpos;;v;;a;;r;;d4,41;;b1,0;;m0;;e">
</treenode>
<treenode node="testCopyWithOverrideWithReadOnlyTargetFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;116;5;143;;;;vpos;;v;;a;;r;;d4,117;;b1,0;;m0;;e">
</treenode>
<treenode node="testDumpFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1468;5;1486;;;;vpos;;v;;a;;r;;d4,1469;;b1,0;;m0;;e">
</treenode>
<treenode node="testDumpFileOverwritesAnExistingFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1517;5;1526;;;;vpos;;v;;a;;r;;d4,1518;;b1,0;;m0;;e">
</treenode>
<treenode node="testDumpFileWithArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1492;5;1500;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testDumpFileWithArray()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: legacy&#10;&lt;b&gt;expectedDeprecation&lt;/b&gt;: Calling &quot;Symfony\Component\Filesystem\Filesystem::dumpFile()&quot; with an array in the $content argument is deprecated since Symfony 4.3.;;d4,1493;;b1,0;;m0;;e">
</treenode>
<treenode node="testDumpFileWithFileScheme;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1528;5;1537;;;;vpos;;v;;a;;r;;d4,1529;;b1,0;;m0;;e">
</treenode>
<treenode node="testDumpFileWithResource;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1502;5;1515;;;;vpos;;v;;a;;r;;d4,1503;;b1,0;;m0;;e">
</treenode>
<treenode node="testDumpFileWithZlibScheme;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1539;5;1549;;;;vpos;;v;;a;;r;;d4,1540;;b1,0;;m0;;e">
</treenode>
<treenode node="testDumpKeepsExistingPermissionsWhenOverwritingAnExistingFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1676;5;1687;;;;vpos;;v;;a;;r;;d4,1677;;b1,0;;m0;;e">
</treenode>
<treenode node="testFilesExists;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;360;5;370;;;;vpos;;v;;a;;r;;d4,361;;b1,0;;m0;;e">
</treenode>
<treenode node="testFilesExistsFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;372;5;390;;;;vpos;;v;;a;;r;;d4,373;;b1,0;;m0;;e">
</treenode>
<treenode node="testFilesExistsTraversableObjectOfFilesAndDirectories;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;392;5;404;;;;vpos;;v;;a;;r;;d4,393;;b1,0;;m0;;e">
</treenode>
<treenode node="testFilesNotExistsTraversableObjectOfFilesAndDirectories;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;406;5;421;;;;vpos;;v;;a;;r;;d4,407;;b1,0;;m0;;e">
</treenode>
<treenode node="testInvalidFileNotExists;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;423;5;428;;;;vpos;;v;;a;;r;;d4,424;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsAbsolutePath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1351;5;1356;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testIsAbsolutePath($path, $expectedResult)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: providePathsForIsAbsolutePath;;d4,1352;;b1,0;;m0;;epath;;pexpectedResult;;p">
</treenode>
<treenode node="testLink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;877;5;889;;;;vpos;;v;;a;;r;;d4,878;;b1,0;;m0;;e">
</treenode>
<treenode node="testLinkIsNotOverwrittenIfAlreadyCreated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;923;5;937;;;;vpos;;v;;a;;r;;d4,924;;b1,0;;m0;;e">
</treenode>
<treenode node="testLinkIsOverwrittenIfPointsToDifferentTarget;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;905;5;921;;;;vpos;;v;;a;;r;;d4,906;;b1,0;;m0;;e">
</treenode>
<treenode node="testLinkWithSameTarget;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;957;5;971;;;;vpos;;v;;a;;r;;d4,958;;b1,0;;m0;;e">
</treenode>
<treenode node="testLinkWithSeveralTargets;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;939;5;955;;;;vpos;;v;;a;;r;;d4,940;;b1,0;;m0;;e">
</treenode>
<treenode node="testMakePathRelative;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1067;5;1072;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testMakePathRelative($endPath, $startPath, $expectedPath)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: providePathsForMakePathRelative;;d4,1068;;b1,0;;m0;;eendPath;;pstartPath;;pexpectedPath;;p">
</treenode>
<treenode node="testMakePathRelativeWithRelativeEndPath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1129;5;1134;;;;vpos;;v;;a;;r;;d4,1130;;b1,0;;m0;;e">
</treenode>
<treenode node="testMakePathRelativeWithRelativeStartPath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1122;5;1127;;;;vpos;;v;;a;;r;;d4,1123;;b1,0;;m0;;e">
</treenode>
<treenode node="testMirrorAvoidCopyingTargetDirectoryIfInSourceDirectory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1302;5;1330;;;;vpos;;v;;a;;r;;d4,1303;;b1,0;;m0;;e">
</treenode>
<treenode node="testMirrorContentsWithSameNameAsSourceOrTargetWithDeleteOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1277;5;1300;;;;vpos;;v;;a;;r;;d4,1278;;b1,0;;m0;;e">
</treenode>
<treenode node="testMirrorContentsWithSameNameAsSourceOrTargetWithoutDeleteOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1255;5;1275;;;;vpos;;v;;a;;r;;d4,1256;;b1,0;;m0;;e">
</treenode>
<treenode node="testMirrorCopiesFilesAndDirectoriesRecursively;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1136;5;1174;;;;vpos;;v;;a;;r;;d4,1137;;b1,0;;m0;;e">
</treenode>
<treenode node="testMirrorCopiesLinkedDirectoryContents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1210;5;1228;;;;vpos;;v;;a;;r;;d4,1211;;b1,0;;m0;;e">
</treenode>
<treenode node="testMirrorCopiesLinks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1191;5;1208;;;;vpos;;v;;a;;r;;d4,1192;;b1,0;;m0;;e">
</treenode>
<treenode node="testMirrorCopiesRelativeLinkedContents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1230;5;1253;;;;vpos;;v;;a;;r;;d4,1231;;b1,0;;m0;;e">
</treenode>
<treenode node="testMirrorCreatesEmptyDirectory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1176;5;1189;;;;vpos;;v;;a;;r;;d4,1177;;b1,0;;m0;;e">
</treenode>
<treenode node="testMirrorFromSubdirectoryInToParentDirectory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1332;5;1346;;;;vpos;;v;;a;;r;;d4,1333;;b1,0;;m0;;e">
</treenode>
<treenode node="testMkdirCreatesDirectoriesFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;218;5;227;;;;vpos;;v;;a;;r;;d4,219;;b1,0;;m0;;e">
</treenode>
<treenode node="testMkdirCreatesDirectoriesFromArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;190;5;202;;;;vpos;;v;;a;;r;;d4,191;;b1,0;;m0;;e">
</treenode>
<treenode node="testMkdirCreatesDirectoriesFromTraversableObject;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;204;5;216;;;;vpos;;v;;a;;r;;d4,205;;b1,0;;m0;;e">
</treenode>
<treenode node="testMkdirCreatesDirectoriesRecursively;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;179;5;188;;;;vpos;;v;;a;;r;;d4,180;;b1,0;;m0;;e">
</treenode>
<treenode node="testReadAbsoluteLink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;996;5;1013;;;;vpos;;v;;a;;r;;d4,997;;b1,0;;m0;;e">
</treenode>
<treenode node="testReadBrokenLink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1015;5;1033;;;;vpos;;v;;a;;r;;d4,1016;;b1,0;;m0;;e">
</treenode>
<treenode node="testReadLinkCanonicalizePath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1048;5;1057;;;;vpos;;v;;a;;r;;d4,1049;;b1,0;;m0;;e">
</treenode>
<treenode node="testReadLinkCanonicalizedPathDoesNotExist;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1059;5;1062;;;;vpos;;v;;a;;r;;d4,1060;;b1,0;;m0;;e">
</treenode>
<treenode node="testReadLinkDefaultPathDoesNotExist;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1035;5;1038;;;;vpos;;v;;a;;r;;d4,1036;;b1,0;;m0;;e">
</treenode>
<treenode node="testReadLinkDefaultPathNotLink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1040;5;1046;;;;vpos;;v;;a;;r;;d4,1041;;b1,0;;m0;;e">
</treenode>
<treenode node="testReadRelativeLink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;973;5;994;;;;vpos;;v;;a;;r;;d4,974;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveCleansArrayOfFilesAndDirectories;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;287;5;302;;;;vpos;;v;;a;;r;;d4,288;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveCleansFilesAndDirectoriesIteratively;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;274;5;285;;;;vpos;;v;;a;;r;;d4,275;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveCleansInvalidLinks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;336;5;358;;;;vpos;;v;;a;;r;;d4,337;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveCleansTraversableObjectOfFilesAndDirectories;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;304;5;319;;;;vpos;;v;;a;;r;;d4,305;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveIgnoresNonExistingFiles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;321;5;334;;;;vpos;;v;;a;;r;;d4,322;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveLink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;894;5;903;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testRemoveLink()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;depends&lt;/b&gt;: testLink;;d4,895;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveSymlink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;813;5;824;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testRemoveSymlink()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;depends&lt;/b&gt;: testSymlink;;d4,814;;b1,0;;m0;;e">
</treenode>
<treenode node="testRename;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;743;5;753;;;;vpos;;v;;a;;r;;d4,744;;b1,0;;m0;;e">
</treenode>
<treenode node="testRenameOverwritesTheTargetIfItAlreadyExists;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;767;5;779;;;;vpos;;v;;a;;r;;d4,768;;b1,0;;m0;;e">
</treenode>
<treenode node="testRenameThrowsExceptionIfTargetAlreadyExists;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;755;5;765;;;;vpos;;v;;a;;r;;d4,756;;b1,0;;m0;;e">
</treenode>
<treenode node="testRenameThrowsExceptionOnError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;781;5;788;;;;vpos;;v;;a;;r;;d4,782;;b1,0;;m0;;e">
</treenode>
<treenode node="testSymlink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;790;5;808;;;;vpos;;v;;a;;r;;d4,791;;b1,0;;m0;;e">
</treenode>
<treenode node="testSymlinkCreatesTargetDirectoryIfItDoesNotExist;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;858;5;875;;;;vpos;;v;;a;;r;;d4,859;;b1,0;;m0;;e">
</treenode>
<treenode node="testSymlinkIsNotOverwrittenIfAlreadyCreated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;842;5;856;;;;vpos;;v;;a;;r;;d4,843;;b1,0;;m0;;e">
</treenode>
<treenode node="testSymlinkIsOverwrittenIfPointsToDifferentTarget;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;826;5;840;;;;vpos;;v;;a;;r;;d4,827;;b1,0;;m0;;e">
</treenode>
<treenode node="testTempnam;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1371;5;1378;;;;vpos;;v;;a;;r;;d4,1372;;b1,0;;m0;;e">
</treenode>
<treenode node="testTempnamOnUnwritableFallsBackToSysTmp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1454;5;1466;;;;vpos;;v;;a;;r;;d4,1455;;b1,0;;m0;;e">
</treenode>
<treenode node="testTempnamWithFileScheme;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1380;5;1389;;;;vpos;;v;;a;;r;;d4,1381;;b1,0;;m0;;e">
</treenode>
<treenode node="testTempnamWithHTTPSchemeFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1444;5;1452;;;;vpos;;v;;a;;r;;d4,1445;;b1,0;;m0;;e">
</treenode>
<treenode node="testTempnamWithMockScheme;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1391;5;1402;;;;vpos;;v;;a;;r;;d4,1392;;b1,0;;m0;;e">
</treenode>
<treenode node="testTempnamWithPHPTempSchemeFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1414;5;1425;;;;vpos;;v;;a;;r;;d4,1415;;b1,0;;m0;;e">
</treenode>
<treenode node="testTempnamWithPharSchemeFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1427;5;1442;;;;vpos;;v;;a;;r;;d4,1428;;b1,0;;m0;;e">
</treenode>
<treenode node="testTempnamWithZlibSchemeFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;1404;5;1412;;;;vpos;;v;;a;;r;;d4,1405;;b1,0;;m0;;e">
</treenode>
<treenode node="testTouchCreatesEmptyFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;229;5;236;;;;vpos;;v;;a;;r;;d4,230;;b1,0;;m0;;e">
</treenode>
<treenode node="testTouchCreatesEmptyFilesFromArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;246;5;258;;;;vpos;;v;;a;;r;;d4,247;;b1,0;;m0;;e">
</treenode>
<treenode node="testTouchCreatesEmptyFilesFromTraversableObject;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;260;5;272;;;;vpos;;v;;a;;r;;d4,261;;b1,0;;m0;;e">
</treenode>
<treenode node="testTouchFails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTest.php;f11;238;5;244;;;;vpos;;v;;a;;r;;d4,239;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FilesystemTestCase;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTestCase.php;f0;16;1;164;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="assertFilePermissions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTestCase.php;f14;97;5;105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    assertFilePermissions($expectedFilePerms, $filePath)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$expectedFilePerms&lt;/b&gt;: Expected file permissions as three digits (i.e. 755)&#10;    string &lt;b&gt;$filePath&lt;/b&gt;;;d4,98;;b2,0;;m0;;eint $expectedFilePerms;;pstring $filePath;;p">
</treenode>
<treenode node="getFileGroup;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTestCase.php;f14;116;5;126;;;;vpos;;v;;a;;r;;d4,117;;b2,0;;m0;;efilepath;;p">
</treenode>
<treenode node="getFileOwner;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTestCase.php;f14;107;5;114;;;;vpos;;v;;a;;r;;d4,108;;b2,0;;m0;;efilepath;;p">
</treenode>
<treenode node="markAsSkippedIfChmodIsMissing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTestCase.php;f14;151;5;156;;;;vpos;;v;;a;;r;;d4,152;;b2,0;;m0;;e">
</treenode>
<treenode node="markAsSkippedIfLinkIsMissing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTestCase.php;f14;128;5;137;;;;vpos;;v;;a;;r;;d4,129;;b2,0;;m0;;e">
</treenode>
<treenode node="markAsSkippedIfPosixIsMissing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTestCase.php;f14;158;5;163;;;;vpos;;v;;a;;r;;d4,159;;b2,0;;m0;;e">
</treenode>
<treenode node="markAsSkippedIfSymlinkIsMissing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTestCase.php;f14;139;5;149;;;;vpos;;v;;a;;r;;d4,140;;b2,0;;m0;;erelative;;p">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTestCase.php;f14;71;5;78;;;;vpos;;v;;a void;;r;;d4,72;;b2,0;;m0;;e">
</treenode>
<treenode node="setUpBeforeClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTestCase.php;f18;42;5;69;;;;vpos;;v;;a void;;r;;d4,43;;b1,5;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\FilesystemTestCase.php;f14;80;5;91;;;;vpos;;v;;a void;;r;;d4,81;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FinalClassFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\FinalClassFixer.php;f6;21;1;59;;;;vpos;;v;;aAbstractProxyFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FinalClassFixer extends AbstractProxyFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="createProxyFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\FinalClassFixer.php;f14;49;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProxyFixers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\FinalClassFixer.php;f11;26;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,27;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FinalInternalClassFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\FinalInternalClassFixer.php;f6;31;1;197;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FinalInternalClassFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,32;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\FinalInternalClassFixer.php;f14;90;5;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,91;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\FinalInternalClassFixer.php;f11;36;5;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,37;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\FinalInternalClassFixer.php;f14;111;5;154;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,112;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\FinalInternalClassFixer.php;f11;53;5;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,54;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\FinalInternalClassFixer.php;f11;74;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,75;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isClassCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\FinalInternalClassFixer.php;f12;162;5;196;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isClassCandidate(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: T_CLASS index;;d4,163;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\FinalInternalClassFixer.php;f11;82;5;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,83;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Finder;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f0;38;1;810;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Finder.php;f0;20;1;35;;;;vpos;;v;;aIteratorAggregate;;cCountable;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Finder implements \IteratorAggregate, \Countable&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finder allows to build rules to find files and directories.&#10;It is a thin wrapper around several specialized iterator classes.&#10;All rules may be invoked several times.&#10;All methods return the current Finder object to allow chaining:&#10;$finder = Finder::create()-&gt;files()-&gt;name(&apos;*.php&apos;)-&gt;in(__DIR__);s&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,39;;b0,0;;m0;;e">
<treenode node="IGNORE_DOT_FILES;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f9;41;26;41;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="IGNORE_VCS_FILES;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f9;40;26;40;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="IGNORE_VCS_IGNORED_FILES;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f9;42;34;42;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;66;5;69;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Finder.php;f11;22;5;34;;;;vpos;;v;;a;;r;;d4,67;;b1,0;;m0;;e">
</treenode>
<treenode node="addVCSPattern;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f18;402;5;409;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addVCSPattern($pattern)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds VCS patterns.&#10;&lt;b&gt;see&lt;/b&gt;: ignoreVCS()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$pattern&lt;/b&gt;: VCS patterns to ignore;;d4,403;;b1,5;;m0;;estring|string[] $pattern;;p">
</treenode>
<treenode node="append;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;651;5;668;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    append($iterator)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Appends an existing set of files/directories to the finder.&#10;The set can be another Finder, an Iterator, an IteratorAggregate, or even a plain array.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException when the given argument is not iterable&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    iterable &lt;b&gt;$iterator&lt;/b&gt;;;d4,652;;b1,0;;m0;;eiterable $iterator;;p">
</treenode>
<treenode node="contains;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;212;5;217;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    contains($patterns)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds tests that file contents must match.&#10;Strings or PCRE patterns can be used:&#10;$finder-&gt;contains(&apos;Lorem ipsum&apos;)&#10;$finder-&gt;contains(&apos;/Lorem ipsum/i&apos;)&#10;$finder-&gt;contains([&apos;dolor&apos;, &apos;/ipsum/i&apos;])&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: FilecontentFilterIterator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$patterns&lt;/b&gt;: A pattern (string or regexp) or an array of patterns;;d4,213;;b1,0;;m0;;estring|string[] $patterns;;p">
</treenode>
<treenode node="count;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;689;5;692;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    count()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Counts all the results collected by the iterators.;;d4,690;;b1,0;;m0;;e">
</treenode>
<treenode node="create;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f18;76;5;79;;;;vpos;;v;;astatic;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    create()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new Finder.;;d4,77;;b1,5;;m0;;e">
</treenode>
<treenode node="date;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;149;5;156;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    date($dates)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds tests for file dates (last modified).&#10;The date must be something that strtotime() is able to parse:&#10;$finder-&gt;date(&apos;since yesterday&apos;);s&#10;$finder-&gt;date(&apos;until 2 days ago&apos;);s&#10;$finder-&gt;date(&apos;&gt; now - 2 hours&apos;);s&#10;$finder-&gt;date(&apos;&gt;= 2005-10-15&apos;);s&#10;$finder-&gt;date([&apos;&gt;= 2005-10-15&apos;, &apos;&lt;= 2006-05-27&apos;]);s&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: strtotime&#10;&lt;b&gt;see&lt;/b&gt;: DateRangeFilterIterator&#10;&lt;b&gt;see&lt;/b&gt;: DateComparator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$dates&lt;/b&gt;: A date range string or an array of date ranges;;d4,150;;b1,0;;m0;;estring|string[] $dates;;p">
</treenode>
<treenode node="depth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;121;5;128;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    depth($levels)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds tests for the directory depth.&#10;Usage:&#10;$finder-&gt;depth(&apos;&gt; 1&apos;) // the Finder will start matching at level 1.&#10;$finder-&gt;depth(&apos;&lt; 3&apos;) // the Finder will descend at most 3 levels of directories below the starting point.&#10;$finder-&gt;depth([&apos;&gt;= 1&apos;, &apos;&lt; 3&apos;])&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: DepthRangeFilterIterator&#10;&lt;b&gt;see&lt;/b&gt;: NumberComparator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int|string[]|int[] &lt;b&gt;$levels&lt;/b&gt;: The depth level expression or an array of depth levels;;d4,122;;b1,0;;m0;;estring|int|string[]|int[] $levels;;p">
</treenode>
<treenode node="directories;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;86;5;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    directories()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Restricts the matching to directories only.&#10;$this;;d4,87;;b1,0;;m0;;e">
</treenode>
<treenode node="exclude;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;326;5;331;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    exclude($dirs)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Excludes directories.&#10;Directories passed as argument must be relative to the ones defined with the `in()` method. For example:&#10;$finder-&gt;in(__DIR__)-&gt;exclude(&apos;ruby&apos;);s&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: ExcludeDirectoryFilterIterator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array &lt;b&gt;$dirs&lt;/b&gt;: A directory path or an array of directories;;d4,327;;b1,0;;m0;;estring|array $dirs;;p">
</treenode>
<treenode node="files;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;98;5;103;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    files()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Restricts the matching to files only.&#10;$this;;d4,99;;b1,0;;m0;;e">
</treenode>
<treenode node="filter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;546;5;551;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    filter(\Closure $closure)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Filters the iterator with an anonymous function.&#10;The anonymous function receives a \SplFileInfo and must return false&#10;to remove files.&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: CustomFilterIterator;;d4,547;;b1,0;;m0;;eclosure;;p">
</treenode>
<treenode node="followLinks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;558;5;563;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    followLinks()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Forces the following of symlinks.&#10;$this;;d4,559;;b1,0;;m0;;e">
</treenode>
<treenode node="getIterator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;618;5;638;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIterator()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an Iterator for the current Finder configuration.&#10;This method implements the IteratorAggregate interface.&#10;\Iterator|SplFileInfo[] An iterator&#10;&lt;b&gt;throws&lt;/b&gt;: \LogicException if the in() method has not been called;;d4,619;;b1,0;;m0;;e">
</treenode>
<treenode node="hasResults;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;675;5;682;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasResults()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the any results were found.;;d4,676;;b1,0;;m0;;e">
</treenode>
<treenode node="ignoreDotFiles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;344;5;353;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ignoreDotFiles($ignoreDotFiles)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Excludes &quot;hidden&quot; directories and files (starting with a dot).&#10;This option is enabled by default.&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: ExcludeDirectoryFilterIterator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$ignoreDotFiles&lt;/b&gt;: Whether to exclude &quot;hidden&quot; files or not;;d4,345;;b1,0;;m0;;ebool $ignoreDotFiles;;p">
</treenode>
<treenode node="ignoreUnreadableDirs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;574;5;579;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ignoreUnreadableDirs($ignore = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tells finder to ignore unreadable directories.&#10;By default, scanning unreadable directories content throws an AccessDeniedException.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$ignore&lt;/b&gt;;;d4,575;;b1,0;;m0;;ebool $ignore;;p">
</treenode>
<treenode node="ignoreVCS;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;366;5;375;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ignoreVCS($ignoreVCS)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Forces the finder to ignore version control directories.&#10;This option is enabled by default.&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: ExcludeDirectoryFilterIterator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$ignoreVCS&lt;/b&gt;: Whether to exclude VCS files or not;;d4,367;;b1,0;;m0;;ebool $ignoreVCS;;p">
</treenode>
<treenode node="ignoreVCSIgnored;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;384;5;393;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ignoreVCSIgnored(bool $ignoreVCSIgnored)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Forces Finder to obey .gitignore and ignore files based on rules listed there.&#10;This option is disabled by default.&#10;$this;;d4,385;;b1,0;;m0;;eignoreVCSIgnored;;p">
</treenode>
<treenode node="in;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;590;5;607;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    in($dirs)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Searches files and directories which match defined rules.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: DirectoryNotFoundException if one of the directories does not exist&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$dirs&lt;/b&gt;: A directory path or an array of directories;;d4,591;;b1,0;;m0;;estring|string[] $dirs;;p">
</treenode>
<treenode node="name;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;174;5;179;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    name($patterns)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds rules that files must match.&#10;You can use patterns (delimited with / sign), globs or simple strings.&#10;$finder-&gt;name(&apos;*.php&apos;)&#10;$finder-&gt;name(&apos;/\.php$/&apos;) // same as above&#10;$finder-&gt;name(&apos;test.php&apos;)&#10;$finder-&gt;name([&apos;test.py&apos;, &apos;test.php&apos;])&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: FilenameFilterIterator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$patterns&lt;/b&gt;: A pattern (a regexp, a glob, or a string) or an array of patterns;;d4,175;;b1,0;;m0;;estring|string[] $patterns;;p">
</treenode>
<treenode node="normalizeDir;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f12;800;5;809;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    normalizeDir($dir)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Normalizes given directory names by removing trailing slashes.&#10;Excluding: (s)ftp:// wrapper&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$dir&lt;/b&gt;;;d4,801;;b3,0;;m0;;estring $dir;;p">
</treenode>
<treenode node="notContains;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;234;5;239;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    notContains($patterns)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds tests that file contents must not match.&#10;Strings or PCRE patterns can be used:&#10;$finder-&gt;notContains(&apos;Lorem ipsum&apos;)&#10;$finder-&gt;notContains(&apos;/Lorem ipsum/i&apos;)&#10;$finder-&gt;notContains([&apos;lorem&apos;, &apos;/dolor/i&apos;])&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: FilecontentFilterIterator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$patterns&lt;/b&gt;: A pattern (string or regexp) or an array of patterns;;d4,235;;b1,0;;m0;;estring|string[] $patterns;;p">
</treenode>
<treenode node="notName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;190;5;195;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    notName($patterns)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds rules that files must not match.&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: FilenameFilterIterator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$patterns&lt;/b&gt;: A pattern (a regexp, a glob, or a string) or an array of patterns;;d4,191;;b1,0;;m0;;estring|string[] $patterns;;p">
</treenode>
<treenode node="notPath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;282;5;287;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    notPath($patterns)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds rules that filenames must not match.&#10;You can use patterns (delimited with / sign) or simple strings.&#10;$finder-&gt;notPath(&apos;some/special/dir&apos;)&#10;$finder-&gt;notPath(&apos;/some\/special\/dir/&apos;) // same as above&#10;$finder-&gt;notPath([&apos;some/file.txt&apos;, &apos;another/file.log&apos;])&#10;Use only / as dirname separator.&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: FilenameFilterIterator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$patterns&lt;/b&gt;: A pattern (a regexp or a string) or an array of patterns;;d4,283;;b1,0;;m0;;estring|string[] $patterns;;p">
</treenode>
<treenode node="path;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;258;5;263;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    path($patterns)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds rules that filenames must match.&#10;You can use patterns (delimited with / sign) or simple strings.&#10;$finder-&gt;path(&apos;some/special/dir&apos;)&#10;$finder-&gt;path(&apos;/some\/special\/dir/&apos;) // same as above&#10;$finder-&gt;path([&apos;some dir&apos;, &apos;another/dir&apos;])&#10;Use only / as dirname separator.&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: FilenameFilterIterator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$patterns&lt;/b&gt;: A pattern (a regexp or a string) or an array of patterns;;d4,259;;b1,0;;m0;;estring|string[] $patterns;;p">
</treenode>
<treenode node="reverseSorting;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;491;5;496;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    reverseSorting()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reverses the sorting.&#10;$this;;d4,492;;b1,0;;m0;;e">
</treenode>
<treenode node="searchInDirectory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f12;694;52;694;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;edir;;p">
</treenode>
<treenode node="size;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;304;5;311;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    size($sizes)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds tests for file sizes.&#10;$finder-&gt;size(&apos;&gt; 10K&apos;);s&#10;$finder-&gt;size(&apos;&lt;= 1Ki&apos;);s&#10;$finder-&gt;size(4);s&#10;$finder-&gt;size([&apos;&gt; 10K&apos;, &apos;&lt; 20K&apos;])&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: SizeRangeFilterIterator&#10;&lt;b&gt;see&lt;/b&gt;: NumberComparator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int|string[]|int[] &lt;b&gt;$sizes&lt;/b&gt;: A size range string or an integer or an array of size ranges;;d4,305;;b1,0;;m0;;estring|int|string[]|int[] $sizes;;p">
</treenode>
<treenode node="sort;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;422;5;427;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sort(\Closure $closure)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sorts files and directories by an anonymous function.&#10;The anonymous function receives two \SplFileInfo instances to compare.&#10;This can be slow as all the matching files and directories must be retrieved for comparison.&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: SortableIterator;;d4,423;;b1,0;;m0;;eclosure;;p">
</treenode>
<treenode node="sortByAccessedTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;479;5;484;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortByAccessedTime()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sorts files and directories by the last accessed time.&#10;This is the time that the file was last accessed, read or written to.&#10;This can be slow as all the matching files and directories must be retrieved for comparison.&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: SortableIterator;;d4,480;;b1,0;;m0;;e">
</treenode>
<treenode node="sortByChangedTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;511;5;516;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortByChangedTime()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sorts files and directories by the last inode changed time.&#10;This is the time that the inode information was last modified (permissions, owner, group or other metadata).&#10;On Windows, since inode is not available, changed time is actually the file creation time.&#10;This can be slow as all the matching files and directories must be retrieved for comparison.&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: SortableIterator;;d4,512;;b1,0;;m0;;e">
</treenode>
<treenode node="sortByModifiedTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;529;5;534;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortByModifiedTime()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sorts files and directories by the last modified time.&#10;This is the last time the actual contents of the file were last modified.&#10;This can be slow as all the matching files and directories must be retrieved for comparison.&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: SortableIterator;;d4,530;;b1,0;;m0;;e">
</treenode>
<treenode node="sortByName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;440;5;450;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortByName(/* bool $useNaturalSort = false */)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sorts files and directories by name.&#10;This can be slow as all the matching files and directories must be retrieved for comparison.&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: SortableIterator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$useNaturalSort&lt;/b&gt;: Whether to use natural sort or not, disabled by default;;d4,441;;b1,0;;m0;;e">
</treenode>
<treenode node="sortByType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Finder.php;f11;461;5;466;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortByType()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sorts files and directories by type (directories before files), then by name.&#10;This can be slow as all the matching files and directories must be retrieved for comparison.&#10;$this&#10;&lt;b&gt;see&lt;/b&gt;: SortableIterator;;d4,462;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FinderTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f0;15;1;1437;;;;vpos;;v;;aRealIteratorTestCase;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="buildFinder;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f14;1433;5;1436;;;;vpos;;v;;a;;r;;d4,1434;;b2,0;;m0;;e">
</treenode>
<treenode node="getContainsTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1237;5;1253;;;;vpos;;v;;a;;r;;d4,1238;;b1,0;;m0;;e">
</treenode>
<treenode node="getRegexNameTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1255;5;1261;;;;vpos;;v;;a;;r;;d4,1256;;b1,0;;m0;;e">
</treenode>
<treenode node="getTestPathData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1276;5;1346;;;;vpos;;v;;a;;r;;d4,1277;;b1,0;;m0;;e">
</treenode>
<treenode node="testAccessDeniedException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1348;5;1382;;;;vpos;;v;;a;;r;;d4,1349;;b1,0;;m0;;e">
</treenode>
<treenode node="testAppendDoesNotRequireIn;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1077;5;1085;;;;vpos;;v;;a;;r;;d4,1078;;b1,0;;m0;;e">
</treenode>
<treenode node="testAppendReturnsAFinder;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1072;5;1075;;;;vpos;;v;;a;;r;;d4,1073;;b1,0;;m0;;e">
</treenode>
<treenode node="testAppendWithAFinder;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1049;5;1060;;;;vpos;;v;;a;;r;;d4,1050;;b1,0;;m0;;e">
</treenode>
<treenode node="testAppendWithAnArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1062;5;1070;;;;vpos;;v;;a;;r;;d4,1063;;b1,0;;m0;;e">
</treenode>
<treenode node="testBackPathNotNormalized;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;115;5;122;;;;vpos;;v;;a;;r;;d4,116;;b1,0;;m0;;e">
</treenode>
<treenode node="testContains;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1135;5;1144;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testContains($matchPatterns, $noMatchPatterns, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getContainsTestData;;d4,1136;;b1,0;;m0;;ematchPatterns;;pnoMatchPatterns;;pexpected;;p">
</treenode>
<treenode node="testContainsOnDirectory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1146;5;1154;;;;vpos;;v;;a;;r;;d4,1147;;b1,0;;m0;;e">
</treenode>
<treenode node="testCountDirectories;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1087;5;1097;;;;vpos;;v;;a;;r;;d4,1088;;b1,0;;m0;;e">
</treenode>
<treenode node="testCountFiles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1099;5;1109;;;;vpos;;v;;a;;r;;d4,1100;;b1,0;;m0;;e">
</treenode>
<treenode node="testCountWithoutIn;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1111;5;1116;;;;vpos;;v;;a;;r;;d4,1112;;b1,0;;m0;;e">
</treenode>
<treenode node="testCreate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;17;5;20;;;;vpos;;v;;a;;r;;d4,18;;b1,0;;m0;;e">
</treenode>
<treenode node="testDate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;309;5;314;;;;vpos;;v;;a;;r;;d4,310;;b1,0;;m0;;e">
</treenode>
<treenode node="testDateWithArrayParam;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;316;5;321;;;;vpos;;v;;a;;r;;d4,317;;b1,0;;m0;;e">
</treenode>
<treenode node="testDepth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;124;5;169;;;;vpos;;v;;a;;r;;d4,125;;b1,0;;m0;;e">
</treenode>
<treenode node="testDepthWithArrayParam;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;171;5;180;;;;vpos;;v;;a;;r;;d4,172;;b1,0;;m0;;e">
</treenode>
<treenode node="testDirectories;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;22;5;33;;;;vpos;;v;;a;;r;;d4,23;;b1,0;;m0;;e">
</treenode>
<treenode node="testExclude;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;323;5;342;;;;vpos;;v;;a;;r;;d4,324;;b1,0;;m0;;e">
</treenode>
<treenode node="testFiles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;35;5;70;;;;vpos;;v;;a;;r;;d4,36;;b1,0;;m0;;e">
</treenode>
<treenode node="testFilter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;834;5;839;;;;vpos;;v;;a;;r;;d4,835;;b1,0;;m0;;e">
</treenode>
<treenode node="testFollowLinks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;841;5;866;;;;vpos;;v;;a;;r;;d4,842;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetFilenameWithoutExtension;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1015;5;1047;;;;vpos;;v;;a;;r;;d4,1016;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetIterator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;938;5;961;;;;vpos;;v;;a;;r;;d4,939;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetIteratorWithoutIn;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;931;5;936;;;;vpos;;v;;a;;r;;d4,932;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasResults;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1118;5;1123;;;;vpos;;v;;a;;r;;d4,1119;;b1,0;;m0;;e">
</treenode>
<treenode node="testIgnoreDotFiles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;504;5;579;;;;vpos;;v;;a;;r;;d4,505;;b1,0;;m0;;e">
</treenode>
<treenode node="testIgnoreDotFilesCanBeDisabledAfterFirstIteration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;581;5;627;;;;vpos;;v;;a;;r;;d4,582;;b1,0;;m0;;e">
</treenode>
<treenode node="testIgnoreVCS;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;344;5;424;;;;vpos;;v;;a;;r;;d4,345;;b1,0;;m0;;e">
</treenode>
<treenode node="testIgnoreVCSCanBeDisabledAfterFirstIteration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;448;5;502;;;;vpos;;v;;a;;r;;d4,449;;b1,0;;m0;;e">
</treenode>
<treenode node="testIgnoreVCSIgnored;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;426;5;446;;;;vpos;;v;;a;;r;;d4,427;;b1,0;;m0;;e">
</treenode>
<treenode node="testIgnoredAccessDeniedException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1384;5;1421;;;;vpos;;v;;a;;r;;d4,1385;;b1,0;;m0;;e">
</treenode>
<treenode node="testIn;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;868;5;888;;;;vpos;;v;;a;;r;;d4,869;;b1,0;;m0;;e">
</treenode>
<treenode node="testInWithGlob;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;904;5;910;;;;vpos;;v;;a;;r;;d4,905;;b1,0;;m0;;e">
</treenode>
<treenode node="testInWithGlobBrace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;919;5;929;;;;vpos;;v;;a;;r;;d4,920;;b1,0;;m0;;e">
</treenode>
<treenode node="testInWithNonDirectoryGlob;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;912;5;917;;;;vpos;;v;;a;;r;;d4,913;;b1,0;;m0;;e">
</treenode>
<treenode node="testInWithNonExistentDirectory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;890;5;895;;;;vpos;;v;;a;;r;;d4,891;;b1,0;;m0;;e">
</treenode>
<treenode node="testInWithNonExistentDirectoryLegacyException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;897;5;902;;;;vpos;;v;;a;;r;;d4,898;;b1,0;;m0;;e">
</treenode>
<treenode node="testInheritedClassCallSortByNameWithNoArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1427;5;1431;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testInheritedClassCallSortByNameWithNoArguments()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: legacy&#10;&lt;b&gt;expectedDeprecation&lt;/b&gt;: The &quot;Symfony\Component\Finder\Finder::sortByName()&quot; method will have a new &quot;bool $useNaturalSort = false&quot; argument in version 5.0, not defining it is deprecated since Symfony 4.2.;;d4,1428;;b1,0;;m0;;e">
</treenode>
<treenode node="testIteratorKeys;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1219;5;1225;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testIteratorKeys()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Iterator keys must be the file pathname.;;d4,1220;;b1,0;;m0;;e">
</treenode>
<treenode node="testMultipleLocations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1172;5;1188;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testMultipleLocations()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Searching in multiple locations involves AppendIterator which does an unnecessary rewind which leaves FilterIterator&#10;with inner FilesystemIterator in an invalid state.&#10;&lt;b&gt;see&lt;/b&gt;: https://bugs.php.net/68557;;d4,1173;;b1,0;;m0;;e">
</treenode>
<treenode node="testMultipleLocationsWithSubDirectories;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1197;5;1214;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testMultipleLocationsWithSubDirectories()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Searching in multiple locations with sub directories involves&#10;AppendIterator which does an unnecessary rewind which leaves&#10;FilterIterator with inner FilesystemIterator in an invalid state.&#10;&lt;b&gt;see&lt;/b&gt;: https://bugs.php.net/68557;;d4,1198;;b1,0;;m0;;e">
</treenode>
<treenode node="testName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;182;5;220;;;;vpos;;v;;a;;r;;d4,183;;b1,0;;m0;;e">
</treenode>
<treenode node="testNameWithArrayParam;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;222;5;227;;;;vpos;;v;;a;;r;;d4,223;;b1,0;;m0;;e">
</treenode>
<treenode node="testNoResults;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1125;5;1130;;;;vpos;;v;;a;;r;;d4,1126;;b1,0;;m0;;e">
</treenode>
<treenode node="testNotContainsOnDirectory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1156;5;1164;;;;vpos;;v;;a;;r;;d4,1157;;b1,0;;m0;;e">
</treenode>
<treenode node="testNotName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;229;5;267;;;;vpos;;v;;a;;r;;d4,230;;b1,0;;m0;;e">
</treenode>
<treenode node="testNotNameWithArrayParam;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;269;5;280;;;;vpos;;v;;a;;r;;d4,270;;b1,0;;m0;;e">
</treenode>
<treenode node="testPath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1266;5;1274;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testPath($matchPatterns, $noMatchPatterns, array $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getTestPathData;;d4,1267;;b1,0;;m0;;ematchPatterns;;pnoMatchPatterns;;pexpected;;p">
</treenode>
<treenode node="testRegexName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;285;5;293;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testRegexName($regex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getRegexNameTestData;;d4,286;;b1,0;;m0;;eregex;;p">
</treenode>
<treenode node="testRegexSpecialCharsLocationWithPathRestrictionContainingStartFlag;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;1227;5;1235;;;;vpos;;v;;a;;r;;d4,1228;;b1,0;;m0;;e">
</treenode>
<treenode node="testRelativePath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;963;5;979;;;;vpos;;v;;a;;r;;d4,964;;b1,0;;m0;;e">
</treenode>
<treenode node="testRelativePathname;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;981;5;1013;;;;vpos;;v;;a;;r;;d4,982;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveTrailingSlash;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;72;5;93;;;;vpos;;v;;a;;r;;d4,73;;b1,0;;m0;;e">
</treenode>
<treenode node="testReverseSorting;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;744;5;766;;;;vpos;;v;;a;;r;;d4,745;;b1,0;;m0;;e">
</treenode>
<treenode node="testSize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;295;5;300;;;;vpos;;v;;a;;r;;d4,296;;b1,0;;m0;;e">
</treenode>
<treenode node="testSizeWithArrayParam;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;302;5;307;;;;vpos;;v;;a;;r;;d4,303;;b1,0;;m0;;e">
</treenode>
<treenode node="testSort;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;811;5;832;;;;vpos;;v;;a;;r;;d4,812;;b1,0;;m0;;e">
</treenode>
<treenode node="testSortByAccessedTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;675;5;696;;;;vpos;;v;;a;;r;;d4,676;;b1,0;;m0;;e">
</treenode>
<treenode node="testSortByChangedTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;698;5;719;;;;vpos;;v;;a;;r;;d4,699;;b1,0;;m0;;e">
</treenode>
<treenode node="testSortByModifiedTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;721;5;742;;;;vpos;;v;;a;;r;;d4,722;;b1,0;;m0;;e">
</treenode>
<treenode node="testSortByName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;629;5;650;;;;vpos;;v;;a;;r;;d4,630;;b1,0;;m0;;e">
</treenode>
<treenode node="testSortByNameNatural;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;768;5;809;;;;vpos;;v;;a;;r;;d4,769;;b1,0;;m0;;e">
</treenode>
<treenode node="testSortByType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;652;5;673;;;;vpos;;v;;a;;r;;d4,653;;b1,0;;m0;;e">
</treenode>
<treenode node="testSymlinksNotResolved;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\FinderTest.php;f11;95;5;113;;;;vpos;;v;;a;;r;;d4,96;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FixCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\FixCommand.php;f6;41;1;269;;;;vpos;;v;;aCommand;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FixCommand extends Command&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,42;;b0,0;;m0;;e">
<treenode node="COMMAND_NAME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\FixCommand.php;f9;43;22;43;;;;vpos;;v;;a;;r&apos;fix&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\FixCommand.php;f11;70;5;79;;;;vpos;;v;;a;;r;;d4,71;;b1,0;;m0;;etoolInfo;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\FixCommand.php;f14;94;5;117;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,95;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\FixCommand.php;f14;122;5;268;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    execute(InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,123;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="getHelp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\FixCommand.php;f11;86;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHelp()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: }&#10;Override here to only generate the help copy when used.;;d4,87;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FixCommandExitStatusCalculator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\FixCommandExitStatusCalculator.php;f6;19;1;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FixCommandExitStatusCalculator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="EXIT_STATUS_FLAG_EXCEPTION_IN_APP;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\FixCommandExitStatusCalculator.php;f9;26;43;26;;;;vpos;;v;;a;;r64;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="EXIT_STATUS_FLAG_HAS_CHANGED_FILES;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\FixCommandExitStatusCalculator.php;f9;23;44;23;;;;vpos;;v;;a;;r8;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="EXIT_STATUS_FLAG_HAS_INVALID_CONFIG;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\FixCommandExitStatusCalculator.php;f9;24;45;24;;;;vpos;;v;;a;;r16;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="EXIT_STATUS_FLAG_HAS_INVALID_FILES;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\FixCommandExitStatusCalculator.php;f9;22;44;22;;;;vpos;;v;;a;;r4;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="EXIT_STATUS_FLAG_HAS_INVALID_FIXER_CONFIG;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\FixCommandExitStatusCalculator.php;f9;25;51;25;;;;vpos;;v;;a;;r32;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="calculate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\FixCommandExitStatusCalculator.php;f11;36;5;55;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calculate($isDryRun, $hasChangedFiles, $hasInvalidErrors, $hasExceptionErrors)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$isDryRun&lt;/b&gt;&#10;    bool &lt;b&gt;$hasChangedFiles&lt;/b&gt;&#10;    bool &lt;b&gt;$hasInvalidErrors&lt;/b&gt;&#10;    bool &lt;b&gt;$hasExceptionErrors&lt;/b&gt;;;d4,37;;b1,0;;m0;;ebool $isDryRun;;pbool $hasChangedFiles;;pbool $hasInvalidErrors;;pbool $hasExceptionErrors;;p">
</treenode>
</treenode>
<treenode node="FixerConfigurationResolver;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerConfigurationResolver.php;f6;17;1;128;;;;vpos;;v;;aFixerConfigurationResolverInterface;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerConfigurationResolver.php;f11;32;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($options)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    iterable&lt;FixerOptionInterface&gt; &lt;b&gt;$options&lt;/b&gt;;;d4,33;;b1,0;;m0;;eiterable&lt;FixerOptionInterface&gt; $options;;p">
</treenode>
<treenode node="addOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerConfigurationResolver.php;f12;115;5;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addOption(FixerOptionInterface $option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \LogicException when the option is already defined&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    FixerOptionInterface &lt;b&gt;$option&lt;/b&gt;;;d4,116;;b3,0;;m0;;eFixerOptionInterface $option;;p">
</treenode>
<treenode node="getOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerConfigurationResolver.php;f11;46;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOptions()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="resolve;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerConfigurationResolver.php;f11;54;5;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resolve(array $options)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b1,0;;m0;;eoptions;;p">
</treenode>
</treenode>
<treenode node="FixerConfigurationResolverRootless;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerConfigurationResolverRootless.php;f6;19;1;98;;;;vpos;;v;;aFixerConfigurationResolverInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FixerConfigurationResolverRootless implements FixerConfigurationResolverInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;&#10;&lt;b&gt;deprecated&lt;/b&gt;: will be removed in 3.0;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerConfigurationResolverRootless.php;f11;41;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($root, $options, $fixerName)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$root&lt;/b&gt;&#10;    iterable&lt;FixerOptionInterface&gt; &lt;b&gt;$options&lt;/b&gt;&#10;    string &lt;b&gt;$fixerName&lt;/b&gt;;;d4,42;;b1,0;;m0;;estring $root;;piterable&lt;FixerOptionInterface&gt; $options;;pstring $fixerName;;p">
</treenode>
<treenode node="getOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerConfigurationResolverRootless.php;f11;63;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOptions()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,64;;b1,0;;m0;;e">
</treenode>
<treenode node="resolve;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerConfigurationResolverRootless.php;f11;71;5;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resolve(array $options)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,72;;b1,0;;m0;;eoptions;;p">
</treenode>
</treenode>
<treenode node="FixerDefinition;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinition.php;f6;17;1;92;;;;vpos;;v;;aFixerDefinitionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FixerDefinition implements FixerDefinitionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinition.php;f11;34;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        $summary,&#10;        array $codeSamples,&#10;        $description = null,&#10;        $configurationDescription = null,&#10;        array $defaultConfiguration = null,&#10;        $riskyDescription = null&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$summary&lt;/b&gt;&#10;    CodeSampleInterface[] &lt;b&gt;$codeSamples&lt;/b&gt;: array of samples, where single sample is [code, configuration]&#10;    null|string &lt;b&gt;$description&lt;/b&gt;&#10;    null|string &lt;b&gt;$configurationDescription&lt;/b&gt;: null for non-configurable fixer&#10;    null|array &lt;b&gt;$defaultConfiguration&lt;/b&gt;: null for non-configurable fixer&#10;    null|string &lt;b&gt;$riskyDescription&lt;/b&gt;: null for non-risky fixer;;d6,41;;b1,0;;m0;;estring $summary;;pCodeSampleInterface[] $codeSamples;;pnull|string $description;;pnull|string $configurationDescription;;pnull|array $defaultConfiguration;;pnull|string $riskyDescription;;p">
</treenode>
<treenode node="getCodeSamples;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinition.php;f11;88;5;91;;;;vpos;;v;;a;;r;;d4,89;;b1,0;;m0;;e">
</treenode>
<treenode node="getConfigurationDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinition.php;f11;69;5;74;;;;vpos;;v;;a;;r;;d4,70;;b1,0;;m0;;e">
</treenode>
<treenode node="getDefaultConfiguration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinition.php;f11;76;5;81;;;;vpos;;v;;a;;r;;d4,77;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinition.php;f11;64;5;67;;;;vpos;;v;;a;;r;;d4,65;;b1,0;;m0;;e">
</treenode>
<treenode node="getRiskyDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinition.php;f11;83;5;86;;;;vpos;;v;;a;;r;;d4,84;;b1,0;;m0;;e">
</treenode>
<treenode node="getSummary;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\FixerDefinition.php;f11;59;5;62;;;;vpos;;v;;a;;r;;d4,60;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FixerFactory;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFactory.php;f6;34;1;258;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FixerFactory&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Class provides a way to create a group of fixers.&#10;Fixers may be registered (made the factory aware of them) by&#10;registering a custom fixer and default, built in fixers.&#10;Then, one can attach Config instance to fixer instances.&#10;Finally factory creates a ready to use group of fixers.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,35;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFactory.php;f11;51;5;54;;;;vpos;;v;;a;;r;;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="create;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFactory.php;f18;61;5;64;;;;vpos;;v;;aFixerFactory;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    create()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create instance.;;d4,62;;b1,5;;m0;;e">
</treenode>
<treenode node="generateConflictMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFactory.php;f12;238;5;257;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    generateConflictMessage(array $fixerConflicts)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array&lt;string,: string[]&gt; $fixerConflicts;;d4,239;;b3,0;;m0;;earray&lt;string,;;p">
</treenode>
<treenode node="getFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFactory.php;f11;80;5;85;;;;vpos;;v;;aFixerInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFixers()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,81;;b1,0;;m0;;e">
</treenode>
<treenode node="getFixersConflicts;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFactory.php;f12;222;5;231;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFixersConflicts(FixerInterface $fixer)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    FixerInterface &lt;b&gt;$fixer&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string[];;d4,223;;b3,0;;m0;;eFixerInterface $fixer;;p">
</treenode>
<treenode node="hasRule;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFactory.php;f11;212;5;215;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasRule($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if fixer exists.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d4,213;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="registerBuiltInFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFactory.php;f11;90;5;112;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registerBuiltInFixers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this;;d4,91;;b1,0;;m0;;e">
</treenode>
<treenode node="registerCustomFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFactory.php;f11;119;5;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registerCustomFixers(array $fixers)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    FixerInterface[] &lt;b&gt;$fixers&lt;/b&gt;;;d4,120;;b1,0;;m0;;eFixerInterface[] $fixers;;p">
</treenode>
<treenode node="registerFixer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFactory.php;f11;134;5;150;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registerFixer(FixerInterface $fixer, $isCustom)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    FixerInterface &lt;b&gt;$fixer&lt;/b&gt;&#10;    bool &lt;b&gt;$isCustom&lt;/b&gt;;;d4,135;;b1,0;;m0;;eFixerInterface $fixer;;pbool $isCustom;;p">
</treenode>
<treenode node="setWhitespacesConfig;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFactory.php;f11;66;5;75;;;;vpos;;v;;a;;r;;d4,67;;b1,0;;m0;;econfig;;p">
</treenode>
<treenode node="useRuleSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFactory.php;f11;159;5;203;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    useRuleSet(RuleSetInterface $ruleSet)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Apply RuleSet on fixers to filter out all unwanted fixers.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    RuleSetInterface &lt;b&gt;$ruleSet&lt;/b&gt;;;d4,160;;b1,0;;m0;;eRuleSetInterface $ruleSet;;p">
</treenode>
</treenode>
<treenode node="FixerFileProcessedEvent;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFileProcessedEvent.php;f6;23;1;58;;;;vpos;;v;;aEvent;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FixerFileProcessedEvent extends Event&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Event that is fired when file was processed by Fixer.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="NAME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFileProcessedEvent.php;f9;28;14;28;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Event name.;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="STATUS_EXCEPTION;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFileProcessedEvent.php;f9;35;26;35;;;;vpos;;v;;a;;r5;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STATUS_FIXED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFileProcessedEvent.php;f9;34;22;34;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STATUS_INVALID;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFileProcessedEvent.php;f9;31;24;31;;;;vpos;;v;;a;;r1;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STATUS_LINT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFileProcessedEvent.php;f9;36;21;36;;;;vpos;;v;;a;;r6;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STATUS_NO_CHANGES;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFileProcessedEvent.php;f9;33;27;33;;;;vpos;;v;;a;;r3;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STATUS_SKIPPED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFileProcessedEvent.php;f9;32;24;32;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STATUS_UNKNOWN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFileProcessedEvent.php;f9;30;24;30;;;;vpos;;v;;a;;r0;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFileProcessedEvent.php;f11;46;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($status)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$status&lt;/b&gt;;;d4,47;;b1,0;;m0;;eint $status;;p">
</treenode>
<treenode node="getStatus;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerFileProcessedEvent.php;f11;54;5;57;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStatus()&#10;;;d4,55;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FixerNameValidator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerNameValidator.php;f6;19;1;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FixerNameValidator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="isValid;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerNameValidator.php;f11;27;5;34;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isValid($name, $isCustom)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;&#10;    bool &lt;b&gt;$isCustom&lt;/b&gt;;;d4,28;;b1,0;;m0;;estring $name;;pbool $isCustom;;p">
</treenode>
</treenode>
<treenode node="FixerOption;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOption.php;f6;14;1;175;;;;vpos;;v;;aFixerOptionInterface;;c;;r;;d0,15;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOption.php;f11;60;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        $name,&#10;        $description,&#10;        $isRequired = true,&#10;        $default = null,&#10;        array $allowedTypes = null,&#10;        array $allowedValues = null,&#10;        \Closure $normalizer = null&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;&#10;    string &lt;b&gt;$description&lt;/b&gt;&#10;    bool &lt;b&gt;$isRequired&lt;/b&gt;&#10;    mixed &lt;b&gt;$default&lt;/b&gt;&#10;    null|string[] &lt;b&gt;$allowedTypes&lt;/b&gt;&#10;    null|array &lt;b&gt;$allowedValues&lt;/b&gt;&#10;    null|\Closure &lt;b&gt;$normalizer&lt;/b&gt;;;d6,68;;b1,0;;m0;;estring $name;;pstring $description;;pbool $isRequired;;pmixed $default;;pnull|string[] $allowedTypes;;pnull|array $allowedValues;;pnull|\Closure $normalizer;;p">
</treenode>
<treenode node="getAllowedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOption.php;f11;131;5;134;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllowedTypes()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,132;;b1,0;;m0;;e">
</treenode>
<treenode node="getAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOption.php;f11;139;5;142;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllowedValues()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,140;;b1,0;;m0;;e">
</treenode>
<treenode node="getDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOption.php;f11;119;5;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefault()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,120;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOption.php;f11;103;5;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDescription()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,104;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOption.php;f11;95;5;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,96;;b1,0;;m0;;e">
</treenode>
<treenode node="getNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOption.php;f11;147;5;150;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNormalizer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,148;;b1,0;;m0;;e">
</treenode>
<treenode node="hasDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOption.php;f11;111;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasDefault()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,112;;b1,0;;m0;;e">
</treenode>
<treenode node="unbind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOption.php;f12;171;5;174;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    unbind(\Closure $closure)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unbinds the given closure to avoid memory leaks.&#10;The closures provided to this class were probably defined in a fixer&#10;class and thus bound to it by default. The configuration will then be&#10;stored in {&#10;&lt;b&gt;see&lt;/b&gt;: AbstractFixer::$configurationDefinition}, leading to the&#10;following cyclic reference:&#10;fixer -&gt; configuration definition -&gt; options -&gt; closures -&gt; fixer&#10;This cyclic reference prevent the garbage collector to free memory as&#10;all elements are still referenced.&#10;See {&#10;&lt;b&gt;see&lt;/b&gt;: https://bugs.php.net/bug.php?id=69639 Bug #69639} for details.&#10;\Closure&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \Closure &lt;b&gt;$closure&lt;/b&gt;;;d4,172;;b3,0;;m0;;e\Closure $closure;;p">
</treenode>
</treenode>
<treenode node="FixerOptionBuilder;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionBuilder.php;f6;14;1;148;;;;vpos;;v;;a;;r;;d0,15;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionBuilder.php;f11;60;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($name, $description)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;&#10;    string &lt;b&gt;$description&lt;/b&gt;;;d4,61;;b1,0;;m0;;estring $name;;pstring $description;;p">
</treenode>
<treenode node="getOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionBuilder.php;f11;130;5;147;;;;vpos;;v;;aFixerOptionInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOption()&#10;;;d4,131;;b1,0;;m0;;e">
</treenode>
<treenode node="setAllowedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionBuilder.php;f11;84;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAllowedTypes(array $allowedTypes)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$allowedTypes&lt;/b&gt;;;d4,85;;b1,0;;m0;;estring[] $allowedTypes;;p">
</treenode>
<treenode node="setAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionBuilder.php;f11;96;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAllowedValues(array $allowedValues)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$allowedValues&lt;/b&gt;;;d4,97;;b1,0;;m0;;earray $allowedValues;;p">
</treenode>
<treenode node="setDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionBuilder.php;f11;71;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDefault($default)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$default&lt;/b&gt;;;d4,72;;b1,0;;m0;;emixed $default;;p">
</treenode>
<treenode node="setDeprecationMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionBuilder.php;f11;120;5;125;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDeprecationMessage($deprecationMessage)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|string &lt;b&gt;$deprecationMessage&lt;/b&gt;;;d4,121;;b1,0;;m0;;enull|string $deprecationMessage;;p">
</treenode>
<treenode node="setNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\FixerOptionBuilder.php;f11;108;5;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setNormalizer(\Closure $normalizer)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \Closure &lt;b&gt;$normalizer&lt;/b&gt;;;d4,109;;b1,0;;m0;;e\Closure $normalizer;;p">
</treenode>
</treenode>
<treenode node="Foo1Command;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo1Command.php;f0;6;1;25;;;;vpos;;v;;aCommand;;c;;r;;d0,7;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo1Command.php;f14;11;5;18;;;;vpos;;v;;a;;r;;d4,12;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo1Command.php;f14;20;5;24;;;;vpos;;v;;a;;r;;d4,21;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="Foo2Command;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo2Command.php;f0;6;1;20;;;;vpos;;v;;aCommand;;c;;r;;d0,7;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo2Command.php;f14;8;5;15;;;;vpos;;v;;a;;r;;d4,9;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo2Command.php;f14;17;5;19;;;;vpos;;v;;a;;r;;d4,18;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="Foo3Command;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo3Command.php;f0;6;1;28;;;;vpos;;v;;aCommand;;c;;r;;d0,7;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo3Command.php;f14;8;5;14;;;;vpos;;v;;a;;r;;d4,9;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo3Command.php;f14;16;5;27;;;;vpos;;v;;a;;r;;d4,17;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="Foo4Command;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo4Command.php;f0;4;1;10;;;;vpos;;v;;aCommand;;c;;r;;d0,5;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo4Command.php;f14;6;5;9;;;;vpos;;v;;a;;r;;d4,7;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Foo5Command;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo5Command.php;f0;4;1;9;;;;vpos;;v;;aCommand;;c;;r;;d0,5;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo5Command.php;f11;6;5;8;;;;vpos;;v;;a;;r;;d4,7;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Foo6Command;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo6Command.php;f0;4;1;10;;;;vpos;;v;;aCommand;;c;;r;;d0,5;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\Foo6Command.php;f14;6;5;9;;;;vpos;;v;;a;;r;;d4,7;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FooCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooCommand.php;f0;6;1;32;;;;vpos;;v;;aCommand;;c;;r;;d0,7;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooCommand.php;f14;11;5;18;;;;vpos;;v;;a;;r;;d4,12;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooCommand.php;f14;25;5;31;;;;vpos;;v;;a;;r;;d4,26;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="interact;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooCommand.php;f14;20;5;23;;;;vpos;;v;;a;;r;;d4,21;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="FooHiddenCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooHiddenCommand.php;f0;6;1;20;;;;vpos;;v;;aCommand;;c;;r;;d0,7;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooHiddenCommand.php;f14;8;5;15;;;;vpos;;v;;a;;r;;d4,9;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooHiddenCommand.php;f14;17;5;19;;;;vpos;;v;;a;;r;;d4,18;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="FooListener;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\WrappedListenerTest.php;f0;46;1;59;;;;vpos;;v;;a;;r;;d0,47;;b0,0;;m0;;e">
<treenode node="__invoke;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\WrappedListenerTest.php;f11;52;5;54;;;;vpos;;v;;a;;r;;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="listen;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\WrappedListenerTest.php;f11;48;5;50;;;;vpos;;v;;a;;r;;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="listenStatic;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\WrappedListenerTest.php;f18;56;5;58;;;;vpos;;v;;a;;r;;d4,57;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="FooLock2Command;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooLock2Command.php;f0;7;1;27;;;;vpos;;v;;aCommand;;cLockableTrait;;c;;r;;d0,8;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooLock2Command.php;f14;11;5;14;;;;vpos;;v;;a;;r;;d4,12;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooLock2Command.php;f14;16;5;26;;;;vpos;;v;;a;;r;;d4,17;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="FooLockCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooLockCommand.php;f0;7;1;26;;;;vpos;;v;;aCommand;;cLockableTrait;;c;;r;;d0,8;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooLockCommand.php;f14;11;5;14;;;;vpos;;v;;a;;r;;d4,12;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooLockCommand.php;f14;16;5;25;;;;vpos;;v;;a;;r;;d4,17;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="FooOptCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooOptCommand.php;f0;7;1;35;;;;vpos;;v;;aCommand;;c;;r;;d0,8;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooOptCommand.php;f14;12;5;20;;;;vpos;;v;;a;;r;;d4,13;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooOptCommand.php;f14;27;5;34;;;;vpos;;v;;a;;r;;d4,28;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="interact;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooOptCommand.php;f14;22;5;25;;;;vpos;;v;;a;;r;;d4,23;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="FooSameCaseLowercaseCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooSameCaseLowercaseCommand.php;f0;4;1;10;;;;vpos;;v;;aCommand;;c;;r;;d0,5;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooSameCaseLowercaseCommand.php;f14;6;5;9;;;;vpos;;v;;a;;r;;d4,7;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FooSameCaseUppercaseCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooSameCaseUppercaseCommand.php;f0;4;1;10;;;;vpos;;v;;aCommand;;c;;r;;d0,5;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooSameCaseUppercaseCommand.php;f14;6;5;9;;;;vpos;;v;;a;;r;;d4,7;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FooSubnamespaced1Command;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooSubnamespaced1Command.php;f0;6;1;25;;;;vpos;;v;;aCommand;;c;;r;;d0,7;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooSubnamespaced1Command.php;f14;11;5;18;;;;vpos;;v;;a;;r;;d4,12;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooSubnamespaced1Command.php;f14;20;5;24;;;;vpos;;v;;a;;r;;d4,21;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="FooSubnamespaced2Command;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooSubnamespaced2Command.php;f0;6;1;25;;;;vpos;;v;;aCommand;;c;;r;;d0,7;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooSubnamespaced2Command.php;f14;11;5;18;;;;vpos;;v;;a;;r;;d4,12;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooSubnamespaced2Command.php;f14;20;5;24;;;;vpos;;v;;a;;r;;d4,21;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="FooWithoutAliasCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooWithoutAliasCommand.php;f0;6;1;20;;;;vpos;;v;;aCommand;;c;;r;;d0,7;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooWithoutAliasCommand.php;f14;8;5;14;;;;vpos;;v;;a;;r;;d4,9;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FooWithoutAliasCommand.php;f14;16;5;19;;;;vpos;;v;;a;;r;;d4,17;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="FoobarCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FoobarCommand.php;f0;6;1;24;;;;vpos;;v;;aCommand;;c;;r;;d0,7;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FoobarCommand.php;f14;11;5;17;;;;vpos;;v;;a;;r;;d4,12;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\FoobarCommand.php;f14;19;5;23;;;;vpos;;v;;a;;r;;d4,20;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="FopenFlagOrderFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FopenFlagOrderFixer.php;f6;24;1;130;;;;vpos;;v;;aAbstractFopenFlagFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FopenFlagOrderFixer extends AbstractFopenFlagFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,25;;b0,0;;m0;;e">
<treenode node="fixFopenFlagToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FopenFlagOrderFixer.php;f14;44;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFopenFlagToken(Tokens $tokens, $argumentStartIndex, $argumentEndIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$argumentStartIndex&lt;/b&gt;&#10;    int &lt;b&gt;$argumentEndIndex&lt;/b&gt;;;d4,45;;b2,0;;m0;;eTokens $tokens;;pint $argumentStartIndex;;pint $argumentEndIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FopenFlagOrderFixer.php;f11;29;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="sortFlags;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FopenFlagOrderFixer.php;f12;99;5;129;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortFlags(array $flags)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$flags&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,100;;b3,0;;m0;;estring[] $flags;;p">
</treenode>
</treenode>
<treenode node="FopenFlagsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FopenFlagsFixer.php;f6;26;1;111;;;;vpos;;v;;aAbstractFopenFlagFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FopenFlagsFixer extends AbstractFopenFlagFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,27;;b0,0;;m0;;e">
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FopenFlagsFixer.php;f14;44;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,45;;b2,0;;m0;;e">
</treenode>
<treenode node="fixFopenFlagToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FopenFlagsFixer.php;f14;59;5;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFopenFlagToken(Tokens $tokens, $argumentStartIndex, $argumentEndIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$argumentStartIndex&lt;/b&gt;&#10;    int &lt;b&gt;$argumentEndIndex&lt;/b&gt;;;d4,60;;b2,0;;m0;;eTokens $tokens;;pint $argumentStartIndex;;pint $argumentEndIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FopenFlagsFixer.php;f11;31;5;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FormatterHelper;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\FormatterHelper.php;f0;20;1;105;;;;vpos;;v;;aHelper;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FormatterHelper extends Helper&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The Formatter class provides helpers to format messages.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="formatBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\FormatterHelper.php;f11;45;5;72;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    formatBlock($messages, $style, $large = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a message as a block of text.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array &lt;b&gt;$messages&lt;/b&gt;: The message to write in the block&#10;    string &lt;b&gt;$style&lt;/b&gt;: The style to apply to the whole block&#10;    bool &lt;b&gt;$large&lt;/b&gt;: Whether to return a large block&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The formatter message;;d4,46;;b1,0;;m0;;estring|array $messages;;pstring $style;;pbool $large;;p">
</treenode>
<treenode node="formatSection;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\FormatterHelper.php;f11;31;5;34;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    formatSection($section, $message, $style = &apos;info&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a message within a section.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$section&lt;/b&gt;: The section name&#10;    string &lt;b&gt;$message&lt;/b&gt;: The message&#10;    string &lt;b&gt;$style&lt;/b&gt;: The style to apply to the section&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The format section;;d4,32;;b1,0;;m0;;estring $section;;pstring $message;;pstring $style;;p">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\FormatterHelper.php;f11;101;5;104;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,102;;b1,0;;m0;;e">
</treenode>
<treenode node="truncate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\FormatterHelper.php;f11;83;5;96;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    truncate($message, $length, $suffix = &apos;...&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Truncates a message to the given length.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    int &lt;b&gt;$length&lt;/b&gt;&#10;    string &lt;b&gt;$suffix&lt;/b&gt;;;d4,84;;b1,0;;m0;;estring $message;;pint $length;;pstring $suffix;;p">
</treenode>
</treenode>
<treenode node="FormatterHelperTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\FormatterHelperTest.php;f0;16;1;128;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="testFormatBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\FormatterHelperTest.php;f11;29;5;53;;;;vpos;;v;;a;;r;;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="testFormatBlockLGEscaping;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\FormatterHelperTest.php;f11;80;5;91;;;;vpos;;v;;a;;r;;d4,81;;b1,0;;m0;;e">
</treenode>
<treenode node="testFormatBlockWithDiacriticLetters;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\FormatterHelperTest.php;f11;55;5;66;;;;vpos;;v;;a;;r;;d4,56;;b1,0;;m0;;e">
</treenode>
<treenode node="testFormatBlockWithDoubleWidthDiacriticLetters;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\FormatterHelperTest.php;f11;68;5;78;;;;vpos;;v;;a;;r;;d4,69;;b1,0;;m0;;e">
</treenode>
<treenode node="testFormatSection;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\FormatterHelperTest.php;f11;18;5;27;;;;vpos;;v;;a;;r;;d4,19;;b1,0;;m0;;e">
</treenode>
<treenode node="testTruncatingMessageWithCustomSuffix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\FormatterHelperTest.php;f11;104;5;110;;;;vpos;;v;;a;;r;;d4,105;;b1,0;;m0;;e">
</treenode>
<treenode node="testTruncatingWithLongerLengthThanMessageWithSuffix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\FormatterHelperTest.php;f11;112;5;118;;;;vpos;;v;;a;;r;;d4,113;;b1,0;;m0;;e">
</treenode>
<treenode node="testTruncatingWithNegativeLength;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\FormatterHelperTest.php;f11;120;5;127;;;;vpos;;v;;a;;r;;d4,121;;b1,0;;m0;;e">
</treenode>
<treenode node="testTruncatingWithShorterLengthThanMessageWithSuffix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\FormatterHelperTest.php;f11;93;5;102;;;;vpos;;v;;a;;r;;d4,94;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FullDiffer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\FullDiffer.php;f6;22;1;47;;;;vpos;;v;;aDifferInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FullDiffer implements DifferInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\FullDiffer.php;f11;29;5;38;;;;vpos;;v;;a;;r;;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="diff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\FullDiffer.php;f11;43;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    diff($old, $new)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b1,0;;m0;;eold;;pnew;;p">
</treenode>
</treenode>
<treenode node="FullOpeningTagFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\FullOpeningTagFixer.php;f6;26;1;133;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FullOpeningTagFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR1 ¶2.1.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\FullOpeningTagFixer.php;f14;66;5;132;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokensOrg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b2,0;;m0;;efile;;ptokensOrg;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\FullOpeningTagFixer.php;f11;31;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\FullOpeningTagFixer.php;f11;49;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\FullOpeningTagFixer.php;f11;58;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="FullyQualifiedStrictTypesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\FullyQualifiedStrictTypesFixer.php;f6;32;1;177;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FullyQualifiedStrictTypesFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: VeeWee &lt;toonverwerft&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,33;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\FullyQualifiedStrictTypesFixer.php;f14;98;5;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,99;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="detectAndReplaceTypeWithShortType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\FullyQualifiedStrictTypesFixer.php;f12;151;5;176;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    detectAndReplaceTypeWithShortType(&#10;        Tokens $tokens,&#10;        TypeAnalysis $type&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    TypeAnalysis &lt;b&gt;$type&lt;/b&gt;;;d6,154;;b3,0;;m0;;eTokens $tokens;;pTypeAnalysis $type;;p">
</treenode>
<treenode node="fixFunctionArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\FullyQualifiedStrictTypesFixer.php;f12;116;5;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunctionArguments(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,117;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixFunctionReturnType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\FullyQualifiedStrictTypesFixer.php;f12;133;5;145;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunctionReturnType(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,134;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\FullyQualifiedStrictTypesFixer.php;f11;37;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\FullyQualifiedStrictTypesFixer.php;f11;77;5;82;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,78;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\FullyQualifiedStrictTypesFixer.php;f11;87;5;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,88;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="FunctionDeclarationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FunctionDeclarationFixer.php;f6;29;1;199;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FunctionDeclarationFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 generally (¶1 and ¶6).&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="SPACING_NONE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FunctionDeclarationFixer.php;f9;34;22;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="SPACING_ONE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FunctionDeclarationFixer.php;f9;39;21;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FunctionDeclarationFixer.php;f14;91;5;172;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,92;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FunctionDeclarationFixer.php;f14;177;5;185;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,178;;b2,0;;m0;;e">
</treenode>
<treenode node="fixParenthesisInnerEdge;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FunctionDeclarationFixer.php;f12;187;5;198;;;;vpos;;v;;a;;r;;d4,188;;b3,0;;m0;;etokens;;pstart;;pend;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FunctionDeclarationFixer.php;f11;56;5;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FunctionDeclarationFixer.php;f11;48;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="FunctionToConstantFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\FunctionToConstantFixer.php;f6;28;1;237;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FunctionToConstantFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,29;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\FunctionToConstantFixer.php;f11;40;5;57;;;;vpos;;v;;a;;r;;d4,41;;b1,0;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\FunctionToConstantFixer.php;f14;119;5;135;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,120;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\FunctionToConstantFixer.php;f11;62;5;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\FunctionToConstantFixer.php;f14;140;5;157;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,141;;b2,0;;m0;;e">
</treenode>
<treenode node="fixFunctionCallToConstant;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\FunctionToConstantFixer.php;f12;166;5;181;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunctionCallToConstant(Tokens $tokens, $index, $braceOpenIndex, $braceCloseIndex, array $replacements)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    int &lt;b&gt;$braceOpenIndex&lt;/b&gt;&#10;    int &lt;b&gt;$braceCloseIndex&lt;/b&gt;&#10;    Token[] &lt;b&gt;$replacements&lt;/b&gt;;;d4,167;;b3,0;;m0;;eTokens $tokens;;pint $index;;pint $braceOpenIndex;;pint $braceCloseIndex;;pToken[] $replacements;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\FunctionToConstantFixer.php;f11;75;5;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,76;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\FunctionToConstantFixer.php;f11;91;5;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,92;;b1,0;;m0;;e">
</treenode>
<treenode node="getReplaceCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\FunctionToConstantFixer.php;f12;189;5;236;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getReplaceCandidate(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |array;;d4,190;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\FunctionToConstantFixer.php;f11;103;5;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,104;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\FunctionToConstantFixer.php;f11;111;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,112;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="FunctionTypehintSpaceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FunctionTypehintSpaceFixer.php;f6;25;1;86;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FunctionTypehintSpaceFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FunctionTypehintSpaceFixer.php;f14;52;5;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,53;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FunctionTypehintSpaceFixer.php;f11;30;5;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\FunctionTypehintSpaceFixer.php;f11;44;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,45;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="FunctionsAnalyzer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\FunctionsAnalyzer.php;f6;22;1;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class FunctionsAnalyzer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="getFunctionArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\FunctionsAnalyzer.php;f11;53;5;66;;;;vpos;;v;;aArgumentAnalysis;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFunctionArguments(Tokens $tokens, $methodIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$methodIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,54;;b1,0;;m0;;eTokens $tokens;;pint $methodIndex;;p">
</treenode>
<treenode node="getFunctionReturnType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\FunctionsAnalyzer.php;f11;74;5;97;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFunctionReturnType(Tokens $tokens, $methodIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$methodIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |TypeAnalysis;;d4,75;;b1,0;;m0;;eTokens $tokens;;pint $methodIndex;;p">
</treenode>
<treenode node="isGlobalFunctionCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\FunctionsAnalyzer.php;f11;30;5;45;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isGlobalFunctionCall(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,31;;b1,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="GeneralPhpdocAnnotationRemoveFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\GeneralPhpdocAnnotationRemoveFixer.php;f6;28;1;116;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class GeneralPhpdocAnnotationRemoveFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\GeneralPhpdocAnnotationRemoveFixer.php;f14;73;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,74;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\GeneralPhpdocAnnotationRemoveFixer.php;f14;107;5;115;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,108;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\GeneralPhpdocAnnotationRemoveFixer.php;f11;33;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\GeneralPhpdocAnnotationRemoveFixer.php;f11;55;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\GeneralPhpdocAnnotationRemoveFixer.php;f11;65;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="GenericEvent;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\GenericEvent.php;f0;20;1;174;;;;vpos;;v;;aEvent;;cArrayAccess;;cIteratorAggregate;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class GenericEvent extends Event implements \ArrayAccess, \IteratorAggregate&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Event encapsulation class.&#10;Encapsulates events thus decoupling the observer from the subject they encapsulate.&#10;&lt;b&gt;author&lt;/b&gt;: Drak &lt;drak&#10;&lt;b&gt;zikula&lt;/b&gt;: .org&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\GenericEvent.php;f11;31;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($subject = null, array $arguments = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Encapsulate an event with $subject and $args.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$subject&lt;/b&gt;: The subject of the event, usually an object or a callable&#10;    array &lt;b&gt;$arguments&lt;/b&gt;: Arguments to store in the event;;d4,32;;b1,0;;m0;;emixed $subject;;parray $arguments;;p">
</treenode>
<treenode node="getArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\GenericEvent.php;f11;56;5;63;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArgument($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get argument by key.&#10;&lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException if key is not found&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: Key&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Contents of array key;;d4,57;;b1,0;;m0;;estring $key;;p">
</treenode>
<treenode node="getArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\GenericEvent.php;f11;85;5;88;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArguments()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Getter for all arguments.;;d4,86;;b1,0;;m0;;e">
</treenode>
<treenode node="getIterator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\GenericEvent.php;f11;170;5;173;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIterator()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    IteratorAggregate for iterating over the object like an array.&#10;\ArrayIterator;;d4,171;;b1,0;;m0;;e">
</treenode>
<treenode node="getSubject;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\GenericEvent.php;f11;42;5;45;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSubject()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Getter for subject property.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The observer subject;;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="hasArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\GenericEvent.php;f11;111;5;114;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasArgument($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Has argument.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: Key of arguments array;;d4,112;;b1,0;;m0;;estring $key;;p">
</treenode>
<treenode node="offsetExists;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\GenericEvent.php;f11;160;5;163;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    offsetExists($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ArrayAccess has argument.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: Array key;;d4,161;;b1,0;;m0;;estring $key;;p">
</treenode>
<treenode node="offsetGet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\GenericEvent.php;f11;125;5;128;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    offsetGet($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ArrayAccess for argument getter.&#10;&lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException if key does not exist in $this-&gt;args&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: Array key;;d4,126;;b1,0;;m0;;estring $key;;p">
</treenode>
<treenode node="offsetSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\GenericEvent.php;f11;136;5;139;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    offsetSet($key, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ArrayAccess for argument setter.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: Array key to set&#10;    mixed &lt;b&gt;$value&lt;/b&gt;: Value;;d4,137;;b1,0;;m0;;estring $key;;pmixed $value;;p">
</treenode>
<treenode node="offsetUnset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\GenericEvent.php;f11;146;5;151;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    offsetUnset($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ArrayAccess for unset argument.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: Array key;;d4,147;;b1,0;;m0;;estring $key;;p">
</treenode>
<treenode node="setArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\GenericEvent.php;f11;73;5;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setArgument($key, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add argument to event.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: Argument name&#10;    mixed &lt;b&gt;$value&lt;/b&gt;: Value;;d4,74;;b1,0;;m0;;estring $key;;pmixed $value;;p">
</treenode>
<treenode node="setArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\GenericEvent.php;f11;97;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setArguments(array $args = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set args property.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$args&lt;/b&gt;: Arguments;;d4,98;;b1,0;;m0;;earray $args;;p">
</treenode>
</treenode>
<treenode node="GenericEventTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f0;19;1;133;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class GenericEventTest extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Test class for Event.;;d0,20;;b0,0;;m0;;e">
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f14;31;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setUp(): void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Prepares the environment before running a test.;;d4,32;;b2,0;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f14;40;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    tearDown(): void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Cleans up the environment after running a test.;;d4,41;;b2,0;;m0;;e">
</treenode>
<treenode node="testConstruct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f11;46;5;49;;;;vpos;;v;;a;;r;;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetArgException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f11;80;5;84;;;;vpos;;v;;a;;r;;d4,81;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f11;74;5;78;;;;vpos;;v;;a;;r;;d4,75;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f11;54;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testGetArguments()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tests Event-&gt;getArgs().;;d4,55;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetSubject;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f11;120;5;123;;;;vpos;;v;;a;;r;;d4,121;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f11;114;5;118;;;;vpos;;v;;a;;r;;d4,115;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasIterator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f11;125;5;132;;;;vpos;;v;;a;;r;;d4,126;;b1,0;;m0;;e">
</treenode>
<treenode node="testOffsetGet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f11;86;5;94;;;;vpos;;v;;a;;r;;d4,87;;b1,0;;m0;;e">
</treenode>
<treenode node="testOffsetIsset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f11;108;5;112;;;;vpos;;v;;a;;r;;d4,109;;b1,0;;m0;;e">
</treenode>
<treenode node="testOffsetSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f11;96;5;100;;;;vpos;;v;;a;;r;;d4,97;;b1,0;;m0;;e">
</treenode>
<treenode node="testOffsetUnset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f11;102;5;106;;;;vpos;;v;;a;;r;;d4,103;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f11;67;5;72;;;;vpos;;v;;a;;r;;d4,68;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\GenericEventTest.php;f11;60;5;65;;;;vpos;;v;;a;;r;;d4,61;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="GithubClient;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\GithubClient.php;f6;17;1;51;;;;vpos;;v;;aGithubClientInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class GithubClient implements GithubClientInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="getTags;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\GithubClient.php;f11;22;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTags()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,23;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Gitignore;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Gitignore.php;f0;18;1;104;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Gitignore&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gitignore matches against text.&#10;&lt;b&gt;author&lt;/b&gt;: Ahmed Abdou &lt;mail&#10;&lt;b&gt;ahmd&lt;/b&gt;: .io&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="getRegexFromGitignore;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Gitignore.php;f19;57;5;103;;;;vpos;;v;;a string;;r;;d4,58;;b3,5;;m0;;egitignorePattern;;p">
</treenode>
<treenode node="toRegex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Gitignore.php;f18;25;5;55;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    toRegex(string $gitignoreFileContent): string&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a regexp which is the equivalent of the gitignore pattern.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The regexp;;d4,26;;b1,5;;m0;;egitignoreFileContent;;p">
</treenode>
</treenode>
<treenode node="GitignoreTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\GitignoreTest.php;f0;15;1;137;;;;vpos;;v;;aTestCase;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="provider;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\GitignoreTest.php;f11;43;5;136;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    provider()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   return is array of [ [ &apos;&apos;, // Git-ignore Pattern [], // array of file paths matching [], // array of file paths not matching ], ];;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="testCases;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\GitignoreTest.php;f11;20;5;31;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testCases(string $patterns, array $matchingCases, array $nonMatchingCases)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provider;;d4,21;;b1,0;;m0;;epatterns;;pmatchingCases;;pnonMatchingCases;;p">
</treenode>
</treenode>
<treenode node="GitlabReporter;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\GitlabReporter.php;f6;23;1;55;;;;vpos;;v;;aReporterInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class GitlabReporter implements ReporterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Generates a report according to gitlabs subset of codeclimate json files.&#10;&lt;b&gt;author&lt;/b&gt;: Hans-Christian Otto &lt;c.otto&#10;&lt;b&gt;suora&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="generate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\GitlabReporter.php;f11;37;5;54;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    generate(ReportSummary $reportSummary)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Process changed files array. Returns generated report.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ReportSummary &lt;b&gt;$reportSummary&lt;/b&gt;;;d4,38;;b1,0;;m0;;eReportSummary $reportSummary;;p">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\GitlabReporter.php;f11;25;5;28;;;;vpos;;v;;a;;r;;d4,26;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Glob;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Glob.php;f0;35;1;115;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Glob&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Glob matches globbing patterns against text.&#10;if match_glob(&quot;foo.*&quot;, &quot;foo.bar&quot;) echo &quot;matched\n&quot;;s&#10;// prints foo.bar and foo.baz&#10;$regex = glob_to_regex(&quot;foo.*&quot;);s&#10;for ([&apos;foo.bar&apos;, &apos;foo.baz&apos;, &apos;foo&apos;, &apos;bar&apos;] as $t)&#10;{&#10;if (/$regex/) echo &quot;matched: $car\n&quot;;s&#10;}&#10;Glob implements glob(3) style matching that can be used to match&#10;against text, rather than fetching names from a filesystem.&#10;Based on the Perl Text::Glob module.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt; PHP port&#10;&lt;b&gt;author&lt;/b&gt;: Richard Clamp &lt;richardc&#10;&lt;b&gt;unixbeard&lt;/b&gt;: .net&gt; Perl version&#10;&lt;b&gt;copyright&lt;/b&gt;: 2004-2005 Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;copyright&lt;/b&gt;: 2002 Richard Clamp &lt;richardc&#10;&lt;b&gt;unixbeard&lt;/b&gt;: .net&gt;;;d0,36;;b0,0;;m0;;e">
<treenode node="toRegex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Glob.php;f18;47;5;114;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    toRegex($glob, $strictLeadingDot = true, $strictWildcardSlash = true, $delimiter = &apos;#&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a regexp which is the equivalent of the glob pattern.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$glob&lt;/b&gt;: The glob pattern&#10;    bool &lt;b&gt;$strictLeadingDot&lt;/b&gt;&#10;    bool &lt;b&gt;$strictWildcardSlash&lt;/b&gt;&#10;    string &lt;b&gt;$delimiter&lt;/b&gt;: Optional delimiter&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   regex The regexp;;d4,48;;b1,5;;m0;;estring $glob;;pbool $strictLeadingDot;;pbool $strictWildcardSlash;;pstring $delimiter;;p">
</treenode>
</treenode>
<treenode node="GlobTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\GlobTest.php;f0;17;1;94;;;;vpos;;v;;aTestCase;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="testGlobToRegexDelimiters;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\GlobTest.php;f11;19;5;25;;;;vpos;;v;;a;;r;;d4,20;;b1,0;;m0;;e">
</treenode>
<treenode node="testGlobToRegexDoubleStarNonStrictDots;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\GlobTest.php;f11;44;5;59;;;;vpos;;v;;a;;r;;d4,45;;b1,0;;m0;;e">
</treenode>
<treenode node="testGlobToRegexDoubleStarStrictDots;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\GlobTest.php;f11;27;5;42;;;;vpos;;v;;a;;r;;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="testGlobToRegexDoubleStarWithoutLeadingSlash;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\GlobTest.php;f11;61;5;76;;;;vpos;;v;;a;;r;;d4,62;;b1,0;;m0;;e">
</treenode>
<treenode node="testGlobToRegexDoubleStarWithoutLeadingSlashNotStrictLeadingDot;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\GlobTest.php;f11;78;5;93;;;;vpos;;v;;a;;r;;d4,79;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="HashToSlashCommentFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HashToSlashCommentFixer.php;f6;26;1;57;;;;vpos;;v;;aAbstractProxyFixer;;cDeprecatedFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class HashToSlashCommentFixer extends AbstractProxyFixer implements DeprecatedFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Changes single comments prefixes &apos;#&apos; with &apos;//&apos;.&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;deprecated&lt;/b&gt;: in 2.4, proxy to SingleLineCommentStyleFixer;;d0,27;;b0,0;;m0;;e">
<treenode node="createProxyFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HashToSlashCommentFixer.php;f14;50;5;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProxyFixers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HashToSlashCommentFixer.php;f11;31;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getSuccessorsNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HashToSlashCommentFixer.php;f11;42;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSuccessorsNames()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,43;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="HeaderCommentFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f6;32;1;355;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class HeaderCommentFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Antonio J. García Lagar &lt;aj&#10;&lt;b&gt;garcialagar&lt;/b&gt;: .es&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,33;;b0,0;;m0;;e">
<treenode node="HEADER_COMMENT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f9;35;24;35;;;;vpos;;v;;a;;r&apos;comment&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="HEADER_LINE_SEPARATION_BOTH;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f9;43;37;43;;;;vpos;;v;;a;;r1;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="HEADER_LINE_SEPARATION_BOTTOM;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f9;47;39;47;;;;vpos;;v;;a;;r3;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="HEADER_LINE_SEPARATION_NONE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f9;49;37;49;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="HEADER_LINE_SEPARATION_TOP;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f9;45;36;45;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="HEADER_LOCATION_AFTER_DECLARE_STRICT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f9;40;46;40;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="HEADER_LOCATION_AFTER_OPEN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f9;38;36;38;;;;vpos;;v;;a;;r1;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="HEADER_PHPDOC;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f9;34;23;34;;;;vpos;;v;;a;;r&apos;PHPDoc&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f14;128;5;154;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,129;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f14;159;5;194;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,160;;b2,0;;m0;;e">
</treenode>
<treenode node="findHeaderCommentCurrentIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f12;221;5;226;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findHeaderCommentCurrentIndex(Tokens $tokens, $headerNewIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$headerNewIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,222;;b3,0;;m0;;eTokens $tokens;;pint $headerNewIndex;;p">
</treenode>
<treenode node="findHeaderCommentInsertionIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f12;235;5;282;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findHeaderCommentInsertionIndex(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Find the index where the header comment must be inserted.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;;;d4,236;;b3,0;;m0;;eTokens $tokens;;p">
</treenode>
<treenode node="fixWhiteSpaceAroundHeader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f12;288;5;328;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixWhiteSpaceAroundHeader(Tokens $tokens, $headerIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$headerIndex&lt;/b&gt;;;d4,289;;b3,0;;m0;;eTokens $tokens;;pint $headerIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f11;54;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b1,0;;m0;;e">
</treenode>
<treenode node="getHeaderAsComment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f12;201;5;213;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHeaderAsComment()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enclose the given text in a comment block.;;d4,202;;b3,0;;m0;;e">
</treenode>
<treenode node="getLineBreakCount;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f12;337;5;345;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLineBreakCount(Tokens $tokens, $indexStart, $indexEnd)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$indexStart&lt;/b&gt;&#10;    int &lt;b&gt;$indexEnd&lt;/b&gt;;;d4,338;;b3,0;;m0;;eTokens $tokens;;pint $indexStart;;pint $indexEnd;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f11;115;5;123;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,116;;b1,0;;m0;;e">
</treenode>
<treenode node="insertHeader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f12;351;5;354;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    insertHeader(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,352;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\HeaderCommentFixer.php;f11;107;5;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,108;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="HelpCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\HelpCommand.php;f0;24;1;80;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\HelpCommand.php;f6;41;1;621;;;;vpos;;v;;aCommand;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class HelpCommand extends Command&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    HelpCommand displays the help for a given command.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="COMMAND_NAME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\HelpCommand.php;f9;43;22;43;;;;vpos;;v;;a;;r&apos;help&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\HelpCommand.php;f14;31;5;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\HelpCommand.php;f14;66;5;79;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    execute(InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="getChangeLogFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\HelpCommand.php;f19;429;5;434;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getChangeLogFile()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,430;;b3,5;;m0;;e">
</treenode>
<treenode node="getDisplayableAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\HelpCommand.php;f18;340;5;370;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDisplayableAllowedValues(FixerOptionInterface $option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the allowed values of the given option that can be converted to a string.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    FixerOptionInterface &lt;b&gt;$option&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |array;;d4,341;;b1,5;;m0;;eFixerOptionInterface $option;;p">
</treenode>
<treenode node="getFixersHelp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\HelpCommand.php;f19;439;5;587;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFixersHelp()&#10;;;d4,440;;b3,5;;m0;;e">
</treenode>
<treenode node="getHelpCopy;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\HelpCommand.php;f18;50;5;290;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHelpCopy()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns help-copy suitable for console output.;;d4,51;;b1,5;;m0;;e">
</treenode>
<treenode node="getLatestReleaseVersionFromChangeLog;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\HelpCommand.php;f18;377;5;416;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLatestReleaseVersionFromChangeLog()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \RuntimeException when failing to parse the change log file;;d4,378;;b1,5;;m0;;e">
</treenode>
<treenode node="initialize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\HelpCommand.php;f14;421;5;424;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    initialize(InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,422;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="setCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\HelpCommand.php;f11;58;5;61;;;;vpos;;v;;a;;r;;d4,59;;b1,0;;m0;;ecommand;;p">
</treenode>
<treenode node="toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\HelpCommand.php;f18;297;5;331;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    toString($value)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$value&lt;/b&gt;;;d4,298;;b1,5;;m0;;emixed $value;;p">
</treenode>
<treenode node="wordwrap;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\HelpCommand.php;f19;597;5;620;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    wordwrap($string, $width)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Wraps a string to the given number of characters, ignoring style tags.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$string&lt;/b&gt;&#10;    int &lt;b&gt;$width&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,598;;b3,5;;m0;;estring $string;;pint $width;;p">
</treenode>
</treenode>
<treenode node="HelpCommandTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\HelpCommandTest.php;f0;19;1;70;;;;vpos;;v;;aTestCase;;c;;r;;d0,20;;b0,0;;m0;;e">
<treenode node="testExecuteForApplicationCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\HelpCommandTest.php;f11;52;5;60;;;;vpos;;v;;a;;r;;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="testExecuteForApplicationCommandWithXmlOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\HelpCommandTest.php;f11;62;5;69;;;;vpos;;v;;a;;r;;d4,63;;b1,0;;m0;;e">
</treenode>
<treenode node="testExecuteForCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\HelpCommandTest.php;f11;32;5;41;;;;vpos;;v;;a;;r;;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="testExecuteForCommandAlias;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\HelpCommandTest.php;f11;21;5;30;;;;vpos;;v;;a;;r;;d4,22;;b1,0;;m0;;e">
</treenode>
<treenode node="testExecuteForCommandWithXmlOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\HelpCommandTest.php;f11;43;5;50;;;;vpos;;v;;a;;r;;d4,44;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Helper;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Helper.php;f9;20;1;137;;;;vpos;;v;;aHelperInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Helper implements HelperInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Helper is the base class for all helper classes.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="formatMemory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Helper.php;f18;103;5;118;;;;vpos;;v;;a;;r;;d4,104;;b1,5;;m0;;ememory;;p">
</treenode>
<treenode node="formatTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Helper.php;f18;74;5;101;;;;vpos;;v;;a;;r;;d4,75;;b1,5;;m0;;esecs;;p">
</treenode>
<treenode node="getHelperSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Helper.php;f11;35;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHelperSet()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b1,0;;m0;;e">
</treenode>
<treenode node="removeDecoration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Helper.php;f18;125;5;136;;;;vpos;;v;;a;;r;;d4,126;;b1,5;;m0;;eformatter;;pstring;;p">
</treenode>
<treenode node="setHelperSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Helper.php;f11;27;5;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHelperSet(HelperSet $helperSet = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;ehelperSet;;p">
</treenode>
<treenode node="strlen;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Helper.php;f18;47;5;54;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    strlen($string)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the length of a string, using mb_strwidth if it is available.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$string&lt;/b&gt;: The string to check its length&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The length of the string;;d4,48;;b1,5;;m0;;estring $string;;p">
</treenode>
<treenode node="strlenWithoutDecoration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Helper.php;f18;120;5;123;;;;vpos;;v;;a;;r;;d4,121;;b1,5;;m0;;eformatter;;pstring;;p">
</treenode>
<treenode node="substr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Helper.php;f18;65;5;72;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    substr($string, $from, $length = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the subset of a string, using mb_substr if it is available.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$string&lt;/b&gt;: String to subset&#10;    int &lt;b&gt;$from&lt;/b&gt;: Start offset&#10;    int|null &lt;b&gt;$length&lt;/b&gt;: Length to read&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The string subset;;d4,66;;b1,5;;m0;;estring $string;;pint $from;;pint|null $length;;p">
</treenode>
</treenode>
<treenode node="HelperSet;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\HelperSet.php;f0;21;1;107;;;;vpos;;v;;aIteratorAggregate;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class HelperSet implements \IteratorAggregate&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    HelperSet represents a set of helpers to be used with a command.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\HelperSet.php;f11;32;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(array $helpers = [])&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Helper[] &lt;b&gt;$helpers&lt;/b&gt;: An array of helper;;d4,33;;b1,0;;m0;;eHelper[] $helpers;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\HelperSet.php;f11;76;5;83;;;;vpos;;v;;aHelperInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    get($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets a helper value.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException if the helper is not defined&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The helper name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The helper instance;;d4,77;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="getCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\HelperSet.php;f11;95;5;98;;;;vpos;;v;;aCommand;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommand()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the command associated with this helper set.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A Command instance;;d4,96;;b1,0;;m0;;e">
</treenode>
<treenode node="getIterator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\HelperSet.php;f11;103;5;106;;;;vpos;;v;;aHelper;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIterator()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,104;;b1,0;;m0;;e">
</treenode>
<treenode node="has;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\HelperSet.php;f11;62;5;65;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    has($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the helper if defined.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The helper name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the helper is defined, false otherwise;;d4,63;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="set;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\HelperSet.php;f11;45;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    set(HelperInterface $helper, $alias = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets a helper.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    HelperInterface &lt;b&gt;$helper&lt;/b&gt;: The helper instance&#10;    string &lt;b&gt;$alias&lt;/b&gt;: An alias;;d4,46;;b1,0;;m0;;eHelperInterface $helper;;pstring $alias;;p">
</treenode>
<treenode node="setCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\HelperSet.php;f11;85;5;88;;;;vpos;;v;;a;;r;;d4,86;;b1,0;;m0;;ecommand;;p">
</treenode>
</treenode>
<treenode node="HelperSetTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\HelperSetTest.php;f0;17;1;126;;;;vpos;;v;;aTestCase;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="getGenericMockHelper;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\HelperSetTest.php;f12;111;5;125;;;;vpos;;v;;a;;r;;d4,112;;b3,0;;m0;;ename;;phelperset;;p">
</treenode>
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\HelperSetTest.php;f11;19;5;26;;;;vpos;;v;;a;;r;;d4,20;;b1,0;;m0;;e">
</treenode>
<treenode node="testGet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\HelperSetTest.php;f11;53;5;72;;;;vpos;;v;;a;;r;;d4,54;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\HelperSetTest.php;f11;89;5;95;;;;vpos;;v;;a;;r;;d4,90;;b1,0;;m0;;e">
</treenode>
<treenode node="testHas;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\HelperSetTest.php;f11;46;5;51;;;;vpos;;v;;a;;r;;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="testIteration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\HelperSetTest.php;f11;97;5;109;;;;vpos;;v;;a;;r;;d4,98;;b1,0;;m0;;e">
</treenode>
<treenode node="testSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\HelperSetTest.php;f11;28;5;44;;;;vpos;;v;;a;;r;;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\HelperSetTest.php;f11;74;5;87;;;;vpos;;v;;a;;r;;d4,75;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="HelperTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\HelperTest.php;f0;16;1;54;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="formatTimeProvider;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\HelperTest.php;f11;18;5;42;;;;vpos;;v;;a;;r;;d4,19;;b1,0;;m0;;e">
</treenode>
<treenode node="testFormatTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\HelperTest.php;f11;50;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testFormatTime($secs, $expectedFormat)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: formatTimeProvider&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$secs&lt;/b&gt;&#10;    string &lt;b&gt;$expectedFormat&lt;/b&gt;;;d4,51;;b1,0;;m0;;eint $secs;;pstring $expectedFormat;;p">
</treenode>
</treenode>
<treenode node="HeredocIndentationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\HeredocIndentationFixer.php;f6;26;1;149;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class HeredocIndentationFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gregor Harlan;;d0,27;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\HeredocIndentationFixer.php;f14;72;5;84;;;;vpos;;v;;a;;r;;d4,73;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixIndentation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\HeredocIndentationFixer.php;f12;90;5;122;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixIndentation(Tokens $tokens, $start, $end)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;&#10;    int &lt;b&gt;$end&lt;/b&gt;;;d4,91;;b3,0;;m0;;etokens;;pstart;;pend;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\HeredocIndentationFixer.php;f11;31;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getIndentAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\HeredocIndentationFixer.php;f12;129;5;148;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIndentAt(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,130;;b3,0;;m0;;etokens;;pindex;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\HeredocIndentationFixer.php;f11;67;5;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,68;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="HeredocToNowdocFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\HeredocToNowdocFixer.php;f6;24;1;106;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class HeredocToNowdocFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gregor Harlan &lt;gharlan&#10;&lt;b&gt;web&lt;/b&gt;: .de&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\HeredocToNowdocFixer.php;f14;57;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="convertToNowdoc;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\HeredocToNowdocFixer.php;f12;99;5;105;;;;vpos;;v;;aToken;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    convertToNowdoc(Token $token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transforms the heredoc start token to nowdoc notation.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Token &lt;b&gt;$token&lt;/b&gt;;;d4,100;;b3,0;;m0;;eToken $token;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\HeredocToNowdocFixer.php;f11;29;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\HeredocToNowdocFixer.php;f11;49;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="IOException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Exception\IOException.php;f0;20;1;38;;;;vpos;;v;;aRuntimeException;;cIOExceptionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class IOException extends \RuntimeException implements IOExceptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exception class thrown when a filesystem operation failure happens.&#10;&lt;b&gt;author&lt;/b&gt;: Romain Neutron &lt;imprec&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Christian Gärtner &lt;christiangaertner.film&#10;&lt;b&gt;googlemail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Exception\IOException.php;f11;24;5;29;;;;vpos;;v;;a;;r;;d4,25;;b1,0;;m0;;emessage;;pcode;;pprevious;;ppath;;p">
</treenode>
<treenode node="getPath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Exception\IOException.php;f11;34;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPath()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="IgnoreAnnotation;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\IgnoreAnnotation.php;f6;28;1;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class IgnoreAnnotation&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Annotation that can be used to signal to the parser to ignore specific&#10;annotations during the parsing process.&#10;&lt;b&gt;Annotation&lt;/b&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\IgnoreAnnotation.php;f11;42;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(array $values)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constructor.&#10;&lt;b&gt;throws&lt;/b&gt;: \RuntimeException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$values&lt;/b&gt;;;d4,43;;b1,0;;m0;;earray $values;;p">
</treenode>
</treenode>
<treenode node="ImmutableEventDispatcher;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\ImmutableEventDispatcher.php;f0;18;1;101;;;;vpos;;v;;aEventDispatcherInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ImmutableEventDispatcher implements EventDispatcherInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A read-only proxy for an event dispatcher.&#10;&lt;b&gt;author&lt;/b&gt;: Bernhard Schussek &lt;bschussek&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\ImmutableEventDispatcher.php;f11;22;5;25;;;;vpos;;v;;a;;r;;d4,23;;b1,0;;m0;;edispatcher;;p">
</treenode>
<treenode node="addListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\ImmutableEventDispatcher.php;f11;49;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addListener($eventName, $listener, $priority = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;eeventName;;plistener;;ppriority;;p">
</treenode>
<treenode node="addSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\ImmutableEventDispatcher.php;f11;57;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addSubscriber(EventSubscriberInterface $subscriber)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;esubscriber;;p">
</treenode>
<treenode node="dispatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\ImmutableEventDispatcher.php;f11;32;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    dispatch($event/*, string $eventName = null*/)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: }&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$eventName&lt;/b&gt;;;d4,33;;b1,0;;m0;;estring|null $eventName;;p">
</treenode>
<treenode node="getListenerPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\ImmutableEventDispatcher.php;f11;89;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getListenerPriority($eventName, $listener)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,90;;b1,0;;m0;;eeventName;;plistener;;p">
</treenode>
<treenode node="getListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\ImmutableEventDispatcher.php;f11;81;5;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getListeners($eventName = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,82;;b1,0;;m0;;eeventName;;p">
</treenode>
<treenode node="hasListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\ImmutableEventDispatcher.php;f11;97;5;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasListeners($eventName = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,98;;b1,0;;m0;;eeventName;;p">
</treenode>
<treenode node="removeListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\ImmutableEventDispatcher.php;f11;65;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeListener($eventName, $listener)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b1,0;;m0;;eeventName;;plistener;;p">
</treenode>
<treenode node="removeSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\ImmutableEventDispatcher.php;f11;73;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeSubscriber(EventSubscriberInterface $subscriber)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,74;;b1,0;;m0;;esubscriber;;p">
</treenode>
</treenode>
<treenode node="ImmutableEventDispatcherTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\ImmutableEventDispatcherTest.php;f0;21;1;99;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ImmutableEventDispatcherTest extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Bernhard Schussek &lt;bschussek&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\ImmutableEventDispatcherTest.php;f14;33;5;37;;;;vpos;;v;;a void;;r;;d4,34;;b2,0;;m0;;e">
</treenode>
<treenode node="testAddListenerDisallowed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\ImmutableEventDispatcherTest.php;f11;72;5;76;;;;vpos;;v;;a;;r;;d4,73;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddSubscriberDisallowed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\ImmutableEventDispatcherTest.php;f11;78;5;84;;;;vpos;;v;;a;;r;;d4,79;;b1,0;;m0;;e">
</treenode>
<treenode node="testDispatchDelegates;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\ImmutableEventDispatcherTest.php;f11;39;5;50;;;;vpos;;v;;a;;r;;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetListenersDelegates;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\ImmutableEventDispatcherTest.php;f11;52;5;60;;;;vpos;;v;;a;;r;;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasListenersDelegates;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\ImmutableEventDispatcherTest.php;f11;62;5;70;;;;vpos;;v;;a;;r;;d4,63;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveListenerDisallowed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\ImmutableEventDispatcherTest.php;f11;86;5;90;;;;vpos;;v;;a;;r;;d4,87;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveSubscriberDisallowed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\ImmutableEventDispatcherTest.php;f11;92;5;98;;;;vpos;;v;;a;;r;;d4,93;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ImplodeCallFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\ImplodeCallFixer.php;f6;25;1;149;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ImplodeCallFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Kuba Werlos &lt;werlos&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\ImplodeCallFixer.php;f14;72;5;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,73;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getArgumentIndices;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\ImplodeCallFixer.php;f12;134;5;148;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArgumentIndices(Tokens $tokens, $functionNameIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$functionNameIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;int, int&gt; In the format: startIndex =&gt; endIndex;;d4,135;;b3,0;;m0;;eTokens $tokens;;pint $functionNameIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\ImplodeCallFixer.php;f11;30;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\ImplodeCallFixer.php;f11;62;5;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\ImplodeCallFixer.php;f11;54;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\ImplodeCallFixer.php;f11;46;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ImportTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ImportTransformer.php;f6;30;1;66;;;;vpos;;v;;aAbstractTransformer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ImportTransformer extends AbstractTransformer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform const/function import tokens.&#10;Performed transformations:&#10;- T_CONST into CT::T_CONST_IMPORT&#10;- T_FUNCTION into CT::T_FUNCTION_IMPORT&#10;&lt;b&gt;author&lt;/b&gt;: Gregor Harlan &lt;gharlan&#10;&lt;b&gt;web&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,31;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ImportTransformer.php;f11;35;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ImportTransformer.php;f11;43;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredPhpVersionId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ImportTransformer.php;f11;51;5;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    process(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
</treenode>
<treenode node="IncludeFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\IncludeFixer.php;f6;24;1;150;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class IncludeFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Sebastiaan Stok &lt;s.stok&#10;&lt;b&gt;rollerscapes&lt;/b&gt;: .net&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\IncludeFixer.php;f14;57;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="clearIncludies;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\IncludeFixer.php;f12;62;5;93;;;;vpos;;v;;a;;r;;d4,63;;b3,0;;m0;;etokens;;pincludies;;p">
</treenode>
<treenode node="findIncludies;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\IncludeFixer.php;f12;95;5;132;;;;vpos;;v;;a;;r;;d4,96;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\IncludeFixer.php;f11;29;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\IncludeFixer.php;f11;49;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="removeWhitespaceAroundIfPossible;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\IncludeFixer.php;f12;138;5;149;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeWhitespaceAroundIfPossible(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,139;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="IncrementStyleFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\IncrementStyleFixer.php;f6;28;1;207;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class IncrementStyleFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gregor Harlan &lt;gharlan&#10;&lt;b&gt;web&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Kuba Werlos &lt;werlos&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="STYLE_POST;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\IncrementStyleFixer.php;f9;38;20;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STYLE_PRE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\IncrementStyleFixer.php;f9;33;19;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\IncrementStyleFixer.php;f14;81;5;120;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,82;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\IncrementStyleFixer.php;f14;68;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,69;;b2,0;;m0;;e">
</treenode>
<treenode node="findEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\IncrementStyleFixer.php;f12;128;5;161;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findEnd(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,129;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="findStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\IncrementStyleFixer.php;f12;169;5;206;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findStart(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,170;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\IncrementStyleFixer.php;f11;43;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\IncrementStyleFixer.php;f11;60;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="IndentationTypeFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\IndentationTypeFixer.php;f6;27;1;146;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class IndentationTypeFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶2.4.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\IndentationTypeFixer.php;f14;66;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixIndentInComment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\IndentationTypeFixer.php;f12;91;5;108;;;;vpos;;v;;aToken;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixIndentInComment(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,92;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixIndentToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\IndentationTypeFixer.php;f12;116;5;145;;;;vpos;;v;;aToken;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixIndentToken(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,117;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\IndentationTypeFixer.php;f11;37;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\IndentationTypeFixer.php;f11;50;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\IndentationTypeFixer.php;f11;58;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="IndexedReader;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\IndexedReader.php;f0;26;1;118;;;;vpos;;v;;aReader;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class IndexedReader implements Reader&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Allows the reader to be used in-place of Doctrine&apos;s reader.&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="__call;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\IndexedReader.php;f11;114;5;117;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __call($method, $args)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Proxies all methods to the delegate.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$method&lt;/b&gt;&#10;    array &lt;b&gt;$args&lt;/b&gt;;;d4,115;;b1,0;;m0;;estring $method;;parray $args;;p">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\IndexedReader.php;f11;38;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(Reader $reader)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constructor.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Reader &lt;b&gt;$reader&lt;/b&gt;;;d4,39;;b1,0;;m0;;eReader $reader;;p">
</treenode>
<treenode node="getClassAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\IndexedReader.php;f11;59;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassAnnotation(\ReflectionClass $class, $annotation)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,60;;b1,0;;m0;;eclass;;pannotation;;p">
</treenode>
<treenode node="getClassAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\IndexedReader.php;f11;46;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassAnnotations(\ReflectionClass $class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;eclass;;p">
</treenode>
<treenode node="getMethodAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\IndexedReader.php;f11;80;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMethodAnnotation(\ReflectionMethod $method, $annotation)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,81;;b1,0;;m0;;emethod;;pannotation;;p">
</treenode>
<treenode node="getMethodAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\IndexedReader.php;f11;67;5;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMethodAnnotations(\ReflectionMethod $method)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,68;;b1,0;;m0;;emethod;;p">
</treenode>
<treenode node="getPropertyAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\IndexedReader.php;f11;101;5;104;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPropertyAnnotation(\ReflectionProperty $property, $annotation)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,102;;b1,0;;m0;;eproperty;;pannotation;;p">
</treenode>
<treenode node="getPropertyAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\IndexedReader.php;f11;88;5;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPropertyAnnotations(\ReflectionProperty $property)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,89;;b1,0;;m0;;eproperty;;p">
</treenode>
</treenode>
<treenode node="InnerNameIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FilenameFilterIteratorTest.php;f0;42;1;53;;;;vpos;;v;;aArrayIterator;;c;;r;;d0,43;;b0,0;;m0;;e">
<treenode node="current;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FilenameFilterIteratorTest.php;f11;44;5;47;;;;vpos;;v;;a;;r;;d4,45;;b1,0;;m0;;e">
</treenode>
<treenode node="getFilename;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FilenameFilterIteratorTest.php;f11;49;5;52;;;;vpos;;v;;a;;r;;d4,50;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="InnerSizeIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\SizeRangeFilterIteratorTest.php;f0;48;1;69;;;;vpos;;v;;aArrayIterator;;c;;r;;d0,49;;b0,0;;m0;;e">
<treenode node="current;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\SizeRangeFilterIteratorTest.php;f11;50;5;53;;;;vpos;;v;;a;;r;;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="getFilename;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\SizeRangeFilterIteratorTest.php;f11;55;5;58;;;;vpos;;v;;a;;r;;d4,56;;b1,0;;m0;;e">
</treenode>
<treenode node="getSize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\SizeRangeFilterIteratorTest.php;f11;65;5;68;;;;vpos;;v;;a;;r;;d4,66;;b1,0;;m0;;e">
</treenode>
<treenode node="isFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\SizeRangeFilterIteratorTest.php;f11;60;5;63;;;;vpos;;v;;a;;r;;d4,61;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="InnerTypeIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FileTypeFilterIteratorTest.php;f0;65;1;81;;;;vpos;;v;;aArrayIterator;;c;;r;;d0,66;;b0,0;;m0;;e">
<treenode node="current;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FileTypeFilterIteratorTest.php;f11;67;5;70;;;;vpos;;v;;a;;r;;d4,68;;b1,0;;m0;;e">
</treenode>
<treenode node="isDir;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FileTypeFilterIteratorTest.php;f11;77;5;80;;;;vpos;;v;;a;;r;;d4,78;;b1,0;;m0;;e">
</treenode>
<treenode node="isFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\FileTypeFilterIteratorTest.php;f11;72;5;75;;;;vpos;;v;;a;;r;;d4,73;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Input;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f9;27;1;202;;;;vpos;;v;;aInputInterface;;cStreamableInputInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Input implements InputInterface, StreamableInputInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Input is the base class for all concrete Input classes.&#10;Three concrete classes are provided by default:&#10;* `ArgvInput`: The input comes from the CLI arguments (argv)&#10;* `StringInput`: The input is provided as a string&#10;* `ArrayInput`: The input is provided as an array&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;35;5;43;;;;vpos;;v;;a;;r;;d4,36;;b1,0;;m0;;edefinition;;p">
</treenode>
<treenode node="bind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;48;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    bind(InputDefinition $definition)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;edefinition;;p">
</treenode>
<treenode node="escapeToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;182;5;185;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    escapeToken($token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Escapes a token through escapeshellarg if it contains unsafe chars.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$token&lt;/b&gt;;;d4,183;;b1,0;;m0;;estring $token;;p">
</treenode>
<treenode node="getArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;106;5;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArgument($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,107;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="getArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;98;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArguments()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,99;;b1,0;;m0;;e">
</treenode>
<treenode node="getOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;146;5;153;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOption($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,147;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="getOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;138;5;141;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOptions()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,139;;b1,0;;m0;;e">
</treenode>
<treenode node="getStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;198;5;201;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStream()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,199;;b1,0;;m0;;e">
</treenode>
<treenode node="hasArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;130;5;133;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasArgument($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,131;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="hasOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;170;5;173;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasOption($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,171;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="isInteractive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;82;5;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isInteractive()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,83;;b1,0;;m0;;e">
</treenode>
<treenode node="parse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f23;60;39;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Processes command line arguments.;;d-1,-1;;b2,0;;m0;;e">
</treenode>
<treenode node="setArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;118;5;125;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setArgument($name, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,119;;b1,0;;m0;;ename;;pvalue;;p">
</treenode>
<treenode node="setInteractive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;90;5;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setInteractive($interactive)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,91;;b1,0;;m0;;einteractive;;p">
</treenode>
<treenode node="setOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;158;5;165;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setOption($name, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,159;;b1,0;;m0;;ename;;pvalue;;p">
</treenode>
<treenode node="setStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;190;5;193;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setStream($stream)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,191;;b1,0;;m0;;estream;;p">
</treenode>
<treenode node="validate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\Input.php;f11;65;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    validate()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="InputArgument;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputArgument.php;f0;21;1;128;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class InputArgument&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Represents a command line argument.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="IS_ARRAY;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputArgument.php;f9;25;18;25;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="OPTIONAL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputArgument.php;f9;24;18;24;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="REQUIRED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputArgument.php;f9;23;18;23;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputArgument.php;f11;40;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $name, int $mode = null, string $description = &apos;&apos;, $default = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When argument mode is not valid&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The argument name&#10;    int|null &lt;b&gt;$mode&lt;/b&gt;: The argument mode: self::REQUIRED or self::OPTIONAL&#10;    string &lt;b&gt;$description&lt;/b&gt;: A description text&#10;    string|string[]|null &lt;b&gt;$default&lt;/b&gt;: The default value (for self::OPTIONAL mode only);;d4,41;;b1,0;;m0;;estring $name;;pint|null $mode;;pstring $description;;pstring|string[]|null $default;;p">
</treenode>
<treenode node="getDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputArgument.php;f11;114;5;117;;;;vpos;;v;;astring|string[]|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefault()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the default value.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The default value;;d4,115;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputArgument.php;f11;124;5;127;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDescription()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the description text.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The description text;;d4,125;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputArgument.php;f11;60;5;63;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the argument name.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The argument name;;d4,61;;b1,0;;m0;;e">
</treenode>
<treenode node="isArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputArgument.php;f11;80;5;83;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isArray()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the argument can take multiple values.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if mode is self::IS_ARRAY, false otherwise;;d4,81;;b1,0;;m0;;e">
</treenode>
<treenode node="isRequired;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputArgument.php;f11;70;5;73;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRequired()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the argument is required.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if parameter mode is self::REQUIRED, false otherwise;;d4,71;;b1,0;;m0;;e">
</treenode>
<treenode node="setDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputArgument.php;f11;92;5;107;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDefault($default = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the default value.&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException When incorrect default value is given&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[]|null &lt;b&gt;$default&lt;/b&gt;: The default value;;d4,93;;b1,0;;m0;;estring|string[]|null $default;;p">
</treenode>
</treenode>
<treenode node="InputArgumentTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputArgumentTest.php;f0;16;1;97;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputArgumentTest.php;f11;18;5;22;;;;vpos;;v;;a;;r;;d4,19;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputArgumentTest.php;f11;63;5;67;;;;vpos;;v;;a;;r;;d4,64;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputArgumentTest.php;f11;57;5;61;;;;vpos;;v;;a;;r;;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="testInvalidModes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputArgumentTest.php;f11;39;5;45;;;;vpos;;v;;a;;r;;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputArgumentTest.php;f11;47;5;55;;;;vpos;;v;;a;;r;;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="testModes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputArgumentTest.php;f11;24;5;37;;;;vpos;;v;;a;;r;;d4,25;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputArgumentTest.php;f11;69;5;80;;;;vpos;;v;;a;;r;;d4,70;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetDefaultWithArrayArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputArgumentTest.php;f11;90;5;96;;;;vpos;;v;;a;;r;;d4,91;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetDefaultWithRequiredArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputArgumentTest.php;f11;82;5;88;;;;vpos;;v;;a;;r;;d4,83;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="InputAwareHelper;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\InputAwareHelper.php;f9;21;1;32;;;;vpos;;v;;aHelper;;cInputAwareInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class InputAwareHelper extends Helper implements InputAwareInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    An implementation of InputAwareInterface for Helpers.&#10;&lt;b&gt;author&lt;/b&gt;: Wouter J &lt;waldio.webdesign&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="setInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\InputAwareHelper.php;f11;28;5;31;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setInput(InputInterface $input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;einput;;p">
</treenode>
</treenode>
<treenode node="InputDefinition;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f0;28;1;403;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class InputDefinition&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A InputDefinition represents a set of valid command line arguments and options.&#10;Usage:&#10;$definition = new InputDefinition([&#10;new InputArgument(&apos;name&apos;, InputArgument::REQUIRED),&#10;new InputOption(&apos;foo&apos;, &apos;f&apos;, InputOption::VALUE_REQUIRED),&#10;]);s&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;40;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(array $definition = [])&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$definition&lt;/b&gt;: An array of InputArgument and InputOption instance;;d4,41;;b1,0;;m0;;earray $definition;;p">
</treenode>
<treenode node="addArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;95;5;120;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addArgument(InputArgument $argument)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: LogicException When incorrect argument is given;;d4,96;;b1,0;;m0;;eargument;;p">
</treenode>
<treenode node="addArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;83;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addArguments($arguments = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds an array of InputArgument objects.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    InputArgument[] &lt;b&gt;$arguments&lt;/b&gt;: An array of InputArgument objects;;d4,84;;b1,0;;m0;;eInputArgument[] $arguments;;p">
</treenode>
<treenode node="addOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;228;5;248;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addOption(InputOption $option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: LogicException When option given already exist;;d4,229;;b1,0;;m0;;eoption;;p">
</treenode>
<treenode node="addOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;218;5;223;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addOptions($options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds an array of InputOption objects.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    InputOption[] &lt;b&gt;$options&lt;/b&gt;: An array of InputOption objects;;d4,219;;b1,0;;m0;;eInputOption[] $options;;p">
</treenode>
<treenode node="getArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;131;5;140;;;;vpos;;v;;aInputArgument;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArgument($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an InputArgument by name or by position.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When argument given doesn&apos;t exist&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$name&lt;/b&gt;: The InputArgument name or position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An InputArgument object;;d4,132;;b1,0;;m0;;estring|int $name;;p">
</treenode>
<treenode node="getArgumentCount;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;171;5;174;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArgumentCount()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the number of InputArguments.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The number of InputArguments;;d4,172;;b1,0;;m0;;e">
</treenode>
<treenode node="getArgumentDefaults;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;191;5;199;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArgumentDefaults()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the default values.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of default values;;d4,192;;b1,0;;m0;;e">
</treenode>
<treenode node="getArgumentRequiredCount;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;181;5;184;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArgumentRequiredCount()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the number of required InputArguments.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The number of required InputArguments;;d4,182;;b1,0;;m0;;e">
</treenode>
<treenode node="getArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;161;5;164;;;;vpos;;v;;aInputArgument;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArguments()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the array of InputArgument objects.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] An array of InputArgument objects;;d4,162;;b1,0;;m0;;e">
</treenode>
<treenode node="getOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;259;5;266;;;;vpos;;v;;aInputOption;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOption($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an InputOption by name.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When option given doesn&apos;t exist&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The InputOption name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A InputOption object;;d4,260;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="getOptionDefaults;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;322;5;330;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOptionDefaults()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets an array of default values.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of all default values;;d4,323;;b1,0;;m0;;e">
</treenode>
<treenode node="getOptionForShortcut;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;312;5;315;;;;vpos;;v;;aInputOption;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOptionForShortcut($shortcut)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets an InputOption by shortcut.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$shortcut&lt;/b&gt;: The Shortcut name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An InputOption object;;d4,313;;b1,0;;m0;;estring $shortcut;;p">
</treenode>
<treenode node="getOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;288;5;291;;;;vpos;;v;;aInputOption;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOptions()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the array of InputOption objects.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] An array of InputOption objects;;d4,289;;b1,0;;m0;;e">
</treenode>
<treenode node="getSynopsis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;359;5;402;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSynopsis($short = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the synopsis.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$short&lt;/b&gt;: Whether to return the short version (with options folded) or not&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The synopsis;;d4,360;;b1,0;;m0;;ebool $short;;p">
</treenode>
<treenode node="hasArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;149;5;154;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasArgument($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if an InputArgument object exists by name or position.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$name&lt;/b&gt;: The InputArgument name or position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the InputArgument object exists, false otherwise;;d4,150;;b1,0;;m0;;estring|int $name;;p">
</treenode>
<treenode node="hasOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;278;5;281;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasOption($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if an InputOption object exists by name.&#10;This method can&apos;t be used to check if the user included the option when&#10;executing the command (use getOption() instead).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The InputOption name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the InputOption object exists, false otherwise;;d4,279;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="hasShortcut;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;300;5;303;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasShortcut($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if an InputOption object exists by shortcut.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The InputOption shortcut&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the InputOption object exists, false otherwise;;d4,301;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="setArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;69;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setArguments($arguments = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the InputArgument objects.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    InputArgument[] &lt;b&gt;$arguments&lt;/b&gt;: An array of InputArgument objects;;d4,70;;b1,0;;m0;;eInputArgument[] $arguments;;p">
</treenode>
<treenode node="setDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;48;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDefinition(array $definition)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the definition of the input.;;d4,49;;b1,0;;m0;;edefinition;;p">
</treenode>
<treenode node="setOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;206;5;211;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setOptions($options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the InputOption objects.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    InputOption[] &lt;b&gt;$options&lt;/b&gt;: An array of InputOption objects;;d4,207;;b1,0;;m0;;eInputOption[] $options;;p">
</treenode>
<treenode node="shortcutToName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputDefinition.php;f11;343;5;350;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    shortcutToName($shortcut)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the InputOption name given a shortcut.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When option given does not exist&#10;&lt;b&gt;internal&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$shortcut&lt;/b&gt;: The shortcut&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The InputOption name;;d4,344;;b1,0;;m0;;estring $shortcut;;p">
</treenode>
</treenode>
<treenode node="InputDefinitionTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f0;18;1;389;;;;vpos;;v;;aTestCase;;c;;r;;d0,19;;b0,0;;m0;;e">
<treenode node="getGetSynopsisData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;349;5;365;;;;vpos;;v;;a;;r;;d4,350;;b1,0;;m0;;e">
</treenode>
<treenode node="initializeArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f14;373;5;379;;;;vpos;;v;;a;;r;;d4,374;;b2,0;;m0;;e">
</treenode>
<treenode node="initializeOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f14;381;5;388;;;;vpos;;v;;a;;r;;d4,382;;b2,0;;m0;;e">
</treenode>
<treenode node="setUpBeforeClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f18;28;5;31;;;;vpos;;v;;a void;;r;;d4,29;;b1,5;;m0;;e">
</treenode>
<treenode node="testAddArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;78;5;87;;;;vpos;;v;;a;;r;;d4,79;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;67;5;76;;;;vpos;;v;;a;;r;;d4,68;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddDuplicateOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;233;5;242;;;;vpos;;v;;a;;r;;d4,234;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddDuplicateShortcutOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;244;5;253;;;;vpos;;v;;a;;r;;d4,245;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;222;5;231;;;;vpos;;v;;a;;r;;d4,223;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;212;5;220;;;;vpos;;v;;a;;r;;d4,213;;b1,0;;m0;;e">
</treenode>
<treenode node="testArgumentsMustHaveDifferentNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;89;5;98;;;;vpos;;v;;a;;r;;d4,90;;b1,0;;m0;;e">
</treenode>
<treenode node="testArrayArgumentHasToBeLast;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;100;5;109;;;;vpos;;v;;a;;r;;d4,101;;b1,0;;m0;;e">
</treenode>
<treenode node="testConstructorArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;33;5;42;;;;vpos;;v;;a;;r;;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="testConstructorOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;44;5;53;;;;vpos;;v;;a;;r;;d4,45;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;122;5;129;;;;vpos;;v;;a;;r;;d4,123;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetArgumentCount;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;164;5;173;;;;vpos;;v;;a;;r;;d4,165;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetArgumentDefaults;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;175;5;189;;;;vpos;;v;;a;;r;;d4,176;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetArgumentRequiredCount;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;153;5;162;;;;vpos;;v;;a;;r;;d4,154;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetInvalidArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;131;5;140;;;;vpos;;v;;a;;r;;d4,132;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetInvalidOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;263;5;271;;;;vpos;;v;;a;;r;;d4,264;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;255;5;261;;;;vpos;;v;;a;;r;;d4,256;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetOptionDefaults;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;318;5;339;;;;vpos;;v;;a;;r;;d4,319;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetOptionForInvalidShortcut;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;308;5;316;;;;vpos;;v;;a;;r;;d4,309;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetOptionForMultiShortcut;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;299;5;306;;;;vpos;;v;;a;;r;;d4,300;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetOptionForShortcut;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;291;5;297;;;;vpos;;v;;a;;r;;d4,292;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetShortSynopsis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;367;5;371;;;;vpos;;v;;a;;r;;d4,368;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetSynopsis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;344;5;347;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testGetSynopsis(InputDefinition $definition, $expectedSynopsis, $message = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getGetSynopsisData;;d4,345;;b1,0;;m0;;edefinition;;pexpectedSynopsis;;pmessage;;p">
</treenode>
<treenode node="testHasArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;142;5;151;;;;vpos;;v;;a;;r;;d4,143;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;273;5;280;;;;vpos;;v;;a;;r;;d4,274;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasShortcut;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;282;5;289;;;;vpos;;v;;a;;r;;d4,283;;b1,0;;m0;;e">
</treenode>
<treenode node="testRequiredArgumentCannotFollowAnOptionalOne;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;111;5;120;;;;vpos;;v;;a;;r;;d4,112;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;55;5;65;;;;vpos;;v;;a;;r;;d4,56;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;191;5;199;;;;vpos;;v;;a;;r;;d4,192;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetOptionsClearsOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputDefinitionTest.php;f11;201;5;210;;;;vpos;;v;;a;;r;;d4,202;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="InputOption;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f0;21;1;207;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class InputOption&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Represents a command line option.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="VALUE_IS_ARRAY;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f9;26;24;26;;;;vpos;;v;;a;;r8;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VALUE_NONE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f9;23;20;23;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="VALUE_OPTIONAL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f9;25;24;25;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VALUE_REQUIRED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f9;24;24;24;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f11;43;5;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $name, $shortcut = null, int $mode = null, string $description = &apos;&apos;, $default = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException If option mode is invalid or incompatible&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The option name&#10;    string|array|null &lt;b&gt;$shortcut&lt;/b&gt;: The shortcuts, can be null, a string of shortcuts delimited by | or an array of shortcuts&#10;    int|null &lt;b&gt;$mode&lt;/b&gt;: The option mode: One of the VALUE_* constants&#10;    string &lt;b&gt;$description&lt;/b&gt;: A description text&#10;    string|string[]|int|bool|null &lt;b&gt;$default&lt;/b&gt;: The default value (must be null for self::VALUE_NONE);;d4,44;;b1,0;;m0;;estring $name;;pstring|array|null $shortcut;;pint|null $mode;;pstring $description;;pstring|string[]|int|bool|null $default;;p">
</treenode>
<treenode node="acceptValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f11;113;5;116;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    acceptValue()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the option accepts a value.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if value mode is not self::VALUE_NONE, false otherwise;;d4,114;;b1,0;;m0;;e">
</treenode>
<treenode node="equals;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f11;197;5;206;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    equals(self $option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks whether the given option equals this one.;;d4,198;;b1,0;;m0;;eoption;;p">
</treenode>
<treenode node="getDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f11;177;5;180;;;;vpos;;v;;astring|string[]|int|bool|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefault()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the default value.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The default value;;d4,178;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f11;187;5;190;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDescription()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the description text.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The description text;;d4,188;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f11;103;5;106;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the option name.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The name;;d4,104;;b1,0;;m0;;e">
</treenode>
<treenode node="getShortcut;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f11;93;5;96;;;;vpos;;v;;astring|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getShortcut()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the option shortcut.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The shortcut;;d4,94;;b1,0;;m0;;e">
</treenode>
<treenode node="isArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f11;143;5;146;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isArray()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the option can take multiple values.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if mode is self::VALUE_IS_ARRAY, false otherwise;;d4,144;;b1,0;;m0;;e">
</treenode>
<treenode node="isValueOptional;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f11;133;5;136;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isValueOptional()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the option takes an optional value.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if value mode is self::VALUE_OPTIONAL, false otherwise;;d4,134;;b1,0;;m0;;e">
</treenode>
<treenode node="isValueRequired;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f11;123;5;126;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isValueRequired()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the option requires a value.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if value mode is self::VALUE_REQUIRED, false otherwise;;d4,124;;b1,0;;m0;;e">
</treenode>
<treenode node="setDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\InputOption.php;f11;155;5;170;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDefault($default = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the default value.&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException When incorrect default value is given&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[]|int|bool|null &lt;b&gt;$default&lt;/b&gt;: The default value;;d4,156;;b1,0;;m0;;estring|string[]|int|bool|null $default;;p">
</treenode>
</treenode>
<treenode node="InputOptionTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f0;16;1;182;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="testArrayModeWithoutValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;26;5;31;;;;vpos;;v;;a;;r;;d4,27;;b1,0;;m0;;e">
</treenode>
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;18;5;24;;;;vpos;;v;;a;;r;;d4,19;;b1,0;;m0;;e">
</treenode>
<treenode node="testDefaultValueWithIsArrayMode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;152;5;158;;;;vpos;;v;;a;;r;;d4,153;;b1,0;;m0;;e">
</treenode>
<treenode node="testDefaultValueWithValueNoneMode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;144;5;150;;;;vpos;;v;;a;;r;;d4,145;;b1,0;;m0;;e">
</treenode>
<treenode node="testDoubleDashNameIsInvalid;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;87;5;91;;;;vpos;;v;;a;;r;;d4,88;;b1,0;;m0;;e">
</treenode>
<treenode node="testEmptyNameIsInvalid;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;81;5;85;;;;vpos;;v;;a;;r;;d4,82;;b1,0;;m0;;e">
</treenode>
<treenode node="testEquals;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;160;5;181;;;;vpos;;v;;a;;r;;d4,161;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;113;5;129;;;;vpos;;v;;a;;r;;d4,114;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;107;5;111;;;;vpos;;v;;a;;r;;d4,108;;b1,0;;m0;;e">
</treenode>
<treenode node="testInvalidModes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;73;5;79;;;;vpos;;v;;a;;r;;d4,74;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;99;5;105;;;;vpos;;v;;a;;r;;d4,100;;b1,0;;m0;;e">
</treenode>
<treenode node="testModes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;45;5;71;;;;vpos;;v;;a;;r;;d4,46;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;131;5;142;;;;vpos;;v;;a;;r;;d4,132;;b1,0;;m0;;e">
</treenode>
<treenode node="testShortcut;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;33;5;43;;;;vpos;;v;;a;;r;;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="testSingleDashOptionIsInvalid;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputOptionTest.php;f11;93;5;97;;;;vpos;;v;;a;;r;;d4,94;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="InputStream;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\InputStream.php;f0;20;1;89;;;;vpos;;v;;aIteratorAggregate;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class InputStream implements \IteratorAggregate&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Provides a way to continuously write to the input of a Process until the InputStream is closed.&#10;&lt;b&gt;author&lt;/b&gt;: Nicolas Grekas &lt;p&#10;&lt;b&gt;tchwork&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="close;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\InputStream.php;f11;55;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    close()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Closes the write buffer.;;d4,56;;b1,0;;m0;;e">
</treenode>
<treenode node="getIterator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\InputStream.php;f11;68;5;88;;;;vpos;;v;;a;;r;;d4,69;;b1,0;;m0;;e">
</treenode>
<treenode node="isClosed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\InputStream.php;f11;63;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isClosed()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tells whether the write buffer is closed or not.;;d4,64;;b1,0;;m0;;e">
</treenode>
<treenode node="onEmpty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\InputStream.php;f11;30;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    onEmpty(callable $onEmpty = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets a callback that is called when the write buffer becomes empty.;;d4,31;;b1,0;;m0;;eonEmpty;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\InputStream.php;f11;41;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    write($input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Appends an input to the write buffer.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource|string|int|float|bool|\Traversable|null &lt;b&gt;$input&lt;/b&gt;: The input to append as scalar, stream resource or \Traversable;;d4,42;;b1,0;;m0;;eresource|string|int|float|bool|\Traversable|null $input;;p">
</treenode>
</treenode>
<treenode node="InputTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputTest.php;f0;19;1;136;;;;vpos;;v;;aTestCase;;c;;r;;d0,20;;b0,0;;m0;;e">
<treenode node="testArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputTest.php;f11;65;5;77;;;;vpos;;v;;a;;r;;d4,66;;b1,0;;m0;;e">
</treenode>
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputTest.php;f11;21;5;25;;;;vpos;;v;;a;;r;;d4,22;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetInvalidArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputTest.php;f11;87;5;93;;;;vpos;;v;;a;;r;;d4,88;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetInvalidOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputTest.php;f11;57;5;63;;;;vpos;;v;;a;;r;;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="testOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputTest.php;f11;27;5;47;;;;vpos;;v;;a;;r;;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetGetInteractive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputTest.php;f11;121;5;127;;;;vpos;;v;;a;;r;;d4,122;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetGetStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputTest.php;f11;129;5;135;;;;vpos;;v;;a;;r;;d4,130;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetInvalidArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputTest.php;f11;79;5;85;;;;vpos;;v;;a;;r;;d4,80;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetInvalidOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputTest.php;f11;49;5;55;;;;vpos;;v;;a;;r;;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="testValidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputTest.php;f11;113;5;119;;;;vpos;;v;;a;;r;;d4,114;;b1,0;;m0;;e">
</treenode>
<treenode node="testValidateWithMissingArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputTest.php;f11;95;5;102;;;;vpos;;v;;a;;r;;d4,96;;b1,0;;m0;;e">
</treenode>
<treenode node="testValidateWithMissingRequiredArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\InputTest.php;f11;104;5;111;;;;vpos;;v;;a;;r;;d4,105;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="IntegrationCase;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCase.php;f6;21;1;163;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\IntegrationCase.php;f6;24;1;139;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class IntegrationCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCase.php;f11;74;5;92;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\IntegrationCase.php;f11;41;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        $fileName,&#10;        $title,&#10;        array $settings,&#10;        array $requirements,&#10;        array $config,&#10;        RuleSet $ruleset,&#10;        $expectedCode,&#10;        $inputCode&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$fileName&lt;/b&gt;&#10;    string &lt;b&gt;$title&lt;/b&gt;&#10;    array &lt;b&gt;$settings&lt;/b&gt;&#10;    array &lt;b&gt;$requirements&lt;/b&gt;&#10;    array &lt;b&gt;$config&lt;/b&gt;&#10;    RuleSet &lt;b&gt;$ruleset&lt;/b&gt;&#10;    string &lt;b&gt;$expectedCode&lt;/b&gt;&#10;    null|string &lt;b&gt;$inputCode&lt;/b&gt;;;d6,83;;b1,0;;m0;;estring $fileName;;pstring $title;;parray $settings;;parray $requirements;;parray $config;;pRuleSet $ruleset;;pstring $expectedCode;;pnull|string $inputCode;;p">
</treenode>
<treenode node="getConfig;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCase.php;f11;99;5;102;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\IntegrationCase.php;f11;75;5;78;;;;vpos;;v;;a;;r;;d4,100;;b1,0;;m0;;e">
</treenode>
<treenode node="getExpectedCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCase.php;f11;104;5;107;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\IntegrationCase.php;f11;80;5;83;;;;vpos;;v;;a;;r;;d4,105;;b1,0;;m0;;e">
</treenode>
<treenode node="getFileName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCase.php;f11;109;5;112;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\IntegrationCase.php;f11;85;5;88;;;;vpos;;v;;a;;r;;d4,110;;b1,0;;m0;;e">
</treenode>
<treenode node="getInputCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCase.php;f11;114;5;117;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\IntegrationCase.php;f11;90;5;93;;;;vpos;;v;;a;;r;;d4,115;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequirement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCase.php;f11;124;5;142;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\IntegrationCase.php;f11;95;5;98;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequirement($name)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d4,125;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="getRequirements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCase.php;f11;144;5;147;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\IntegrationCase.php;f11;100;5;103;;;;vpos;;v;;a;;r;;d4,145;;b1,0;;m0;;e">
</treenode>
<treenode node="getRuleset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCase.php;f11;149;5;152;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\IntegrationCase.php;f11;105;5;108;;;;vpos;;v;;a;;r;;d4,150;;b1,0;;m0;;e">
</treenode>
<treenode node="getSettings;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCase.php;f11;154;5;157;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\IntegrationCase.php;f11;110;5;113;;;;vpos;;v;;a;;r;;d4,155;;b1,0;;m0;;e">
</treenode>
<treenode node="getTitle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCase.php;f11;159;5;162;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\IntegrationCase.php;f11;115;5;118;;;;vpos;;v;;a;;r;;d4,160;;b1,0;;m0;;e">
</treenode>
<treenode node="hasInputCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCase.php;f11;94;5;97;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\IntegrationCase.php;f11;70;5;73;;;;vpos;;v;;a;;r;;d4,95;;b1,0;;m0;;e">
</treenode>
<treenode node="shouldCheckPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Test\IntegrationCase.php;f11;125;5;138;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    shouldCheckPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;deprecated&lt;/b&gt;: since v2.1, on ~2.1 line IntegrationTest check whether different priorities are required is done automatically, this method will be removed on v3.0;;d4,126;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="IntegrationCaseFactory;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\IntegrationCaseFactory.php;f6;19;1;21;;;;vpos;;v;;aAbstractIntegrationCaseFactory;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class IntegrationCaseFactory extends AbstractIntegrationCaseFactory&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
</treenode>
<treenode node="InternalIntegrationCaseFactory;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\InternalIntegrationCaseFactory.php;f6;21;1;34;;;;vpos;;v;;aAbstractIntegrationCaseFactory;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class InternalIntegrationCaseFactory extends AbstractIntegrationCaseFactory&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="determineSettings;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\Test\InternalIntegrationCaseFactory.php;f14;26;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    determineSettings(SplFileInfo $file, $config)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,27;;b2,0;;m0;;efile;;pconfig;;p">
</treenode>
</treenode>
<treenode node="InvalidArgumentException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\InvalidArgumentException.php;f0;18;1;20;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Exception\InvalidArgumentException.php;f0;18;1;20;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Exception\InvalidArgumentException.php;f0;16;1;18;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Exception\InvalidArgumentException.php;f0;16;1;18;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\InvalidArgumentException.php;f0;4;1;6;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Exception\InvalidArgumentException.php;f0;12;1;14;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Exception\InvalidArgumentException.php;f0;12;1;14;;;;vpos;;v;;aInvalidArgumentException;;cExceptionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class InvalidArgumentException extends \InvalidArgumentException implements ExceptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    InvalidArgumentException for the Process Component.&#10;&lt;b&gt;author&lt;/b&gt;: Romain Neutron &lt;imprec&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
</treenode>
<treenode node="InvalidConfigurationException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigurationException\InvalidConfigurationException.php;f0;24;1;39;;;;vpos;;v;;aInvalidArgumentException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class InvalidConfigurationException extends \InvalidArgumentException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exceptions of this type are thrown on misconfiguration of the Fixer.&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;internal&lt;/b&gt;&#10;&lt;b&gt;final&lt;/b&gt;: Only internal extending this class is supported;;d0,25;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigurationException\InvalidConfigurationException.php;f11;31;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($message, $code = null, \Exception $previous = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    null|int &lt;b&gt;$code&lt;/b&gt;&#10;    null|\Exception &lt;b&gt;$previous&lt;/b&gt;;;d4,32;;b1,0;;m0;;estring $message;;pnull|int $code;;pnull|\Exception $previous;;p">
</treenode>
</treenode>
<treenode node="InvalidFixerConfigurationException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigurationException\InvalidFixerConfigurationException.php;f0;24;1;53;;;;vpos;;v;;aInvalidConfigurationException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class InvalidFixerConfigurationException extends InvalidConfigurationException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exception thrown by Fixers on misconfiguration.&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;internal&lt;/b&gt;&#10;&lt;b&gt;final&lt;/b&gt;: Only internal extending this class is supported;;d0,25;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigurationException\InvalidFixerConfigurationException.php;f11;36;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($fixerName, $message, \Exception $previous = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$fixerName&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    null|\Exception &lt;b&gt;$previous&lt;/b&gt;;;d4,37;;b1,0;;m0;;estring $fixerName;;pstring $message;;pnull|\Exception $previous;;p">
</treenode>
<treenode node="getFixerName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigurationException\InvalidFixerConfigurationException.php;f11;49;5;52;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFixerName()&#10;;;d4,50;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="InvalidForEnvFixerConfigurationException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigurationException\InvalidForEnvFixerConfigurationException.php;f6;19;1;21;;;;vpos;;v;;aInvalidFixerConfigurationException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class InvalidForEnvFixerConfigurationException extends InvalidFixerConfigurationException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
</treenode>
<treenode node="InvalidOptionException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Exception\InvalidOptionException.php;f0;18;1;20;;;;vpos;;v;;aInvalidArgumentException;;cExceptionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class InvalidOptionException extends \InvalidArgumentException implements ExceptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Represents an incorrect option name typed in the console.&#10;&lt;b&gt;author&lt;/b&gt;: Jérôme Tamarelle &lt;jerome&#10;&lt;b&gt;tamarelle&lt;/b&gt;: .net&gt;;;d0,19;;b0,0;;m0;;e">
</treenode>
<treenode node="InvalidOptionsException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Exception\InvalidOptionsException.php;f0;20;1;22;;;;vpos;;v;;aInvalidArgumentException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class InvalidOptionsException extends InvalidArgumentException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Thrown when the value of an option does not match its validation rules.&#10;You should make sure a valid value is passed to the option.&#10;&lt;b&gt;author&lt;/b&gt;: Bernhard Schussek &lt;bschussek&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
</treenode>
<treenode node="InvalidOptionsForEnvException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerConfiguration\InvalidOptionsForEnvException.php;f6;21;1;23;;;;vpos;;v;;aInvalidOptionsException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class InvalidOptionsForEnvException extends InvalidOptionsException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
</treenode>
<treenode node="InvokableListenerService;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f0;234;1;243;;;;vpos;;v;;a;;r;;d0,235;;b0,0;;m0;;e">
<treenode node="__invoke;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f11;236;5;238;;;;vpos;;v;;a;;r;;d4,237;;b1,0;;m0;;e">
</treenode>
<treenode node="onEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f11;240;5;242;;;;vpos;;v;;a;;r;;d4,241;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="IsNullFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\IsNullFixer.php;f6;27;1;201;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class IsNullFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Vladimir Reznichenko &lt;kalessil&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\IsNullFixer.php;f14;72;5;185;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,73;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\IsNullFixer.php;f14;190;5;200;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,191;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\IsNullFixer.php;f11;32;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\IsNullFixer.php;f11;47;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\IsNullFixer.php;f11;56;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\IsNullFixer.php;f11;64;5;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,65;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Iterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\Iterator.php;f0;13;1;54;;;;vpos;;v;;aIterator;;c;;r;;d0,14;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\Iterator.php;f11;17;5;23;;;;vpos;;v;;a;;r;;d4,18;;b1,0;;m0;;evalues;;p">
</treenode>
<treenode node="attach;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\Iterator.php;f11;25;5;28;;;;vpos;;v;;a;;r;;d4,26;;b1,0;;m0;;efileinfo;;p">
</treenode>
<treenode node="current;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\Iterator.php;f11;45;5;48;;;;vpos;;v;;a;;r;;d4,46;;b1,0;;m0;;e">
</treenode>
<treenode node="key;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\Iterator.php;f11;50;5;53;;;;vpos;;v;;a;;r;;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="next;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\Iterator.php;f11;40;5;43;;;;vpos;;v;;a;;r;;d4,41;;b1,0;;m0;;e">
</treenode>
<treenode node="rewind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\Iterator.php;f11;30;5;33;;;;vpos;;v;;a;;r;;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="valid;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\Iterator.php;f11;35;5;38;;;;vpos;;v;;a;;r;;d4,36;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="IteratorTestCase;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\IteratorTestCase.php;f9;15;1;92;;;;vpos;;v;;aTestCase;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="assertIterator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\IteratorTestCase.php;f14;17;5;29;;;;vpos;;v;;a;;r;;d4,18;;b2,0;;m0;;eexpected;;piterator;;p">
</treenode>
<treenode node="assertIteratorInForeach;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\IteratorTestCase.php;f14;65;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    assertIteratorInForeach(array $expected, \Traversable $iterator)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Same as IteratorTestCase::assertIterator with foreach usage.;;d4,66;;b2,0;;m0;;eexpected;;piterator;;p">
</treenode>
<treenode node="assertOrderedIterator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\IteratorTestCase.php;f14;31;5;36;;;;vpos;;v;;a;;r;;d4,32;;b2,0;;m0;;eexpected;;piterator;;p">
</treenode>
<treenode node="assertOrderedIteratorForGroups;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\IteratorTestCase.php;f14;47;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    assertOrderedIteratorForGroups(array $expected, \Traversable $iterator)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Same as assertOrderedIterator, but checks the order of groups of&#10;array elements.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$expected&lt;/b&gt;: - an array of arrays. For any two subarrays $a and $b such that $a goes before $b in $expected, the method asserts that any element of $a goes before any element of $b in the sequence generated by $iterator;;d4,48;;b2,0;;m0;;eexpected;;piterator;;p">
</treenode>
<treenode node="assertOrderedIteratorInForeach;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\IteratorTestCase.php;f14;82;5;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    assertOrderedIteratorInForeach(array $expected, \Traversable $iterator)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Same as IteratorTestCase::assertOrderedIterator with foreach usage.;;d4,83;;b2,0;;m0;;eexpected;;piterator;;p">
</treenode>
</treenode>
<treenode node="JsonDescriptor;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\JsonDescriptor.php;f0;26;1;167;;;;vpos;;v;;aDescriptor;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class JsonDescriptor extends Descriptor&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    JSON descriptor.&#10;&lt;b&gt;author&lt;/b&gt;: Jean-François Simon &lt;contact&#10;&lt;b&gt;jfsimon&lt;/b&gt;: .fr&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="describeApplication;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\JsonDescriptor.php;f14;63;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeApplication(Application $application, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,64;;b2,0;;m0;;eapplication;;poptions;;p">
</treenode>
<treenode node="describeCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\JsonDescriptor.php;f14;55;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeCommand(Command $command, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b2,0;;m0;;ecommand;;poptions;;p">
</treenode>
<treenode node="describeInputArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\JsonDescriptor.php;f14;31;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeInputArgument(InputArgument $argument, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b2,0;;m0;;eargument;;poptions;;p">
</treenode>
<treenode node="describeInputDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\JsonDescriptor.php;f14;47;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeInputDefinition(InputDefinition $definition, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b2,0;;m0;;edefinition;;poptions;;p">
</treenode>
<treenode node="describeInputOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\JsonDescriptor.php;f14;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeInputOption(InputOption $option, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b2,0;;m0;;eoption;;poptions;;p">
</treenode>
<treenode node="getCommandData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\JsonDescriptor.php;f12;153;5;166;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommandData(Command $command)&#10;;;d4,154;;b3,0;;m0;;ecommand;;p">
</treenode>
<treenode node="getInputArgumentData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\JsonDescriptor.php;f12;105;5;114;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getInputArgumentData(InputArgument $argument)&#10;;;d4,106;;b3,0;;m0;;eargument;;p">
</treenode>
<treenode node="getInputDefinitionData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\JsonDescriptor.php;f12;135;5;148;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getInputDefinitionData(InputDefinition $definition)&#10;;;d4,136;;b3,0;;m0;;edefinition;;p">
</treenode>
<treenode node="getInputOptionData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\JsonDescriptor.php;f12;119;5;130;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getInputOptionData(InputOption $option)&#10;;;d4,120;;b3,0;;m0;;eoption;;p">
</treenode>
<treenode node="writeData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\JsonDescriptor.php;f12;95;5;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writeData(array $data, array $options)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Writes data as json.;;d4,96;;b3,0;;m0;;edata;;poptions;;p">
</treenode>
</treenode>
<treenode node="JsonDescriptorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\JsonDescriptorTest.php;f0;16;1;34;;;;vpos;;v;;aAbstractDescriptorTest;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="assertDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\JsonDescriptorTest.php;f14;28;5;33;;;;vpos;;v;;a;;r;;d4,29;;b2,0;;m0;;eexpectedDescription;;pdescribedObject;;poptions;;p">
</treenode>
<treenode node="getDescriptor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\JsonDescriptorTest.php;f14;18;5;21;;;;vpos;;v;;a;;r;;d4,19;;b2,0;;m0;;e">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\JsonDescriptorTest.php;f14;23;5;26;;;;vpos;;v;;a;;r;;d4,24;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="JsonException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php73\Resources\stubs\JsonException.php;f0;11;1;13;;;;vpos;;v;;aException;;c;;r;;d0,12;;b0,0;;m0;;e">
</treenode>
<treenode node="JsonReporter;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\JsonReporter.php;f6;21;1;70;;;;vpos;;v;;aReporterInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class JsonReporter implements ReporterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Boris Gorbylev &lt;ekho&#10;&lt;b&gt;ekho&lt;/b&gt;: .name&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="generate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\JsonReporter.php;f11;34;5;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    generate(ReportSummary $reportSummary)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;ereportSummary;;p">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\JsonReporter.php;f11;26;5;29;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormat()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,27;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="JunitReporter;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\JunitReporter.php;f6;22;1;147;;;;vpos;;v;;aReporterInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class JunitReporter implements ReporterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Boris Gorbylev &lt;ekho&#10;&lt;b&gt;ekho&lt;/b&gt;: .name&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="createFailedTestCase;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\JunitReporter.php;f12;114;5;146;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createFailedTestCase(\DOMDocument $dom, $file, array $fixResult, $shouldAddAppliedFixers)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \DOMElement&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \DOMDocument &lt;b&gt;$dom&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;&#10;    array &lt;b&gt;$fixResult&lt;/b&gt;&#10;    bool &lt;b&gt;$shouldAddAppliedFixers&lt;/b&gt;;;d4,115;;b3,0;;m0;;e\DOMDocument $dom;;pstring $file;;parray $fixResult;;pbool $shouldAddAppliedFixers;;p">
</treenode>
<treenode node="createFailedTestCases;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\JunitReporter.php;f12;86;5;104;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createFailedTestCases(\DOMDocument $dom, \DOMElement $testsuite, ReportSummary $reportSummary)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \DOMDocument &lt;b&gt;$dom&lt;/b&gt;&#10;    \DOMElement &lt;b&gt;$testsuite&lt;/b&gt;&#10;    ReportSummary &lt;b&gt;$reportSummary&lt;/b&gt;;;d4,87;;b3,0;;m0;;e\DOMDocument $dom;;p\DOMElement $testsuite;;pReportSummary $reportSummary;;p">
</treenode>
<treenode node="createSuccessTestCase;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\JunitReporter.php;f12;68;5;79;;;;vpos;;v;;a;;r;;d4,69;;b3,0;;m0;;edom;;ptestsuite;;p">
</treenode>
<treenode node="generate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\JunitReporter.php;f11;35;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    generate(ReportSummary $reportSummary)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b1,0;;m0;;ereportSummary;;p">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\JunitReporter.php;f11;27;5;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormat()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="LazyCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f0;1776;1;1782;;;;vpos;;v;;aCommand;;c;;r;;d0,1777;;b0,0;;m0;;e">
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\ApplicationTest.php;f11;1778;5;1781;;;;vpos;;v;;a;;r;;d4,1779;;b1,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="LegacyEventDispatcherProxy;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventDispatcherProxy.php;f6;24;1;146;;;;vpos;;v;;aEventDispatcherInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LegacyEventDispatcherProxy implements EventDispatcherInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A helper class to provide BC/FC with the legacy signature of EventDispatcherInterface::dispatch().&#10;This class should be deprecated in Symfony 5.1&#10;&lt;b&gt;author&lt;/b&gt;: Nicolas Grekas &lt;p&#10;&lt;b&gt;tchwork&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="__call;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventDispatcherProxy.php;f11;142;5;145;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __call($method, $arguments)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Proxies all method calls to the original event dispatcher.;;d4,143;;b1,0;;m0;;emethod;;parguments;;p">
</treenode>
<treenode node="addListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventDispatcherProxy.php;f11;86;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addListener($eventName, $listener, $priority = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,87;;b1,0;;m0;;eeventName;;plistener;;ppriority;;p">
</treenode>
<treenode node="addSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventDispatcherProxy.php;f11;94;5;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addSubscriber(EventSubscriberInterface $subscriber)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,95;;b1,0;;m0;;esubscriber;;p">
</treenode>
<treenode node="decorate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventDispatcherProxy.php;f18;28;84;28;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;edispatcher;;p">
</treenode>
<treenode node="dispatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventDispatcherProxy.php;f11;55;5;81;;;;vpos;;v;;aobject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    dispatch($event/*, string $eventName = null*/)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: }&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$eventName&lt;/b&gt;;;d4,56;;b1,0;;m0;;estring|null $eventName;;p">
</treenode>
<treenode node="getListenerPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventDispatcherProxy.php;f11;126;5;129;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getListenerPriority($eventName, $listener)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,127;;b1,0;;m0;;eeventName;;plistener;;p">
</treenode>
<treenode node="getListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventDispatcherProxy.php;f11;118;5;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getListeners($eventName = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,119;;b1,0;;m0;;eeventName;;p">
</treenode>
<treenode node="hasListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventDispatcherProxy.php;f11;134;5;137;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasListeners($eventName = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,135;;b1,0;;m0;;eeventName;;p">
</treenode>
<treenode node="removeListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventDispatcherProxy.php;f11;102;5;105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeListener($eventName, $listener)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,103;;b1,0;;m0;;eeventName;;plistener;;p">
</treenode>
<treenode node="removeSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventDispatcherProxy.php;f11;110;5;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeSubscriber(EventSubscriberInterface $subscriber)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,111;;b1,0;;m0;;esubscriber;;p">
</treenode>
</treenode>
<treenode node="LegacyEventDispatcherTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\LegacyEventDispatcherTest.php;f0;21;1;54;;;;vpos;;v;;aEventDispatcherTest;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LegacyEventDispatcherTest extends EventDispatcherTest&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: legacy;;d0,22;;b0,0;;m0;;e">
<treenode node="createEventDispatcher;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\LegacyEventDispatcherTest.php;f14;50;5;53;;;;vpos;;v;;a;;r;;d4,51;;b2,0;;m0;;e">
</treenode>
<treenode node="testLegacySignatureWithEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\LegacyEventDispatcherTest.php;f11;38;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testLegacySignatureWithEvent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: legacy&#10;&lt;b&gt;expectedDeprecation&lt;/b&gt;: The signature of the &quot;Symfony\Component\EventDispatcher\Tests\TestLegacyEventDispatcher::dispatch()&quot; method should be updated to &quot;dispatch($event, string $eventName = null)&quot;, not doing so is deprecated since Symfony 4.3.&#10;&lt;b&gt;expectedDeprecation&lt;/b&gt;: Calling the &quot;Symfony\Contracts\EventDispatcher\EventDispatcherInterface::dispatch()&quot; method with the event name as the first argument is deprecated since Symfony 4.3, pass it as the second argument and provide the event object as the first argument instead.;;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="testLegacySignatureWithNewEventObject;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\LegacyEventDispatcherTest.php;f11;43;5;48;;;;vpos;;v;;a;;r;;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="testLegacySignatureWithoutEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\LegacyEventDispatcherTest.php;f11;28;5;31;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testLegacySignatureWithoutEvent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: legacy&#10;&lt;b&gt;expectedDeprecation&lt;/b&gt;: The signature of the &quot;Symfony\Component\EventDispatcher\Tests\TestLegacyEventDispatcher::dispatch()&quot; method should be updated to &quot;dispatch($event, string $eventName = null)&quot;, not doing so is deprecated since Symfony 4.3.&#10;&lt;b&gt;expectedDeprecation&lt;/b&gt;: Calling the &quot;Symfony\Contracts\EventDispatcher\EventDispatcherInterface::dispatch()&quot; method with the event name as the first argument is deprecated since Symfony 4.3, pass it as the second argument and provide the event object as the first argument instead.;;d4,29;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="LegacyEventProxy;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventProxy.php;f6;19;1;61;;;;vpos;;v;;aEvent;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LegacyEventProxy extends Event&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;: to be removed in 5.0.;;d0,20;;b0,0;;m0;;e">
<treenode node="__call;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventProxy.php;f11;57;5;60;;;;vpos;;v;;a;;r;;d4,58;;b1,0;;m0;;ename;;pargs;;p">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventProxy.php;f11;26;5;29;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($event)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    object &lt;b&gt;$event&lt;/b&gt;;;d4,27;;b1,0;;m0;;eobject $event;;p">
</treenode>
<treenode node="getEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventProxy.php;f11;34;5;37;;;;vpos;;v;;aobject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEvent()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   $event;;d4,35;;b1,0;;m0;;e">
</treenode>
<treenode node="isPropagationStopped;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventProxy.php;f11;39;5;46;;;;vpos;;v;;a;;r;;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="stopPropagation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\LegacyEventProxy.php;f11;48;5;55;;;;vpos;;v;;a;;r;;d4,49;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Line;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Line.php;f6;12;1;43;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Line.php;f6;12;1;43;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Line.php;f0;12;1;53;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Line.php;f0;21;1;143;;;;vpos;;v;;a;;r;;d0,13;;b0,0;;m0;;e">
<treenode node="ADDED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Line.php;f9;14;15;14;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Line.php;f9;14;15;14;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Line.php;f9;14;15;14;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="REMOVED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Line.php;f9;15;17;15;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Line.php;f9;15;17;15;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Line.php;f9;15;17;15;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="UNCHANGED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Line.php;f9;16;19;16;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Line.php;f9;16;19;16;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Line.php;f9;16;19;16;;;;vpos;;v;;a;;r3;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Line.php;f11;28;5;32;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Line.php;f11;28;5;32;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Line.php;f11;32;5;36;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Line.php;f11;35;5;38;;;;vpos;;v;;a;;r;;d4,29;;b1,0;;m0;;etype;;pcontent;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Line.php;f11;45;5;48;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __toString()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the string representation of object.;;d4,46;;b1,0;;m0;;e">
</treenode>
<treenode node="addBlank;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Line.php;f11;133;5;142;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addBlank()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Append a blank docblock line to this line&apos;s contents.&#10;Note that this method technically brakes the internal state of the&#10;docblock, but is useful when we need to retain the indexes of lines&#10;during the execution of an algorithm.;;d4,134;;b1,0;;m0;;e">
</treenode>
<treenode node="containsATag;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Line.php;f11;79;5;82;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    containsATag()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Does the line contain a tag?&#10;If this is true, then it must be the first line of an annotation.;;d4,80;;b1,0;;m0;;e">
</treenode>
<treenode node="containsUsefulContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Line.php;f11;67;5;70;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    containsUsefulContent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Does this line contain useful content?&#10;If the line contains text or tags, then this is true.;;d4,68;;b1,0;;m0;;e">
</treenode>
<treenode node="getContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Line.php;f11;34;5;37;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Line.php;f11;34;5;37;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Line.php;f11;41;5;44;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Line.php;f11;55;5;58;;;;vpos;;v;;a;;r;;d4,35;;b1,0;;m0;;e">
</treenode>
<treenode node="getType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Line.php;f11;39;5;42;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Line.php;f11;39;5;42;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Line.php;f11;49;5;52;;;;vpos;;v;;a;;r;;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="isTheEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Line.php;f11;99;5;102;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isTheEnd()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Is the line the end of a docblock?;;d4,100;;b1,0;;m0;;e">
</treenode>
<treenode node="isTheStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Line.php;f11;89;5;92;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isTheStart()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Is the line the start of a docblock?;;d4,90;;b1,0;;m0;;e">
</treenode>
<treenode node="remove;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Line.php;f11;121;5;124;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    remove()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Remove this line by clearing its contents.&#10;Note that this method technically brakes the internal state of the&#10;docblock, but is useful when we need to retain the indexes of lines&#10;during the execution of an algorithm.;;d4,122;;b1,0;;m0;;e">
</treenode>
<treenode node="setContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Line.php;f11;109;5;112;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setContent($content)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the content of this line.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;;;d4,110;;b1,0;;m0;;estring $content;;p">
</treenode>
</treenode>
<treenode node="LineEndingFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\LineEndingFixer.php;f6;29;1;91;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LineEndingFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶2.2.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\LineEndingFixer.php;f14;57;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\LineEndingFixer.php;f11;42;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\LineEndingFixer.php;f11;34;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="LinebreakAfterOpeningTagFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\LinebreakAfterOpeningTagFixer.php;f6;24;1;72;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LinebreakAfterOpeningTagFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Ceeram &lt;ceeram&#10;&lt;b&gt;cakephp&lt;/b&gt;: .org&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\LinebreakAfterOpeningTagFixer.php;f14;48;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\LinebreakAfterOpeningTagFixer.php;f11;29;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\LinebreakAfterOpeningTagFixer.php;f11;40;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="Linter;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\Linter.php;f6;21;1;63;;;;vpos;;v;;aLinterInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Linter implements LinterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Handle PHP code linting process.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\Linter.php;f11;31;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($executable = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|string &lt;b&gt;$executable&lt;/b&gt;: PHP executable, null for autodetection;;d4,32;;b1,0;;m0;;enull|string $executable;;p">
</treenode>
<treenode node="isAsync;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\Linter.php;f11;43;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAsync()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="lintFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\Linter.php;f11;51;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lintFile($path)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;epath;;p">
</treenode>
<treenode node="lintSource;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\Linter.php;f11;59;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lintSource($source)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,60;;b1,0;;m0;;esource;;p">
</treenode>
</treenode>
<treenode node="LintingException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\LintingException.php;f0;17;1;19;;;;vpos;;v;;aRuntimeException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LintingException extends \RuntimeException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
</treenode>
<treenode node="ListCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\ListCommand.php;f0;25;1;89;;;;vpos;;v;;aCommand;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ListCommand extends Command&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ListCommand displays the list of all available commands for the application.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\ListCommand.php;f14;30;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b2,0;;m0;;e">
</treenode>
<treenode node="createDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\ListCommand.php;f12;81;5;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,82;;b3,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\ListCommand.php;f14;68;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    execute(InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,69;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="getNativeDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\ListCommand.php;f11;60;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNativeDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ListCommandTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\ListCommandTest.php;f0;17;1;112;;;;vpos;;v;;aTestCase;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="testExecuteListsCommands;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\ListCommandTest.php;f11;19;5;26;;;;vpos;;v;;a;;r;;d4,20;;b1,0;;m0;;e">
</treenode>
<treenode node="testExecuteListsCommandsOrder;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\ListCommandTest.php;f11;65;5;95;;;;vpos;;v;;a;;r;;d4,66;;b1,0;;m0;;e">
</treenode>
<treenode node="testExecuteListsCommandsOrderRaw;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\ListCommandTest.php;f11;97;5;111;;;;vpos;;v;;a;;r;;d4,98;;b1,0;;m0;;e">
</treenode>
<treenode node="testExecuteListsCommandsWithNamespaceArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\ListCommandTest.php;f11;50;5;63;;;;vpos;;v;;a;;r;;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="testExecuteListsCommandsWithRawOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\ListCommandTest.php;f11;36;5;48;;;;vpos;;v;;a;;r;;d4,37;;b1,0;;m0;;e">
</treenode>
<treenode node="testExecuteListsCommandsWithXmlOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\ListCommandTest.php;f11;28;5;34;;;;vpos;;v;;a;;r;;d4,29;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ListSyntaxFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ListNotation\ListSyntaxFixer.php;f6;29;1;149;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ListSyntaxFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,30;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ListNotation\ListSyntaxFixer.php;f14;88;5;99;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,89;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ListNotation\ListSyntaxFixer.php;f11;40;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Use &apos;syntax&apos; =&gt; &apos;long&apos;|&apos;short&apos;.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidFixerConfigurationException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|array&lt;string,: string&gt; $configuration;;d4,41;;b1,0;;m0;;enull|array&lt;string,;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ListNotation\ListSyntaxFixer.php;f14;104;5;112;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,105;;b2,0;;m0;;e">
</treenode>
<treenode node="fixToLongSyntax;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ListNotation\ListSyntaxFixer.php;f12;118;5;133;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixToLongSyntax(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,119;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixToShortSyntax;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ListNotation\ListSyntaxFixer.php;f12;139;5;148;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixToShortSyntax(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,140;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ListNotation\ListSyntaxFixer.php;f11;50;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ListNotation\ListSyntaxFixer.php;f11;71;5;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,72;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ListNotation\ListSyntaxFixer.php;f11;80;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,81;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="LockableTrait;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\LockableTrait.php;f0;24;1;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    trait LockableTrait&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Basic lock feature for commands.&#10;&lt;b&gt;author&lt;/b&gt;: Geoffrey Brier &lt;geoffrey.brier&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="lock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\LockableTrait.php;f12;34;5;58;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lock($name = null, $blocking = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Locks a command.;;d4,35;;b3,0;;m0;;ename;;pblocking;;p">
</treenode>
<treenode node="release;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Command\LockableTrait.php;f12;63;5;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    release()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Releases the command lock if there is one.;;d4,64;;b3,0;;m0;;e">
</treenode>
</treenode>
<treenode node="LockableTraitTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\LockableTraitTest.php;f0;19;1;66;;;;vpos;;v;;aTestCase;;c;;r;;d0,20;;b0,0;;m0;;e">
<treenode node="setUpBeforeClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\LockableTraitTest.php;f18;23;5;28;;;;vpos;;v;;a void;;r;;d4,24;;b1,5;;m0;;e">
</treenode>
<treenode node="testLockIsReleased;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\LockableTraitTest.php;f11;30;5;37;;;;vpos;;v;;a;;r;;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="testLockReturnsFalseIfAlreadyLockedByAnotherCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\LockableTraitTest.php;f11;39;5;57;;;;vpos;;v;;a;;r;;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="testMultipleLockCallsThrowLogicException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\LockableTraitTest.php;f11;59;5;65;;;;vpos;;v;;a;;r;;d4,60;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="LogLevel;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LogLevel.php;f0;7;1;17;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LogLevel&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Describes log levels.;;d0,8;;b0,0;;m0;;e">
<treenode node="ALERT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LogLevel.php;f9;10;15;10;;;;vpos;;v;;a;;r&apos;alert&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="CRITICAL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LogLevel.php;f9;11;18;11;;;;vpos;;v;;a;;r&apos;critical&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="DEBUG;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LogLevel.php;f9;16;15;16;;;;vpos;;v;;a;;r&apos;debug&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="EMERGENCY;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LogLevel.php;f9;9;19;9;;;;vpos;;v;;a;;r&apos;emergency&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="ERROR;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LogLevel.php;f9;12;15;12;;;;vpos;;v;;a;;r&apos;error&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="INFO;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LogLevel.php;f9;15;14;15;;;;vpos;;v;;a;;r&apos;info&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="NOTICE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LogLevel.php;f9;14;16;14;;;;vpos;;v;;a;;r&apos;notice&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="WARNING;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LogLevel.php;f9;13;17;13;;;;vpos;;v;;a;;r&apos;warning&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="LoggerAwareTrait;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerAwareTrait.php;f0;7;1;25;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    trait LoggerAwareTrait&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Basic Implementation of LoggerAwareInterface.;;d0,8;;b0,0;;m0;;e">
<treenode node="setLogger;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerAwareTrait.php;f11;21;5;24;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLogger(LoggerInterface $logger)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets a logger.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    LoggerInterface &lt;b&gt;$logger&lt;/b&gt;;;d4,22;;b1,0;;m0;;eLoggerInterface $logger;;p">
</treenode>
</treenode>
<treenode node="LoggerInterfaceTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\LoggerInterfaceTest.php;f9;13;1;136;;;;vpos;;v;;aPHPUnit_Framework_TestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LoggerInterfaceTest extends \PHPUnit_Framework_TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Provides a base test class for ensuring compliance with the LoggerInterface.&#10;Implementors can extend the class and implement abstract methods to run this&#10;as part of their test suite.;;d0,14;;b0,0;;m0;;e">
<treenode node="getLogger;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\LoggerInterfaceTest.php;f20;18;40;18;;;;vpos;;v;;aLoggerInterface;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getLogs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\LoggerInterfaceTest.php;f20;29;38;29;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This must return the log messages in order.&#10;The simple formatting of the messages is: &quot;&lt;LOG LEVEL&gt; &lt;MESSAGE&gt;&quot;.&#10;Example -&gt;error(&apos;Foo&apos;) would yield &quot;error Foo&quot;.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="provideLevelsAndMessages;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\LoggerInterfaceTest.php;f11;52;5;64;;;;vpos;;v;;a;;r;;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="testContextCanContainAnything;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\LoggerInterfaceTest.php;f11;101;5;122;;;;vpos;;v;;a;;r;;d4,102;;b1,0;;m0;;e">
</treenode>
<treenode node="testContextExceptionKeyCanBeExceptionOrOtherValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\LoggerInterfaceTest.php;f11;124;5;135;;;;vpos;;v;;a;;r;;d4,125;;b1,0;;m0;;e">
</treenode>
<treenode node="testContextReplacement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\LoggerInterfaceTest.php;f11;75;5;82;;;;vpos;;v;;a;;r;;d4,76;;b1,0;;m0;;e">
</treenode>
<treenode node="testImplements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\LoggerInterfaceTest.php;f11;31;5;34;;;;vpos;;v;;a;;r;;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="testLogsAtAllLevels;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\LoggerInterfaceTest.php;f11;39;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testLogsAtAllLevels($level, $message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideLevelsAndMessages;;d4,40;;b1,0;;m0;;elevel;;pmessage;;p">
</treenode>
<treenode node="testObjectCastToString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\LoggerInterfaceTest.php;f11;84;5;99;;;;vpos;;v;;a;;r;;d4,85;;b1,0;;m0;;e">
</treenode>
<treenode node="testThrowsOnInvalidLevel;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\LoggerInterfaceTest.php;f11;69;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testThrowsOnInvalidLevel()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;expectedException&lt;/b&gt;: \Psr\Log\InvalidArgumentException;;d4,70;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="LoggerTrait;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerTrait.php;f0;12;1;139;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    trait LoggerTrait&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This is a simple Logger trait that classes unable to extend AbstractLogger&#10;(because they extend another class, etc) can include.&#10;It simply delegates all log-level-specific methods to the `log` method to&#10;reduce boilerplate code that a simple Logger that does the same thing with&#10;messages regardless of the error level has to implement.;;d0,13;;b0,0;;m0;;e">
<treenode node="alert;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerTrait.php;f11;38;5;41;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    alert($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Action must be taken immediately.&#10;Example: Entire website down, database unavailable, etc. This should&#10;trigger the SMS alerts and wake you up.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,39;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="critical;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerTrait.php;f11;53;5;56;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    critical($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Critical conditions.&#10;Example: Application component unavailable, unexpected exception.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,54;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="debug;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerTrait.php;f11;124;5;127;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    debug($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Detailed debug information.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,125;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="emergency;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerTrait.php;f11;22;5;25;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    emergency($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    System is unusable.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,23;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="error;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerTrait.php;f11;67;5;70;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    error($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runtime errors that do not require immediate action but should typically&#10;be logged and monitored.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,68;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="info;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerTrait.php;f11;111;5;114;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    info($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Interesting events.&#10;Example: User logs in, SQL logs.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,112;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="log;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerTrait.php;f20;138;76;138;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Logs with an arbitrary level.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$level&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d-1,-1;;b1,0;;m0;;emixed $level;;pstring $message;;parray $context;;p">
</treenode>
<treenode node="notice;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerTrait.php;f11;96;5;99;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    notice($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Normal but significant events.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,97;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
<treenode node="warning;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\LoggerTrait.php;f11;83;5;86;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    warning($message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exceptional occurrences that are not errors.&#10;Example: Use of deprecated APIs, poor use of an API, undesirable things&#10;that are not necessarily wrong.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,84;;b1,0;;m0;;estring $message;;parray $context;;p">
</treenode>
</treenode>
<treenode node="LogicException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\LogicException.php;f0;18;1;20;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Exception\LogicException.php;f0;16;1;18;;;;vpos;;v;;aLogicException;;cExceptionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LogicException extends \LogicException implements ExceptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    LogicException for the Process Component.&#10;&lt;b&gt;author&lt;/b&gt;: Romain Neutron &lt;imprec&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
</treenode>
<treenode node="LogicalOperatorsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\LogicalOperatorsFixer.php;f6;23;1;75;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LogicalOperatorsFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Haralan Dobrev &lt;hkdobrev&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\LogicalOperatorsFixer.php;f14;65;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\LogicalOperatorsFixer.php;f11;28;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\LogicalOperatorsFixer.php;f11;49;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\LogicalOperatorsFixer.php;f11;57;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="LowercaseCastFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\LowercaseCastFixer.php;f6;23;1;75;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LowercaseCastFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\LowercaseCastFixer.php;f14;65;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\LowercaseCastFixer.php;f11;28;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\LowercaseCastFixer.php;f11;57;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="LowercaseConstantsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\LowercaseConstantsFixer.php;f6;26;1;101;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LowercaseConstantsFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶2.5.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\LowercaseConstantsFixer.php;f14;50;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\LowercaseConstantsFixer.php;f11;31;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\LowercaseConstantsFixer.php;f11;42;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,43;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isNeighbourAccepted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\LowercaseConstantsFixer.php;f12;72;5;100;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isNeighbourAccepted(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,73;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="LowercaseKeywordsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\LowercaseKeywordsFixer.php;f6;25;1;74;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LowercaseKeywordsFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶2.5.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\LowercaseKeywordsFixer.php;f14;66;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\LowercaseKeywordsFixer.php;f11;32;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\LowercaseKeywordsFixer.php;f11;58;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="LowercaseStaticReferenceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\LowercaseStaticReferenceFixer.php;f6;25;1;104;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class LowercaseStaticReferenceFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Kuba Werlos &lt;werlos&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\LowercaseStaticReferenceFixer.php;f14;75;5;103;;;;vpos;;v;;a;;r;;d4,76;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\LowercaseStaticReferenceFixer.php;f11;30;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\LowercaseStaticReferenceFixer.php;f11;70;5;73;;;;vpos;;v;;a;;r;;d4,71;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="MagicConstantCasingFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicConstantCasingFixer.php;f6;24;1;97;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MagicConstantCasingFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: ntzm;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicConstantCasingFixer.php;f14;48;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicConstantCasingFixer.php;f11;29;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="getMagicConstantTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicConstantCasingFixer.php;f12;87;5;96;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMagicConstantTokens()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;int&gt;;;d4,88;;b3,0;;m0;;e">
</treenode>
<treenode node="getMagicConstants;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicConstantCasingFixer.php;f12;63;5;82;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMagicConstants()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;int, string&gt;;;d4,64;;b3,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicConstantCasingFixer.php;f11;40;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="MagicMethodCasingFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicMethodCasingFixer.php;f6;23;1;231;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MagicMethodCasingFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicMethodCasingFixer.php;f14;83;5;152;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,84;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicMethodCasingFixer.php;f11;48;5;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="getMagicMethodNameInCorrectCasing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicMethodCasingFixer.php;f12;217;5;220;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMagicMethodNameInCorrectCasing($name)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: name of a magic method;;d4,218;;b3,0;;m0;;estring $name;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicMethodCasingFixer.php;f11;75;5;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,76;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isFunctionSignature;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicMethodCasingFixer.php;f12;160;5;168;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isFunctionSignature(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,161;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isMagicMethodName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicMethodCasingFixer.php;f12;207;5;210;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isMagicMethodName($name)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d4,208;;b3,0;;m0;;estring $name;;p">
</treenode>
<treenode node="isMethodCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicMethodCasingFixer.php;f12;176;5;184;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isMethodCall(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,177;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isStaticMethodCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicMethodCasingFixer.php;f12;192;5;200;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isStaticMethodCall(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,193;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="setTokenToCorrectCasing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\MagicMethodCasingFixer.php;f12;227;5;230;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTokenToCorrectCasing(Tokens $tokens, $index, $nameInCorrectCasing)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    string &lt;b&gt;$nameInCorrectCasing&lt;/b&gt;;;d4,228;;b3,0;;m0;;eTokens $tokens;;pint $index;;pstring $nameInCorrectCasing;;p">
</treenode>
</treenode>
<treenode node="MarkdownDescriptor;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\MarkdownDescriptor.php;f0;28;1;181;;;;vpos;;v;;aDescriptor;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MarkdownDescriptor extends Descriptor&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Markdown descriptor.&#10;&lt;b&gt;author&lt;/b&gt;: Jean-François Simon &lt;contact&#10;&lt;b&gt;jfsimon&lt;/b&gt;: .fr&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="describe;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\MarkdownDescriptor.php;f11;33;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describe(OutputInterface $output, $object, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,34;;b1,0;;m0;;eoutput;;pobject;;poptions;;p">
</treenode>
<treenode node="describeApplication;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\MarkdownDescriptor.php;f14;143;5;167;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeApplication(Application $application, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,144;;b2,0;;m0;;eapplication;;poptions;;p">
</treenode>
<treenode node="describeCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\MarkdownDescriptor.php;f14;114;5;138;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeCommand(Command $command, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,115;;b2,0;;m0;;ecommand;;poptions;;p">
</treenode>
<treenode node="describeInputArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\MarkdownDescriptor.php;f14;54;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeInputArgument(InputArgument $argument, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b2,0;;m0;;eargument;;poptions;;p">
</treenode>
<treenode node="describeInputDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\MarkdownDescriptor.php;f14;88;5;109;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeInputDefinition(InputDefinition $definition, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,89;;b2,0;;m0;;edefinition;;poptions;;p">
</treenode>
<treenode node="describeInputOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\MarkdownDescriptor.php;f14;68;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeInputOption(InputOption $option, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,69;;b2,0;;m0;;eoption;;poptions;;p">
</treenode>
<treenode node="getApplicationTitle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\MarkdownDescriptor.php;f12;169;5;180;;;;vpos;;v;;a;;r;;d4,170;;b3,0;;m0;;eapplication;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\MarkdownDescriptor.php;f14;46;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    write($content, $decorated = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b2,0;;m0;;econtent;;pdecorated;;p">
</treenode>
</treenode>
<treenode node="MarkdownDescriptorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\MarkdownDescriptorTest.php;f0;17;1;44;;;;vpos;;v;;aAbstractDescriptorTest;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="getDescribeApplicationTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\MarkdownDescriptorTest.php;f11;27;5;33;;;;vpos;;v;;a;;r;;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescribeCommandTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\MarkdownDescriptorTest.php;f11;19;5;25;;;;vpos;;v;;a;;r;;d4,20;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescriptor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\MarkdownDescriptorTest.php;f14;35;5;38;;;;vpos;;v;;a;;r;;d4,36;;b2,0;;m0;;e">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\MarkdownDescriptorTest.php;f14;40;5;43;;;;vpos;;v;;a;;r;;d4,41;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="MbStrFunctionsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\MbStrFunctionsFixer.php;f6;24;1;111;;;;vpos;;v;;aAbstractFunctionReferenceFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MbStrFunctionsFixer extends AbstractFunctionReferenceFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\MbStrFunctionsFixer.php;f14;85;5;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,86;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\MbStrFunctionsFixer.php;f11;47;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\MbStrFunctionsFixer.php;f11;77;5;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,78;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="Mbstring;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f6;67;1;828;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Mbstring&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Partial mbstring implementation in PHP, iconv based, UTF-8 centric.&#10;Implemented:&#10;- mb_chr                  - Returns a specific character from its Unicode code point&#10;- mb_convert_encoding     - Convert character encoding&#10;- mb_convert_variables    - Convert character code in variable(s)&#10;- mb_decode_mimeheader    - Decode string in MIME header field&#10;- mb_encode_mimeheader    - Encode string for MIME header XXX NATIVE IMPLEMENTATION IS REALLY BUGGED&#10;- mb_decode_numericentity - Decode HTML numeric string reference to character&#10;- mb_encode_numericentity - Encode character to HTML numeric string reference&#10;- mb_convert_case         - Perform case folding on a string&#10;- mb_detect_encoding      - Detect character encoding&#10;- mb_get_info             - Get internal settings of mbstring&#10;- mb_http_input           - Detect HTTP input character encoding&#10;- mb_http_output          - Set/Get HTTP output character encoding&#10;- mb_internal_encoding    - Set/Get internal character encoding&#10;- mb_list_encodings       - Returns an array of all supported encodings&#10;- mb_ord                  - Returns the Unicode code point of a character&#10;- mb_output_handler       - Callback function converts character encoding in output buffer&#10;- mb_scrub                - Replaces ill-formed byte sequences with substitute characters&#10;- mb_strlen               - Get string length&#10;- mb_strpos               - Find position of first occurrence of string in a string&#10;- mb_strrpos              - Find position of last occurrence of a string in a string&#10;- mb_str_split            - Convert a string to an array&#10;- mb_strtolower           - Make a string lowercase&#10;- mb_strtoupper           - Make a string uppercase&#10;- mb_substitute_character - Set/Get substitution character&#10;- mb_substr               - Get part of string&#10;- mb_stripos              - Finds position of first occurrence of a string within another, case insensitive&#10;- mb_stristr              - Finds first occurrence of a string within another, case insensitive&#10;- mb_strrchr              - Finds the last occurrence of a character in a string within another&#10;- mb_strrichr             - Finds the last occurrence of a character in a string within another, case insensitive&#10;- mb_strripos             - Finds position of last occurrence of a string within another, case insensitive&#10;- mb_strstr               - Finds first occurrence of a string within another&#10;- mb_strwidth             - Return width of string&#10;- mb_substr_count         - Count the number of substring occurrences&#10;Not implemented:&#10;- mb_convert_kana         - Convert &quot;kana&quot; one from another (&quot;zen-kaku&quot;, &quot;han-kaku&quot; and more)&#10;- mb_ereg_*               - Regular expression with multibyte support&#10;- mb_parse_str            - Parse GET/POST/COOKIE data and set global variable&#10;- mb_preferred_mime_name  - Get MIME charset string&#10;- mb_regex_encoding       - Returns current encoding for multibyte regex as string&#10;- mb_regex_set_options    - Set/Get the default options for mbregex functions&#10;- mb_send_mail            - Send encoded mail&#10;- mb_split                - Split multibyte string using regular expression&#10;- mb_strcut               - Get part of string&#10;- mb_strimwidth           - Get truncated string with specified width&#10;&lt;b&gt;author&lt;/b&gt;: Nicolas Grekas &lt;p&#10;&lt;b&gt;tchwork&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,68;;b0,0;;m0;;e">
<treenode node="MB_CASE_FOLD;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f9;69;22;69;;;;vpos;;v;;a;;rPHP_INT_MAX;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="getData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;802;5;809;;;;vpos;;v;;a;;r;;d4,803;;b3,5;;m0;;efile;;p">
</treenode>
<treenode node="getEncoding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;811;5;827;;;;vpos;;v;;a;;r;;d4,812;;b3,5;;m0;;eencoding;;p">
</treenode>
<treenode node="getSubpart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;760;5;770;;;;vpos;;v;;a;;r;;d4,761;;b3,5;;m0;;epos;;ppart;;phaystack;;pencoding;;p">
</treenode>
<treenode node="html_encoding_callback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;772;5;795;;;;vpos;;v;;a;;r;;d4,773;;b3,5;;m0;;em;;p">
</treenode>
<treenode node="mb_check_encoding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;399;5;409;;;;vpos;;v;;a;;r;;d4,400;;b1,5;;m0;;evar;;pencoding;;p">
</treenode>
<treenode node="mb_chr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;717;5;734;;;;vpos;;v;;a;;r;;d4,718;;b1,5;;m0;;ecode;;pencoding;;p">
</treenode>
<treenode node="mb_convert_case;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;271;5;347;;;;vpos;;v;;a;;r;;d4,272;;b1,5;;m0;;es;;pmode;;pencoding;;p">
</treenode>
<treenode node="mb_convert_encoding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;79;5;115;;;;vpos;;v;;a;;r;;d4,80;;b1,5;;m0;;es;;ptoEncoding;;pfromEncoding;;p">
</treenode>
<treenode node="mb_convert_variables;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;117;5;129;;;;vpos;;v;;a;;r;;d4,118;;b1,5;;m0;;etoEncoding;;pfromEncoding;;pa;;pb;;pc;;pd;;pe;;pf;;p">
</treenode>
<treenode node="mb_decode_mimeheader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;131;5;134;;;;vpos;;v;;a;;r;;d4,132;;b1,5;;m0;;es;;p">
</treenode>
<treenode node="mb_decode_numericentity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;141;5;199;;;;vpos;;v;;a;;r;;d4,142;;b1,5;;m0;;es;;pconvmap;;pencoding;;p">
</treenode>
<treenode node="mb_detect_encoding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;411;5;445;;;;vpos;;v;;a;;r;;d4,412;;b1,5;;m0;;estr;;pencodingList;;pstrict;;p">
</treenode>
<treenode node="mb_detect_order;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;447;5;474;;;;vpos;;v;;a;;r;;d4,448;;b1,5;;m0;;eencodingList;;p">
</treenode>
<treenode node="mb_encode_mimeheader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;136;5;139;;;;vpos;;v;;a;;r;;d4,137;;b1,5;;m0;;es;;pcharset;;ptransferEncoding;;plinefeed;;pindent;;p">
</treenode>
<treenode node="mb_encode_numericentity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;201;5;269;;;;vpos;;v;;a;;r;;d4,202;;b1,5;;m0;;es;;pconvmap;;pencoding;;pis_hex;;p">
</treenode>
<treenode node="mb_encoding_aliases;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;388;5;397;;;;vpos;;v;;a;;r;;d4,389;;b1,5;;m0;;eencoding;;p">
</treenode>
<treenode node="mb_get_info;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;655;5;682;;;;vpos;;v;;a;;r;;d4,656;;b1,5;;m0;;etype;;p">
</treenode>
<treenode node="mb_http_input;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;684;5;687;;;;vpos;;v;;a;;r;;d4,685;;b1,5;;m0;;etype;;p">
</treenode>
<treenode node="mb_http_output;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;689;5;692;;;;vpos;;v;;a;;r;;d4,690;;b1,5;;m0;;eencoding;;p">
</treenode>
<treenode node="mb_internal_encoding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;349;5;364;;;;vpos;;v;;a;;r;;d4,350;;b1,5;;m0;;eencoding;;p">
</treenode>
<treenode node="mb_language;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;366;5;381;;;;vpos;;v;;a;;r;;d4,367;;b1,5;;m0;;elang;;p">
</treenode>
<treenode node="mb_list_encodings;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;383;5;386;;;;vpos;;v;;a;;r;;d4,384;;b1,5;;m0;;e">
</treenode>
<treenode node="mb_ord;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;736;5;758;;;;vpos;;v;;a;;r;;d4,737;;b1,5;;m0;;es;;pencoding;;p">
</treenode>
<treenode node="mb_output_handler;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;712;5;715;;;;vpos;;v;;a;;r;;d4,713;;b1,5;;m0;;econtents;;pstatus;;p">
</treenode>
<treenode node="mb_str_split;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;526;5;552;;;;vpos;;v;;a;;r;;d4,527;;b1,5;;m0;;estring;;psplit_length;;pencoding;;p">
</treenode>
<treenode node="mb_stripos;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;599;5;605;;;;vpos;;v;;a;;r;;d4,600;;b1,5;;m0;;ehaystack;;pneedle;;poffset;;pencoding;;p">
</treenode>
<treenode node="mb_stristr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;607;5;612;;;;vpos;;v;;a;;r;;d4,608;;b1,5;;m0;;ehaystack;;pneedle;;ppart;;pencoding;;p">
</treenode>
<treenode node="mb_strlen;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;476;5;484;;;;vpos;;v;;a;;r;;d4,477;;b1,5;;m0;;es;;pencoding;;p">
</treenode>
<treenode node="mb_strpos;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;486;5;501;;;;vpos;;v;;a;;r;;d4,487;;b1,5;;m0;;ehaystack;;pneedle;;poffset;;pencoding;;p">
</treenode>
<treenode node="mb_strrchr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;614;5;624;;;;vpos;;v;;a;;r;;d4,615;;b1,5;;m0;;ehaystack;;pneedle;;ppart;;pencoding;;p">
</treenode>
<treenode node="mb_strrichr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;626;5;632;;;;vpos;;v;;a;;r;;d4,627;;b1,5;;m0;;ehaystack;;pneedle;;ppart;;pencoding;;p">
</treenode>
<treenode node="mb_strripos;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;634;5;640;;;;vpos;;v;;a;;r;;d4,635;;b1,5;;m0;;ehaystack;;pneedle;;poffset;;pencoding;;p">
</treenode>
<treenode node="mb_strrpos;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;503;5;524;;;;vpos;;v;;a;;r;;d4,504;;b1,5;;m0;;ehaystack;;pneedle;;poffset;;pencoding;;p">
</treenode>
<treenode node="mb_strstr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;642;5;653;;;;vpos;;v;;a;;r;;d4,643;;b1,5;;m0;;ehaystack;;pneedle;;ppart;;pencoding;;p">
</treenode>
<treenode node="mb_strtolower;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;554;5;557;;;;vpos;;v;;a;;r;;d4,555;;b1,5;;m0;;es;;pencoding;;p">
</treenode>
<treenode node="mb_strtoupper;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;559;5;562;;;;vpos;;v;;a;;r;;d4,560;;b1,5;;m0;;es;;pencoding;;p">
</treenode>
<treenode node="mb_strwidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;694;5;705;;;;vpos;;v;;a;;r;;d4,695;;b1,5;;m0;;es;;pencoding;;p">
</treenode>
<treenode node="mb_substitute_character;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;564;5;571;;;;vpos;;v;;a;;r;;d4,565;;b1,5;;m0;;ec;;p">
</treenode>
<treenode node="mb_substr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;573;5;597;;;;vpos;;v;;a;;r;;d4,574;;b1,5;;m0;;es;;pstart;;plength;;pencoding;;p">
</treenode>
<treenode node="mb_substr_count;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f18;707;5;710;;;;vpos;;v;;a;;r;;d4,708;;b1,5;;m0;;ehaystack;;pneedle;;pencoding;;p">
</treenode>
<treenode node="title_case;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\Mbstring.php;f19;797;5;800;;;;vpos;;v;;a;;r;;d4,798;;b3,5;;m0;;es;;p">
</treenode>
</treenode>
<treenode node="MemoryEfficientImplementation;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\LCS\MemoryEfficientLongestCommonSubsequenceImplementation.php;f0;15;1;94;;;;vpos;;v;;aLongestCommonSubsequence;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MemoryEfficientImplementation implements LongestCommonSubsequence&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Memory-efficient implementation of longest common subsequence calculation.;;d0,16;;b0,0;;m0;;e">
<treenode node="calculate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\LCS\MemoryEfficientLongestCommonSubsequenceImplementation.php;f11;25;5;66;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calculate(array $from, array $to)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculates the longest common subsequence of two arrays.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$from&lt;/b&gt;&#10;    array &lt;b&gt;$to&lt;/b&gt;;;d4,26;;b1,0;;m0;;earray $from;;parray $to;;p">
</treenode>
<treenode node="length;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\LCS\MemoryEfficientLongestCommonSubsequenceImplementation.php;f12;74;5;93;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    length(array $from, array $to)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$from&lt;/b&gt;&#10;    array &lt;b&gt;$to&lt;/b&gt;;;d4,75;;b3,0;;m0;;earray $from;;parray $to;;p">
</treenode>
</treenode>
<treenode node="MemoryEfficientLongestCommonSubsequenceCalculator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\MemoryEfficientLongestCommonSubsequenceCalculator.php;f6;12;1;80;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\MemoryEfficientLongestCommonSubsequenceCalculator.php;f6;12;1;80;;;;vpos;;v;;aLongestCommonSubsequenceCalculator;;c;;r;;d0,13;;b0,0;;m0;;e">
<treenode node="calculate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\MemoryEfficientLongestCommonSubsequenceCalculator.php;f11;17;5;58;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\MemoryEfficientLongestCommonSubsequenceCalculator.php;f11;17;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calculate(array $from, array $to)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,18;;b1,0;;m0;;efrom;;pto;;p">
</treenode>
<treenode node="length;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\MemoryEfficientLongestCommonSubsequenceCalculator.php;f12;60;5;79;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\MemoryEfficientLongestCommonSubsequenceCalculator.php;f12;60;5;79;;;;vpos;;v;;a;;r;;d4,61;;b3,0;;m0;;efrom;;pto;;p">
</treenode>
</treenode>
<treenode node="MethodArgumentSpaceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f6;35;1;511;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MethodArgumentSpaceFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶4.4, ¶4.6.&#10;&lt;b&gt;author&lt;/b&gt;: Kuanhung Chen &lt;ericj.tw&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,36;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f14;140;5;167;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,141;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f11;119;5;126;;;;vpos;;v;;a;;r;;d4,120;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f14;172;5;206;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,173;;b2,0;;m0;;e">
</treenode>
<treenode node="ensureFunctionFullyMultiline;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f12;331;5;398;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ensureFunctionFullyMultiline(Tokens $tokens, $startFunctionIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startFunctionIndex&lt;/b&gt;;;d4,332;;b3,0;;m0;;eTokens $tokens;;pint $startFunctionIndex;;p">
</treenode>
<treenode node="ensureSingleLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f12;310;5;325;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ensureSingleLine(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Whether newlines were removed from the whitespace token;;d4,311;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="findWhitespaceIndexAfterParenthesis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f12;283;5;302;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findWhitespaceIndexAfterParenthesis(Tokens $tokens, $startParenthesisIndex, $endParenthesisIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startParenthesisIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endParenthesisIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,284;;b3,0;;m0;;eTokens $tokens;;pint $startParenthesisIndex;;pint $endParenthesisIndex;;p">
</treenode>
<treenode node="fixFunction;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f12;216;5;274;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunction(Tokens $tokens, $startFunctionIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fix arguments spacing for given function.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: Tokens to handle&#10;    int &lt;b&gt;$startFunctionIndex&lt;/b&gt;: Start parenthesis position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   whether the function is multiline;;d4,217;;b3,0;;m0;;eTokens $tokens;;pint $startFunctionIndex;;p">
</treenode>
<treenode node="fixNewline;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f12;408;5;429;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixNewline(Tokens $tokens, $index, $indentation, $override = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Method to insert newline after comma or opening parenthesis.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: index of a comma&#10;    string &lt;b&gt;$indentation&lt;/b&gt;: the indentation that should be used&#10;    bool &lt;b&gt;$override&lt;/b&gt;: whether to override the existing character or not;;d4,409;;b3,0;;m0;;eTokens $tokens;;pint $index;;pstring $indentation;;pbool $override;;p">
</treenode>
<treenode node="fixSpace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f11;43;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSpace(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Method to insert space after comma and remove space before comma.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,44;;b1,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixSpace2;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f12;437;5;479;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSpace2(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Method to insert space after comma and remove space before comma.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,438;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f11;52;5;109;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f11;131;5;135;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,132;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f11;114;5;117;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,115;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isCommentLastLineToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f12;489;5;498;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCommentLastLineToken(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if last item of current line is a comment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: tokens to handle&#10;    int &lt;b&gt;$index&lt;/b&gt;: index of token;;d4,490;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isNewline;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\MethodArgumentSpaceFixer.php;f12;507;5;510;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isNewline(Token $token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if token is new line.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Token &lt;b&gt;$token&lt;/b&gt;;;d4,508;;b3,0;;m0;;eToken $token;;p">
</treenode>
</treenode>
<treenode node="MethodChainingIndentationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\MethodChainingIndentationFixer.php;f6;26;1;204;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MethodChainingIndentationFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Vladimir Boliev &lt;voff.web&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\MethodChainingIndentationFixer.php;f14;60;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="canBeMovedToNextLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\MethodChainingIndentationFixer.php;f12;128;5;146;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    canBeMovedToNextLine($index, Tokens $tokens)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: position of the T_OBJECT_OPERATOR token&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;;;d4,129;;b3,0;;m0;;eint $index;;pTokens $tokens;;p">
</treenode>
<treenode node="currentLineRequiresExtraIndentLevel;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\MethodChainingIndentationFixer.php;f12;189;5;203;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    currentLineRequiresExtraIndentLevel(Tokens $tokens, $start, $end)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;: index of first meaningful token on previous line&#10;    int &lt;b&gt;$end&lt;/b&gt;: index of last token on previous line;;d4,190;;b3,0;;m0;;eTokens $tokens;;pint $start;;pint $end;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\MethodChainingIndentationFixer.php;f11;31;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getExpectedIndentAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\MethodChainingIndentationFixer.php;f12;97;5;120;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getExpectedIndentAt(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: index of the first token on the line to indent;;d4,98;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getIndentAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\MethodChainingIndentationFixer.php;f12;154;5;161;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIndentAt(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: index of the indentation token&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,155;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getIndentContentAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\MethodChainingIndentationFixer.php;f12;163;5;180;;;;vpos;;v;;a;;r;;d4,164;;b3,0;;m0;;etokens;;pindex;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\MethodChainingIndentationFixer.php;f11;42;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\MethodChainingIndentationFixer.php;f11;52;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,53;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="MethodSeparationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\MethodSeparationFixer.php;f6;25;1;72;;;;vpos;;v;;aAbstractProxyFixer;;cDeprecatedFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MethodSeparationFixer extends AbstractProxyFixer implements DeprecatedFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;deprecated&lt;/b&gt;: in 2.8, proxy to ClassAttributesSeparationFixer;;d0,26;;b0,0;;m0;;e">
<treenode node="createProxyFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\MethodSeparationFixer.php;f14;65;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProxyFixers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\MethodSeparationFixer.php;f11;30;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getSuccessorsNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\MethodSeparationFixer.php;f11;57;5;60;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSuccessorsNames()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns names of fixers to use instead, if any.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,58;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="MissingOptionsException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Exception\MissingOptionsException.php;f0;20;1;22;;;;vpos;;v;;aInvalidArgumentException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MissingOptionsException extends InvalidArgumentException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exception thrown when a required option is missing.&#10;Add the option to the passed options array.&#10;&lt;b&gt;author&lt;/b&gt;: Bernhard Schussek &lt;bschussek&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
</treenode>
<treenode node="MockFileListIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockFileListIterator.php;f0;13;1;20;;;;vpos;;v;;aArrayIterator;;c;;r;;d0,14;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockFileListIterator.php;f11;15;5;19;;;;vpos;;v;;a;;r;;d4,16;;b1,0;;m0;;efilesArray;;p">
</treenode>
</treenode>
<treenode node="MockSplFileInfo;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f0;13;1;131;;;;vpos;;v;;aSplFileInfo;;c;;r;;d0,14;;b0,0;;m0;;e">
<treenode node="TYPE_DIRECTORY;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f9;15;24;15;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="TYPE_FILE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f9;16;19;16;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="TYPE_UNKNOWN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f9;17;22;17;;;;vpos;;v;;a;;r3;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f11;25;5;48;;;;vpos;;v;;a;;r;;d4,26;;b1,0;;m0;;eparam;;p">
</treenode>
<treenode node="getContents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f11;77;5;80;;;;vpos;;v;;a;;r;;d4,78;;b1,0;;m0;;e">
</treenode>
<treenode node="getRelativePath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f11;122;5;125;;;;vpos;;v;;a;;r;;d4,123;;b1,0;;m0;;e">
</treenode>
<treenode node="getRelativePathname;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f11;127;5;130;;;;vpos;;v;;a;;r;;d4,128;;b1,0;;m0;;e">
</treenode>
<treenode node="isDir;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f11;59;5;66;;;;vpos;;v;;a;;r;;d4,60;;b1,0;;m0;;e">
</treenode>
<treenode node="isFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f11;50;5;57;;;;vpos;;v;;a;;r;;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="isReadable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f11;68;5;75;;;;vpos;;v;;a;;r;;d4,69;;b1,0;;m0;;e">
</treenode>
<treenode node="setContents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f11;82;5;85;;;;vpos;;v;;a;;r;;d4,83;;b1,0;;m0;;econtents;;p">
</treenode>
<treenode node="setMode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f11;87;5;90;;;;vpos;;v;;a;;r;;d4,88;;b1,0;;m0;;emode;;p">
</treenode>
<treenode node="setRelativePath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f11;112;5;115;;;;vpos;;v;;a;;r;;d4,113;;b1,0;;m0;;erelativePath;;p">
</treenode>
<treenode node="setRelativePathname;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f11;117;5;120;;;;vpos;;v;;a;;r;;d4,118;;b1,0;;m0;;erelativePathname;;p">
</treenode>
<treenode node="setType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MockSplFileInfo.php;f11;92;5;110;;;;vpos;;v;;a;;r;;d4,93;;b1,0;;m0;;etype;;p">
</treenode>
</treenode>
<treenode node="MockStream;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\Fixtures\MockStream\MockStream.php;f0;17;1;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MockStream&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Mock stream class to be used with stream_wrapper_register.&#10;stream_wrapper_register(&apos;mock&apos;, &apos;Symfony\Component\Filesystem\Tests\Fixtures\MockStream\MockStream&apos;).;;d0,18;;b0,0;;m0;;e">
<treenode node="stream_open;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\Fixtures\MockStream\MockStream.php;f11;30;5;33;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    stream_open($path, $mode, $options, &amp;$opened_path)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Opens file or URL.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$path&lt;/b&gt;: Specifies the URL that was passed to the original function&#10;    string &lt;b&gt;$mode&lt;/b&gt;: The mode used to open the file, as detailed for fopen()&#10;    int &lt;b&gt;$options&lt;/b&gt;: Holds additional flags set by the streams API&#10;    string &lt;b&gt;$opened_path&lt;/b&gt;: If the path is opened successfully, and STREAM_USE_PATH is set in options, opened_path should be set to the full path of the file/resource that was actually opened;;d4,31;;b1,0;;m0;;estring $path;;pstring $mode;;pint $options;;pstring $opened_path;;p">
</treenode>
<treenode node="url_stat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\filesystem\Tests\Fixtures\MockStream\MockStream.php;f11;41;5;44;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    url_stat($path, $flags)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$path&lt;/b&gt;: The file path or URL to stat&#10;    array &lt;b&gt;$flags&lt;/b&gt;: Holds additional flags set by the streams API&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   File stats;;d4,42;;b1,0;;m0;;estring $path;;parray $flags;;p">
</treenode>
</treenode>
<treenode node="ModelConnect;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\model\ModelConnect.php;f0;5;1;12;;;;vpos;;v;;a;;r;;d19,5;;b0,0;;m0;;e">
</treenode>
<treenode node="ModernizeTypesCastingFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\ModernizeTypesCastingFixer.php;f6;24;1;158;;;;vpos;;v;;aAbstractFunctionReferenceFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ModernizeTypesCastingFixer extends AbstractFunctionReferenceFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Vladimir Reznichenko &lt;kalessil&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\ModernizeTypesCastingFixer.php;f14;60;5;157;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\ModernizeTypesCastingFixer.php;f11;29;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\ModernizeTypesCastingFixer.php;f11;52;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,53;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="MultiConstraint;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\MultiConstraint.php;f0;16;1;119;;;;vpos;;v;;aConstraintInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MultiConstraint implements ConstraintInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines a conjunctive or disjunctive set of constraints.;;d0,17;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\MultiConstraint.php;f11;31;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(array $constraints, $conjunctive = true)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ConstraintInterface[] &lt;b&gt;$constraints&lt;/b&gt;: A set of constraints&#10;    bool &lt;b&gt;$conjunctive&lt;/b&gt;: Whether the constraints should be treated as conjunctive or disjunctive;;d4,32;;b1,0;;m0;;eConstraintInterface[] $constraints;;pbool $conjunctive;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\MultiConstraint.php;f11;110;5;118;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __toString()&#10;;;d4,111;;b1,0;;m0;;e">
</treenode>
<treenode node="getConstraints;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\MultiConstraint.php;f11;40;5;43;;;;vpos;;v;;aConstraintInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getConstraints()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,41;;b1,0;;m0;;e">
</treenode>
<treenode node="getPrettyString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\MultiConstraint.php;f11;98;5;105;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPrettyString()&#10;;;d4,99;;b1,0;;m0;;e">
</treenode>
<treenode node="isConjunctive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\MultiConstraint.php;f11;48;5;51;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isConjunctive()&#10;;;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="isDisjunctive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\MultiConstraint.php;f11;56;5;59;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isDisjunctive()&#10;;;d4,57;;b1,0;;m0;;e">
</treenode>
<treenode node="matches;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\MultiConstraint.php;f11;66;5;85;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    matches(ConstraintInterface $provider)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ConstraintInterface &lt;b&gt;$provider&lt;/b&gt;;;d4,67;;b1,0;;m0;;eConstraintInterface $provider;;p">
</treenode>
<treenode node="setPrettyString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Constraint\MultiConstraint.php;f11;90;5;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPrettyString($prettyString)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$prettyString&lt;/b&gt;;;d4,91;;b1,0;;m0;;estring $prettyString;;p">
</treenode>
</treenode>
<treenode node="MultilineCommentOpeningClosingFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\MultilineCommentOpeningClosingFixer.php;f6;24;1;94;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MultilineCommentOpeningClosingFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\MultilineCommentOpeningClosingFixer.php;f14;67;5;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,68;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\MultilineCommentOpeningClosingFixer.php;f11;29;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\MultilineCommentOpeningClosingFixer.php;f11;59;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,60;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="MultilineWhitespaceBeforeSemicolonsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer.php;f6;29;1;292;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MultilineWhitespaceBeforeSemicolonsFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Egidijus Gircys &lt;e.gircys&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="STRATEGY_NEW_LINE_FOR_CHAINED_CALLS;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer.php;f9;39;45;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STRATEGY_NO_MULTI_LINE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer.php;f9;34;32;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="applyChainedCallsFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer.php;f12;134;5;164;;;;vpos;;v;;a;;r;;d4,135;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer.php;f14;97;5;108;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,98;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="applyNoMultiLineFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer.php;f12;110;5;132;;;;vpos;;v;;a;;r;;d4,111;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer.php;f14;81;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,82;;b2,0;;m0;;e">
</treenode>
<treenode node="findWhitespaceBeforeFirstCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer.php;f12;199;5;258;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findWhitespaceBeforeFirstCall($index, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if the semicolon closes a chained call and returns the whitespace of the first call at $index.&#10;i.e. it will return the whitespace marked with &apos;____&apos; in the example underneath.&#10;..&#10;____$this-&gt;methodCall()&#10;-&gt;anotherCall();s&#10;..&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,200;;b3,0;;m0;;eindex;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer.php;f11;52;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="getIndentAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer.php;f12;265;5;291;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIndentAt(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,266;;b3,0;;m0;;etokens;;pindex;;p">
</treenode>
<treenode node="getNewLineIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer.php;f12;173;5;184;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNewLineIndex($index, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Find the index for the new line. Return the given index when there&apos;s no new line.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,174;;b3,0;;m0;;eindex;;ptokens;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\MultilineWhitespaceBeforeSemicolonsFixer.php;f11;44;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,45;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="MultiplePcreFilterIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\MultiplePcreFilterIterator.php;f9;18;1;111;;;;vpos;;v;;aFilterIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class MultiplePcreFilterIterator extends \FilterIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    MultiplePcreFilterIterator filters files using patterns (regexps, globs or strings).&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\MultiplePcreFilterIterator.php;f11;28;5;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(\Iterator $iterator, array $matchPatterns, array $noMatchPatterns)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \Iterator &lt;b&gt;$iterator&lt;/b&gt;: The Iterator to filter&#10;    array &lt;b&gt;$matchPatterns&lt;/b&gt;: An array of patterns that need to match&#10;    array &lt;b&gt;$noMatchPatterns&lt;/b&gt;: An array of patterns that need to not match;;d4,29;;b1,0;;m0;;e\Iterator $iterator;;parray $matchPatterns;;parray $noMatchPatterns;;p">
</treenode>
<treenode node="isAccepted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\MultiplePcreFilterIterator.php;f14;52;5;74;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAccepted($string)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks whether the string is accepted by the regex filters.&#10;If there is no regexps defined in the class, this method will accept the string.&#10;Such case can be handled by child classes before calling the method if they want to&#10;apply a different behavior.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$string&lt;/b&gt;: The string to be matched against filters;;d4,53;;b2,0;;m0;;estring $string;;p">
</treenode>
<treenode node="isRegex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\MultiplePcreFilterIterator.php;f14;83;5;101;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRegex($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks whether the string is a regex.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Whether the given string is a regex;;d4,84;;b2,0;;m0;;estring $str;;p">
</treenode>
<treenode node="toRegex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\MultiplePcreFilterIterator.php;f23;110;45;110;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts string into regexp.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: Pattern&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   regexp corresponding to a given string;;d-1,-1;;b2,0;;m0;;estring $str;;p">
</treenode>
</treenode>
<treenode node="MultiplePcreFilterIteratorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MultiplePcreFilterIteratorTest.php;f0;16;1;48;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="getIsRegexFixtures;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MultiplePcreFilterIteratorTest.php;f11;27;5;47;;;;vpos;;v;;a;;r;;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsRegex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MultiplePcreFilterIteratorTest.php;f11;21;5;25;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testIsRegex($string, $isRegex, $message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getIsRegexFixtures;;d4,22;;b1,0;;m0;;estring;;pisRegex;;pmessage;;p">
</treenode>
</treenode>
<treenode node="MyCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\DependencyInjection\AddConsoleCommandPassTest.php;f0;244;1;246;;;;vpos;;v;;aCommand;;c;;r;;d0,245;;b0,0;;m0;;e">
</treenode>
<treenode node="NamedCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\DependencyInjection\AddConsoleCommandPassTest.php;f0;248;1;251;;;;vpos;;v;;aCommand;;c;;r;;d0,249;;b0,0;;m0;;e">
</treenode>
<treenode node="NamespaceAnalysis;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceAnalysis.php;f6;17;1;126;;;;vpos;;v;;aStartEndTokenAwareAnalysis;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NamespaceAnalysis implements StartEndTokenAwareAnalysis&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceAnalysis.php;f11;69;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($fullName, $shortName, $startIndex, $endIndex, $scopeStartIndex, $scopeEndIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$fullName&lt;/b&gt;&#10;    string &lt;b&gt;$shortName&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;&#10;    int &lt;b&gt;$scopeStartIndex&lt;/b&gt;&#10;    int &lt;b&gt;$scopeEndIndex&lt;/b&gt;;;d4,70;;b1,0;;m0;;estring $fullName;;pstring $shortName;;pint $startIndex;;pint $endIndex;;pint $scopeStartIndex;;pint $scopeEndIndex;;p">
</treenode>
<treenode node="getEndIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceAnalysis.php;f11;106;5;109;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEndIndex()&#10;;;d4,107;;b1,0;;m0;;e">
</treenode>
<treenode node="getFullName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceAnalysis.php;f11;82;5;85;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFullName()&#10;;;d4,83;;b1,0;;m0;;e">
</treenode>
<treenode node="getScopeEndIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceAnalysis.php;f11;122;5;125;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getScopeEndIndex()&#10;;;d4,123;;b1,0;;m0;;e">
</treenode>
<treenode node="getScopeStartIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceAnalysis.php;f11;114;5;117;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getScopeStartIndex()&#10;;;d4,115;;b1,0;;m0;;e">
</treenode>
<treenode node="getShortName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceAnalysis.php;f11;90;5;93;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getShortName()&#10;;;d4,91;;b1,0;;m0;;e">
</treenode>
<treenode node="getStartIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceAnalysis.php;f11;98;5;101;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStartIndex()&#10;;;d4,99;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="NamespaceNotFoundException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Exception\NamespaceNotFoundException.php;f0;18;1;20;;;;vpos;;v;;aCommandNotFoundException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NamespaceNotFoundException extends CommandNotFoundException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Represents an incorrect namespace typed in the console.&#10;&lt;b&gt;author&lt;/b&gt;: Pierre du Plessis &lt;pdples&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
</treenode>
<treenode node="NamespaceOperatorTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\NamespaceOperatorTransformer.php;f6;26;1;60;;;;vpos;;v;;aAbstractTransformer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NamespaceOperatorTransformer extends AbstractTransformer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform `namespace` operator from T_NAMESPACE into CT::T_NAMESPACE_OPERATOR.&#10;&lt;b&gt;author&lt;/b&gt;: Gregor Harlan &lt;gharlan&#10;&lt;b&gt;web&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\NamespaceOperatorTransformer.php;f11;31;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\NamespaceOperatorTransformer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredPhpVersionId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\NamespaceOperatorTransformer.php;f11;47;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    process(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
</treenode>
<treenode node="NamespaceUseAnalysis;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis.php;f6;17;1;146;;;;vpos;;v;;aStartEndTokenAwareAnalysis;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NamespaceUseAnalysis implements StartEndTokenAwareAnalysis&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="TYPE_CLASS;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis.php;f9;19;20;19;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="TYPE_CONSTANT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis.php;f9;21;23;21;;;;vpos;;v;;a;;r3;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="TYPE_FUNCTION;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis.php;f9;20;23;20;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis.php;f11;73;5;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($fullName, $shortName, $isAliased, $startIndex, $endIndex, $type)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$fullName&lt;/b&gt;&#10;    string &lt;b&gt;$shortName&lt;/b&gt;&#10;    bool &lt;b&gt;$isAliased&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;&#10;    int &lt;b&gt;$type&lt;/b&gt;;;d4,74;;b1,0;;m0;;estring $fullName;;pstring $shortName;;pbool $isAliased;;pint $startIndex;;pint $endIndex;;pint $type;;p">
</treenode>
<treenode node="getEndIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis.php;f11;118;5;121;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEndIndex()&#10;;;d4,119;;b1,0;;m0;;e">
</treenode>
<treenode node="getFullName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis.php;f11;86;5;89;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFullName()&#10;;;d4,87;;b1,0;;m0;;e">
</treenode>
<treenode node="getShortName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis.php;f11;94;5;97;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getShortName()&#10;;;d4,95;;b1,0;;m0;;e">
</treenode>
<treenode node="getStartIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis.php;f11;110;5;113;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStartIndex()&#10;;;d4,111;;b1,0;;m0;;e">
</treenode>
<treenode node="isAliased;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis.php;f11;102;5;105;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAliased()&#10;;;d4,103;;b1,0;;m0;;e">
</treenode>
<treenode node="isClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis.php;f11;126;5;129;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isClass()&#10;;;d4,127;;b1,0;;m0;;e">
</treenode>
<treenode node="isConstant;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis.php;f11;142;5;145;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isConstant()&#10;;;d4,143;;b1,0;;m0;;e">
</treenode>
<treenode node="isFunction;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\NamespaceUseAnalysis.php;f11;134;5;137;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isFunction()&#10;;;d4,135;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="NamespaceUsesAnalyzer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\NamespaceUsesAnalyzer.php;f6;22;1;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NamespaceUsesAnalyzer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="getDeclarations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\NamespaceUsesAnalyzer.php;f12;43;5;56;;;;vpos;;v;;aNamespaceUseAnalysis;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDeclarations(Tokens $tokens, array $useIndexes)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    array &lt;b&gt;$useIndexes&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,44;;b3,0;;m0;;eTokens $tokens;;parray $useIndexes;;p">
</treenode>
<treenode node="getDeclarationsFromTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\NamespaceUsesAnalyzer.php;f11;29;5;35;;;;vpos;;v;;aNamespaceUseAnalysis;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDeclarationsFromTokens(Tokens $tokens)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,30;;b1,0;;m0;;eTokens $tokens;;p">
</treenode>
<treenode node="parseDeclaration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\NamespaceUsesAnalyzer.php;f12;65;5;109;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseDeclaration(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |NamespaceUseAnalysis;;d4,66;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
</treenode>
<treenode node="NamespacedStringTokenGenerator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Generator\NamespacedStringTokenGenerator.php;f6;19;1;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NamespacedStringTokenGenerator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="generate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Generator\NamespacedStringTokenGenerator.php;f11;28;5;41;;;;vpos;;v;;aToken;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    generate($input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parse a string that contains a namespace into tokens.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$input&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,29;;b1,0;;m0;;estring $input;;p">
</treenode>
</treenode>
<treenode node="NamespacesAnalyzer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\NamespacesAnalyzer.php;f6;20;1;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NamespacesAnalyzer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="getDeclarations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\NamespacesAnalyzer.php;f11;27;5;71;;;;vpos;;v;;aNamespaceAnalysis;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDeclarations(Tokens $tokens)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,28;;b1,0;;m0;;eTokens $tokens;;p">
</treenode>
</treenode>
<treenode node="NativeConstantInvocationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ConstantNotation\NativeConstantInvocationFixer.php;f6;31;1;274;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NativeConstantInvocationFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,32;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ConstantNotation\NativeConstantInvocationFixer.php;f14;160;5;179;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,161;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ConstantNotation\NativeConstantInvocationFixer.php;f11;113;5;155;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,114;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ConstantNotation\NativeConstantInvocationFixer.php;f14;184;5;219;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,185;;b2,0;;m0;;e">
</treenode>
<treenode node="fixConstantInvocations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ConstantNotation\NativeConstantInvocationFixer.php;f12;226;5;273;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixConstantInvocations(Tokens $tokens, $start, $end)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;&#10;    int &lt;b&gt;$end&lt;/b&gt;;;d4,227;;b3,0;;m0;;eTokens $tokens;;pint $start;;pint $end;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ConstantNotation\NativeConstantInvocationFixer.php;f11;46;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ConstantNotation\NativeConstantInvocationFixer.php;f11;97;5;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,98;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ConstantNotation\NativeConstantInvocationFixer.php;f11;105;5;108;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,106;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="NativeFunctionCasingFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\NativeFunctionCasingFixer.php;f6;24;1;106;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NativeFunctionCasingFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\NativeFunctionCasingFixer.php;f14;48;5;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\NativeFunctionCasingFixer.php;f11;29;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="getNativeFunctionNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\NativeFunctionCasingFixer.php;f12;96;5;105;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNativeFunctionNames()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;string, string&gt;;;d4,97;;b3,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\NativeFunctionCasingFixer.php;f11;40;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NativeFunctionInvocationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f6;31;1;414;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NativeFunctionInvocationFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Andreas Möller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,32;;b0,0;;m0;;e">
<treenode node="SET_ALL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f9;36;17;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="SET_COMPILER_OPTIMIZED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f9;48;32;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Subset of SET_INTERNAL.&#10;Change function call to functions known to be optimized by the Zend engine.&#10;For details:&#10;-&#10;&lt;b&gt;see&lt;/b&gt;: https://github.com/php/php-src/blob/php-7.2.6/Zend/zend_compile.c &quot;zend_try_compile_special_func&quot;&#10;-&#10;&lt;b&gt;see&lt;/b&gt;: https://github.com/php/php-src/blob/php-7.2.6/ext/opcache/Optimizer/pass1_5.c&#10;&lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="SET_INTERNAL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f9;53;22;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f14;181;5;196;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,182;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f11;60;5;65;;;;vpos;;v;;a;;r;;d4,61;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f14;201;5;255;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,202;;b2,0;;m0;;e">
</treenode>
<treenode node="fixFunctionCalls;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f12;264;5;297;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunctionCalls(Tokens $tokens, callable $functionFilter, $start, $end, $tryToRemove)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    callable &lt;b&gt;$functionFilter&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;&#10;    int &lt;b&gt;$end&lt;/b&gt;&#10;    bool &lt;b&gt;$tryToRemove&lt;/b&gt;;;d4,265;;b3,0;;m0;;eTokens $tokens;;pcallable $functionFilter;;pint $start;;pint $end;;pbool $tryToRemove;;p">
</treenode>
<treenode node="getAllCompilerOptimizedFunctionsNormalized;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f12;345;5;390;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllCompilerOptimizedFunctionsNormalized()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;string, true&gt; normalized function names of which the PHP compiler optimizes;;d4,346;;b3,0;;m0;;e">
</treenode>
<treenode node="getAllInternalFunctionsNormalized;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f12;395;5;398;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllInternalFunctionsNormalized()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;string, true&gt; normalized function names of all internal defined functions;;d4,396;;b3,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f11;70;5;160;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,71;;b1,0;;m0;;e">
</treenode>
<treenode node="getFunctionFilter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f12;302;5;340;;;;vpos;;v;;acallable;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFunctionFilter()&#10;;;d4,303;;b3,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f11;165;5;168;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,166;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f11;173;5;176;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,174;;b1,0;;m0;;e">
</treenode>
<treenode node="normalizeFunctionNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NativeFunctionInvocationFixer.php;f12;405;5;413;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    normalizeFunctionNames(array $functionNames)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$functionNames&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;string, true&gt; all function names lower cased;;d4,406;;b3,0;;m0;;estring[] $functionNames;;p">
</treenode>
</treenode>
<treenode node="NativeFunctionTypeDeclarationCasingFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\NativeFunctionTypeDeclarationCasingFixer.php;f6;27;1;178;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NativeFunctionTypeDeclarationCasingFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,28;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\NativeFunctionTypeDeclarationCasingFixer.php;f11;52;5;89;;;;vpos;;v;;a;;r;;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\NativeFunctionTypeDeclarationCasingFixer.php;f14;127;5;138;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,128;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixArgumentType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\NativeFunctionTypeDeclarationCasingFixer.php;f12;160;5;177;;;;vpos;;v;;a;;r;;d4,161;;b3,0;;m0;;etokens;;ptype;;p">
</treenode>
<treenode node="fixFunctionArgumentTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\NativeFunctionTypeDeclarationCasingFixer.php;f12;144;5;149;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunctionArgumentTypes(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,145;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixFunctionReturnType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\NativeFunctionTypeDeclarationCasingFixer.php;f12;155;5;158;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunctionReturnType(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,156;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\NativeFunctionTypeDeclarationCasingFixer.php;f11;94;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,95;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Casing\NativeFunctionTypeDeclarationCasingFixer.php;f11;119;5;122;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,120;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NewVersionChecker;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\NewVersionChecker.php;f6;21;1;116;;;;vpos;;v;;aNewVersionCheckerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NewVersionChecker implements NewVersionCheckerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\NewVersionChecker.php;f11;41;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(GithubClientInterface $githubClient)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    GithubClientInterface &lt;b&gt;$githubClient&lt;/b&gt;;;d4,42;;b1,0;;m0;;eGithubClientInterface $githubClient;;p">
</treenode>
<treenode node="compareVersions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\NewVersionChecker.php;f11;78;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    compareVersions($versionA, $versionB)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,79;;b1,0;;m0;;eversionA;;pversionB;;p">
</treenode>
<treenode node="getLatestVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\NewVersionChecker.php;f11;50;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLatestVersion()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="getLatestVersionOfMajor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\NewVersionChecker.php;f11;60;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLatestVersionOfMajor($majorVersion)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b1,0;;m0;;emajorVersion;;p">
</treenode>
<treenode node="retrieveAvailableVersions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\SelfUpdate\NewVersionChecker.php;f12;94;5;115;;;;vpos;;v;;a;;r;;d4,95;;b3,0;;m0;;e">
</treenode>
</treenode>
<treenode node="NewWithBracesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NewWithBracesFixer.php;f6;24;1;150;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NewWithBracesFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NewWithBracesFixer.php;f14;48;5;140;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NewWithBracesFixer.php;f11;29;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="insertBracesAfter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NewWithBracesFixer.php;f12;146;5;149;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    insertBracesAfter(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,147;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NewWithBracesFixer.php;f11;40;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoAliasFunctionsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoAliasFunctionsFixer.php;f6;29;1;216;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoAliasFunctionsFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Vladimir Reznichenko &lt;kalessil&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoAliasFunctionsFixer.php;f14;175;5;199;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,176;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoAliasFunctionsFixer.php;f11;87;5;108;;;;vpos;;v;;a;;r;;d4,88;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoAliasFunctionsFixer.php;f14;204;5;215;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,205;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoAliasFunctionsFixer.php;f11;113;5;154;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,114;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoAliasFunctionsFixer.php;f11;159;5;162;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,160;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoAliasFunctionsFixer.php;f11;167;5;170;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,168;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="NoAlternativeSyntaxFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoAlternativeSyntaxFixer.php;f6;23;1;225;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoAlternativeSyntaxFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Eddilbert Macharia &lt;edd.cowan&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="addBraces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoAlternativeSyntaxFixer.php;f12;195;5;224;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addBraces(Tokens $tokens, Token $token, $index, $colonIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Add opening and closing braces to the else: and elseif: .&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: the tokens collection&#10;    Token &lt;b&gt;$token&lt;/b&gt;: the current token&#10;    int &lt;b&gt;$index&lt;/b&gt;: the current token index&#10;    int &lt;b&gt;$colonIndex&lt;/b&gt;: the index of the colon;;d4,196;;b3,0;;m0;;eTokens $tokens;;pToken $token;;pint $index;;pint $colonIndex;;p">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoAlternativeSyntaxFixer.php;f14;76;5;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,77;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="findParenthesisEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoAlternativeSyntaxFixer.php;f12;86;5;97;;;;vpos;;v;;a;;r;;d4,87;;b3,0;;m0;;etokens;;pstructureTokenIndex;;p">
</treenode>
<treenode node="fixElse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoAlternativeSyntaxFixer.php;f12;150;5;163;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixElse($index, Token $token, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Handle the else:.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: the index of the token being processed&#10;    Token &lt;b&gt;$token&lt;/b&gt;: the token being processed&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: the collection of tokens;;d4,151;;b3,0;;m0;;eint $index;;pToken $token;;pTokens $tokens;;p">
</treenode>
<treenode node="fixElseif;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoAlternativeSyntaxFixer.php;f12;172;5;185;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixElseif($index, Token $token, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Handle the elsif(): cases.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: the index of the token being processed&#10;    Token &lt;b&gt;$token&lt;/b&gt;: the token being processed&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: the collection of tokens;;d4,173;;b3,0;;m0;;eint $index;;pToken $token;;pTokens $tokens;;p">
</treenode>
<treenode node="fixOpenCloseControls;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoAlternativeSyntaxFixer.php;f12;107;5;141;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixOpenCloseControls($index, Token $token, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Handle both extremes of the control structures.&#10;e.g. if(): or endif;s.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: the index of the token being processed&#10;    Token &lt;b&gt;$token&lt;/b&gt;: the token being processed&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: the collection of tokens;;d4,108;;b3,0;;m0;;eint $index;;pToken $token;;pTokens $tokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoAlternativeSyntaxFixer.php;f11;28;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoAlternativeSyntaxFixer.php;f11;67;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,68;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoAlternativeSyntaxFixer.php;f11;52;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,53;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoBinaryStringFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\NoBinaryStringFixer.php;f6;23;1;64;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoBinaryStringFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: ntzm;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\NoBinaryStringFixer.php;f14;50;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\NoBinaryStringFixer.php;f11;36;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,37;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\NoBinaryStringFixer.php;f11;28;5;31;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoBlankLinesAfterClassOpeningFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoBlankLinesAfterClassOpeningFixer.php;f6;24;1;91;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoBlankLinesAfterClassOpeningFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Ceeram &lt;ceeram&#10;&lt;b&gt;cakephp&lt;/b&gt;: .org&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoBlankLinesAfterClassOpeningFixer.php;f14;60;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixWhitespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoBlankLinesAfterClassOpeningFixer.php;f12;82;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixWhitespace(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Cleanup a whitespace token.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,83;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoBlankLinesAfterClassOpeningFixer.php;f11;37;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoBlankLinesAfterClassOpeningFixer.php;f11;29;5;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoBlankLinesAfterPhpdocFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoBlankLinesAfterPhpdocFixer.php;f6;23;1;111;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoBlankLinesAfterPhpdocFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoBlankLinesAfterPhpdocFixer.php;f14;69;5;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,70;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixWhitespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoBlankLinesAfterPhpdocFixer.php;f12;102;5;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixWhitespace(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Cleanup a whitespace token.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,103;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoBlankLinesAfterPhpdocFixer.php;f11;36;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,37;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoBlankLinesAfterPhpdocFixer.php;f11;59;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,60;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoBlankLinesAfterPhpdocFixer.php;f11;28;5;31;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoBlankLinesBeforeNamespaceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\NoBlankLinesBeforeNamespaceFixer.php;f6;22;1;62;;;;vpos;;v;;aAbstractLinesBeforeNamespaceFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoBlankLinesBeforeNamespaceFixer extends AbstractLinesBeforeNamespaceFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\NoBlankLinesBeforeNamespaceFixer.php;f14;50;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\NoBlankLinesBeforeNamespaceFixer.php;f11;35;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\NoBlankLinesBeforeNamespaceFixer.php;f11;27;5;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoBreakCommentFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoBreakCommentFixer.php;f6;30;1;365;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoBreakCommentFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rule defined in PSR2 ¶5.2.;;d0,31;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoBreakCommentFixer.php;f14;95;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,96;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoBreakCommentFixer.php;f14;70;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,71;;b2,0;;m0;;e">
</treenode>
<treenode node="ensureNewLineAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoBreakCommentFixer.php;f12;231;5;263;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ensureNewLineAt(Tokens $tokens, $position)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$position&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The newline token position;;d4,232;;b3,0;;m0;;eTokens $tokens;;pint $position;;p">
</treenode>
<treenode node="fixCase;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoBreakCommentFixer.php;f12;108;5;171;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixCase(Tokens $tokens, $casePosition)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$casePosition&lt;/b&gt;;;d4,109;;b3,0;;m0;;eTokens $tokens;;pint $casePosition;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoBreakCommentFixer.php;f11;35;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b1,0;;m0;;e">
</treenode>
<treenode node="getIndentAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoBreakCommentFixer.php;f12;298;5;320;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIndentAt(Tokens $tokens, $position)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$position&lt;/b&gt;;;d4,299;;b3,0;;m0;;eTokens $tokens;;pint $position;;p">
</treenode>
<treenode node="getStructureEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoBreakCommentFixer.php;f12;328;5;364;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStructureEnd(Tokens $tokens, $position)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$position&lt;/b&gt;;;d4,329;;b3,0;;m0;;eTokens $tokens;;pint $position;;p">
</treenode>
<treenode node="insertCommentAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoBreakCommentFixer.php;f12;193;5;223;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    insertCommentAt(Tokens $tokens, $casePosition)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$casePosition&lt;/b&gt;;;d4,194;;b3,0;;m0;;eTokens $tokens;;pint $casePosition;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoBreakCommentFixer.php;f11;62;5;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isNoBreakComment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoBreakCommentFixer.php;f12;178;5;187;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isNoBreakComment(Token $token)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Token &lt;b&gt;$token&lt;/b&gt;;;d4,179;;b3,0;;m0;;eToken $token;;p">
</treenode>
<treenode node="removeComment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoBreakCommentFixer.php;f12;269;5;290;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeComment(Tokens $tokens, $commentPosition)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$commentPosition&lt;/b&gt;;;d4,270;;b3,0;;m0;;eTokens $tokens;;pint $commentPosition;;p">
</treenode>
</treenode>
<treenode node="NoClosingTagFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\NoClosingTagFixer.php;f6;25;1;72;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoClosingTagFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶2.2.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\NoClosingTagFixer.php;f14;49;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\NoClosingTagFixer.php;f11;30;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\NoClosingTagFixer.php;f11;41;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoConfigurationException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Exception\NoConfigurationException.php;f0;23;1;25;;;;vpos;;v;;aRuntimeException;;cExceptionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoConfigurationException extends \RuntimeException implements ExceptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Thrown when trying to introspect an option definition property&#10;for which no value was configured inside the OptionsResolver instance.&#10;&lt;b&gt;see&lt;/b&gt;: OptionsResolverIntrospector&#10;&lt;b&gt;author&lt;/b&gt;: Maxime Steinhausser &lt;maxime.steinhausser&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
</treenode>
<treenode node="NoEmptyCommentFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoEmptyCommentFixer.php;f6;23;1;167;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoEmptyCommentFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,24;;b0,0;;m0;;e">
<treenode node="TYPE_DOUBLE_SLASH;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoEmptyCommentFixer.php;f9;26;27;26;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="TYPE_HASH;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoEmptyCommentFixer.php;f9;25;19;25;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="TYPE_SLASH_ASTERISK;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoEmptyCommentFixer.php;f9;27;29;27;;;;vpos;;v;;a;;r3;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoEmptyCommentFixer.php;f14;60;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getCommentBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoEmptyCommentFixer.php;f12;86;5;113;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommentBlock(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the start index, end index and a flag stating if the comment block is empty.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: T_COMMENT index;;d4,87;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getCommentType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoEmptyCommentFixer.php;f12;120;5;131;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommentType($content)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;;;d4,121;;b3,0;;m0;;estring $content;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoEmptyCommentFixer.php;f11;41;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;e">
</treenode>
<treenode node="getLineBreakCount;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoEmptyCommentFixer.php;f12;140;5;148;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLineBreakCount(Tokens $tokens, $whiteStart, $whiteEnd)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$whiteStart&lt;/b&gt;&#10;    int &lt;b&gt;$whiteEnd&lt;/b&gt;;;d4,141;;b3,0;;m0;;eTokens $tokens;;pint $whiteStart;;pint $whiteEnd;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoEmptyCommentFixer.php;f11;32;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoEmptyCommentFixer.php;f11;52;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,53;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isEmptyComment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoEmptyCommentFixer.php;f12;155;5;166;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isEmptyComment($content)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;;;d4,156;;b3,0;;m0;;estring $content;;p">
</treenode>
</treenode>
<treenode node="NoEmptyPhpdocFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoEmptyPhpdocFixer.php;f6;23;1;69;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoEmptyPhpdocFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoEmptyPhpdocFixer.php;f14;57;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoEmptyPhpdocFixer.php;f11;28;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoEmptyPhpdocFixer.php;f11;39;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoEmptyPhpdocFixer.php;f11;49;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoEmptyStatementFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoEmptyStatementFixer.php;f6;24;1;162;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoEmptyStatementFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoEmptyStatementFixer.php;f14;58;5;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixSemicolonAfterCurlyBraceClose;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoEmptyStatementFixer.php;f12;106;5;161;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSemicolonAfterCurlyBraceClose(Tokens $tokens, $index, $curlyCloseIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fix semicolon after closing curly brace if needed.&#10;Test for the following cases&#10;- just &apos;{&apos; &apos;}&apos; block (following open tag or &apos;;s&apos;)&#10;- if, else, elseif&#10;- interface, trait, class (but not anonymous)&#10;- catch, finally (but not try)&#10;- for, foreach, while (but not &apos;do - while&apos;)&#10;- switch&#10;- function (declaration, but not lambda)&#10;- declare (with &apos;{&apos; &apos;}&apos;)&#10;- namespace (with &apos;{&apos; &apos;}&apos;)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: Semicolon index&#10;    int &lt;b&gt;$curlyCloseIndex&lt;/b&gt;;;d4,107;;b3,0;;m0;;eTokens $tokens;;pint $index;;pint $curlyCloseIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoEmptyStatementFixer.php;f11;29;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoEmptyStatementFixer.php;f11;40;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoEmptyStatementFixer.php;f11;50;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoExtraBlankLinesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraBlankLinesFixer.php;f6;34;1;464;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoExtraBlankLinesFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,35;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraBlankLinesFixer.php;f14;296;5;303;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,297;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraBlankLinesFixer.php;f11;79;5;122;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,80;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraBlankLinesFixer.php;f14;308;5;337;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,309;;b2,0;;m0;;e">
</treenode>
<treenode node="fixAfterToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraBlankLinesFixer.php;f12;389;5;406;;;;vpos;;v;;a;;r;;d4,390;;b3,0;;m0;;eindex;;p">
</treenode>
<treenode node="fixByToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraBlankLinesFixer.php;f12;339;5;360;;;;vpos;;v;;a;;r;;d4,340;;b3,0;;m0;;etoken;;pindex;;p">
</treenode>
<treenode node="fixStructureOpenCloseIfMultiLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraBlankLinesFixer.php;f12;414;5;427;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixStructureOpenCloseIfMultiLine($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Remove white line(s) after the index of a block type,&#10;but only if the block is not on one line.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: body start;;d4,415;;b3,0;;m0;;eint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraBlankLinesFixer.php;f11;127;5;274;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,128;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraBlankLinesFixer.php;f11;279;5;283;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,280;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraBlankLinesFixer.php;f11;288;5;291;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,289;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="removeBetweenUse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraBlankLinesFixer.php;f12;362;5;375;;;;vpos;;v;;a;;r;;d4,363;;b3,0;;m0;;eindex;;p">
</treenode>
<treenode node="removeEmptyLinesAfterLineWithTokenAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraBlankLinesFixer.php;f12;429;5;463;;;;vpos;;v;;a;;r;;d4,430;;b3,0;;m0;;eindex;;p">
</treenode>
<treenode node="removeMultipleBlankLines;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraBlankLinesFixer.php;f12;377;5;387;;;;vpos;;v;;a;;r;;d4,378;;b3,0;;m0;;eindex;;p">
</treenode>
</treenode>
<treenode node="NoExtraConsecutiveBlankLinesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraConsecutiveBlankLinesFixer.php;f6;25;1;72;;;;vpos;;v;;aAbstractProxyFixer;;cConfigurationDefinitionFixerInterface;;cDeprecatedFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoExtraConsecutiveBlankLinesFixer extends AbstractProxyFixer implements ConfigurationDefinitionFixerInterface, DeprecatedFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;deprecated&lt;/b&gt;: in 2.10, proxy to NoExtraBlankLinesFixer;;d0,26;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraConsecutiveBlankLinesFixer.php;f11;37;5;41;;;;vpos;;v;;a;;r;;d4,38;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createProxyFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraConsecutiveBlankLinesFixer.php;f14;59;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProxyFixers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,60;;b2,0;;m0;;e">
</treenode>
<treenode node="getConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraConsecutiveBlankLinesFixer.php;f11;43;5;46;;;;vpos;;v;;a;;r;;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraConsecutiveBlankLinesFixer.php;f11;32;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="getFixer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraConsecutiveBlankLinesFixer.php;f12;64;5;71;;;;vpos;;v;;a;;r;;d4,65;;b3,0;;m0;;e">
</treenode>
<treenode node="getSuccessorsNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoExtraConsecutiveBlankLinesFixer.php;f11;51;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSuccessorsNames()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="NoHomoglyphNamesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Naming\NoHomoglyphNamesFixer.php;f6;25;1;243;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoHomoglyphNamesFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Fred Cox &lt;mcfedr&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Naming\NoHomoglyphNamesFixer.php;f14;224;5;242;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,225;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Naming\NoHomoglyphNamesFixer.php;f11;195;5;203;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,196;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Naming\NoHomoglyphNamesFixer.php;f11;216;5;219;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,217;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Naming\NoHomoglyphNamesFixer.php;f11;208;5;211;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,209;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="NoLeadingImportSlashFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoLeadingImportSlashFixer.php;f6;25;1;97;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoLeadingImportSlashFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Carlos Cirello &lt;carlos.cirello.nl&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoLeadingImportSlashFixer.php;f14;58;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoLeadingImportSlashFixer.php;f11;30;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoLeadingImportSlashFixer.php;f11;41;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoLeadingImportSlashFixer.php;f11;50;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="removeLeadingImportSlash;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoLeadingImportSlashFixer.php;f12;82;5;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeLeadingImportSlash(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,83;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="NoLeadingNamespaceWhitespaceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\NoLeadingNamespaceWhitespaceFixer.php;f6;25;1;100;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoLeadingNamespaceWhitespaceFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Bram Gotink &lt;bram&#10;&lt;b&gt;gotink&lt;/b&gt;: .me&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\NoLeadingNamespaceWhitespaceFixer.php;f14;56;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="endsWithWhitespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\NoLeadingNamespaceWhitespaceFixer.php;f19;92;5;99;;;;vpos;;v;;a;;r;;d4,93;;b3,5;;m0;;estr;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\NoLeadingNamespaceWhitespaceFixer.php;f11;38;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\NoLeadingNamespaceWhitespaceFixer.php;f11;30;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoMixedEchoPrintFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoMixedEchoPrintFixer.php;f6;28;1;162;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoMixedEchoPrintFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Sullivan Senechal &lt;soullivaneuh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,29;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoMixedEchoPrintFixer.php;f14;95;5;103;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,96;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoMixedEchoPrintFixer.php;f11;48;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoMixedEchoPrintFixer.php;f14;108;5;116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,109;;b2,0;;m0;;e">
</treenode>
<treenode node="fixEchoToPrint;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoMixedEchoPrintFixer.php;f12;122;5;146;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixEchoToPrint(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,123;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixPrintToEcho;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoMixedEchoPrintFixer.php;f12;152;5;161;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixPrintToEcho(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,153;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoMixedEchoPrintFixer.php;f11;64;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,65;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoMixedEchoPrintFixer.php;f11;78;5;82;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,79;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\NoMixedEchoPrintFixer.php;f11;87;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,88;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoMultilineWhitespaceAroundDoubleArrowFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoMultilineWhitespaceAroundDoubleArrowFixer.php;f6;25;1;85;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoMultilineWhitespaceAroundDoubleArrowFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Carlos Cirello &lt;carlos.cirello.nl&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoMultilineWhitespaceAroundDoubleArrowFixer.php;f14;58;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixWhitespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoMultilineWhitespaceAroundDoubleArrowFixer.php;f12;77;5;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixWhitespace(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,78;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoMultilineWhitespaceAroundDoubleArrowFixer.php;f11;30;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoMultilineWhitespaceAroundDoubleArrowFixer.php;f11;41;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoMultilineWhitespaceAroundDoubleArrowFixer.php;f11;50;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoMultilineWhitespaceBeforeSemicolonsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoMultilineWhitespaceBeforeSemicolonsFixer.php;f6;27;1;67;;;;vpos;;v;;aAbstractProxyFixer;;cDeprecatedFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoMultilineWhitespaceBeforeSemicolonsFixer extends AbstractProxyFixer implements DeprecatedFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;deprecated&lt;/b&gt;: since 2.9.1, replaced by MultilineWhitespaceBeforeSemicolonsFixer&#10;&lt;b&gt;todo&lt;/b&gt;: To be removed at 3.0&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="createProxyFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoMultilineWhitespaceBeforeSemicolonsFixer.php;f14;60;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProxyFixers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoMultilineWhitespaceBeforeSemicolonsFixer.php;f11;32;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="getSuccessorsNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoMultilineWhitespaceBeforeSemicolonsFixer.php;f11;52;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSuccessorsNames()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,53;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="NoNullPropertyInitializationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoNullPropertyInitializationFixer.php;f6;22;1;97;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoNullPropertyInitializationFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: ntzm;;d0,23;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoNullPropertyInitializationFixer.php;f14;54;5;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoNullPropertyInitializationFixer.php;f11;27;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoNullPropertyInitializationFixer.php;f11;46;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoPhp4ConstructorFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoPhp4ConstructorFixer.php;f6;24;1;388;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoPhp4ConstructorFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Matteo Beccati &lt;matteo&#10;&lt;b&gt;beccati&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoPhp4ConstructorFixer.php;f14;76;5;128;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,77;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="findFunction;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoPhp4ConstructorFixer.php;f12;345;5;387;;;;vpos;;v;;anull|array;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findFunction(Tokens $tokens, $name, $startIndex, $endIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Find a function or method matching a given name within certain bounds.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: the Tokens instance&#10;    string &lt;b&gt;$name&lt;/b&gt;: the function/Method name&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;: the search start index&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;: the search end index&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An associative array, if a match is found: - nameIndex (int): The index of the function/method name. - startIndex (int): The index of the function/method start. - endIndex (int): The index of the function/method end. - bodyIndex (int): The index of the function/method body. - modifiers (array): The modifiers as array keys and their index as the values, e.g. array(T_PUBLIC =&gt; 10);;d4,346;;b3,0;;m0;;eTokens $tokens;;pstring $name;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="fixConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoPhp4ConstructorFixer.php;f12;138;5;185;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixConstructor(Tokens $tokens, $className, $classStart, $classEnd)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fix constructor within a class, if possible.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: the Tokens instance&#10;    string &lt;b&gt;$className&lt;/b&gt;: the class name&#10;    int &lt;b&gt;$classStart&lt;/b&gt;: the class start index&#10;    int &lt;b&gt;$classEnd&lt;/b&gt;: the class end index;;d4,139;;b3,0;;m0;;eTokens $tokens;;pstring $className;;pint $classStart;;pint $classEnd;;p">
</treenode>
<treenode node="fixInfiniteRecursion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoPhp4ConstructorFixer.php;f12;255;5;275;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixInfiniteRecursion(Tokens $tokens, $start, $end)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fix a particular infinite recursion issue happening when the parent class has __construct and the child has only&#10;a PHP4 constructor that calls the parent constructor as $this-&gt;__construct().&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: the Tokens instance&#10;    int &lt;b&gt;$start&lt;/b&gt;: the PHP4 constructor body start&#10;    int &lt;b&gt;$end&lt;/b&gt;: the PHP4 constructor body end;;d4,256;;b3,0;;m0;;eTokens $tokens;;pint $start;;pint $end;;p">
</treenode>
<treenode node="fixParent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoPhp4ConstructorFixer.php;f12;194;5;245;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixParent(Tokens $tokens, $classStart, $classEnd)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fix calls to the parent constructor within a class.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: the Tokens instance&#10;    int &lt;b&gt;$classStart&lt;/b&gt;: the class start index&#10;    int &lt;b&gt;$classEnd&lt;/b&gt;: the class end index;;d4,195;;b3,0;;m0;;eTokens $tokens;;pint $classStart;;pint $classEnd;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoPhp4ConstructorFixer.php;f11;29;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoPhp4ConstructorFixer.php;f11;51;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="getWrapperMethodSequence;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoPhp4ConstructorFixer.php;f12;288;5;326;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getWrapperMethodSequence(Tokens $tokens, $method, $startIndex, $bodyIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Generate the sequence of tokens necessary for the body of a wrapper method that simply&#10;calls $this-&gt;{$method}( [args...] ) with the same arguments as its own signature.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: the Tokens instance&#10;    string &lt;b&gt;$method&lt;/b&gt;: the wrapped method name&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;: function/method start index&#10;    int &lt;b&gt;$bodyIndex&lt;/b&gt;: function/method body index&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   an array containing the sequence and case sensitiveness [ 0 =&gt; $seq, 1 =&gt; $case ];;d4,289;;b3,0;;m0;;eTokens $tokens;;pstring $method;;pint $startIndex;;pint $bodyIndex;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoPhp4ConstructorFixer.php;f11;60;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoPhp4ConstructorFixer.php;f11;68;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,69;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="NoShortBoolCastFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\NoShortBoolCastFixer.php;f6;23;1;106;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoShortBoolCastFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\NoShortBoolCastFixer.php;f14;56;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixShortCast;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\NoShortBoolCastFixer.php;f12;71;5;86;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixShortCast(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,72;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixShortCastToBoolCast;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\NoShortBoolCastFixer.php;f12;93;5;105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixShortCastToBoolCast(Tokens $tokens, $start, $end)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;&#10;    int &lt;b&gt;$end&lt;/b&gt;;;d4,94;;b3,0;;m0;;eTokens $tokens;;pint $start;;pint $end;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\NoShortBoolCastFixer.php;f11;37;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\NoShortBoolCastFixer.php;f11;28;5;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\NoShortBoolCastFixer.php;f11;48;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoShortEchoTagFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\NoShortEchoTagFixer.php;f6;23;1;69;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoShortEchoTagFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Vincent Klaiber &lt;hello&#10;&lt;b&gt;vinkla&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\NoShortEchoTagFixer.php;f14;47;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\NoShortEchoTagFixer.php;f11;28;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpTag\NoShortEchoTagFixer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoSinglelineWhitespaceBeforeSemicolonsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoSinglelineWhitespaceBeforeSemicolonsFixer.php;f6;23;1;64;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoSinglelineWhitespaceBeforeSemicolonsFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoSinglelineWhitespaceBeforeSemicolonsFixer.php;f14;47;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoSinglelineWhitespaceBeforeSemicolonsFixer.php;f11;28;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\NoSinglelineWhitespaceBeforeSemicolonsFixer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoSpacesAfterFunctionNameFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoSpacesAfterFunctionNameFixer.php;f6;26;1;181;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoSpacesAfterFunctionNameFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶4.6.&#10;&lt;b&gt;author&lt;/b&gt;: Varga Bence &lt;vbence&#10;&lt;b&gt;czentral&lt;/b&gt;: .org&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoSpacesAfterFunctionNameFixer.php;f14;59;5;105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,60;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixFunctionCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoSpacesAfterFunctionNameFixer.php;f12;113;5;119;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunctionCall(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixes whitespaces around braces of a function(y) call.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: tokens to handle&#10;    int &lt;b&gt;$index&lt;/b&gt;: index of token;;d4,114;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getBraceAfterVariableKinds;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoSpacesAfterFunctionNameFixer.php;f12;124;5;134;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBraceAfterVariableKinds()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;array|string&gt;;;d4,125;;b3,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoSpacesAfterFunctionNameFixer.php;f11;31;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getFunctionyTokenKinds;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoSpacesAfterFunctionNameFixer.php;f12;141;5;161;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFunctionyTokenKinds()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the token kinds which can work as function calls.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] Token names;;d4,142;;b3,0;;m0;;e">
</treenode>
<treenode node="getLanguageConstructionTokenKinds;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoSpacesAfterFunctionNameFixer.php;f12;168;5;180;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLanguageConstructionTokenKinds()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the token kinds of actually language construction.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,169;;b3,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoSpacesAfterFunctionNameFixer.php;f11;42;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoSpacesAfterFunctionNameFixer.php;f11;51;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoSpacesAroundOffsetFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoSpacesAroundOffsetFixer.php;f6;27;1;106;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoSpacesAroundOffsetFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Javier Spagnoletti &lt;phansys&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoSpacesAroundOffsetFixer.php;f14;55;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoSpacesAroundOffsetFixer.php;f14;94;5;105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,95;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoSpacesAroundOffsetFixer.php;f11;32;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoSpacesAroundOffsetFixer.php;f11;47;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoSpacesInsideParenthesisFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoSpacesInsideParenthesisFixer.php;f6;25;1;108;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoSpacesInsideParenthesisFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶4.3, ¶4.6, ¶5.&#10;&lt;b&gt;author&lt;/b&gt;: Marc Aubé&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoSpacesInsideParenthesisFixer.php;f14;66;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoSpacesInsideParenthesisFixer.php;f11;30;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoSpacesInsideParenthesisFixer.php;f11;49;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoSpacesInsideParenthesisFixer.php;f11;58;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="removeSpaceAroundToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoSpacesInsideParenthesisFixer.php;f12;100;5;107;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeSpaceAroundToken(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Remove spaces from token at a given index.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,101;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="NoSuchOptionException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Exception\NoSuchOptionException.php;f0;23;1;25;;;;vpos;;v;;aOutOfBoundsException;;cExceptionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoSuchOptionException extends \OutOfBoundsException implements ExceptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Thrown when trying to read an option that has no value set.&#10;When accessing optional options from within a lazy option or normalizer you should first&#10;check whether the optional option is set. You can do this with `isset($options[&apos;optional&apos;])`.&#10;In contrast to the {&#10;&lt;b&gt;link&lt;/b&gt;: UndefinedOptionsException}, this is a runtime exception that can&#10;occur when evaluating lazy options.&#10;&lt;b&gt;author&lt;/b&gt;: Tobias Schultze &lt;http://tobion.de&gt;;;d0,24;;b0,0;;m0;;e">
</treenode>
<treenode node="NoSuperfluousElseifFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoSuperfluousElseifFixer.php;f6;21;1;100;;;;vpos;;v;;aAbstractNoUselessElseFixer;;c;;r;;d0,22;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoSuperfluousElseifFixer.php;f14;47;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="convertElseifToIf;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoSuperfluousElseifFixer.php;f12;75;5;99;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    convertElseifToIf(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,76;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoSuperfluousElseifFixer.php;f11;34;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoSuperfluousElseifFixer.php;f11;26;5;29;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,27;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isElseif;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoSuperfluousElseifFixer.php;f12;62;5;69;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isElseif(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,63;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="NoSuperfluousPhpdocTagsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoSuperfluousPhpdocTagsFixer.php;f6;30;1;329;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r;;d0,31;;b0,0;;m0;;e">
<treenode node="annotationIsSuperfluous;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoSuperfluousPhpdocTagsFixer.php;f12;269;5;297;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    annotationIsSuperfluous(Annotation $annotation, array $info, array $symbolShortNames)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Annotation &lt;b&gt;$annotation&lt;/b&gt;&#10;    array &lt;b&gt;$info&lt;/b&gt;&#10;    array&lt;string,: string&gt; $symbolShortNames;;d4,270;;b3,0;;m0;;eAnnotation $annotation;;parray $info;;parray&lt;string,;;p">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoSuperfluousPhpdocTagsFixer.php;f14;93;5;148;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,94;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoSuperfluousPhpdocTagsFixer.php;f14;153;5;161;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,154;;b2,0;;m0;;e">
</treenode>
<treenode node="findDocumentedFunction;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoSuperfluousPhpdocTagsFixer.php;f12;163;5;174;;;;vpos;;v;;a;;r;;d4,164;;b3,0;;m0;;etokens;;pindex;;p">
</treenode>
<treenode node="getArgumentsInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoSuperfluousPhpdocTagsFixer.php;f12;183;5;220;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArgumentsInfo(Tokens $tokens, $start, $end)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;&#10;    int &lt;b&gt;$end&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;string, array&gt;;;d4,184;;b3,0;;m0;;eTokens $tokens;;pint $start;;pint $end;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoSuperfluousPhpdocTagsFixer.php;f11;35;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoSuperfluousPhpdocTagsFixer.php;f11;76;5;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,77;;b1,0;;m0;;e">
</treenode>
<treenode node="getReturnTypeInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoSuperfluousPhpdocTagsFixer.php;f12;222;5;233;;;;vpos;;v;;a;;r;;d4,223;;b3,0;;m0;;etokens;;pclosingParenthesisIndex;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoSuperfluousPhpdocTagsFixer.php;f11;85;5;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,86;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="parseTypeHint;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoSuperfluousPhpdocTagsFixer.php;f12;241;5;260;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseTypeHint(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: The index of the first token of the type hint;;d4,242;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="toComparableNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\NoSuperfluousPhpdocTagsFixer.php;f12;310;5;328;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    toComparableNames(array $types, array $symbolShortNames)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Normalizes types to make them comparable.&#10;Converts given types to lowercase, replaces imports aliases with&#10;their matching FQCN, and finally sorts the result.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$types&lt;/b&gt;: The types to normalize&#10;    array&lt;string,: string&gt; $symbolShortNames The imports aliases&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The normalized types;;d4,311;;b3,0;;m0;;estring[] $types;;parray&lt;string,;;p">
</treenode>
</treenode>
<treenode node="NoTrailingCommaInListCallFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoTrailingCommaInListCallFixer.php;f6;22;1;73;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoTrailingCommaInListCallFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoTrailingCommaInListCallFixer.php;f14;46;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoTrailingCommaInListCallFixer.php;f11;27;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoTrailingCommaInListCallFixer.php;f11;38;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,39;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoTrailingCommaInSinglelineArrayFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoTrailingCommaInSinglelineArrayFixer.php;f6;25;1;89;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoTrailingCommaInSinglelineArrayFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Sebastiaan Stok &lt;s.stok&#10;&lt;b&gt;rollerscapes&lt;/b&gt;: .net&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoTrailingCommaInSinglelineArrayFixer.php;f14;49;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoTrailingCommaInSinglelineArrayFixer.php;f12;64;5;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixArray(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,65;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoTrailingCommaInSinglelineArrayFixer.php;f11;30;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoTrailingCommaInSinglelineArrayFixer.php;f11;41;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoTrailingWhitespaceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoTrailingWhitespaceFixer.php;f6;29;1;112;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoTrailingWhitespaceFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶2.3.&#10;Don&apos;t add trailing spaces at the end of non-blank lines.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoTrailingWhitespaceFixer.php;f14;62;5;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoTrailingWhitespaceFixer.php;f11;34;5;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoTrailingWhitespaceFixer.php;f11;45;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,46;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoTrailingWhitespaceFixer.php;f11;54;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoTrailingWhitespaceInCommentFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoTrailingWhitespaceInCommentFixer.php;f6;24;1;74;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoTrailingWhitespaceInCommentFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoTrailingWhitespaceInCommentFixer.php;f14;51;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoTrailingWhitespaceInCommentFixer.php;f11;29;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\NoTrailingWhitespaceInCommentFixer.php;f11;43;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoUnneededControlParenthesesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededControlParenthesesFixer.php;f6;29;1;188;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoUnneededControlParenthesesFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Sullivan Senechal &lt;soullivaneuh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Gregor Harlan &lt;gharlan&#10;&lt;b&gt;web&lt;/b&gt;: .de&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededControlParenthesesFixer.php;f11;44;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Dynamic yield option set on constructor.;;d4,45;;b1,0;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededControlParenthesesFixer.php;f14;119;5;166;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,120;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededControlParenthesesFixer.php;f14;171;5;187;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,172;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededControlParenthesesFixer.php;f11;72;5;104;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,73;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededControlParenthesesFixer.php;f11;111;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Should be run before no_trailing_whitespace.&#10;{&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,112;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededControlParenthesesFixer.php;f11;57;5;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoUnneededCurlyBracesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededCurlyBracesFixer.php;f6;22;1;109;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoUnneededCurlyBracesFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,23;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededCurlyBracesFixer.php;f14;68;5;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,69;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="clearOverCompleteBraces;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededCurlyBracesFixer.php;f12;82;5;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearOverCompleteBraces(Tokens $tokens, $openIndex, $closeIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$openIndex&lt;/b&gt;: index of `{` token&#10;    int &lt;b&gt;$closeIndex&lt;/b&gt;: index of `}` token;;d4,83;;b3,0;;m0;;eTokens $tokens;;pint $openIndex;;pint $closeIndex;;p">
</treenode>
<treenode node="findCurlyBraceOpen;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededCurlyBracesFixer.php;f12;88;5;95;;;;vpos;;v;;a;;r;;d4,89;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededCurlyBracesFixer.php;f11;27;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededCurlyBracesFixer.php;f11;51;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededCurlyBracesFixer.php;f11;60;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isOverComplete;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUnneededCurlyBracesFixer.php;f12;103;5;108;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isOverComplete(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: index of `{` token;;d4,104;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="NoUnneededFinalMethodFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoUnneededFinalMethodFixer.php;f6;22;1;138;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoUnneededFinalMethodFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoUnneededFinalMethodFixer.php;f14;63;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,64;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoUnneededFinalMethodFixer.php;f12;84;5;115;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixClass(Tokens $tokens, $classOpenIndex, $classIsFinal)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classOpenIndex&lt;/b&gt;&#10;    bool &lt;b&gt;$classIsFinal&lt;/b&gt;;;d4,85;;b3,0;;m0;;eTokens $tokens;;pint $classOpenIndex;;pbool $classIsFinal;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoUnneededFinalMethodFixer.php;f11;27;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoUnneededFinalMethodFixer.php;f11;55;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isPrivateMethod;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\NoUnneededFinalMethodFixer.php;f12;124;5;137;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isPrivateMethod(Tokens $tokens, $index, $classOpenIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    int &lt;b&gt;$classOpenIndex&lt;/b&gt;;;d4,125;;b3,0;;m0;;eTokens $tokens;;pint $index;;pint $classOpenIndex;;p">
</treenode>
</treenode>
<treenode node="NoUnreachableDefaultArgumentValueFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoUnreachableDefaultArgumentValueFixer.php;f6;25;1;204;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoUnreachableDefaultArgumentValueFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Mark Scherer&#10;&lt;b&gt;author&lt;/b&gt;: Lucas Manzke &lt;lmanzke&#10;&lt;b&gt;outlook&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Gregor Harlan &lt;gharlan&#10;&lt;b&gt;web&lt;/b&gt;: .de&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoUnreachableDefaultArgumentValueFixer.php;f14;65;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="clearWhitespacesBeforeIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoUnreachableDefaultArgumentValueFixer.php;f12;192;5;203;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearWhitespacesBeforeIndex(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,193;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixFunctionDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoUnreachableDefaultArgumentValueFixer.php;f12;84;5;109;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunctionDefinition(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,85;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoUnreachableDefaultArgumentValueFixer.php;f11;30;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getLastNonDefaultArgumentIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoUnreachableDefaultArgumentValueFixer.php;f12;118;5;133;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLastNonDefaultArgumentIndex(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,119;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoUnreachableDefaultArgumentValueFixer.php;f11;49;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isEllipsis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoUnreachableDefaultArgumentValueFixer.php;f12;141;5;144;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isEllipsis(Tokens $tokens, $variableIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$variableIndex&lt;/b&gt;;;d4,142;;b3,0;;m0;;eTokens $tokens;;pint $variableIndex;;p">
</treenode>
<treenode node="isNonNullableTypehintedNullableVariable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoUnreachableDefaultArgumentValueFixer.php;f12;166;5;186;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isNonNullableTypehintedNullableVariable(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: Index of &quot;=&quot;;;d4,167;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoUnreachableDefaultArgumentValueFixer.php;f11;57;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="removeDefaultArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\NoUnreachableDefaultArgumentValueFixer.php;f12;151;5;158;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeDefaultArgument(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,152;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
</treenode>
<treenode node="NoUnsetCastFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\NoUnsetCastFixer.php;f6;23;1;90;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoUnsetCastFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\NoUnsetCastFixer.php;f14;47;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixUnsetCast;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\NoUnsetCastFixer.php;f12;60;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixUnsetCast(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,61;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\NoUnsetCastFixer.php;f11;28;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\NoUnsetCastFixer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoUnsetOnPropertyFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\NoUnsetOnPropertyFixer.php;f6;24;1;231;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoUnsetOnPropertyFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gert de Pagter &lt;BackEndTea&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\NoUnsetOnPropertyFixer.php;f14;66;5;85;;;;vpos;;v;;a;;r;;d4,67;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\NoUnsetOnPropertyFixer.php;f11;29;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\NoUnsetOnPropertyFixer.php;f11;60;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b1,0;;m0;;e">
</treenode>
<treenode node="getUnsetsInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\NoUnsetOnPropertyFixer.php;f12;93;5;115;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUnsetsInfo(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;array&lt;string, bool|int&gt;&gt;;;d4,94;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isAnyUnsetToTransform;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\NoUnsetOnPropertyFixer.php;f12;158;5;167;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAnyUnsetToTransform(array $unsetsInfo)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array&lt;array&lt;string,: bool|int&gt;&gt; $unsetsInfo;;d4,159;;b3,0;;m0;;earray&lt;array&lt;string,;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\NoUnsetOnPropertyFixer.php;f11;51;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isProperty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\NoUnsetOnPropertyFixer.php;f12;124;5;151;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isProperty(Tokens $tokens, $index, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,125;;b3,0;;m0;;eTokens $tokens;;pint $index;;pint $endIndex;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\NoUnsetOnPropertyFixer.php;f11;43;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="updateTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\NoUnsetOnPropertyFixer.php;f12;174;5;230;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    updateTokens(Tokens $tokens, array $unsetInfo, $isLastUnset)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    array&lt;string,: bool|int&gt; $unsetInfo&#10;    bool &lt;b&gt;$isLastUnset&lt;/b&gt;;;d4,175;;b3,0;;m0;;eTokens $tokens;;parray&lt;string,;;pbool $isLastUnset;;p">
</treenode>
</treenode>
<treenode node="NoUnusedImportsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoUnusedImportsFixer.php;f6;28;1;254;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoUnusedImportsFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoUnusedImportsFixer.php;f14;81;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,82;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoUnusedImportsFixer.php;f11;33;5;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoUnusedImportsFixer.php;f11;44;5;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,45;;b1,0;;m0;;e">
</treenode>
<treenode node="importIsUsed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoUnusedImportsFixer.php;f12;116;5;144;;;;vpos;;v;;a;;r;;d4,117;;b3,0;;m0;;etokens;;pnamespace;;pignoredIndexes;;pshortName;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoUnusedImportsFixer.php;f11;53;5;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,54;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="removeUseDeclaration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoUnusedImportsFixer.php;f12;146;5;229;;;;vpos;;v;;a;;r;;d4,147;;b3,0;;m0;;etokens;;puseDeclaration;;p">
</treenode>
<treenode node="removeUsesInSameNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoUnusedImportsFixer.php;f12;231;5;253;;;;vpos;;v;;a;;r;;d4,232;;b3,0;;m0;;etokens;;puseDeclarations;;pnamespaceDeclaration;;p">
</treenode>
<treenode node="supports;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\NoUnusedImportsFixer.php;f11;61;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    supports(\SplFileInfo $file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,62;;b1,0;;m0;;efile;;p">
</treenode>
</treenode>
<treenode node="NoUselessElseFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUselessElseFixer.php;f6;22;1;117;;;;vpos;;v;;aAbstractNoUselessElseFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoUselessElseFixer extends AbstractNoUselessElseFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,23;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUselessElseFixer.php;f14;48;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="clearElse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUselessElseFixer.php;f12;104;5;116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearElse(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: index of T_ELSE;;d4,105;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixEmptyElse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUselessElseFixer.php;f12;79;5;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixEmptyElse(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Remove tokens part of an `else` statement if not empty (i.e. no meaningful tokens inside).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: T_ELSE index;;d4,80;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUselessElseFixer.php;f11;35;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\NoUselessElseFixer.php;f11;27;5;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoUselessReturnFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\NoUselessReturnFixer.php;f6;22;1;110;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoUselessReturnFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,23;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\NoUselessReturnFixer.php;f14;66;5;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixFunction;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\NoUselessReturnFixer.php;f12;85;5;109;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunction(Tokens $tokens, $start, $end)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;: Token index of the opening brace token of the function&#10;    int &lt;b&gt;$end&lt;/b&gt;: Token index of the closing brace token of the function;;d4,86;;b3,0;;m0;;eTokens $tokens;;pint $start;;pint $end;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\NoUselessReturnFixer.php;f11;35;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\NoUselessReturnFixer.php;f11;57;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\NoUselessReturnFixer.php;f11;27;5;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NoWhitespaceBeforeCommaInArrayFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoWhitespaceBeforeCommaInArrayFixer.php;f6;30;1;153;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoWhitespaceBeforeCommaInArrayFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Adam Marczuk &lt;adam&#10;&lt;b&gt;marczuk&lt;/b&gt;: .info&gt;;;d0,31;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoWhitespaceBeforeCommaInArrayFixer.php;f14;70;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,71;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoWhitespaceBeforeCommaInArrayFixer.php;f14;82;5;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,83;;b2,0;;m0;;e">
</treenode>
<treenode node="fixSpacing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoWhitespaceBeforeCommaInArrayFixer.php;f12;105;5;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSpacing($index, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Method to fix spacing in array declaration.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;;;d4,106;;b3,0;;m0;;eint $index;;pTokens $tokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoWhitespaceBeforeCommaInArrayFixer.php;f11;35;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoWhitespaceBeforeCommaInArrayFixer.php;f11;62;5;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="skipNonArrayElements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NoWhitespaceBeforeCommaInArrayFixer.php;f12;137;5;152;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    skipNonArrayElements($index, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Method to move index over the non-array elements like function calls or function declarations.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   New index;;d4,138;;b3,0;;m0;;eint $index;;pTokens $tokens;;p">
</treenode>
</treenode>
<treenode node="NoWhitespaceInBlankLineFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoWhitespaceInBlankLineFixer.php;f6;25;1;102;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NoWhitespaceInBlankLineFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoWhitespaceInBlankLineFixer.php;f14;58;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixWhitespaceToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoWhitespaceInBlankLineFixer.php;f12;72;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixWhitespaceToken(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,73;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoWhitespaceInBlankLineFixer.php;f11;30;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoWhitespaceInBlankLineFixer.php;f11;41;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\NoWhitespaceInBlankLineFixer.php;f11;50;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NonPrintableCharacterFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\NonPrintableCharacterFixer.php;f6;33;1;170;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NonPrintableCharacterFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Removes Zero-width space (ZWSP), Non-breaking space (NBSP) and other invisible unicode symbols.&#10;&lt;b&gt;author&lt;/b&gt;: Ivan Boprzenkov &lt;ivan.borzenkov&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,34;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\NonPrintableCharacterFixer.php;f11;47;5;58;;;;vpos;;v;;a;;r;;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\NonPrintableCharacterFixer.php;f14;121;5;169;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,122;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\NonPrintableCharacterFixer.php;f14;101;5;116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,102;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\NonPrintableCharacterFixer.php;f11;63;5;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,64;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\NonPrintableCharacterFixer.php;f11;93;5;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,94;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\NonPrintableCharacterFixer.php;f11;85;5;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,86;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="NonStringInput;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f0;138;1;155;;;;vpos;;v;;aInput;;c;;r;;d0,139;;b0,0;;m0;;e">
<treenode node="getFirstArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f11;140;5;142;;;;vpos;;v;;a;;r;;d4,141;;b1,0;;m0;;e">
</treenode>
<treenode node="getParameterOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f11;148;5;150;;;;vpos;;v;;a;;r;;d4,149;;b1,0;;m0;;evalues;;pdefault;;ponlyParams;;p">
</treenode>
<treenode node="hasParameterOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f11;144;5;146;;;;vpos;;v;;a;;r;;d4,145;;b1,0;;m0;;evalues;;ponlyParams;;p">
</treenode>
<treenode node="parse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\EventListener\ErrorListenerTest.php;f11;152;5;154;;;;vpos;;v;;a;;r;;d4,153;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="NonStringifiable;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f0;1512;1;1514;;;;vpos;;v;;a;;r;;d0,1513;;b0,0;;m0;;e">
</treenode>
<treenode node="NormalizeIndexBraceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NormalizeIndexBraceFixer.php;f6;24;1;58;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NormalizeIndexBraceFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NormalizeIndexBraceFixer.php;f14;48;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NormalizeIndexBraceFixer.php;f11;29;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\NormalizeIndexBraceFixer.php;f11;40;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NotOperatorWithSpaceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NotOperatorWithSpaceFixer.php;f6;23;1;79;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NotOperatorWithSpaceFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Javier Spagnoletti &lt;phansys&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NotOperatorWithSpaceFixer.php;f14;63;5;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,64;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NotOperatorWithSpaceFixer.php;f11;28;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NotOperatorWithSpaceFixer.php;f11;46;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NotOperatorWithSpaceFixer.php;f11;55;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NotOperatorWithSuccessorSpaceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NotOperatorWithSuccessorSpaceFixer.php;f6;23;1;77;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NotOperatorWithSuccessorSpaceFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Javier Spagnoletti &lt;phansys&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NotOperatorWithSuccessorSpaceFixer.php;f14;63;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,64;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NotOperatorWithSuccessorSpaceFixer.php;f11;28;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NotOperatorWithSuccessorSpaceFixer.php;f11;46;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\NotOperatorWithSuccessorSpaceFixer.php;f11;55;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="NullCacheManager;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\NullCacheManager.php;f6;19;1;29;;;;vpos;;v;;aCacheManagerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NullCacheManager implements CacheManagerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Andreas Möller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="needFixing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\NullCacheManager.php;f11;21;5;24;;;;vpos;;v;;a;;r;;d4,22;;b1,0;;m0;;efile;;pfileContent;;p">
</treenode>
<treenode node="setFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\NullCacheManager.php;f11;26;5;28;;;;vpos;;v;;a;;r;;d4,27;;b1,0;;m0;;efile;;pfileContent;;p">
</treenode>
</treenode>
<treenode node="NullDiffer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\NullDiffer.php;f6;17;1;26;;;;vpos;;v;;aDifferInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NullDiffer implements DifferInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="diff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\NullDiffer.php;f11;22;5;25;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    diff($old, $new)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,23;;b1,0;;m0;;eold;;pnew;;p">
</treenode>
</treenode>
<treenode node="NullLogger;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\NullLogger.php;f0;12;1;27;;;;vpos;;v;;aAbstractLogger;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NullLogger extends AbstractLogger&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This Logger can be used to avoid conditional log calls.&#10;Logging should always be optional, and if no logger is provided to your&#10;library creating a NullLogger instance to have something to throw logs at&#10;is a good way to avoid littering your code with `if ($this-&gt;logger) { }`&#10;blocks.;;d0,13;;b0,0;;m0;;e">
<treenode node="log;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\NullLogger.php;f11;23;5;26;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    log($level, $message, array $context = array())&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Logs with an arbitrary level.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$level&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;&#10;    array &lt;b&gt;$context&lt;/b&gt;;;d4,24;;b1,0;;m0;;emixed $level;;pstring $message;;parray $context;;p">
</treenode>
</treenode>
<treenode node="NullOutput;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\NullOutput.php;f0;24;1;122;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\NullOutput.php;f6;17;1;22;;;;vpos;;v;;aOutputInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NullOutput implements OutputInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    NullOutput suppresses all output.&#10;$output = new NullOutput();s&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Tobias Schultze &lt;http://tobion.de&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="getFormatter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\NullOutput.php;f11;37;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormatter()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="getVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\NullOutput.php;f11;70;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getVerbosity()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,71;;b1,0;;m0;;e">
</treenode>
<treenode node="isDebug;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\NullOutput.php;f11;102;5;105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isDebug()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,103;;b1,0;;m0;;e">
</treenode>
<treenode node="isDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\NullOutput.php;f11;54;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isDecorated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b1,0;;m0;;e">
</treenode>
<treenode node="isQuiet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\NullOutput.php;f11;78;5;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isQuiet()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,79;;b1,0;;m0;;e">
</treenode>
<treenode node="isVerbose;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\NullOutput.php;f11;86;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isVerbose()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,87;;b1,0;;m0;;e">
</treenode>
<treenode node="isVeryVerbose;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\NullOutput.php;f11;94;5;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isVeryVerbose()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,95;;b1,0;;m0;;e">
</treenode>
<treenode node="printLegend;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\NullOutput.php;f11;19;5;21;;;;vpos;;v;;a;;r;;d4,20;;b1,0;;m0;;e">
</treenode>
<treenode node="setDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\NullOutput.php;f11;46;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDecorated($decorated)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;edecorated;;p">
</treenode>
<treenode node="setFormatter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\NullOutput.php;f11;29;5;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFormatter(OutputFormatterInterface $formatter)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;eformatter;;p">
</treenode>
<treenode node="setVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\NullOutput.php;f11;62;5;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setVerbosity($level)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b1,0;;m0;;elevel;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\NullOutput.php;f11;118;5;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    write($messages, $newline = false, $options = self::OUTPUT_NORMAL)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,119;;b1,0;;m0;;emessages;;pnewline;;poptions;;p">
</treenode>
<treenode node="writeln;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\NullOutput.php;f11;110;5;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writeln($messages, $options = self::OUTPUT_NORMAL)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,111;;b1,0;;m0;;emessages;;poptions;;p">
</treenode>
</treenode>
<treenode node="NullOutputTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\NullOutputTest.php;f0;19;1;87;;;;vpos;;v;;aTestCase;;c;;r;;d0,20;;b0,0;;m0;;e">
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\NullOutputTest.php;f11;21;5;31;;;;vpos;;v;;a;;r;;d4,22;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsDebug;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\NullOutputTest.php;f11;82;5;86;;;;vpos;;v;;a;;r;;d4,83;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsQuiet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\NullOutputTest.php;f11;64;5;68;;;;vpos;;v;;a;;r;;d4,65;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsVerbose;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\NullOutputTest.php;f11;70;5;74;;;;vpos;;v;;a;;r;;d4,71;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsVeryVerbose;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\NullOutputTest.php;f11;76;5;80;;;;vpos;;v;;a;;r;;d4,77;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\NullOutputTest.php;f11;57;5;62;;;;vpos;;v;;a;;r;;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetFormatter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\NullOutputTest.php;f11;42;5;48;;;;vpos;;v;;a;;r;;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\NullOutputTest.php;f11;50;5;55;;;;vpos;;v;;a;;r;;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="testVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\NullOutputTest.php;f11;33;5;40;;;;vpos;;v;;a;;r;;d4,34;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="NullableTypeTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\NullableTypeTransformer.php;f6;26;1;69;;;;vpos;;v;;aAbstractTransformer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NullableTypeTransformer extends AbstractTransformer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform `?` operator into CT::T_NULLABLE_TYPE in `function foo(?Bar $b) {}`.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\NullableTypeTransformer.php;f11;31;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\NullableTypeTransformer.php;f11;39;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\NullableTypeTransformer.php;f11;48;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredPhpVersionId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\NullableTypeTransformer.php;f11;56;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    process(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b1,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
</treenode>
<treenode node="NumberComparator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Comparator\NumberComparator.php;f0;34;1;78;;;;vpos;;v;;aComparator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class NumberComparator extends Comparator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    NumberComparator compiles a simple comparison to an anonymous&#10;subroutine, which you can call with a value to be tested again.&#10;Now this would be very pointless, if NumberCompare didn&apos;t understand&#10;magnitudes.&#10;The target value may use magnitudes of kilobytes (k, ki),&#10;megabytes (m, mi), or gigabytes (g, gi).  Those suffixed&#10;with an i use the appropriate 2**n version in accordance with the&#10;IEC standard: http://physics.nist.gov/cuu/Units/binary.html&#10;Based on the Perl Number::Compare module.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt; PHP port&#10;&lt;b&gt;author&lt;/b&gt;: Richard Clamp &lt;richardc&#10;&lt;b&gt;unixbeard&lt;/b&gt;: .net&gt; Perl version&#10;&lt;b&gt;copyright&lt;/b&gt;: 2004-2005 Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;copyright&lt;/b&gt;: 2002 Richard Clamp &lt;richardc&#10;&lt;b&gt;unixbeard&lt;/b&gt;: .net&gt;&#10;&lt;b&gt;see&lt;/b&gt;: http://physics.nist.gov/cuu/Units/binary.html;;d0,35;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Comparator\NumberComparator.php;f11;41;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(?string $test)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException If the test is not understood&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int &lt;b&gt;$test&lt;/b&gt;: A comparison string or an integer;;d4,42;;b1,0;;m0;;estring|int $test;;p">
</treenode>
</treenode>
<treenode node="NumberComparatorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\NumberComparatorTest.php;f0;16;1;107;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="getConstructorTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\NumberComparatorTest.php;f11;83;5;106;;;;vpos;;v;;a;;r;;d4,84;;b1,0;;m0;;e">
</treenode>
<treenode node="getTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\NumberComparatorTest.php;f11;53;5;81;;;;vpos;;v;;a;;r;;d4,54;;b1,0;;m0;;e">
</treenode>
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\NumberComparatorTest.php;f11;21;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testConstructor($successes, $failures)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getConstructorTestData;;d4,22;;b1,0;;m0;;esuccesses;;pfailures;;p">
</treenode>
<treenode node="testTest;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Comparator\NumberComparatorTest.php;f11;40;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testTest($test, $match, $noMatch)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getTestData;;d4,41;;b1,0;;m0;;etest;;pmatch;;pnoMatch;;p">
</treenode>
</treenode>
<treenode node="ObjectOperatorWithoutWhitespaceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\ObjectOperatorWithoutWhitespaceFixer.php;f6;23;1;66;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ObjectOperatorWithoutWhitespaceFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\ObjectOperatorWithoutWhitespaceFixer.php;f14;47;5;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\ObjectOperatorWithoutWhitespaceFixer.php;f11;28;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\ObjectOperatorWithoutWhitespaceFixer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="ObjectsProvider;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\ObjectsProvider.php;f0;24;1;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ObjectsProvider&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jean-François Simon &lt;contact&#10;&lt;b&gt;jfsimon&lt;/b&gt;: .fr&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="getApplications;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\ObjectsProvider.php;f18;74;5;80;;;;vpos;;v;;a;;r;;d4,75;;b1,5;;m0;;e">
</treenode>
<treenode node="getCommands;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\ObjectsProvider.php;f18;66;5;72;;;;vpos;;v;;a;;r;;d4,67;;b1,5;;m0;;e">
</treenode>
<treenode node="getInputArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\ObjectsProvider.php;f18;26;5;36;;;;vpos;;v;;a;;r;;d4,27;;b1,5;;m0;;e">
</treenode>
<treenode node="getInputDefinitions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\ObjectsProvider.php;f18;53;5;64;;;;vpos;;v;;a;;r;;d4,54;;b1,5;;m0;;e">
</treenode>
<treenode node="getInputOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\ObjectsProvider.php;f18;38;5;51;;;;vpos;;v;;a;;r;;d4,39;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="OptionDefinitionException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Exception\OptionDefinitionException.php;f0;18;1;20;;;;vpos;;v;;aLogicException;;cExceptionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class OptionDefinitionException extends \LogicException implements ExceptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Thrown when two lazy options have a cyclic dependency.&#10;&lt;b&gt;author&lt;/b&gt;: Bernhard Schussek &lt;bschussek&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
</treenode>
<treenode node="OptionsResolver;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f0;27;1;1197;;;;vpos;;v;;aOptions;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class OptionsResolver implements Options&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Validates options and merges them with default values.&#10;&lt;b&gt;author&lt;/b&gt;: Bernhard Schussek &lt;bschussek&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Tobias Schultze &lt;http://tobion.de&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="addAllowedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;681;5;701;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addAllowedTypes($option, $allowedTypes)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds allowed types for an option.&#10;The types are merged with the allowed types defined previously.&#10;Any type for which a corresponding is_&lt;type&gt;() function exists is&#10;acceptable. Additionally, fully-qualified class or interface names may&#10;be passed.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: UndefinedOptionsException If the option is undefined&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException           If called from a lazy option or normalizer&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The option name&#10;    string|string[] &lt;b&gt;$allowedTypes&lt;/b&gt;: One or more accepted types;;d4,682;;b1,0;;m0;;estring $option;;pstring|string[] $allowedTypes;;p">
</treenode>
<treenode node="addAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;605;5;629;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addAllowedValues($option, $allowedValues)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds allowed values for an option.&#10;The values are merged with the allowed values defined previously.&#10;Instead of passing values, you may also pass a closures with the&#10;following signature:&#10;function ($value) {&#10;// return true or false&#10;}&#10;The closure receives the value as argument and should return true to&#10;accept the value and false to reject the value.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: UndefinedOptionsException If the option is undefined&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException           If called from a lazy option or normalizer&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The option name&#10;    mixed &lt;b&gt;$allowedValues&lt;/b&gt;: One or more acceptable values/closures;;d4,606;;b1,0;;m0;;estring $option;;pmixed $allowedValues;;p">
</treenode>
<treenode node="addNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;521;5;541;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addNormalizer(string $option, \Closure $normalizer, bool $forcePrepend = false): self&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a normalizer for an option.&#10;The normalizer should be a closure with the following signature:&#10;function (Options $options, $value): mixed {&#10;// ...&#10;}&#10;The closure is invoked when {&#10;&lt;b&gt;link&lt;/b&gt;: resolve()} is called. The closure&#10;has access to the resolved values of other options through the passed&#10;{&#10;&lt;b&gt;link&lt;/b&gt;: Options} instance.&#10;The second parameter passed to the closure is the value of&#10;the option.&#10;The resolved option value is set to the return value of the closure.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: UndefinedOptionsException If the option is undefined&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException           If called from a lazy option or normalizer&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The option name&#10;    \Closure &lt;b&gt;$normalizer&lt;/b&gt;: The normalizer&#10;    bool &lt;b&gt;$forcePrepend&lt;/b&gt;: If set to true, prepend instead of appending;;d4,522;;b1,0;;m0;;estring $option;;p\Closure $normalizer;;pbool $forcePrepend;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;735;5;753;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clear()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Removes all options.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException If called from a lazy option or normalizer;;d4,736;;b1,0;;m0;;e">
</treenode>
<treenode node="count;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;1118;5;1125;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    count()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the number of set options.&#10;This may be only a subset of the defined options.&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException If accessing this method outside of {&#10;&lt;b&gt;link&lt;/b&gt;: resolve()}&#10;&lt;b&gt;see&lt;/b&gt;: \Countable::count()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Number of options;;d4,1119;;b1,0;;m0;;e">
</treenode>
<treenode node="formatTypeOf;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f12;1134;5;1137;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    formatTypeOf($value): string&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a string representation of the type of the value.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$value&lt;/b&gt;: The value to return the type of&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The type of the value;;d4,1135;;b3,0;;m0;;emixed $value;;p">
</treenode>
<treenode node="formatValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f12;1148;5;1179;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    formatValue($value): string&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a string representation of the value.&#10;This method returns the equivalent PHP tokens for most scalar types&#10;(i.e. &quot;false&quot; for false, &quot;1&quot; for 1 etc.). Strings are always wrapped&#10;in double quotes (&quot;).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$value&lt;/b&gt;: The value to format as string;;d4,1149;;b3,0;;m0;;emixed $value;;p">
</treenode>
<treenode node="formatValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f12;1189;5;1196;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    formatValues(array $values): string&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a string representation of a list of values.&#10;Each of the values is converted to a string using&#10;{&#10;&lt;b&gt;link&lt;/b&gt;: formatValue()}. The values are then concatenated with commas.&#10;&lt;b&gt;see&lt;/b&gt;: formatValue();;d4,1190;;b3,0;;m0;;evalues;;p">
</treenode>
<treenode node="getDefinedOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;389;5;392;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinedOptions()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the names of all defined options.&#10;&lt;b&gt;see&lt;/b&gt;: isDefined()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] The names of the defined options;;d4,390;;b1,0;;m0;;e">
</treenode>
<treenode node="getMissingOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;336;5;339;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMissingOptions()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the names of all options missing a default value.&#10;&lt;b&gt;see&lt;/b&gt;: isMissing()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] The names of the missing options;;d4,337;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;308;5;311;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredOptions()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the names of all required options.&#10;&lt;b&gt;see&lt;/b&gt;: isRequired()&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] The names of the required options;;d4,309;;b1,0;;m0;;e">
</treenode>
<treenode node="hasDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;259;5;262;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasDefault($option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether a default value is set for an option.&#10;Returns true if {&#10;&lt;b&gt;link&lt;/b&gt;: setDefault()} was called for this option.&#10;An option is also considered set if it was set to null.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The option name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Whether a default value is set;;d4,260;;b1,0;;m0;;estring $option;;p">
</treenode>
<treenode node="isDefined;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;377;5;380;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isDefined($option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether an option is defined.&#10;Returns true for any option passed to {&#10;&lt;b&gt;link&lt;/b&gt;: setDefault()},&#10;{&#10;&lt;b&gt;link&lt;/b&gt;: setRequired()} or {&#10;&lt;b&gt;link&lt;/b&gt;: setDefined()}.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The option name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Whether the option is defined;;d4,378;;b1,0;;m0;;estring $option;;p">
</treenode>
<treenode node="isDeprecated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;445;5;448;;;;vpos;;v;;a bool;;r;;d4,446;;b1,0;;m0;;eoption;;p">
</treenode>
<treenode node="isMissing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;324;5;327;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isMissing($option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether an option is missing a default value.&#10;An option is missing if it was passed to {&#10;&lt;b&gt;link&lt;/b&gt;: setRequired()}, but not&#10;to {&#10;&lt;b&gt;link&lt;/b&gt;: setDefault()}. This option must be passed explicitly to&#10;{&#10;&lt;b&gt;link&lt;/b&gt;: resolve()}, otherwise an exception will be thrown.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The name of the option&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Whether the option is missing;;d4,325;;b1,0;;m0;;estring $option;;p">
</treenode>
<treenode node="isNested;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;394;5;397;;;;vpos;;v;;a bool;;r;;d4,395;;b1,0;;m0;;eoption;;p">
</treenode>
<treenode node="isRequired;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;296;5;299;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRequired($option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether an option is required.&#10;An option is required if it was passed to {&#10;&lt;b&gt;link&lt;/b&gt;: setRequired()}.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The name of the option&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Whether the option is required;;d4,297;;b1,0;;m0;;estring $option;;p">
</treenode>
<treenode node="offsetExists;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;1078;5;1085;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    offsetExists($option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether a resolved option with the given name exists.&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException If accessing this method outside of {&#10;&lt;b&gt;link&lt;/b&gt;: resolve()}&#10;&lt;b&gt;see&lt;/b&gt;: \ArrayAccess::offsetExists()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The option name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Whether the option is set;;d4,1079;;b1,0;;m0;;estring $option;;p">
</treenode>
<treenode node="offsetGet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;842;5;1036;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    offsetGet($option/*, bool $triggerDeprecation = true*/)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the resolved value of an option.&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException           If accessing this method outside of&#10;{&#10;&lt;b&gt;link&lt;/b&gt;: resolve()}&#10;&lt;b&gt;throws&lt;/b&gt;: NoSuchOptionException     If the option is not set&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidOptionsException   If the option doesn&apos;t fulfill the&#10;specified validation rules&#10;&lt;b&gt;throws&lt;/b&gt;: OptionDefinitionException If there is a cyclic dependency between&#10;lazy options and/or normalizers&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The option name&#10;    bool &lt;b&gt;$triggerDeprecation&lt;/b&gt;: Whether to trigger the deprecation or not (true by default)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The option value;;d4,843;;b1,0;;m0;;eoption;;p">
</treenode>
<treenode node="offsetSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;1092;5;1095;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    offsetSet($option, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Not supported.&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException;;d4,1093;;b1,0;;m0;;eoption;;pvalue;;p">
</treenode>
<treenode node="offsetUnset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;1102;5;1105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    offsetUnset($option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Not supported.&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException;;d4,1103;;b1,0;;m0;;eoption;;p">
</treenode>
<treenode node="remove;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;714;5;726;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    remove($optionNames)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Removes the option with the given name.&#10;Undefined options are ignored.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException If called from a lazy option or normalizer&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$optionNames&lt;/b&gt;: One or more option names;;d4,715;;b1,0;;m0;;estring|string[] $optionNames;;p">
</treenode>
<treenode node="resolve;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;779;5;824;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resolve(array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Merges options with the default values stored in the container and&#10;validates them.&#10;Exceptions are thrown if:&#10;- Undefined options are passed;s&#10;- Required options are missing;s&#10;- Options have invalid types;s&#10;- Options have invalid values.&#10;&lt;b&gt;throws&lt;/b&gt;: UndefinedOptionsException If an option name is undefined&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidOptionsException   If an option doesn&apos;t fulfill the&#10;specified validation rules&#10;&lt;b&gt;throws&lt;/b&gt;: MissingOptionsException   If a required option is missing&#10;&lt;b&gt;throws&lt;/b&gt;: OptionDefinitionException If there is a cyclic dependency between&#10;lazy options and/or normalizers&#10;&lt;b&gt;throws&lt;/b&gt;: NoSuchOptionException     If a lazy option reads an unavailable option&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException           If called from a lazy option or normalizer&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$options&lt;/b&gt;: A map of option names to values&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The merged and validated options;;d4,780;;b1,0;;m0;;earray $options;;p">
</treenode>
<treenode node="setAllowedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;646;5;662;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAllowedTypes($option, $allowedTypes)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets allowed types for an option.&#10;Any type for which a corresponding is_&lt;type&gt;() function exists is&#10;acceptable. Additionally, fully-qualified class or interface names may&#10;be passed.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: UndefinedOptionsException If the option is undefined&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException           If called from a lazy option or normalizer&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The option name&#10;    string|string[] &lt;b&gt;$allowedTypes&lt;/b&gt;: One or more accepted types;;d4,647;;b1,0;;m0;;estring $option;;pstring|string[] $allowedTypes;;p">
</treenode>
<treenode node="setAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;564;5;580;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAllowedValues($option, $allowedValues)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets allowed values for an option.&#10;Instead of passing values, you may also pass a closures with the&#10;following signature:&#10;function ($value) {&#10;// return true or false&#10;}&#10;The closure receives the value as argument and should return true to&#10;accept the value and false to reject the value.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: UndefinedOptionsException If the option is undefined&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException           If called from a lazy option or normalizer&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The option name&#10;    mixed &lt;b&gt;$allowedValues&lt;/b&gt;: One or more acceptable values/closures;;d4,565;;b1,0;;m0;;estring $option;;pmixed $allowedValues;;p">
</treenode>
<treenode node="setDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;165;5;229;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDefault($option, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the default value of a given option.&#10;If the default value should be set based on other options, you can pass&#10;a closure with the following signature:&#10;function (Options $options) {&#10;// ...&#10;}&#10;The closure will be evaluated when {&#10;&lt;b&gt;link&lt;/b&gt;: resolve()} is called. The&#10;closure has access to the resolved values of other options through the&#10;passed {&#10;&lt;b&gt;link&lt;/b&gt;: Options} instance:&#10;function (Options $options) {&#10;if (isset($options[&apos;port&apos;])) {&#10;// ...&#10;}&#10;}&#10;If you want to access the previously set default value, add a second&#10;argument to the closure&apos;s signature:&#10;$options-&gt;setDefault(&apos;name&apos;, &apos;Default Name&apos;);s&#10;$options-&gt;setDefault(&apos;name&apos;, function (Options $options, $previousValue) {&#10;// &apos;Default Name&apos; === $previousValue&#10;});s&#10;This is mostly useful if the configuration of the {&#10;&lt;b&gt;link&lt;/b&gt;: Options} object&#10;is spread across different locations of your code, such as base and&#10;sub-classes.&#10;If you want to define nested options, you can pass a closure with the&#10;following signature:&#10;$options-&gt;setDefault(&apos;database&apos;, function (OptionsResolver $resolver) {&#10;$resolver-&gt;setDefined([&apos;dbname&apos;, &apos;host&apos;, &apos;port&apos;, &apos;user&apos;, &apos;pass&apos;]);s&#10;}&#10;To get access to the parent options, add a second argument to the closure&apos;s&#10;signature:&#10;function (OptionsResolver $resolver, Options $parent) {&#10;// &apos;default&apos; === $parent[&apos;connection&apos;]&#10;}&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException If called from a lazy option or normalizer&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The name of the option&#10;    mixed &lt;b&gt;$value&lt;/b&gt;: The default value of the option;;d4,166;;b1,0;;m0;;estring $option;;pmixed $value;;p">
</treenode>
<treenode node="setDefaults;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;240;5;247;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDefaults(array $defaults)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets a list of default values.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException If called from a lazy option or normalizer&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$defaults&lt;/b&gt;: The default values to set;;d4,241;;b1,0;;m0;;earray $defaults;;p">
</treenode>
<treenode node="setDefined;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;354;5;365;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDefined($optionNames)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines a valid option name.&#10;Defines an option name without setting a default value. The option will&#10;be accepted when passed to {&#10;&lt;b&gt;link&lt;/b&gt;: resolve()}. When not passed, the&#10;option will not be included in the resolved options.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException If called from a lazy option or normalizer&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$optionNames&lt;/b&gt;: One or more option names;;d4,355;;b1,0;;m0;;estring|string[] $optionNames;;p">
</treenode>
<treenode node="setDeprecated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;418;5;443;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDeprecated(string $option, $deprecationMessage = &apos;The option &quot;%name%&quot; is deprecated.&apos;): self&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Deprecates an option, allowed types or values.&#10;Instead of passing the message, you may also pass a closure with the&#10;following signature:&#10;function (Options $options, $value): string {&#10;// ...&#10;}&#10;The closure receives the value as argument and should return a string.&#10;Return an empty string to ignore the option deprecation.&#10;The closure is invoked when {&#10;&lt;b&gt;link&lt;/b&gt;: resolve()} is called. The parameter&#10;passed to the closure is the value of the option after validating it&#10;and before normalizing it.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|\Closure &lt;b&gt;$deprecationMessage&lt;/b&gt;;;d4,419;;b1,0;;m0;;eoption;;pdeprecationMessage;;p">
</treenode>
<treenode node="setNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;476;5;492;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setNormalizer($option, \Closure $normalizer)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the normalizer for an option.&#10;The normalizer should be a closure with the following signature:&#10;function (Options $options, $value) {&#10;// ...&#10;}&#10;The closure is invoked when {&#10;&lt;b&gt;link&lt;/b&gt;: resolve()} is called. The closure&#10;has access to the resolved values of other options through the passed&#10;{&#10;&lt;b&gt;link&lt;/b&gt;: Options} instance.&#10;The second parameter passed to the closure is the value of&#10;the option.&#10;The resolved option value is set to the return value of the closure.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: UndefinedOptionsException If the option is undefined&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException           If called from a lazy option or normalizer&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$option&lt;/b&gt;: The option name&#10;    \Closure &lt;b&gt;$normalizer&lt;/b&gt;: The normalizer;;d4,477;;b1,0;;m0;;estring $option;;p\Closure $normalizer;;p">
</treenode>
<treenode node="setRequired;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f11;273;5;285;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setRequired($optionNames)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Marks one or more options as required.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: AccessException If called from a lazy option or normalizer&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$optionNames&lt;/b&gt;: One or more option names;;d4,274;;b1,0;;m0;;estring|string[] $optionNames;;p">
</treenode>
<treenode node="verifyTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\OptionsResolver.php;f12;1038;5;1065;;;;vpos;;v;;a bool;;r;;d4,1039;;b3,0;;m0;;etype;;pvalue;;pinvalidTypes;;plevel;;p">
</treenode>
</treenode>
<treenode node="OptionsResolverIntrospector;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Debug\OptionsResolverIntrospector.php;f0;22;1;107;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class OptionsResolverIntrospector&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Maxime Steinhausser &lt;maxime.steinhausser&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;final&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Debug\OptionsResolverIntrospector.php;f11;26;5;40;;;;vpos;;v;;a;;r;;d4,27;;b1,0;;m0;;eoptionsResolver;;p">
</treenode>
<treenode node="getAllowedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Debug\OptionsResolverIntrospector.php;f11;67;5;70;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllowedTypes(string $option): array&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: NoConfigurationException on no configured types&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,68;;b1,0;;m0;;eoption;;p">
</treenode>
<treenode node="getAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Debug\OptionsResolverIntrospector.php;f11;77;5;80;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllowedValues(string $option): array&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: NoConfigurationException on no configured values&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,78;;b1,0;;m0;;eoption;;p">
</treenode>
<treenode node="getDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Debug\OptionsResolverIntrospector.php;f11;47;5;50;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefault(string $option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: NoConfigurationException on no configured value;;d4,48;;b1,0;;m0;;eoption;;p">
</treenode>
<treenode node="getDeprecationMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Debug\OptionsResolverIntrospector.php;f11;103;5;106;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDeprecationMessage(string $option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: NoConfigurationException on no configured deprecation&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |\Closure;;d4,104;;b1,0;;m0;;eoption;;p">
</treenode>
<treenode node="getLazyClosures;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Debug\OptionsResolverIntrospector.php;f11;57;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLazyClosures(string $option): array&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \Closure[]&#10;&lt;b&gt;throws&lt;/b&gt;: NoConfigurationException on no configured closures;;d4,58;;b1,0;;m0;;eoption;;p">
</treenode>
<treenode node="getNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Debug\OptionsResolverIntrospector.php;f11;85;50;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: NoConfigurationException on no configured normalizer;;d-1,-1;;b1,0;;m0;;eoption;;p">
</treenode>
<treenode node="getNormalizers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Debug\OptionsResolverIntrospector.php;f11;93;5;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNormalizers(string $option): array&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: NoConfigurationException when no normalizer is configured;;d4,94;;b1,0;;m0;;eoption;;p">
</treenode>
</treenode>
<treenode node="OptionsResolverIntrospectorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f0;18;1;255;;;;vpos;;v;;aTestCase;;c;;r;;d0,19;;b0,0;;m0;;e">
<treenode node="testGetAllowedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;90;5;98;;;;vpos;;v;;a;;r;;d4,91;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetAllowedTypesThrowsOnNoConfiguredValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;100;5;109;;;;vpos;;v;;a;;r;;d4,101;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetAllowedTypesThrowsOnNotDefinedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;111;5;119;;;;vpos;;v;;a;;r;;d4,112;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;121;5;129;;;;vpos;;v;;a;;r;;d4,122;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetAllowedValuesThrowsOnNoConfiguredValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;131;5;140;;;;vpos;;v;;a;;r;;d4,132;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetAllowedValuesThrowsOnNotDefinedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;142;5;150;;;;vpos;;v;;a;;r;;d4,143;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetClosureDeprecationMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;225;5;233;;;;vpos;;v;;a;;r;;d4,226;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;20;5;27;;;;vpos;;v;;a;;r;;d4,21;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDefaultNull;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;29;5;36;;;;vpos;;v;;a;;r;;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDefaultThrowsOnNoConfiguredValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;38;5;47;;;;vpos;;v;;a;;r;;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDefaultThrowsOnNotDefinedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;49;5;57;;;;vpos;;v;;a;;r;;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDeprecationMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;215;5;223;;;;vpos;;v;;a;;r;;d4,216;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDeprecationMessageThrowsOnNoConfiguredValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;235;5;244;;;;vpos;;v;;a;;r;;d4,236;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDeprecationMessageThrowsOnNotDefinedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;246;5;254;;;;vpos;;v;;a;;r;;d4,247;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetLazyClosures;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;59;5;67;;;;vpos;;v;;a;;r;;d4,60;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetLazyClosuresThrowsOnNoConfiguredValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;69;5;78;;;;vpos;;v;;a;;r;;d4,70;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetLazyClosuresThrowsOnNotDefinedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;80;5;88;;;;vpos;;v;;a;;r;;d4,81;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;152;5;160;;;;vpos;;v;;a;;r;;d4,153;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetNormalizerThrowsOnNoConfiguredValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;162;5;171;;;;vpos;;v;;a;;r;;d4,163;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetNormalizerThrowsOnNotDefinedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;173;5;181;;;;vpos;;v;;a;;r;;d4,174;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetNormalizers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;183;5;192;;;;vpos;;v;;a;;r;;d4,184;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetNormalizersThrowsOnNoConfiguredValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;194;5;203;;;;vpos;;v;;a;;r;;d4,195;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetNormalizersThrowsOnNotDefinedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\Debug\OptionsResolverIntrospectorTest.php;f11;205;5;213;;;;vpos;;v;;a;;r;;d4,206;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="OptionsResolverTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f0;19;1;2375;;;;vpos;;v;;aTestCase;;c;;r;;d0,20;;b0,0;;m0;;e">
<treenode node="provideDeprecationData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;540;5;746;;;;vpos;;v;;a;;r;;d4,541;;b1,0;;m0;;e">
</treenode>
<treenode node="provideInvalidTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;838;5;850;;;;vpos;;v;;a;;r;;d4,839;;b1,0;;m0;;e">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f14;26;5;29;;;;vpos;;v;;a void;;r;;d4,27;;b2,0;;m0;;e">
</treenode>
<treenode node="testAccessPreviousDefaultValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;137;5;150;;;;vpos;;v;;a;;r;;d4,138;;b1,0;;m0;;e">
</treenode>
<treenode node="testAccessPreviousLazyDefaultValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;152;5;167;;;;vpos;;v;;a;;r;;d4,153;;b1,0;;m0;;e">
</treenode>
<treenode node="testAccessToParentOptionFromNestedNormalizerAndLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2350;5;2374;;;;vpos;;v;;a;;r;;d4,2351;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddAllowedTypesDoesNotOverwrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;962;5;971;;;;vpos;;v;;a;;r;;d4,963;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddAllowedTypesDoesNotOverwrite2;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;973;5;982;;;;vpos;;v;;a;;r;;d4,974;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddAllowedTypesFailsIfUnknownOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;910;5;914;;;;vpos;;v;;a;;r;;d4,911;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddAllowedValuesDoesNotOverwrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1181;5;1188;;;;vpos;;v;;a;;r;;d4,1182;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddAllowedValuesDoesNotOverwrite2;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1190;5;1197;;;;vpos;;v;;a;;r;;d4,1191;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddAllowedValuesFailsIfUnknownOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1121;5;1125;;;;vpos;;v;;a;;r;;d4,1122;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddNormalizerClosure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1473;5;1486;;;;vpos;;v;;a;;r;;d4,1474;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddNormalizerFailsIfUnknownOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1503;5;1507;;;;vpos;;v;;a;;r;;d4,1504;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddNormalizerReturnsThis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1466;5;1471;;;;vpos;;v;;a;;r;;d4,1467;;b1,0;;m0;;e">
</treenode>
<treenode node="testArrayAccess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1721;5;1749;;;;vpos;;v;;a;;r;;d4,1722;;b1,0;;m0;;e">
</treenode>
<treenode node="testArrayAccessExistsFailsOutsideResolve;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1759;5;1765;;;;vpos;;v;;a;;r;;d4,1760;;b1,0;;m0;;e">
</treenode>
<treenode node="testArrayAccessGetFailsOutsideResolve;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1751;5;1757;;;;vpos;;v;;a;;r;;d4,1752;;b1,0;;m0;;e">
</treenode>
<treenode node="testArrayAccessSetNotSupported;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1767;5;1771;;;;vpos;;v;;a;;r;;d4,1768;;b1,0;;m0;;e">
</treenode>
<treenode node="testArrayAccessUnsetNotSupported;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1773;5;1779;;;;vpos;;v;;a;;r;;d4,1774;;b1,0;;m0;;e">
</treenode>
<treenode node="testCaughtExceptionFromLazyDoesNotCrashOptionResolver;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1410;5;1432;;;;vpos;;v;;a;;r;;d4,1411;;b1,0;;m0;;e">
</treenode>
<treenode node="testCaughtExceptionFromNormalizerDoesNotCrashOptionResolver;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1384;5;1408;;;;vpos;;v;;a;;r;;d4,1385;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearAllowedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1674;5;1682;;;;vpos;;v;;a;;r;;d4,1675;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1684;5;1692;;;;vpos;;v;;a;;r;;d4,1685;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1652;5;1660;;;;vpos;;v;;a;;r;;d4,1653;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1662;5;1672;;;;vpos;;v;;a;;r;;d4,1663;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearOptionAndNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1706;5;1719;;;;vpos;;v;;a;;r;;d4,1707;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearRemovesAllOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1642;5;1650;;;;vpos;;v;;a;;r;;d4,1643;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearReturnsThis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1637;5;1640;;;;vpos;;v;;a;;r;;d4,1638;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearedOptionsAreNotDefined;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;429;5;436;;;;vpos;;v;;a;;r;;d4,430;;b1,0;;m0;;e">
</treenode>
<treenode node="testClosureWithoutParametersNotInvoked;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;126;5;135;;;;vpos;;v;;a;;r;;d4,127;;b1,0;;m0;;e">
</treenode>
<treenode node="testClosureWithoutTypeHintNotInvoked;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;115;5;124;;;;vpos;;v;;a;;r;;d4,116;;b1,0;;m0;;e">
</treenode>
<treenode node="testCount;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1821;5;1833;;;;vpos;;v;;a;;r;;d4,1822;;b1,0;;m0;;e">
</treenode>
<treenode node="testCountFailsOutsideResolve;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1840;5;1849;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testCountFailsOutsideResolve()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    In resolve() we count the options that are actually set (which may be&#10;only a subset of the defined options). Outside of resolve(), it&apos;s not&#10;clear what is counted.;;d4,1841;;b1,0;;m0;;e">
</treenode>
<treenode node="testDefinedOptionsIncludedIfDefaultSetAfter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;368;5;374;;;;vpos;;v;;a;;r;;d4,369;;b1,0;;m0;;e">
</treenode>
<treenode node="testDefinedOptionsIncludedIfDefaultSetBefore;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;360;5;366;;;;vpos;;v;;a;;r;;d4,361;;b1,0;;m0;;e">
</treenode>
<treenode node="testDefinedOptionsIncludedIfPassedToResolve;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;376;5;381;;;;vpos;;v;;a;;r;;d4,377;;b1,0;;m0;;e">
</treenode>
<treenode node="testDefinedOptionsNotIncludedInResolvedOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;353;5;358;;;;vpos;;v;;a;;r;;d4,354;;b1,0;;m0;;e">
</treenode>
<treenode node="testDeprecationMessages;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;516;5;538;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testDeprecationMessages(\Closure $configureOptions, array $options, ?array $expectedError, int $expectedCount)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideDeprecationData;;d4,517;;b1,0;;m0;;econfigureOptions;;poptions;;pexpectedError;;pexpectedCount;;p">
</treenode>
<treenode node="testFailIfAddAllowedTypesFromLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;916;5;926;;;;vpos;;v;;a;;r;;d4,917;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfAddAllowedValuesFromLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1127;5;1137;;;;vpos;;v;;a;;r;;d4,1128;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfAddNormalizerFromLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1509;5;1517;;;;vpos;;v;;a;;r;;d4,1510;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfClearFromLazyption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1694;5;1704;;;;vpos;;v;;a;;r;;d4,1695;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfCyclicDependency;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1807;5;1819;;;;vpos;;v;;a;;r;;d4,1808;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfCyclicDependencyBetweenNormalizerAndLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1368;5;1382;;;;vpos;;v;;a;;r;;d4,1369;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfCyclicDependencyBetweenNormalizers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1351;5;1366;;;;vpos;;v;;a;;r;;d4,1352;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfGetDefinedButUnset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1794;5;1805;;;;vpos;;v;;a;;r;;d4,1795;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfGetNonExisting;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1781;5;1792;;;;vpos;;v;;a;;r;;d4,1782;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfRemoveFromLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1620;5;1630;;;;vpos;;v;;a;;r;;d4,1621;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfSetAllowedTypesFromLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;763;5;773;;;;vpos;;v;;a;;r;;d4,764;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfSetAllowedValuesFromLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;990;5;1000;;;;vpos;;v;;a;;r;;d4,991;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfSetDefaultFromLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;77;5;85;;;;vpos;;v;;a;;r;;d4,78;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfSetDefaultsFromLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1541;5;1549;;;;vpos;;v;;a;;r;;d4,1542;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfSetDefinedFromLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;343;5;351;;;;vpos;;v;;a;;r;;d4,344;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfSetDeprecatedFromLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;438;5;448;;;;vpos;;v;;a;;r;;d4,439;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfSetNormalizerFromLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1249;5;1259;;;;vpos;;v;;a;;r;;d4,1250;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailIfSetRequiredFromLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;219;5;227;;;;vpos;;v;;a;;r;;d4,220;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailsIfCyclicDependencyBetweenDeprecation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;479;5;493;;;;vpos;;v;;a;;r;;d4,480;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailsIfCyclicDependencyBetweenNestedOptionAndParentLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2255;5;2267;;;;vpos;;v;;a;;r;;d4,2256;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailsIfCyclicDependencyBetweenNestedOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2283;5;2293;;;;vpos;;v;;a;;r;;d4,2284;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailsIfCyclicDependencyBetweenNormalizerAndNestedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2269;5;2281;;;;vpos;;v;;a;;r;;d4,2270;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailsIfCyclicDependencyBetweenSameNestedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2246;5;2253;;;;vpos;;v;;a;;r;;d4,2247;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailsIfInvalidTypeNestedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2022;5;2037;;;;vpos;;v;;a;;r;;d4,2023;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailsIfMissingRequiredNestedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2007;5;2020;;;;vpos;;v;;a;;r;;d4,2008;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailsIfNotArrayIsGivenForNestedOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2039;5;2052;;;;vpos;;v;;a;;r;;d4,2040;;b1,0;;m0;;e">
</treenode>
<treenode node="testFailsIfUndefinedNestedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1992;5;2005;;;;vpos;;v;;a;;r;;d4,1993;;b1,0;;m0;;e">
</treenode>
<treenode node="testForcePrependNormalizerClosure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1488;5;1501;;;;vpos;;v;;a;;r;;d4,1489;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetAccessToParentOptionFromNestedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2295;5;2304;;;;vpos;;v;;a;;r;;d4,2296;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDefinedOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;411;5;418;;;;vpos;;v;;a;;r;;d4,412;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetMissingOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;334;5;341;;;;vpos;;v;;a;;r;;d4,335;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetRequiredOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;295;5;302;;;;vpos;;v;;a;;r;;d4,296;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;87;5;92;;;;vpos;;v;;a;;r;;d4,88;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasDefaultWithNullValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;94;5;99;;;;vpos;;v;;a;;r;;d4,95;;b1,0;;m0;;e">
</treenode>
<treenode node="testInvokeEachLazyOptionOnlyOnce;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;195;5;212;;;;vpos;;v;;a;;r;;d4,196;;b1,0;;m0;;e">
</treenode>
<treenode node="testInvokeEachNormalizerOnlyOnce;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1434;5;1453;;;;vpos;;v;;a;;r;;d4,1435;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsDefined;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;383;5;388;;;;vpos;;v;;a;;r;;d4,384;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsDeprecated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;495;5;502;;;;vpos;;v;;a;;r;;d4,496;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsMissingIfNotSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;304;5;309;;;;vpos;;v;;a;;r;;d4,305;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsNestedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1982;5;1990;;;;vpos;;v;;a;;r;;d4,1983;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsNotDeprecatedIfEmptyString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;504;5;511;;;;vpos;;v;;a;;r;;d4,505;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsNotMissingAfterClear;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;327;5;332;;;;vpos;;v;;a;;r;;d4,328;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsNotMissingAfterRemove;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;320;5;325;;;;vpos;;v;;a;;r;;d4,321;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsNotMissingIfSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;311;5;318;;;;vpos;;v;;a;;r;;d4,312;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsNotRequiredAfterClear;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;287;5;293;;;;vpos;;v;;a;;r;;d4,288;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsNotRequiredAfterRemove;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;279;5;285;;;;vpos;;v;;a;;r;;d4,280;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsRequired;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;252;5;257;;;;vpos;;v;;a;;r;;d4,253;;b1,0;;m0;;e">
</treenode>
<treenode node="testLazyDeprecationFailsIfInvalidDeprecationMessageType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;466;5;477;;;;vpos;;v;;a;;r;;d4,467;;b1,0;;m0;;e">
</treenode>
<treenode node="testLazyOptionsAreDefined;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;390;5;395;;;;vpos;;v;;a;;r;;d4,391;;b1,0;;m0;;e">
</treenode>
<treenode node="testNested2Arrays;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1869;5;1895;;;;vpos;;v;;a;;r;;d4,1870;;b1,0;;m0;;e">
</treenode>
<treenode node="testNestedArrayException1;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1915;5;1926;;;;vpos;;v;;a;;r;;d4,1916;;b1,0;;m0;;e">
</treenode>
<treenode node="testNestedArrayException2;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1928;5;1939;;;;vpos;;v;;a;;r;;d4,1929;;b1,0;;m0;;e">
</treenode>
<treenode node="testNestedArrayException3;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1941;5;1952;;;;vpos;;v;;a;;r;;d4,1942;;b1,0;;m0;;e">
</treenode>
<treenode node="testNestedArrayException4;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1954;5;1966;;;;vpos;;v;;a;;r;;d4,1955;;b1,0;;m0;;e">
</treenode>
<treenode node="testNestedArrayException5;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1968;5;1980;;;;vpos;;v;;a;;r;;d4,1969;;b1,0;;m0;;e">
</treenode>
<treenode node="testNestedArrays;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1851;5;1867;;;;vpos;;v;;a;;r;;d4,1852;;b1,0;;m0;;e">
</treenode>
<treenode node="testNestedArraysException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1897;5;1913;;;;vpos;;v;;a;;r;;d4,1898;;b1,0;;m0;;e">
</treenode>
<treenode node="testNestedClosureWithoutTypeHint2ndArgumentNotInvoked;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2315;5;2322;;;;vpos;;v;;a;;r;;d4,2316;;b1,0;;m0;;e">
</treenode>
<treenode node="testNestedClosureWithoutTypeHintNotInvoked;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2306;5;2313;;;;vpos;;v;;a;;r;;d4,2307;;b1,0;;m0;;e">
</treenode>
<treenode node="testNormalizeNestedOptionValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2149;5;2173;;;;vpos;;v;;a;;r;;d4,2150;;b1,0;;m0;;e">
</treenode>
<treenode node="testNormalizeNestedValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2229;5;2244;;;;vpos;;v;;a;;r;;d4,2230;;b1,0;;m0;;e">
</treenode>
<treenode node="testNormalizerCanAccessLazyOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1331;5;1349;;;;vpos;;v;;a;;r;;d4,1332;;b1,0;;m0;;e">
</treenode>
<treenode node="testNormalizerCanAccessOtherOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1313;5;1329;;;;vpos;;v;;a;;r;;d4,1314;;b1,0;;m0;;e">
</treenode>
<treenode node="testNormalizerNotCalledForUnsetOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1455;5;1464;;;;vpos;;v;;a;;r;;d4,1456;;b1,0;;m0;;e">
</treenode>
<treenode node="testNormalizerReceivesPassedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1272;5;1283;;;;vpos;;v;;a;;r;;d4,1273;;b1,0;;m0;;e">
</treenode>
<treenode node="testNormalizerReceivesSetOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1261;5;1270;;;;vpos;;v;;a;;r;;d4,1262;;b1,0;;m0;;e">
</treenode>
<treenode node="testOverwrittenLazyOptionNotEvaluated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;184;5;193;;;;vpos;;v;;a;;r;;d4,185;;b1,0;;m0;;e">
</treenode>
<treenode node="testOverwrittenLazyOptionNotEvaluatedIfNestedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2199;5;2210;;;;vpos;;v;;a;;r;;d4,2200;;b1,0;;m0;;e">
</treenode>
<treenode node="testOverwrittenNestedOptionNotEvaluatedIfLazyDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2175;5;2186;;;;vpos;;v;;a;;r;;d4,2176;;b1,0;;m0;;e">
</treenode>
<treenode node="testOverwrittenNestedOptionNotEvaluatedIfScalarDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2188;5;2197;;;;vpos;;v;;a;;r;;d4,2189;;b1,0;;m0;;e">
</treenode>
<treenode node="testPreviousValueIsNotEvaluatedIfNoSecondArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;169;5;182;;;;vpos;;v;;a;;r;;d4,170;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveAllowedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1600;5;1608;;;;vpos;;v;;a;;r;;d4,1601;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveAllowedValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1610;5;1618;;;;vpos;;v;;a;;r;;d4,1611;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1578;5;1586;;;;vpos;;v;;a;;r;;d4,1579;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveMultipleOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1567;5;1576;;;;vpos;;v;;a;;r;;d4,1568;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1588;5;1598;;;;vpos;;v;;a;;r;;d4,1589;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveReturnsThis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1551;5;1556;;;;vpos;;v;;a;;r;;d4,1552;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveSingleOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1558;5;1565;;;;vpos;;v;;a;;r;;d4,1559;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemoveUnknownOptionIgnored;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1632;5;1635;;;;vpos;;v;;a;;r;;d4,1633;;b1,0;;m0;;e">
</treenode>
<treenode node="testRemovedOptionsAreNotDefined;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;420;5;427;;;;vpos;;v;;a;;r;;d4,421;;b1,0;;m0;;e">
</treenode>
<treenode node="testRequiredIfSetBefore;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;259;5;267;;;;vpos;;v;;a;;r;;d4,260;;b1,0;;m0;;e">
</treenode>
<treenode node="testRequiredOptionsAreDefined;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;397;5;402;;;;vpos;;v;;a;;r;;d4,398;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveAllNestedOptionDefinitions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2212;5;2227;;;;vpos;;v;;a;;r;;d4,2213;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsFromLazyOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;51;5;59;;;;vpos;;v;;a;;r;;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfAllAddedClosuresReturnFalse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1199;5;1207;;;;vpos;;v;;a;;r;;d4,1200;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfAllClosuresReturnFalse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1096;5;1107;;;;vpos;;v;;a;;r;;d4,1097;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfClosureReturnsFalse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1065;5;1081;;;;vpos;;v;;a;;r;;d4,1066;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfInvalidAddedType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;928;5;935;;;;vpos;;v;;a;;r;;d4,929;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfInvalidAddedTypeMultiple;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;945;5;952;;;;vpos;;v;;a;;r;;d4,946;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfInvalidAddedValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1139;5;1146;;;;vpos;;v;;a;;r;;d4,1140;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfInvalidAddedValueMultiple;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1164;5;1171;;;;vpos;;v;;a;;r;;d4,1165;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfInvalidType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;827;5;836;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testResolveFailsIfInvalidType($actualType, $allowedType, $exceptionMessage)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideInvalidTypes;;d4,828;;b1,0;;m0;;eactualType;;pallowedType;;pexceptionMessage;;p">
</treenode>
<treenode node="testResolveFailsIfInvalidTypeMultiple;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;860;5;868;;;;vpos;;v;;a;;r;;d4,861;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfInvalidTypedArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;775;5;783;;;;vpos;;v;;a;;r;;d4,776;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfInvalidValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1002;5;1010;;;;vpos;;v;;a;;r;;d4,1003;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfInvalidValueIsNull;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1012;5;1020;;;;vpos;;v;;a;;r;;d4,1013;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfInvalidValueMultiple;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1047;5;1055;;;;vpos;;v;;a;;r;;d4,1048;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfInvalidValueStrict;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1022;5;1029;;;;vpos;;v;;a;;r;;d4,1023;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfMultipleNonExistingOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;41;5;49;;;;vpos;;v;;a;;r;;d4,42;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfNonExistingOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;31;5;39;;;;vpos;;v;;a;;r;;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfNotInstanceOfClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;901;5;908;;;;vpos;;v;;a;;r;;d4,902;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfRequiredOptionMissing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;229;5;235;;;;vpos;;v;;a;;r;;d4,230;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsIfTypedArrayContainsInvalidTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;795;5;808;;;;vpos;;v;;a;;r;;d4,796;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsWithCorrectLevelsButWrongScalar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;810;5;822;;;;vpos;;v;;a;;r;;d4,811;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveFailsWithNonArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;785;5;793;;;;vpos;;v;;a;;r;;d4,786;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveLazyOptionUsingNestedOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2131;5;2147;;;;vpos;;v;;a;;r;;d4,2132;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveLazyOptionWithTransitiveDefaultDependency;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2324;5;2348;;;;vpos;;v;;a;;r;;d4,2325;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveMultipleNestedOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2092;5;2129;;;;vpos;;v;;a;;r;;d4,2093;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveNestedOptionsWithDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2070;5;2090;;;;vpos;;v;;a;;r;;d4,2071;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveNestedOptionsWithoutDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;2054;5;2068;;;;vpos;;v;;a;;r;;d4,2055;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfAnyAddedClosureReturnsTrue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1209;5;1216;;;;vpos;;v;;a;;r;;d4,1210;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfAnyAddedClosureReturnsTrue2;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1218;5;1225;;;;vpos;;v;;a;;r;;d4,1219;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfAnyClosureReturnsTrue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1109;5;1119;;;;vpos;;v;;a;;r;;d4,1110;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfClosureReturnsTrue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1083;5;1094;;;;vpos;;v;;a;;r;;d4,1084;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfInstanceOfClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;878;5;884;;;;vpos;;v;;a;;r;;d4,879;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfRequiredOptionPassed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;245;5;250;;;;vpos;;v;;a;;r;;d4,246;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfRequiredOptionSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;237;5;243;;;;vpos;;v;;a;;r;;d4,238;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfTypedArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;886;5;899;;;;vpos;;v;;a;;r;;d4,887;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfValidAddedType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;937;5;943;;;;vpos;;v;;a;;r;;d4,938;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfValidAddedTypeMultiple;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;954;5;960;;;;vpos;;v;;a;;r;;d4,955;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfValidAddedValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1148;5;1154;;;;vpos;;v;;a;;r;;d4,1149;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfValidAddedValueIsNull;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1156;5;1162;;;;vpos;;v;;a;;r;;d4,1157;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfValidAddedValueMultiple;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1173;5;1179;;;;vpos;;v;;a;;r;;d4,1174;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfValidType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;852;5;858;;;;vpos;;v;;a;;r;;d4,853;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfValidTypeMultiple;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;870;5;876;;;;vpos;;v;;a;;r;;d4,871;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfValidValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1031;5;1037;;;;vpos;;v;;a;;r;;d4,1032;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfValidValueIsNull;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1039;5;1045;;;;vpos;;v;;a;;r;;d4,1040;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveSucceedsIfValidValueMultiple;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1057;5;1063;;;;vpos;;v;;a;;r;;d4,1058;;b1,0;;m0;;e">
</treenode>
<treenode node="testResolveTypedArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;754;5;761;;;;vpos;;v;;a;;r;;d4,755;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetAllowedTypesFailsIfUnknownOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;748;5;752;;;;vpos;;v;;a;;r;;d4,749;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetAllowedValuesFailsIfUnknownOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;984;5;988;;;;vpos;;v;;a;;r;;d4,985;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;66;5;75;;;;vpos;;v;;a;;r;;d4,67;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetDefaultReturnsThis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;61;5;64;;;;vpos;;v;;a;;r;;d4,62;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetDefaults;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1524;5;1539;;;;vpos;;v;;a;;r;;d4,1525;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetDefaultsReturnsThis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1519;5;1522;;;;vpos;;v;;a;;r;;d4,1520;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetDeprecatedFailsIfInvalidDeprecationMessageType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;456;5;464;;;;vpos;;v;;a;;r;;d4,457;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetDeprecatedFailsIfUnknownOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;450;5;454;;;;vpos;;v;;a;;r;;d4,451;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetLazyClosure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;106;5;113;;;;vpos;;v;;a;;r;;d4,107;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetLazyReturnsThis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;101;5;104;;;;vpos;;v;;a;;r;;d4,102;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetNormalizerClosure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1233;5;1241;;;;vpos;;v;;a;;r;;d4,1234;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetNormalizerFailsIfUnknownOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1243;5;1247;;;;vpos;;v;;a;;r;;d4,1244;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetNormalizerReturnsThis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1227;5;1231;;;;vpos;;v;;a;;r;;d4,1228;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetOptionsAreDefined;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;404;5;409;;;;vpos;;v;;a;;r;;d4,405;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetRequiredReturnsThis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;214;5;217;;;;vpos;;v;;a;;r;;d4,215;;b1,0;;m0;;e">
</treenode>
<treenode node="testStillRequiredAfterSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;269;5;277;;;;vpos;;v;;a;;r;;d4,270;;b1,0;;m0;;e">
</treenode>
<treenode node="testValidateTypeBeforeNormalization;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1285;5;1297;;;;vpos;;v;;a;;r;;d4,1286;;b1,0;;m0;;e">
</treenode>
<treenode node="testValidateValueBeforeNormalization;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Tests\OptionsResolverTest.php;f11;1299;5;1311;;;;vpos;;v;;a;;r;;d4,1300;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="OrderedClassElementsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f6;28;1;501;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class OrderedClassElementsFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gregor Harlan &lt;gharlan&#10;&lt;b&gt;web&lt;/b&gt;: .de&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="SORT_ALPHA;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f9;31;20;31;;;;vpos;;v;;a;;r&apos;alpha&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="SORT_NONE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f9;33;19;33;;;;vpos;;v;;a;;r&apos;none&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f14;223;5;246;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,224;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f11;93;5;133;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,94;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f14;251;5;279;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,252;;b2,0;;m0;;e">
</treenode>
<treenode node="detectElementType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f12;355;5;397;;;;vpos;;v;;aarray|string;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    detectElementType(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   type or array of type and name;;d4,356;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="findElementEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f12;405;5;418;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findElementEnd(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,406;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f11;146;5;208;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,147;;b1,0;;m0;;e">
</treenode>
<treenode node="getElements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f12;287;5;347;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getElements(Tokens $tokens, $startIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,288;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f11;213;5;218;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,214;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f11;138;5;141;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,139;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="sortElements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f12;425;5;470;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortElements(array $elements)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array[] &lt;b&gt;$elements&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,426;;b3,0;;m0;;earray[] $elements;;p">
</treenode>
<treenode node="sortGroupElements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f12;472;5;481;;;;vpos;;v;;a;;r;;d4,473;;b3,0;;m0;;ea;;pb;;p">
</treenode>
<treenode node="sortTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedClassElementsFixer.php;f12;489;5;500;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortTokens(Tokens $tokens, $startIndex, $endIndex, array $elements)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;&#10;    array[] &lt;b&gt;$elements&lt;/b&gt;;;d4,490;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;parray[] $elements;;p">
</treenode>
</treenode>
<treenode node="OrderedImportsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f6;38;1;526;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class OrderedImportsFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Sebastiaan Stok &lt;s.stok&#10;&lt;b&gt;rollerscapes&lt;/b&gt;: .net&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;author&lt;/b&gt;: Darius Matulionis &lt;darius&#10;&lt;b&gt;matulionis&lt;/b&gt;: .lt&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Adriano Pilger &lt;adriano.pilger&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,39;;b0,0;;m0;;e">
<treenode node="IMPORT_TYPE_CLASS;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f9;40;27;40;;;;vpos;;v;;a;;r&apos;class&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="IMPORT_TYPE_CONST;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f9;42;27;42;;;;vpos;;v;;a;;r&apos;const&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="IMPORT_TYPE_FUNCTION;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f9;44;30;44;;;;vpos;;v;;a;;r&apos;function&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="SORT_ALPHA;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f9;46;20;46;;;;vpos;;v;;a;;r&apos;alpha&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="SORT_LENGTH;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f9;48;21;48;;;;vpos;;v;;a;;r&apos;length&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="SORT_NONE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f9;50;19;50;;;;vpos;;v;;a;;r&apos;none&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f14;178;5;228;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,179;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f14;233;5;276;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,234;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f11;69;5;156;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,70;;b1,0;;m0;;e">
</treenode>
<treenode node="getNewOrder;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f12;340;5;509;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNewOrder(array $uses, Tokens $tokens)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int[] &lt;b&gt;$uses&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;;;d4,341;;b3,0;;m0;;eint[] $uses;;pTokens $tokens;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f11;161;5;165;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,162;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f11;170;5;173;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,171;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="prepareNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f12;329;5;332;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    prepareNamespace($namespace)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$namespace&lt;/b&gt;;;d4,330;;b3,0;;m0;;estring $namespace;;p">
</treenode>
<treenode node="sortAlphabetically;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f12;288;5;295;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortAlphabetically(array $first, array $second)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used for sorting the uses in a namespace.&#10;&lt;b&gt;internal&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array&lt;string,: bool|int|string&gt; $first&#10;    array&lt;string,: bool|int|string&gt; $second;;d4,289;;b3,0;;m0;;earray&lt;string,;;parray&lt;string,;;p">
</treenode>
<treenode node="sortByAlgorithm;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f12;516;5;525;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortByAlgorithm(array $indexes)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array[] &lt;b&gt;$indexes&lt;/b&gt;;;d4,517;;b3,0;;m0;;earray[] $indexes;;p">
</treenode>
<treenode node="sortByLength;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\OrderedImportsFixer.php;f12;307;5;322;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortByLength(array $first, array $second)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method is used for sorting the uses statements in a namespace by length.&#10;&lt;b&gt;internal&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array&lt;string,: bool|int|string&gt; $first&#10;    array&lt;string,: bool|int|string&gt; $second;;d4,308;;b3,0;;m0;;earray&lt;string,;;parray&lt;string,;;p">
</treenode>
</treenode>
<treenode node="OrderedInterfacesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedInterfacesFixer.php;f6;26;1;230;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class OrderedInterfacesFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dave van der Brugge &lt;dmvdbrugge&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="DIRECTION_ASCEND;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedInterfacesFixer.php;f9;35;26;35;;;;vpos;;v;;a;;r&apos;ascend&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="DIRECTION_DESCEND;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedInterfacesFixer.php;f9;38;27;38;;;;vpos;;v;;a;;r&apos;descend&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="OPTION_DIRECTION;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedInterfacesFixer.php;f9;29;26;29;;;;vpos;;v;;a;;r&apos;direction&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="OPTION_ORDER;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedInterfacesFixer.php;f9;32;22;32;;;;vpos;;v;;a;;r&apos;order&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="ORDER_ALPHA;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedInterfacesFixer.php;f9;41;21;41;;;;vpos;;v;;a;;r&apos;alpha&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="ORDER_LENGTH;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedInterfacesFixer.php;f9;44;22;44;;;;vpos;;v;;a;;r&apos;length&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedInterfacesFixer.php;f14;118;5;212;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,119;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedInterfacesFixer.php;f14;217;5;229;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,218;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedInterfacesFixer.php;f11;69;5;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,70;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedInterfacesFixer.php;f11;101;5;105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,102;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\OrderedInterfacesFixer.php;f11;110;5;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,111;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Output;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f9;29;1;176;;;;vpos;;v;;aOutputInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Output implements OutputInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Base class for output classes.&#10;There are five levels of verbosity:&#10;* normal: no option passed (normal output)&#10;* verbose: -v (more output)&#10;* very verbose: -vv (highly extended output)&#10;* debug: -vvv (all debug output)&#10;* quiet: -q (no output)&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f11;39;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(?int $verbosity = self::VERBOSITY_NORMAL, bool $decorated = false, OutputFormatterInterface $formatter = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$verbosity&lt;/b&gt;: The verbosity level (one of the VERBOSITY constants in OutputInterface)&#10;    bool &lt;b&gt;$decorated&lt;/b&gt;: Whether to decorate messages&#10;    OutputFormatterInterface|null &lt;b&gt;$formatter&lt;/b&gt;: Output formatter instance (null to use default OutputFormatter);;d4,40;;b1,0;;m0;;eint $verbosity;;pbool $decorated;;pOutputFormatterInterface|null $formatter;;p">
</treenode>
<treenode node="doWrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f23;175;59;175;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Writes a message to the output.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;: A message to write to the output&#10;    bool &lt;b&gt;$newline&lt;/b&gt;: Whether to add a newline or not;;d-1,-1;;b2,0;;m0;;estring $message;;pbool $newline;;p">
</treenode>
<treenode node="getFormatter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f11;57;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormatter()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="getVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f11;89;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getVerbosity()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,90;;b1,0;;m0;;e">
</treenode>
<treenode node="isDebug;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f11;121;5;124;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isDebug()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,122;;b1,0;;m0;;e">
</treenode>
<treenode node="isDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f11;73;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isDecorated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,74;;b1,0;;m0;;e">
</treenode>
<treenode node="isQuiet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f11;97;5;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isQuiet()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,98;;b1,0;;m0;;e">
</treenode>
<treenode node="isVerbose;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f11;105;5;108;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isVerbose()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,106;;b1,0;;m0;;e">
</treenode>
<treenode node="isVeryVerbose;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f11;113;5;116;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isVeryVerbose()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,114;;b1,0;;m0;;e">
</treenode>
<treenode node="setDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f11;65;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDecorated($decorated)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b1,0;;m0;;edecorated;;p">
</treenode>
<treenode node="setFormatter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f11;49;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFormatter(OutputFormatterInterface $formatter)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;eformatter;;p">
</treenode>
<treenode node="setVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f11;81;5;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setVerbosity($level)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,82;;b1,0;;m0;;elevel;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f11;137;5;167;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    write($messages, $newline = false, $options = self::OUTPUT_NORMAL)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,138;;b1,0;;m0;;emessages;;pnewline;;poptions;;p">
</treenode>
<treenode node="writeln;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\Output.php;f11;129;5;132;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writeln($messages, $options = self::OUTPUT_NORMAL)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,130;;b1,0;;m0;;emessages;;poptions;;p">
</treenode>
</treenode>
<treenode node="OutputFormatter;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f0;21;1;283;;;;vpos;;v;;aWrappableOutputFormatterInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class OutputFormatter implements WrappableOutputFormatterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formatter class for console output.&#10;&lt;b&gt;author&lt;/b&gt;: Konstantin Kudryashov &lt;ever.zet&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Roland Franssen &lt;franssen.roland&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f11;68;5;82;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(bool $decorated = false, array $styles = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Initializes console output formatter.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$decorated&lt;/b&gt;: Whether this formatter should actually decorate strings&#10;    OutputFormatterStyleInterface[] &lt;b&gt;$styles&lt;/b&gt;: Array of &quot;name =&gt; FormatterStyle&quot; instances;;d4,69;;b1,0;;m0;;ebool $decorated;;pOutputFormatterStyleInterface[] $styles;;p">
</treenode>
<treenode node="applyCurrentStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f12;237;5;282;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyCurrentStyle(string $text, string $current, int $width, int &amp;$currentLineLength): string&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Applies current style from stack to text, if must be applied.;;d4,238;;b3,0;;m0;;etext;;pcurrent;;pwidth;;pcurrentLineLength;;p">
</treenode>
<treenode node="createStyleFromString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f12;199;5;232;;;;vpos;;v;;aOutputFormatterStyle|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createStyleFromString(string $string)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tries to create new style instance from string.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   False if string is not format string;;d4,200;;b3,0;;m0;;estring;;p">
</treenode>
<treenode node="escape;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f18;34;5;39;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    escape($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Escapes &quot;&lt;&quot; special char in given text.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$text&lt;/b&gt;: Text to escape&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Escaped text;;d4,35;;b1,5;;m0;;estring $text;;p">
</treenode>
<treenode node="escapeTrailingBackslash;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f18;50;5;60;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    escapeTrailingBackslash($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Escapes trailing &quot;\&quot; in given text.&#10;&lt;b&gt;internal&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$text&lt;/b&gt;: Text to escape&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Escaped text;;d4,51;;b1,5;;m0;;estring $text;;p">
</treenode>
<treenode node="format;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f11;131;5;134;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    format($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,132;;b1,0;;m0;;emessage;;p">
</treenode>
<treenode node="formatAndWrap;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f11;139;5;184;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    formatAndWrap(string $message, int $width)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,140;;b1,0;;m0;;emessage;;pwidth;;p">
</treenode>
<treenode node="getStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f11;119;5;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStyle($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,120;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="getStyleStack;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f11;189;5;192;;;;vpos;;v;;aOutputFormatterStyleStack;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStyleStack()&#10;;;d4,190;;b1,0;;m0;;e">
</treenode>
<treenode node="hasStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f11;111;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasStyle($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,112;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="isDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f11;95;5;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isDecorated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,96;;b1,0;;m0;;e">
</treenode>
<treenode node="setDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f11;87;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDecorated($decorated)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,88;;b1,0;;m0;;edecorated;;p">
</treenode>
<treenode node="setStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatter.php;f11;103;5;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setStyle($name, OutputFormatterStyleInterface $style)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,104;;b1,0;;m0;;ename;;pstyle;;p">
</treenode>
</treenode>
<treenode node="OutputFormatterStyle;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyle.php;f0;20;1;196;;;;vpos;;v;;aOutputFormatterStyleInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class OutputFormatterStyle implements OutputFormatterStyleInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formatter style class for defining styles.&#10;&lt;b&gt;author&lt;/b&gt;: Konstantin Kudryashov &lt;ever.zet&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyle.php;f11;65;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $foreground = null, string $background = null, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Initializes output formatter style.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$foreground&lt;/b&gt;: The style foreground color name&#10;    string|null &lt;b&gt;$background&lt;/b&gt;: The style background color name&#10;    array &lt;b&gt;$options&lt;/b&gt;: The style options;;d4,66;;b1,0;;m0;;estring|null $foreground;;pstring|null $background;;parray $options;;p">
</treenode>
<treenode node="apply;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyle.php;f11;163;5;195;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    apply($text)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,164;;b1,0;;m0;;etext;;p">
</treenode>
<treenode node="setBackground;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyle.php;f11;99;5;112;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setBackground($color = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,100;;b1,0;;m0;;ecolor;;p">
</treenode>
<treenode node="setForeground;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyle.php;f11;81;5;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setForeground($color = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,82;;b1,0;;m0;;ecolor;;p">
</treenode>
<treenode node="setHref;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyle.php;f11;114;5;117;;;;vpos;;v;;a void;;r;;d4,115;;b1,0;;m0;;eurl;;p">
</treenode>
<treenode node="setOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyle.php;f11;122;5;131;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setOption($option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,123;;b1,0;;m0;;eoption;;p">
</treenode>
<treenode node="setOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyle.php;f11;151;5;158;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setOptions(array $options)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,152;;b1,0;;m0;;eoptions;;p">
</treenode>
<treenode node="unsetOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyle.php;f11;136;5;146;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    unsetOption($option)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,137;;b1,0;;m0;;eoption;;p">
</treenode>
</treenode>
<treenode node="OutputFormatterStyleStack;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleStack.php;f0;19;1;109;;;;vpos;;v;;aResetInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class OutputFormatterStyleStack implements ResetInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jean-François Simon &lt;contact&#10;&lt;b&gt;jfsimon&lt;/b&gt;: .fr&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleStack.php;f11;28;5;32;;;;vpos;;v;;a;;r;;d4,29;;b1,0;;m0;;eemptyStyle;;p">
</treenode>
<treenode node="getCurrent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleStack.php;f11;83;5;90;;;;vpos;;v;;aOutputFormatterStyle;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCurrent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Computes current style with stacks top codes.;;d4,84;;b1,0;;m0;;e">
</treenode>
<treenode node="getEmptyStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleStack.php;f11;105;5;108;;;;vpos;;v;;aOutputFormatterStyleInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEmptyStyle()&#10;;;d4,106;;b1,0;;m0;;e">
</treenode>
<treenode node="pop;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleStack.php;f11;57;5;76;;;;vpos;;v;;aOutputFormatterStyleInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    pop(OutputFormatterStyleInterface $style = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Pops a style from the stack.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When style tags incorrectly nested;;d4,58;;b1,0;;m0;;estyle;;p">
</treenode>
<treenode node="push;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleStack.php;f11;45;5;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    push(OutputFormatterStyleInterface $style)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Pushes a style in the stack.;;d4,46;;b1,0;;m0;;estyle;;p">
</treenode>
<treenode node="reset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleStack.php;f11;37;5;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    reset()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Resets stack (ie. empty internal arrays).;;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="setEmptyStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Formatter\OutputFormatterStyleStack.php;f11;95;5;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setEmptyStyle(OutputFormatterStyleInterface $emptyStyle)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this;;d4,96;;b1,0;;m0;;eemptyStyle;;p">
</treenode>
</treenode>
<treenode node="OutputFormatterStyleStackTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterStyleStackTest.php;f0;17;1;68;;;;vpos;;v;;aTestCase;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="testInvalidPop;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterStyleStackTest.php;f11;61;5;67;;;;vpos;;v;;a;;r;;d4,62;;b1,0;;m0;;e">
</treenode>
<treenode node="testPop;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterStyleStackTest.php;f11;32;5;40;;;;vpos;;v;;a;;r;;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="testPopEmpty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterStyleStackTest.php;f11;42;5;48;;;;vpos;;v;;a;;r;;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="testPopNotLast;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterStyleStackTest.php;f11;50;5;59;;;;vpos;;v;;a;;r;;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="testPush;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterStyleStackTest.php;f11;19;5;30;;;;vpos;;v;;a;;r;;d4,20;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="OutputFormatterStyleTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterStyleTest.php;f0;16;1;114;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="testBackground;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterStyleTest.php;f11;47;5;62;;;;vpos;;v;;a;;r;;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterStyleTest.php;f11;18;5;28;;;;vpos;;v;;a;;r;;d4,19;;b1,0;;m0;;e">
</treenode>
<treenode node="testForeground;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterStyleTest.php;f11;30;5;45;;;;vpos;;v;;a;;r;;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="testHref;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterStyleTest.php;f11;100;5;113;;;;vpos;;v;;a;;r;;d4,101;;b1,0;;m0;;e">
</treenode>
<treenode node="testOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterStyleTest.php;f11;64;5;98;;;;vpos;;v;;a;;r;;d4,65;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="OutputFormatterTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f0;17;1;341;;;;vpos;;v;;aTestCase;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="provideDecoratedAndNonDecoratedOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;256;5;267;;;;vpos;;v;;a;;r;;d4,257;;b1,0;;m0;;e">
</treenode>
<treenode node="provideInlineStyleOptionsCases;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;184;5;196;;;;vpos;;v;;a;;r;;d4,185;;b1,0;;m0;;e">
</treenode>
<treenode node="provideInlineStyleTagsWithUnknownOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;198;5;206;;;;vpos;;v;;a;;r;;d4,199;;b1,0;;m0;;e">
</treenode>
<treenode node="testAdjacentStyles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;79;5;87;;;;vpos;;v;;a;;r;;d4,80;;b1,0;;m0;;e">
</treenode>
<treenode node="testBundledStyles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;42;5;67;;;;vpos;;v;;a;;r;;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="testContentWithLineBreaks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;269;5;318;;;;vpos;;v;;a;;r;;d4,270;;b1,0;;m0;;e">
</treenode>
<treenode node="testDeepNestedStyles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;114;5;122;;;;vpos;;v;;a;;r;;d4,115;;b1,0;;m0;;e">
</treenode>
<treenode node="testEmptyTag;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;19;5;23;;;;vpos;;v;;a;;r;;d4,20;;b1,0;;m0;;e">
</treenode>
<treenode node="testFormatAndWrap;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;320;5;340;;;;vpos;;v;;a;;r;;d4,321;;b1,0;;m0;;e">
</treenode>
<treenode node="testFormatLongString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;215;5;220;;;;vpos;;v;;a;;r;;d4,216;;b1,0;;m0;;e">
</treenode>
<treenode node="testFormatToStringObject;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;222;5;228;;;;vpos;;v;;a;;r;;d4,223;;b1,0;;m0;;e">
</treenode>
<treenode node="testFormatterHasStyles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;230;5;238;;;;vpos;;v;;a;;r;;d4,231;;b1,0;;m0;;e">
</treenode>
<treenode node="testInlineStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;150;5;156;;;;vpos;;v;;a;;r;;d4,151;;b1,0;;m0;;e">
</treenode>
<treenode node="testInlineStyleOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;165;5;182;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testInlineStyleOptions($tag, $expected = null, $input = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideInlineStyleOptionsCases&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$tag&lt;/b&gt;&#10;    string|null &lt;b&gt;$expected&lt;/b&gt;&#10;    string|null &lt;b&gt;$input&lt;/b&gt;;;d4,166;;b1,0;;m0;;estring $tag;;pstring|null $expected;;pstring|null $input;;p">
</treenode>
<treenode node="testLGCharEscaping;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;25;5;40;;;;vpos;;v;;a;;r;;d4,26;;b1,0;;m0;;e">
</treenode>
<treenode node="testNestedStyles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;69;5;77;;;;vpos;;v;;a;;r;;d4,70;;b1,0;;m0;;e">
</treenode>
<treenode node="testNewStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;124;5;138;;;;vpos;;v;;a;;r;;d4,125;;b1,0;;m0;;e">
</treenode>
<treenode node="testNonStyleTag;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;208;5;213;;;;vpos;;v;;a;;r;;d4,209;;b1,0;;m0;;e">
</treenode>
<treenode node="testNotDecoratedFormatter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;243;5;254;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testNotDecoratedFormatter(string $input, string $expectedNonDecoratedOutput, string $expectedDecoratedOutput, string $terminalEmulator = &apos;foo&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideDecoratedAndNonDecoratedOutput;;d4,244;;b1,0;;m0;;einput;;pexpectedNonDecoratedOutput;;pexpectedDecoratedOutput;;pterminalEmulator;;p">
</treenode>
<treenode node="testRedefineStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;140;5;148;;;;vpos;;v;;a;;r;;d4,141;;b1,0;;m0;;e">
</treenode>
<treenode node="testStyleEscaping;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;99;5;112;;;;vpos;;v;;a;;r;;d4,100;;b1,0;;m0;;e">
</treenode>
<treenode node="testStyleMatchingNotGreedy;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;89;5;97;;;;vpos;;v;;a;;r;;d4,90;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="OutputStyle;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f9;23;1;154;;;;vpos;;v;;aOutputInterface;;cStyleInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class OutputStyle implements OutputInterface, StyleInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Decorates output to add console style guide helpers.&#10;&lt;b&gt;author&lt;/b&gt;: Kevin Bond &lt;kevinbond&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;27;5;30;;;;vpos;;v;;a;;r;;d4,28;;b1,0;;m0;;eoutput;;p">
</treenode>
<treenode node="createProgressBar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;45;5;48;;;;vpos;;v;;aProgressBar;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProgressBar($max = 0)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$max&lt;/b&gt;;;d4,46;;b1,0;;m0;;eint $max;;p">
</treenode>
<treenode node="getErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f14;146;5;153;;;;vpos;;v;;a;;r;;d4,147;;b2,0;;m0;;e">
</treenode>
<treenode node="getFormatter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;109;5;112;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormatter()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,110;;b1,0;;m0;;e">
</treenode>
<treenode node="getVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;77;5;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getVerbosity()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,78;;b1,0;;m0;;e">
</treenode>
<treenode node="isDebug;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;141;5;144;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isDebug()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,142;;b1,0;;m0;;e">
</treenode>
<treenode node="isDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;93;5;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isDecorated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,94;;b1,0;;m0;;e">
</treenode>
<treenode node="isQuiet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;117;5;120;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isQuiet()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,118;;b1,0;;m0;;e">
</treenode>
<treenode node="isVerbose;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;125;5;128;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isVerbose()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,126;;b1,0;;m0;;e">
</treenode>
<treenode node="isVeryVerbose;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;133;5;136;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isVeryVerbose()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,134;;b1,0;;m0;;e">
</treenode>
<treenode node="newLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;35;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    newLine($count = 1)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,36;;b1,0;;m0;;ecount;;p">
</treenode>
<treenode node="setDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;85;5;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDecorated($decorated)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,86;;b1,0;;m0;;edecorated;;p">
</treenode>
<treenode node="setFormatter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;101;5;104;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFormatter(OutputFormatterInterface $formatter)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,102;;b1,0;;m0;;eformatter;;p">
</treenode>
<treenode node="setVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;69;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setVerbosity($level)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,70;;b1,0;;m0;;elevel;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;53;5;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    write($messages, $newline = false, $type = self::OUTPUT_NORMAL)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,54;;b1,0;;m0;;emessages;;pnewline;;ptype;;p">
</treenode>
<treenode node="writeln;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\OutputStyle.php;f11;61;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writeln($messages, $type = self::OUTPUT_NORMAL)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,62;;b1,0;;m0;;emessages;;ptype;;p">
</treenode>
</treenode>
<treenode node="OutputTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f0;17;1;173;;;;vpos;;v;;aTestCase;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="generateMessages;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f12;90;5;94;;;;vpos;;v;;a iterable;;r;;d4,91;;b3,0;;m0;;e">
</treenode>
<treenode node="provideWriteArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;106;5;112;;;;vpos;;v;;a;;r;;d4,107;;b1,0;;m0;;e">
</treenode>
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;19;5;24;;;;vpos;;v;;a;;r;;d4,20;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetGetVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;33;5;67;;;;vpos;;v;;a;;r;;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetIsDecorated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;26;5;31;;;;vpos;;v;;a;;r;;d4,27;;b1,0;;m0;;e">
</treenode>
<treenode node="testWriteAnArrayOfMessages;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;76;5;81;;;;vpos;;v;;a;;r;;d4,77;;b1,0;;m0;;e">
</treenode>
<treenode node="testWriteAnIterableOfMessages;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;83;5;88;;;;vpos;;v;;a;;r;;d4,84;;b1,0;;m0;;e">
</treenode>
<treenode node="testWriteDecoratedMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;122;5;130;;;;vpos;;v;;a;;r;;d4,123;;b1,0;;m0;;e">
</treenode>
<treenode node="testWriteRawMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;99;5;104;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testWriteRawMessage($message, $type, $expectedOutput)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideWriteArguments;;d4,100;;b1,0;;m0;;emessage;;ptype;;pexpectedOutput;;p">
</treenode>
<treenode node="testWriteWithDecorationTurnedOff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;114;5;120;;;;vpos;;v;;a;;r;;d4,115;;b1,0;;m0;;e">
</treenode>
<treenode node="testWriteWithInvalidStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;132;5;143;;;;vpos;;v;;a;;r;;d4,133;;b1,0;;m0;;e">
</treenode>
<treenode node="testWriteWithVerbosityOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;148;5;161;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testWriteWithVerbosityOption($verbosity, $expected, $msg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: verbosityProvider;;d4,149;;b1,0;;m0;;everbosity;;pexpected;;pmsg;;p">
</treenode>
<treenode node="testWriteWithVerbosityQuiet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;69;5;74;;;;vpos;;v;;a;;r;;d4,70;;b1,0;;m0;;e">
</treenode>
<treenode node="verbosityProvider;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;163;5;172;;;;vpos;;v;;a;;r;;d4,164;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ParseError;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Resources\stubs\ParseError.php;f0;2;1;4;;;;vpos;;v;;aError;;c;;r;;d0,3;;b0,0;;m0;;e">
</treenode>
<treenode node="Parser;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Parser.php;f6;15;1;105;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Parser.php;f6;15;1;105;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Parser.php;f0;15;1;109;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Parser&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unified diff parser.;;d0,16;;b0,0;;m0;;e">
<treenode node="parse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Parser.php;f11;22;5;64;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Parser.php;f11;22;5;64;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Parser.php;f11;22;5;64;;;;vpos;;v;;aDiff;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parse($string)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$string&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,23;;b1,0;;m0;;estring $string;;p">
</treenode>
<treenode node="parseFileDiff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Parser.php;f12;66;5;104;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Parser.php;f12;66;5;104;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\Parser.php;f12;70;5;108;;;;vpos;;v;;a;;r;;d4,67;;b3,0;;m0;;ediff;;plines;;p">
</treenode>
</treenode>
<treenode node="PathFilterIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\PathFilterIterator.php;f0;19;1;55;;;;vpos;;v;;aMultiplePcreFilterIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PathFilterIterator extends MultiplePcreFilterIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    PathFilterIterator filters files by path patterns (e.g. some/special/dir).&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier  &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Wlodzimierz Gajda &lt;gajdaw&#10;&lt;b&gt;gajdaw&lt;/b&gt;: .pl&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="accept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\PathFilterIterator.php;f11;26;5;35;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    accept()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Filters the iterator values.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the value should be kept, false otherwise;;d4,27;;b1,0;;m0;;e">
</treenode>
<treenode node="toRegex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\PathFilterIterator.php;f14;51;5;54;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    toRegex($str)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts strings to regexp.&#10;PCRE patterns are left unchanged.&#10;Default conversion:&#10;&apos;lorem/ipsum/dolor&apos; ==&gt;  &apos;lorem\/ipsum\/dolor/&apos;&#10;Use only / as directory separator (on Windows also).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$str&lt;/b&gt;: Pattern: regexp or dirname&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   regexp corresponding to a given string or regexp;;d4,52;;b2,0;;m0;;estring $str;;p">
</treenode>
</treenode>
<treenode node="PathFilterIteratorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\PathFilterIteratorTest.php;f0;15;1;81;;;;vpos;;v;;aIteratorTestCase;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="getTestFilterData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\PathFilterIteratorTest.php;f11;26;5;80;;;;vpos;;v;;a;;r;;d4,27;;b1,0;;m0;;e">
</treenode>
<treenode node="testFilter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\PathFilterIteratorTest.php;f11;20;5;24;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testFilter(\Iterator $inner, array $matchPatterns, array $noMatchPatterns, array $resultArray)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getTestFilterData;;d4,21;;b1,0;;m0;;einner;;pmatchPatterns;;pnoMatchPatterns;;presultArray;;p">
</treenode>
</treenode>
<treenode node="PharChecker;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\PharChecker.php;f6;17;1;38;;;;vpos;;v;;aPharCheckerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PharChecker implements PharCheckerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="checkFileValidity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\PharChecker.php;f11;22;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkFileValidity($filename)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,23;;b1,0;;m0;;efilename;;p">
</treenode>
</treenode>
<treenode node="Php70;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Php70.php;f6;18;1;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Php70&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Nicolas Grekas &lt;p&#10;&lt;b&gt;tchwork&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="error_clear_last;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Php70.php;f18;51;5;60;;;;vpos;;v;;a;;r;;d4,52;;b1,5;;m0;;e">
</treenode>
<treenode node="intArg;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Php70.php;f19;62;5;72;;;;vpos;;v;;a;;r;;d4,63;;b3,5;;m0;;evalue;;pcaller;;ppos;;p">
</treenode>
<treenode node="intdiv;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Php70.php;f18;20;5;33;;;;vpos;;v;;a;;r;;d4,21;;b1,5;;m0;;edividend;;pdivisor;;p">
</treenode>
<treenode node="preg_replace_callback_array;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Php70.php;f18;35;5;49;;;;vpos;;v;;a;;r;;d4,36;;b1,5;;m0;;epatterns;;psubject;;plimit;;pcount;;p">
</treenode>
</treenode>
<treenode node="Php72;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\Php72.php;f6;19;1;215;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Php72&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Nicolas Grekas &lt;p&#10;&lt;b&gt;tchwork&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="initHashMask;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\Php72.php;f19;149;5;169;;;;vpos;;v;;a;;r;;d4,150;;b3,5;;m0;;e">
</treenode>
<treenode node="mb_chr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\Php72.php;f18;171;5;188;;;;vpos;;v;;a;;r;;d4,172;;b1,5;;m0;;ecode;;pencoding;;p">
</treenode>
<treenode node="mb_ord;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\Php72.php;f18;190;5;214;;;;vpos;;v;;a;;r;;d4,191;;b1,5;;m0;;es;;pencoding;;p">
</treenode>
<treenode node="php_os_family;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\Php72.php;f18;69;5;86;;;;vpos;;v;;a;;r;;d4,70;;b1,5;;m0;;e">
</treenode>
<treenode node="sapi_windows_vt100_support;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\Php72.php;f18;100;5;130;;;;vpos;;v;;a;;r;;d4,101;;b1,5;;m0;;estream;;penable;;p">
</treenode>
<treenode node="spl_object_id;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\Php72.php;f18;88;5;98;;;;vpos;;v;;a;;r;;d4,89;;b1,5;;m0;;eobject;;p">
</treenode>
<treenode node="stream_isatty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\Php72.php;f18;132;5;147;;;;vpos;;v;;a;;r;;d4,133;;b1,5;;m0;;estream;;p">
</treenode>
<treenode node="utf8_decode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\Php72.php;f18;39;5;67;;;;vpos;;v;;a;;r;;d4,40;;b1,5;;m0;;es;;p">
</treenode>
<treenode node="utf8_encode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\Php72.php;f18;23;5;37;;;;vpos;;v;;a;;r;;d4,24;;b1,5;;m0;;es;;p">
</treenode>
</treenode>
<treenode node="Php73;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php73\Php73.php;f6;19;1;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Php73&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gabriel Caruso &lt;carusogabriel34&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Ion Bazan &lt;ion.bazan&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="hrtime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php73\Php73.php;f18;28;5;41;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hrtime($asNum = false)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$asNum&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |float|int;;d4,29;;b1,5;;m0;;ebool $asNum;;p">
</treenode>
</treenode>
<treenode node="PhpConfig;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\PhpConfig.php;f0;16;1;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpConfig&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: John Stevenson &lt;john-stevenson&#10;&lt;b&gt;blueyonder&lt;/b&gt;: .co.uk&gt;;;d0,17;;b0,0;;m0;;e">
<treenode node="getDataAndReset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\PhpConfig.php;f12;63;5;71;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDataAndReset()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns restart data if available and resets the environment&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,64;;b3,0;;m0;;e">
</treenode>
<treenode node="useOriginal;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\PhpConfig.php;f11;23;5;27;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    useOriginal()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Use the original PHP configuration&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   PHP cli options;;d4,24;;b1,0;;m0;;e">
</treenode>
<treenode node="usePersistent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\PhpConfig.php;f11;48;5;56;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    usePersistent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Use environment variables to persist settings&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   PHP cli options;;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="useStandard;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\PhpConfig.php;f11;34;5;41;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    useStandard()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Use standard restart settings&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   PHP cli options;;d4,35;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpExecutableFinder;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\PhpExecutableFinder.php;f0;19;1;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpExecutableFinder&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    An executable finder specifically designed for the PHP executable.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\PhpExecutableFinder.php;f11;23;5;26;;;;vpos;;v;;a;;r;;d4,24;;b1,0;;m0;;e">
</treenode>
<treenode node="find;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\PhpExecutableFinder.php;f11;35;5;84;;;;vpos;;v;;astring|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    find($includeArgs = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds The PHP executable.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$includeArgs&lt;/b&gt;: Whether or not include command arguments&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The PHP executable path or false if it cannot be found;;d4,36;;b1,0;;m0;;ebool $includeArgs;;p">
</treenode>
<treenode node="findArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\PhpExecutableFinder.php;f11;91;5;99;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findArguments()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds the PHP executable arguments.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The PHP executable arguments;;d4,92;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpExecutableFinderTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\PhpExecutableFinderTest.php;f0;19;1;48;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpExecutableFinderTest extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Robert Schönthal &lt;seroscho&#10;&lt;b&gt;googlemail&lt;/b&gt;: .com&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="testFind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\PhpExecutableFinderTest.php;f11;24;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testFind()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    tests find() with the constant PHP_BINARY.;;d4,25;;b1,0;;m0;;e">
</treenode>
<treenode node="testFindArguments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\PhpExecutableFinderTest.php;f11;38;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testFindArguments()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    tests find() with the env var PHP_PATH.;;d4,39;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpParser;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\PhpParser.php;f6;29;1;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpParser&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses a file for namespaces/use/class declarations.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Christian Kaps &lt;christian.kaps&#10;&lt;b&gt;mohiva&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="getFileContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\PhpParser.php;f12;71;5;89;;;;vpos;;v;;astring|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFileContent($filename, $lineNumber)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the content of the file right up to the given line number.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$filename&lt;/b&gt;: The name of the file to load.&#10;    integer &lt;b&gt;$lineNumber&lt;/b&gt;: The number of lines to read from file.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The content of the file or null if the file does not exist.;;d4,72;;b3,0;;m0;;estring $filename;;pinteger $lineNumber;;p">
</treenode>
<treenode node="parseClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\PhpParser.php;f11;38;5;61;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseClass(\ReflectionClass $class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses a class.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \ReflectionClass &lt;b&gt;$class&lt;/b&gt;: A &lt;code&gt;ReflectionClass&lt;/code&gt; object.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A list with use statements in the form (Alias =&gt; FQN).;;d4,39;;b1,0;;m0;;e\ReflectionClass $class;;p">
</treenode>
</treenode>
<treenode node="PhpProcess;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\PhpProcess.php;f0;24;1;74;;;;vpos;;v;;aProcess;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpProcess extends Process&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    PhpProcess runs a PHP script in an independent process.&#10;$p = new PhpProcess(&apos;&lt;?php echo &quot;foo&quot;;s ?&gt;&apos;);s&#10;$p-&gt;run();s&#10;print $p-&gt;getOutput().&quot;\n&quot;;s&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\PhpProcess.php;f11;33;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $script, string $cwd = null, array $env = null, int $timeout = 60, array $php = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$script&lt;/b&gt;: The PHP script to run (as a string)&#10;    string|null &lt;b&gt;$cwd&lt;/b&gt;: The working directory or null to use the working dir of the current PHP process&#10;    array|null &lt;b&gt;$env&lt;/b&gt;: The environment variables or null to use the same environment as the current PHP process&#10;    int &lt;b&gt;$timeout&lt;/b&gt;: The timeout in seconds&#10;    array|null &lt;b&gt;$php&lt;/b&gt;: Path to the PHP binary to use with any additional arguments;;d4,34;;b1,0;;m0;;estring $script;;pstring|null $cwd;;parray|null $env;;pint $timeout;;parray|null $php;;p">
</treenode>
<treenode node="setPhpBinary;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\PhpProcess.php;f11;56;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPhpBinary($php)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the path to the PHP binary to use.&#10;&lt;b&gt;deprecated&lt;/b&gt;: since Symfony 4.2, use the $php argument of the constructor instead.;;d4,57;;b1,0;;m0;;ephp;;p">
</treenode>
<treenode node="start;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\PhpProcess.php;f11;66;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    start(callable $callback = null, array $env = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b1,0;;m0;;ecallback;;penv;;p">
</treenode>
</treenode>
<treenode node="PhpProcessTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\PhpProcessTest.php;f0;17;1;62;;;;vpos;;v;;aTestCase;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="testCommandLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\PhpProcessTest.php;f11;31;5;47;;;;vpos;;v;;a;;r;;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="testNonBlockingWorks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\PhpProcessTest.php;f11;19;5;29;;;;vpos;;v;;a;;r;;d4,20;;b1,0;;m0;;e">
</treenode>
<treenode node="testPassingPhpExplicitly;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\PhpProcessTest.php;f11;49;5;61;;;;vpos;;v;;a;;r;;d4,50;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpUnitConstructFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitConstructFixer.php;f6;27;1;222;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitConstructFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitConstructFixer.php;f14;95;5;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,96;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitConstructFixer.php;f14;118;5;132;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,119;;b2,0;;m0;;e">
</treenode>
<treenode node="fixAssert;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitConstructFixer.php;f12;178;5;221;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixAssert(array $map, Tokens $tokens, $index, $method)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array&lt;string,: string&gt; $map&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    string &lt;b&gt;$method&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,179;;b3,0;;m0;;earray&lt;string,;;pTokens $tokens;;pint $index;;pstring $method;;p">
</treenode>
<treenode node="fixAssertNegative;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitConstructFixer.php;f12;141;5;150;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixAssertNegative(Tokens $tokens, $index, $method)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    string &lt;b&gt;$method&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,142;;b3,0;;m0;;eTokens $tokens;;pint $index;;pstring $method;;p">
</treenode>
<treenode node="fixAssertPositive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitConstructFixer.php;f12;159;5;168;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixAssertPositive(Tokens $tokens, $index, $method)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    string &lt;b&gt;$method&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,160;;b3,0;;m0;;eTokens $tokens;;pint $index;;pstring $method;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitConstructFixer.php;f11;55;5;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitConstructFixer.php;f11;86;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,87;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitConstructFixer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitConstructFixer.php;f11;47;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpUnitDedicateAssertFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertFixer.php;f6;28;1;453;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitDedicateAssertFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertFixer.php;f14;177;5;198;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,178;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertFixer.php;f11;64;5;119;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,65;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertFixer.php;f14;203;5;252;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,204;;b2,0;;m0;;e">
</treenode>
<treenode node="fixAssertSameEquals;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertFixer.php;f12;326;5;388;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixAssertSameEquals(Tokens $tokens, array $assertCall)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    array &lt;b&gt;$assertCall&lt;/b&gt;;;d4,327;;b3,0;;m0;;eTokens $tokens;;parray $assertCall;;p">
</treenode>
<treenode node="fixAssertTrueFalse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertFixer.php;f12;258;5;320;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixAssertTrueFalse(Tokens $tokens, array $assertCall)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    array &lt;b&gt;$assertCall&lt;/b&gt;;;d4,259;;b3,0;;m0;;eTokens $tokens;;parray $assertCall;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertFixer.php;f11;140;5;163;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,141;;b1,0;;m0;;e">
</treenode>
<treenode node="getPreviousAssertCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertFixer.php;f12;390;5;428;;;;vpos;;v;;a;;r;;d4,391;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertFixer.php;f11;168;5;172;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,169;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertFixer.php;f11;124;5;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,125;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertFixer.php;f11;132;5;135;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,133;;b1,0;;m0;;e">
</treenode>
<treenode node="removeFunctionCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertFixer.php;f12;437;5;452;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeFunctionCall(Tokens $tokens, $callNSIndex, $callIndex, $openIndex, $closeIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    false|int &lt;b&gt;$callNSIndex&lt;/b&gt;&#10;    int &lt;b&gt;$callIndex&lt;/b&gt;&#10;    int &lt;b&gt;$openIndex&lt;/b&gt;&#10;    int &lt;b&gt;$closeIndex&lt;/b&gt;;;d4,438;;b3,0;;m0;;eTokens $tokens;;pfalse|int $callNSIndex;;pint $callIndex;;pint $openIndex;;pint $closeIndex;;p">
</treenode>
</treenode>
<treenode node="PhpUnitDedicateAssertInternalTypeFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertInternalTypeFixer.php;f6;28;1;199;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitDedicateAssertInternalTypeFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertInternalTypeFixer.php;f14;106;5;112;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,107;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertInternalTypeFixer.php;f14;117;5;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,118;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertInternalTypeFixer.php;f11;55;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertInternalTypeFixer.php;f11;97;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,98;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertInternalTypeFixer.php;f11;81;5;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,82;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertInternalTypeFixer.php;f11;89;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,90;;b1,0;;m0;;e">
</treenode>
<treenode node="updateAssertInternalTypeMethods;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitDedicateAssertInternalTypeFixer.php;f12;133;5;198;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    updateAssertInternalTypeMethods(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,134;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
</treenode>
<treenode node="PhpUnitExpectationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitExpectationFixer.php;f6;29;1;272;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitExpectationFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitExpectationFixer.php;f14;141;5;147;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,142;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitExpectationFixer.php;f11;39;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitExpectationFixer.php;f14;152;5;161;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,153;;b2,0;;m0;;e">
</treenode>
<treenode node="detectIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitExpectationFixer.php;f12;262;5;271;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    detectIndent(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,263;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixExpectation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitExpectationFixer.php;f12;163;5;254;;;;vpos;;v;;a;;r;;d4,164;;b3,0;;m0;;etokens;;pstartIndex;;pendIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitExpectationFixer.php;f11;55;5;120;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitExpectationFixer.php;f11;125;5;128;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,126;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitExpectationFixer.php;f11;133;5;136;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,134;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpUnitFqcnAnnotationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitFqcnAnnotationFixer.php;f6;25;1;103;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitFqcnAnnotationFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Roland Franssen &lt;franssen.roland&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitFqcnAnnotationFixer.php;f14;73;5;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,74;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixPhpUnitClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitFqcnAnnotationFixer.php;f12;91;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixPhpUnitClass(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,92;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitFqcnAnnotationFixer.php;f11;30;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitFqcnAnnotationFixer.php;f11;56;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitFqcnAnnotationFixer.php;f11;65;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpUnitInternalClassFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f6;31;1;279;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitInternalClassFixer extends AbstractFixer implements WhitespacesAwareFixerInterface, ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gert de Pagter &lt;BackEndTea&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,32;;b0,0;;m0;;e">
<treenode node="addInternalAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f12;206;5;214;;;;vpos;;v;;aLine;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addInternalAnnotation(DocBlock $docBlock, Tokens $tokens, $docBlockIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$docBlock&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$docBlockIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,207;;b3,0;;m0;;eDocBlock $docBlock;;pTokens $tokens;;pint $docBlockIndex;;p">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f14;77;5;84;;;;vpos;;v;;a;;r;;d4,78;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f14;64;5;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,65;;b2,0;;m0;;e">
</treenode>
<treenode node="createDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f12;129;5;139;;;;vpos;;v;;a;;r;;d4,130;;b3,0;;m0;;etokens;;pdocBlockIndex;;p">
</treenode>
<treenode node="detectIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f12;188;5;197;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    detectIndent(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,189;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f11;36;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,37;;b1,0;;m0;;e">
</treenode>
<treenode node="getDocBlockIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f12;173;5;180;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDocBlockIndex(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,174;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f11;47;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="getSingleLineDocBlockEntry;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f12;262;5;278;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSingleLineDocBlockEntry($line)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line[] &lt;b&gt;$line&lt;/b&gt;;;d4,263;;b3,0;;m0;;eLine[] $line;;p">
</treenode>
<treenode node="hasDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f12;160;5;165;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasDocBlock(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,161;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isAllowedByConfiguration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f12;115;5;127;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAllowedByConfiguration(Tokens $tokens, $i)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$i&lt;/b&gt;;;d4,116;;b3,0;;m0;;eTokens $tokens;;pint $i;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f11;56;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="makeDocBlockMultiLineIfNeeded;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f12;223;5;233;;;;vpos;;v;;aDocBlock;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    makeDocBlockMultiLineIfNeeded(DocBlock $doc, Tokens $tokens, $docBlockIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$docBlockIndex&lt;/b&gt;;;d4,224;;b3,0;;m0;;eDocBlock $doc;;pTokens $tokens;;pint $docBlockIndex;;p">
</treenode>
<treenode node="markClassInternal;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f12;90;5;107;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    markClassInternal(Tokens $tokens, $startIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;;;d4,91;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;p">
</treenode>
<treenode node="splitUpDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f12;244;5;255;;;;vpos;;v;;aLine;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    splitUpDocBlock($lines, Tokens $tokens, $docBlockIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Take a one line doc block, and turn it into a multi line doc block.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line[] &lt;b&gt;$lines&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$docBlockIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,245;;b3,0;;m0;;eLine[] $lines;;pTokens $tokens;;pint $docBlockIndex;;p">
</treenode>
<treenode node="updateDocBlockIfNeeded;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitInternalClassFixer.php;f12;141;5;152;;;;vpos;;v;;a;;r;;d4,142;;b3,0;;m0;;etokens;;pdocBlockIndex;;p">
</treenode>
</treenode>
<treenode node="PhpUnitMethodCasingFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f6;32;1;273;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitMethodCasingFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,33;;b0,0;;m0;;e">
<treenode node="CAMEL_CASE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f9;37;20;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="SNAKE_CASE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f9;42;20;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="applyCasing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f12;110;5;130;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyCasing(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,111;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f14;84;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,85;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f14;95;5;103;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,96;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f11;47;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="getDocBlockIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f12;228;5;235;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDocBlockIndex(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,229;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="hasDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f12;215;5;220;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasDocBlock(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,216;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f11;76;5;79;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,77;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isMethod;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f12;191;5;196;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isMethod(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,192;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isTestMethod;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f12;157;5;183;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isTestMethod(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,158;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="startsWith;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f12;204;5;207;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    startsWith($needle, $haystack)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$needle&lt;/b&gt;&#10;    string &lt;b&gt;$haystack&lt;/b&gt;;;d4,205;;b3,0;;m0;;estring $needle;;pstring $haystack;;p">
</treenode>
<treenode node="updateDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f12;241;5;272;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    updateDocBlock(Tokens $tokens, $docBlockIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$docBlockIndex&lt;/b&gt;;;d4,242;;b3,0;;m0;;eTokens $tokens;;pint $docBlockIndex;;p">
</treenode>
<treenode node="updateMethodCasing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMethodCasingFixer.php;f12;137;5;149;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    updateMethodCasing($functionName)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$functionName&lt;/b&gt;;;d4,138;;b3,0;;m0;;estring $functionName;;p">
</treenode>
</treenode>
<treenode node="PhpUnitMockFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockFixer.php;f6;28;1;149;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitMockFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockFixer.php;f14;105;5;134;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,106;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockFixer.php;f11;95;5;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,96;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockFixer.php;f14;139;5;148;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,140;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockFixer.php;f11;38;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockFixer.php;f11;79;5;82;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,80;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockFixer.php;f11;87;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,88;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpUnitMockShortWillReturnFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockShortWillReturnFixer.php;f6;25;1;145;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitMockShortWillReturnFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Michal Adamski &lt;michal.adamski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Kuba Werlos &lt;werlos&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="RETURN_METHODS_MAP;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockShortWillReturnFixer.php;f9;30;28;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockShortWillReturnFixer.php;f14;85;5;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,86;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixWillReturn;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockShortWillReturnFixer.php;f12;98;5;144;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixWillReturn(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,99;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockShortWillReturnFixer.php;f11;41;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockShortWillReturnFixer.php;f11;69;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,70;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitMockShortWillReturnFixer.php;f11;77;5;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,78;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpUnitNamespacedFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNamespacedFixer.php;f6;27;1;219;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitNamespacedFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNamespacedFixer.php;f14;137;5;176;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,138;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNamespacedFixer.php;f11;89;5;132;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,90;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNamespacedFixer.php;f14;181;5;190;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,182;;b2,0;;m0;;e">
</treenode>
<treenode node="generateReplacement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNamespacedFixer.php;f12;197;5;218;;;;vpos;;v;;aTokens;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    generateReplacement($originalClassName)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$originalClassName&lt;/b&gt;;;d4,198;;b3,0;;m0;;estring $originalClassName;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNamespacedFixer.php;f11;49;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNamespacedFixer.php;f11;73;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,74;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNamespacedFixer.php;f11;81;5;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,82;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpUnitNoExpectationAnnotationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer.php;f6;32;1;299;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitNoExpectationAnnotationFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,33;;b0,0;;m0;;e">
<treenode node="annotationsToParamList;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer.php;f12;274;5;298;;;;vpos;;v;;a;;r;;d4,275;;b3,0;;m0;;eannotations;;p">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer.php;f14;132;5;138;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,133;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer.php;f11;42;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,43;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer.php;f14;143;5;156;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,144;;b2,0;;m0;;e">
</treenode>
<treenode node="detectIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer.php;f12;164;5;173;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    detectIndent(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,165;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="extractContentFromAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer.php;f12;261;5;272;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    extractContentFromAnnotation(Annotation $annotation)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Annotation &lt;b&gt;$annotation&lt;/b&gt;;;d4,262;;b3,0;;m0;;eAnnotation $annotation;;p">
</treenode>
<treenode node="fixPhpUnitClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer.php;f12;180;5;254;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixPhpUnitClass(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,181;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer.php;f11;52;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer.php;f11;107;5;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,108;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer.php;f11;116;5;119;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,117;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitNoExpectationAnnotationFixer.php;f11;124;5;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,125;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpUnitOrderedCoversFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitOrderedCoversFixer.php;f6;25;1;105;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitOrderedCoversFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitOrderedCoversFixer.php;f14;69;5;104;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,70;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitOrderedCoversFixer.php;f11;30;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitOrderedCoversFixer.php;f11;52;5;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitOrderedCoversFixer.php;f11;61;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,62;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpUnitSetUpTearDownVisibilityFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSetUpTearDownVisibilityFixer.php;f6;25;1;141;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitSetUpTearDownVisibilityFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gert de Pagter;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSetUpTearDownVisibilityFixer.php;f14;78;5;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,79;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixSetUpAndTearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSetUpTearDownVisibilityFixer.php;f12;91;5;119;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSetUpAndTearDown(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,92;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSetUpTearDownVisibilityFixer.php;f11;30;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSetUpTearDownVisibilityFixer.php;f11;62;5;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSetUpTearDownVisibilityFixer.php;f11;70;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,71;;b1,0;;m0;;e">
</treenode>
<treenode node="isSetupOrTearDownMethod;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSetUpTearDownVisibilityFixer.php;f12;127;5;140;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isSetupOrTearDownMethod(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,128;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="PhpUnitSizeClassFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f6;32;1;278;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitSizeClassFixer extends AbstractFixer implements WhitespacesAwareFixerInterface, ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jefersson Nathan &lt;malukenho.dev&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,33;;b0,0;;m0;;e">
<treenode node="addSizeAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f12;190;5;199;;;;vpos;;v;;aLine;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addSizeAnnotation(DocBlock $docBlock, Tokens $tokens, $docBlockIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$docBlock&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$docBlockIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,191;;b3,0;;m0;;eDocBlock $docBlock;;pTokens $tokens;;pint $docBlockIndex;;p">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f14;54;5;61;;;;vpos;;v;;a;;r;;d4,55;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f14;66;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b2,0;;m0;;e">
</treenode>
<treenode node="createDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f12;112;5;123;;;;vpos;;v;;a;;r;;d4,113;;b3,0;;m0;;etokens;;pdocBlockIndex;;p">
</treenode>
<treenode node="detectIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f12;172;5;181;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    detectIndent(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,173;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="filterDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f12;270;5;277;;;;vpos;;v;;aAnnotation;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    filterDocBlock(DocBlock $doc)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,271;;b3,0;;m0;;eDocBlock $doc;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f11;37;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="getDocBlockIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f12;157;5;164;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDocBlockIndex(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,158;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getSingleLineDocBlockEntry;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f12;247;5;263;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSingleLineDocBlockEntry($line)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line|Line[]|string &lt;b&gt;$line&lt;/b&gt;;;d4,248;;b3,0;;m0;;eLine|Line[]|string $line;;p">
</treenode>
<treenode node="hasDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f12;144;5;149;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasDocBlock(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,145;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isAbstractClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f12;105;5;110;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAbstractClass(Tokens $tokens, $i)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$i&lt;/b&gt;;;d4,106;;b3,0;;m0;;eTokens $tokens;;pint $i;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f11;49;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="makeDocBlockMultiLineIfNeeded;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f12;208;5;218;;;;vpos;;v;;aDocBlock;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    makeDocBlockMultiLineIfNeeded(DocBlock $doc, Tokens $tokens, $docBlockIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$docBlockIndex&lt;/b&gt;;;d4,209;;b3,0;;m0;;eDocBlock $doc;;pTokens $tokens;;pint $docBlockIndex;;p">
</treenode>
<treenode node="markClassSize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f12;80;5;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    markClassSize(Tokens $tokens, $startIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;;;d4,81;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;p">
</treenode>
<treenode node="splitUpDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f12;229;5;240;;;;vpos;;v;;aLine;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    splitUpDocBlock($lines, Tokens $tokens, $docBlockIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Take a one line doc block, and turn it into a multi line doc block.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line[] &lt;b&gt;$lines&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$docBlockIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,230;;b3,0;;m0;;eLine[] $lines;;pTokens $tokens;;pint $docBlockIndex;;p">
</treenode>
<treenode node="updateDocBlockIfNeeded;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitSizeClassFixer.php;f12;125;5;136;;;;vpos;;v;;a;;r;;d4,126;;b3,0;;m0;;etokens;;pdocBlockIndex;;p">
</treenode>
</treenode>
<treenode node="PhpUnitStrictFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitStrictFixer.php;f6;28;1;157;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitStrictFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitStrictFixer.php;f14;99;5;137;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,100;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitStrictFixer.php;f14;142;5;156;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,143;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitStrictFixer.php;f11;40;5;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitStrictFixer.php;f11;83;5;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,84;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitStrictFixer.php;f11;91;5;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,92;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpUnitTargetVersion;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f6;21;1;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitTargetVersion&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="VERSION_3_0;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;23;21;23;;;;vpos;;v;;a;;r&apos;3.0&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="VERSION_3_2;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;24;21;24;;;;vpos;;v;;a;;r&apos;3.2&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERSION_3_5;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;25;21;25;;;;vpos;;v;;a;;r&apos;3.5&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERSION_4_3;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;26;21;26;;;;vpos;;v;;a;;r&apos;4.3&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERSION_4_8;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;27;21;27;;;;vpos;;v;;a;;r&apos;4.8&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERSION_5_0;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;28;21;28;;;;vpos;;v;;a;;r&apos;5.0&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERSION_5_2;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;29;21;29;;;;vpos;;v;;a;;r&apos;5.2&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERSION_5_4;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;30;21;30;;;;vpos;;v;;a;;r&apos;5.4&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERSION_5_5;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;31;21;31;;;;vpos;;v;;a;;r&apos;5.5&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERSION_5_6;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;32;21;32;;;;vpos;;v;;a;;r&apos;5.6&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERSION_5_7;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;33;21;33;;;;vpos;;v;;a;;r&apos;5.7&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERSION_6_0;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;34;21;34;;;;vpos;;v;;a;;r&apos;6.0&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERSION_7_5;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;35;21;35;;;;vpos;;v;;a;;r&apos;7.5&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="VERSION_NEWEST;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f9;36;24;36;;;;vpos;;v;;a;;r&apos;newest&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f12;38;5;40;;;;vpos;;v;;a;;r;;d4,39;;b3,0;;m0;;e">
</treenode>
<treenode node="fulfills;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTargetVersion.php;f18;48;5;59;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fulfills($candidate, $target)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$candidate&lt;/b&gt;&#10;    string &lt;b&gt;$target&lt;/b&gt;;;d4,49;;b1,5;;m0;;estring $candidate;;pstring $target;;p">
</treenode>
</treenode>
<treenode node="PhpUnitTestAnnotationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f6;32;1;560;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitTestAnnotationFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gert de Pagter;;d0,33;;b0,0;;m0;;e">
<treenode node="addTestAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;537;5;549;;;;vpos;;v;;aLine;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addTestAnnotation($lines, Tokens $tokens, $docBlockIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line[] &lt;b&gt;$lines&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$docBlockIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,538;;b3,0;;m0;;eLine[] $lines;;pTokens $tokens;;pint $docBlockIndex;;p">
</treenode>
<treenode node="addTestPrefix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;313;5;320;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addTestPrefix($functionName)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$functionName&lt;/b&gt;;;d4,314;;b3,0;;m0;;estring $functionName;;p">
</treenode>
<treenode node="addTestPrefixToDependsAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;497;5;510;;;;vpos;;v;;aLine;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addTestPrefixToDependsAnnotation(Line $line)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line &lt;b&gt;$line&lt;/b&gt;;;d4,498;;b3,0;;m0;;eLine $line;;p">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f14;85;5;95;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,86;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="applyTestAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;120;5;150;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyTestAnnotation(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,121;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="applyTestPrefix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;157;5;182;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyTestPrefix(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,158;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f14;100;5;113;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,101;;b2,0;;m0;;e">
</treenode>
<treenode node="createDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;343;5;353;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createDocBlock(Tokens $tokens, $docBlockIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$docBlockIndex&lt;/b&gt;;;d4,344;;b3,0;;m0;;eTokens $tokens;;pint $docBlockIndex;;p">
</treenode>
<treenode node="detectIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;328;5;337;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    detectIndent(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,329;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="doesDocBlockContainTest;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;556;5;559;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    doesDocBlockContainTest(DocBlock $doc)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;;;d4,557;;b3,0;;m0;;eDocBlock $doc;;p">
</treenode>
<treenode node="findWhereDependsFunctionNameStarts;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;519;5;528;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findWhereDependsFunctionNameStarts(array $line)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Helps to find where the function name in the doc block starts.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$line&lt;/b&gt;;;d4,520;;b3,0;;m0;;earray $line;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f11;45;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,46;;b1,0;;m0;;e">
</treenode>
<treenode node="getDocBlockIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;263;5;270;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDocBlockIndex(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,264;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f11;68;5;72;;;;vpos;;v;;a;;r;;d4,69;;b1,0;;m0;;e">
</treenode>
<treenode node="getSingleLineDocBlockEntry;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;438;5;454;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSingleLineDocBlockEntry($line)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line: []$line;;d4,439;;b3,0;;m0;;eLine;;p">
</treenode>
<treenode node="hasDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;250;5;255;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasDocBlock(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,251;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="hasTestPrefix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;277;5;290;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasTestPrefix($functionName)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$functionName&lt;/b&gt;;;d4,278;;b3,0;;m0;;estring $functionName;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f11;77;5;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,78;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isMethod;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;224;5;229;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isMethod(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,225;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f11;37;5;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="isTestMethod;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;190;5;216;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isTestMethod(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,191;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="removeTestPrefix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;297;5;306;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeTestPrefix($functionName)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$functionName&lt;/b&gt;;;d4,298;;b3,0;;m0;;estring $functionName;;p">
</treenode>
<treenode node="removeTestPrefixFromDependsAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;477;5;490;;;;vpos;;v;;aLine;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeTestPrefixFromDependsAnnotation(Line $line)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line &lt;b&gt;$line&lt;/b&gt;;;d4,478;;b3,0;;m0;;eLine $line;;p">
</treenode>
<treenode node="splitUpDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;420;5;431;;;;vpos;;v;;aLine;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    splitUpDocBlock($lines, Tokens $tokens, $docBlockIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Take a one line doc block, and turn it into a multi line doc block.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line[] &lt;b&gt;$lines&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$docBlockIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,421;;b3,0;;m0;;eLine[] $lines;;pTokens $tokens;;pint $docBlockIndex;;p">
</treenode>
<treenode node="startsWith;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;237;5;242;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    startsWith($needle, $haystack)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$needle&lt;/b&gt;&#10;    string &lt;b&gt;$haystack&lt;/b&gt;;;d4,238;;b3,0;;m0;;estring $needle;;pstring $haystack;;p">
</treenode>
<treenode node="updateDependsAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;463;5;470;;;;vpos;;v;;aLine;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    updateDependsAnnotation(Line $line)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Updates the depends tag on the current doc block.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line &lt;b&gt;$line&lt;/b&gt;;;d4,464;;b3,0;;m0;;eLine $line;;p">
</treenode>
<treenode node="updateDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;361;5;367;;;;vpos;;v;;aLine;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    updateDocBlock(Tokens $tokens, $docBlockIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$docBlockIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,362;;b3,0;;m0;;eTokens $tokens;;pint $docBlockIndex;;p">
</treenode>
<treenode node="updateLines;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestAnnotationFixer.php;f12;376;5;409;;;;vpos;;v;;aLine;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    updateLines($lines, Tokens $tokens, $docBlockIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line[] &lt;b&gt;$lines&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$docBlockIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,377;;b3,0;;m0;;eLine[] $lines;;pTokens $tokens;;pint $docBlockIndex;;p">
</treenode>
</treenode>
<treenode node="PhpUnitTestCaseIndicator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Indicator\PhpUnitTestCaseIndicator.php;f6;20;1;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitTestCaseIndicator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="findPhpUnitClasses;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Indicator\PhpUnitTestCaseIndicator.php;f11;56;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findPhpUnitClasses(Tokens $tokens, $beginAtBottom = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \Generator array of [int start, int end] indexes from sooner to later classes&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    bool &lt;b&gt;$beginAtBottom&lt;/b&gt;: whether we should start yielding PHPUnit classes from the bottom of the file;;d4,57;;b1,0;;m0;;eTokens $tokens;;pbool $beginAtBottom;;p">
</treenode>
<treenode node="isPhpUnitClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Indicator\PhpUnitTestCaseIndicator.php;f11;22;5;48;;;;vpos;;v;;a;;r;;d4,23;;b1,0;;m0;;etokens;;pindex;;p">
</treenode>
</treenode>
<treenode node="PhpUnitTestCaseStaticMethodCallsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestCaseStaticMethodCallsFixer.php;f6;29;1;473;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitTestCaseStaticMethodCallsFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="CALL_TYPE_SELF;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestCaseStaticMethodCallsFixer.php;f9;39;24;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="CALL_TYPE_STATIC;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestCaseStaticMethodCallsFixer.php;f9;44;26;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="CALL_TYPE_THIS;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestCaseStaticMethodCallsFixer.php;f9;34;24;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestCaseStaticMethodCallsFixer.php;f14;316;5;322;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,317;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestCaseStaticMethodCallsFixer.php;f14;327;5;368;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,328;;b2,0;;m0;;e">
</treenode>
<treenode node="findEndOfNextBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestCaseStaticMethodCallsFixer.php;f12;467;5;472;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findEndOfNextBlock(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,468;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixPhpUnitClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestCaseStaticMethodCallsFixer.php;f12;375;5;434;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixPhpUnitClass(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,376;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestCaseStaticMethodCallsFixer.php;f11;273;5;295;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,274;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestCaseStaticMethodCallsFixer.php;f11;300;5;303;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,301;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestCaseStaticMethodCallsFixer.php;f11;308;5;311;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,309;;b1,0;;m0;;e">
</treenode>
<treenode node="needsConversion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestCaseStaticMethodCallsFixer.php;f12;444;5;459;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    needsConversion(Tokens $tokens, $operatorIndex, $referenceIndex, $callType)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$operatorIndex&lt;/b&gt;&#10;    int &lt;b&gt;$referenceIndex&lt;/b&gt;&#10;    string &lt;b&gt;$callType&lt;/b&gt;;;d4,445;;b3,0;;m0;;eTokens $tokens;;pint $operatorIndex;;pint $referenceIndex;;pstring $callType;;p">
</treenode>
</treenode>
<treenode node="PhpUnitTestClassRequiresCoversFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestClassRequiresCoversFixer.php;f6;28;1;151;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpUnitTestClassRequiresCoversFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="addRequiresCover;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestClassRequiresCoversFixer.php;f12;73;5;150;;;;vpos;;v;;a;;r;;d4,74;;b3,0;;m0;;etokens;;pstartIndex;;p">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestClassRequiresCoversFixer.php;f14;64;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,65;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestClassRequiresCoversFixer.php;f11;33;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\PhpUnit\PhpUnitTestClassRequiresCoversFixer.php;f11;56;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpdocAddMissingParamAnnotationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAddMissingParamAnnotationFixer.php;f6;31;1;285;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocAddMissingParamAnnotationFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,32;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAddMissingParamAnnotationFixer.php;f14;106;5;218;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,107;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAddMissingParamAnnotationFixer.php;f14;223;5;231;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,224;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAddMissingParamAnnotationFixer.php;f11;36;5;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,37;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAddMissingParamAnnotationFixer.php;f11;80;5;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,81;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAddMissingParamAnnotationFixer.php;f11;90;5;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,91;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAddMissingParamAnnotationFixer.php;f11;98;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,99;;b1,0;;m0;;e">
</treenode>
<treenode node="prepareArgumentInformation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAddMissingParamAnnotationFixer.php;f12;240;5;284;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    prepareArgumentInformation(Tokens $tokens, $start, $end)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;&#10;    int &lt;b&gt;$end&lt;/b&gt;;;d4,241;;b3,0;;m0;;eTokens $tokens;;pint $start;;pint $end;;p">
</treenode>
</treenode>
<treenode node="PhpdocAlignFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f6;34;1;430;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocAlignFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Jordi Boggiano &lt;j.boggiano&#10;&lt;b&gt;seld&lt;/b&gt;: .be&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Sebastiaan Stok &lt;s.stok&#10;&lt;b&gt;rollerscapes&lt;/b&gt;: .net&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,35;;b0,0;;m0;;e">
<treenode node="ALIGN_LEFT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f9;39;20;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="ALIGN_VERTICAL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f9;44;24;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f14;169;5;184;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,170;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f11;83;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,84;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f14;189;5;216;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,190;;b2,0;;m0;;e">
</treenode>
<treenode node="fixDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f12;221;5;328;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixDocBlock(DocBlock $docBlock)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$docBlock&lt;/b&gt;;;d4,222;;b3,0;;m0;;eDocBlock $docBlock;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f11;119;5;141;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,120;;b1,0;;m0;;e">
</treenode>
<treenode node="getIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f12;373;5;378;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIndent($verticalAlignIndent, $leftAlignIndent = 1)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$verticalAlignIndent&lt;/b&gt;&#10;    int &lt;b&gt;$leftAlignIndent&lt;/b&gt;;;d4,374;;b3,0;;m0;;eint $verticalAlignIndent;;pint $leftAlignIndent;;p">
</treenode>
<treenode node="getLeftAlignedDescriptionIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f12;386;5;411;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLeftAlignedDescriptionIndent(array $items, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array[] &lt;b&gt;$items&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,387;;b3,0;;m0;;earray[] $items;;pint $index;;p">
</treenode>
<treenode node="getMatches;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f12;336;5;365;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMatches($line, $matchCommentOnly = false)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$line&lt;/b&gt;&#10;    bool &lt;b&gt;$matchCommentOnly&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string[];;d4,337;;b3,0;;m0;;estring $line;;pbool $matchCommentOnly;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f11;146;5;156;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,147;;b1,0;;m0;;e">
</treenode>
<treenode node="getSentenceIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f12;420;5;429;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSentenceIndent($sentence)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get indent for sentence.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|string &lt;b&gt;$sentence&lt;/b&gt;;;d4,421;;b3,0;;m0;;enull|string $sentence;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAlignFixer.php;f11;161;5;164;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,162;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpdocAnnotationWithoutDotFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAnnotationWithoutDotFixer.php;f6;25;1;116;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocAnnotationWithoutDotFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAnnotationWithoutDotFixer.php;f14;56;5;115;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAnnotationWithoutDotFixer.php;f11;32;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocAnnotationWithoutDotFixer.php;f11;48;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpdocIndentFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocIndentFixer.php;f6;26;1;143;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocIndentFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Ceeram &lt;ceeram&#10;&lt;b&gt;cakephp&lt;/b&gt;: .org&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocIndentFixer.php;f14;74;5;118;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,75;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixDocBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocIndentFixer.php;f12;128;5;131;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixDocBlock($content, $indent)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fix indentation of Docblock.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;: Docblock contents&#10;    string &lt;b&gt;$indent&lt;/b&gt;: Indentation to apply&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Dockblock contents including correct indentation;;d4,129;;b3,0;;m0;;estring $content;;pstring $indent;;p">
</treenode>
<treenode node="fixWhitespaceBeforeDocblock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocIndentFixer.php;f12;139;5;142;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixWhitespaceBeforeDocblock($content, $indent)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;: Whitespace before Docblock&#10;    string &lt;b&gt;$indent&lt;/b&gt;: Indentation of the documented subject&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Whitespace including correct indentation for Dockblock after this whitespace;;d4,140;;b3,0;;m0;;estring $content;;pstring $indent;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocIndentFixer.php;f11;31;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocIndentFixer.php;f11;50;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocIndentFixer.php;f11;66;5;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpdocInlineTagFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocInlineTagFixer.php;f6;24;1;95;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocInlineTagFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fix inline tags and make inheritdoc tag always inline.;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocInlineTagFixer.php;f14;57;5;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocInlineTagFixer.php;f11;29;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocInlineTagFixer.php;f11;49;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpdocNoAccessFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoAccessFixer.php;f6;22;1;58;;;;vpos;;v;;aAbstractProxyFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocNoAccessFixer extends AbstractProxyFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="createProxyFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoAccessFixer.php;f14;51;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProxyFixers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoAccessFixer.php;f11;27;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpdocNoAliasTagFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoAliasTagFixer.php;f6;34;1;175;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocNoAliasTagFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Case sensitive tag replace fixer (does not process inline tags like {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: }).&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,35;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoAliasTagFixer.php;f14;95;5;117;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,96;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoAliasTagFixer.php;f14;122;5;174;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,123;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoAliasTagFixer.php;f11;47;5;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoAliasTagFixer.php;f11;86;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,87;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoAliasTagFixer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpdocNoEmptyReturnFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoEmptyReturnFixer.php;f6;25;1;124;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocNoEmptyReturnFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoEmptyReturnFixer.php;f14;76;5;108;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,77;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoEmptyReturnFixer.php;f12;116;5;123;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixAnnotation(DocBlock $doc, Annotation $annotation)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Remove return void or return null annotations..&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;&#10;    Annotation &lt;b&gt;$annotation&lt;/b&gt;;;d4,117;;b3,0;;m0;;eDocBlock $doc;;pAnnotation $annotation;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoEmptyReturnFixer.php;f11;38;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoEmptyReturnFixer.php;f11;66;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoEmptyReturnFixer.php;f11;30;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpdocNoPackageFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoPackageFixer.php;f6;22;1;58;;;;vpos;;v;;aAbstractProxyFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocNoPackageFixer extends AbstractProxyFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="createProxyFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoPackageFixer.php;f14;51;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProxyFixers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoPackageFixer.php;f11;27;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpdocNoUselessInheritdocFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoUselessInheritdocFixer.php;f6;27;1;194;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocNoUselessInheritdocFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Remove inheritdoc tags from classy that does not inherit.&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoUselessInheritdocFixer.php;f14;64;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,65;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixClassy;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoUselessInheritdocFixer.php;f12;80;5;104;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixClassy(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,81;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixClassyInside;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoUselessInheritdocFixer.php;f12;112;5;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixClassyInside(Tokens $tokens, $classOpenIndex, $classEndIndex, $fixThisLevel)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classOpenIndex&lt;/b&gt;&#10;    int &lt;b&gt;$classEndIndex&lt;/b&gt;&#10;    bool &lt;b&gt;$fixThisLevel&lt;/b&gt;;;d4,113;;b3,0;;m0;;eTokens $tokens;;pint $classOpenIndex;;pint $classEndIndex;;pbool $fixThisLevel;;p">
</treenode>
<treenode node="fixClassyOutside;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoUselessInheritdocFixer.php;f12;127;5;133;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixClassyOutside(Tokens $tokens, $classIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classIndex&lt;/b&gt;;;d4,128;;b3,0;;m0;;eTokens $tokens;;pint $classIndex;;p">
</treenode>
<treenode node="fixToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoUselessInheritdocFixer.php;f12;139;5;155;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixToken(Tokens $tokens, $tokenIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$tokenIndex&lt;/b&gt;;;d4,140;;b3,0;;m0;;eTokens $tokens;;pint $tokenIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoUselessInheritdocFixer.php;f11;32;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoUselessInheritdocFixer.php;f11;46;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoUselessInheritdocFixer.php;f11;56;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isExtendingOrImplementing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoUselessInheritdocFixer.php;f12;164;5;173;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isExtendingOrImplementing(Tokens $tokens, $classIndex, $classOpenIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classIndex&lt;/b&gt;&#10;    int &lt;b&gt;$classOpenIndex&lt;/b&gt;;;d4,165;;b3,0;;m0;;eTokens $tokens;;pint $classIndex;;pint $classOpenIndex;;p">
</treenode>
<treenode node="isUsingTrait;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocNoUselessInheritdocFixer.php;f12;183;5;193;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isUsingTrait(Tokens $tokens, $classIndex, $classOpenIndex, $classCloseIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classIndex&lt;/b&gt;&#10;    int &lt;b&gt;$classOpenIndex&lt;/b&gt;&#10;    int &lt;b&gt;$classCloseIndex&lt;/b&gt;;;d4,184;;b3,0;;m0;;eTokens $tokens;;pint $classIndex;;pint $classOpenIndex;;pint $classCloseIndex;;p">
</treenode>
</treenode>
<treenode node="PhpdocOrderFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocOrderFixer.php;f6;24;1;174;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocOrderFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocOrderFixer.php;f14;77;5;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,78;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocOrderFixer.php;f11;37;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocOrderFixer.php;f11;62;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocOrderFixer.php;f11;29;5;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="moveParamAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocOrderFixer.php;f12;102;5;133;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    moveParamAnnotations($content)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Move all param annotations in before throws and return annotations.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;;;d4,103;;b3,0;;m0;;estring $content;;p">
</treenode>
<treenode node="moveReturnAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocOrderFixer.php;f12;142;5;173;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    moveReturnAnnotations($content)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Move all return annotations after param and throws annotations.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;;;d4,143;;b3,0;;m0;;estring $content;;p">
</treenode>
</treenode>
<treenode node="PhpdocReturnSelfReferenceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocReturnSelfReferenceFixer.php;f6;30;1;226;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocReturnSelfReferenceFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,31;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocReturnSelfReferenceFixer.php;f14;115;5;123;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,116;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocReturnSelfReferenceFixer.php;f14;128;5;173;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,129;;b2,0;;m0;;e">
</treenode>
<treenode node="fixMethod;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocReturnSelfReferenceFixer.php;f12;179;5;225;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixMethod(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,180;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocReturnSelfReferenceFixer.php;f11;41;5;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocReturnSelfReferenceFixer.php;f11;106;5;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,107;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocReturnSelfReferenceFixer.php;f11;98;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,99;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpdocScalarFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocScalarFixer.php;f6;25;1;102;;;;vpos;;v;;aAbstractPhpdocTypesFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocScalarFixer extends AbstractPhpdocTypesFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocScalarFixer.php;f14;81;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,82;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocScalarFixer.php;f11;44;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,45;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocScalarFixer.php;f11;64;5;76;;;;vpos;;v;;a;;r;;d4,65;;b1,0;;m0;;e">
</treenode>
<treenode node="normalize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocScalarFixer.php;f14;94;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    normalize($type)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,95;;b2,0;;m0;;etype;;p">
</treenode>
</treenode>
<treenode node="PhpdocSeparationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSeparationFixer.php;f6;26;1;180;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocSeparationFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSeparationFixer.php;f14;73;5;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,74;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="ensureAreSeparate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSeparationFixer.php;f12;164;5;179;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ensureAreSeparate(DocBlock $doc, Annotation $first, Annotation $second)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Force the given annotations to have one empty line between each other.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;&#10;    Annotation &lt;b&gt;$first&lt;/b&gt;&#10;    Annotation &lt;b&gt;$second&lt;/b&gt;;;d4,165;;b3,0;;m0;;eDocBlock $doc;;pAnnotation $first;;pAnnotation $second;;p">
</treenode>
<treenode node="ensureAreTogether;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSeparationFixer.php;f12;147;5;155;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ensureAreTogether(DocBlock $doc, Annotation $first, Annotation $second)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Force the given annotations to immediately follow each other.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;&#10;    Annotation &lt;b&gt;$first&lt;/b&gt;&#10;    Annotation &lt;b&gt;$second&lt;/b&gt;;;d4,148;;b3,0;;m0;;eDocBlock $doc;;pAnnotation $first;;pAnnotation $second;;p">
</treenode>
<treenode node="fixAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSeparationFixer.php;f12;119;5;138;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixAnnotations(DocBlock $doc)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Make sure the annotations are correctly separated.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;;;d4,120;;b3,0;;m0;;eDocBlock $doc;;p">
</treenode>
<treenode node="fixDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSeparationFixer.php;f12;93;5;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixDescription(DocBlock $doc)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Make sure the description is separated from the annotations.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;;;d4,94;;b3,0;;m0;;eDocBlock $doc;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSeparationFixer.php;f11;31;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSeparationFixer.php;f11;57;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSeparationFixer.php;f11;65;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpdocSingleLineVarSpacingFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSingleLineVarSpacingFixer.php;f6;26;1;105;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocSingleLineVarSpacingFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for part of rule defined in PSR5 ¶7.22.&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,27;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSingleLineVarSpacingFixer.php;f14;59;5;79;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,60;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixTokenContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSingleLineVarSpacingFixer.php;f12;86;5;104;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixTokenContent($content)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;;;d4,87;;b3,0;;m0;;estring $content;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSingleLineVarSpacingFixer.php;f11;31;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSingleLineVarSpacingFixer.php;f11;42;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSingleLineVarSpacingFixer.php;f11;51;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpdocSummaryFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSummaryFixer.php;f6;26;1;92;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocSummaryFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSummaryFixer.php;f14;55;5;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSummaryFixer.php;f11;31;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSummaryFixer.php;f11;47;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isCorrectlyFormatted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocSummaryFixer.php;f12;84;5;91;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCorrectlyFormatted($content)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Is the last line of the short description correctly formatted?&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;;;d4,85;;b3,0;;m0;;estring $content;;p">
</treenode>
</treenode>
<treenode node="PhpdocToCommentFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocToCommentFixer.php;f6;25;1;93;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocToCommentFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Ceeram &lt;ceeram&#10;&lt;b&gt;cakephp&lt;/b&gt;: .org&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocToCommentFixer.php;f14;73;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,74;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocToCommentFixer.php;f11;51;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocToCommentFixer.php;f11;38;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocToCommentFixer.php;f11;30;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpdocToReturnTypeFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\PhpdocToReturnTypeFixer.php;f6;31;1;325;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocToReturnTypeFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,32;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\PhpdocToReturnTypeFixer.php;f14;158;5;238;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,159;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\PhpdocToReturnTypeFixer.php;f14;145;5;153;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,146;;b2,0;;m0;;e">
</treenode>
<treenode node="findReturnAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\PhpdocToReturnTypeFixer.php;f12;303;5;324;;;;vpos;;v;;aAnnotation;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findReturnAnnotations(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Find all the return annotations in the function&apos;s PHPDoc comment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: The index of the function token&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,304;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixFunctionDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\PhpdocToReturnTypeFixer.php;f12;262;5;293;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunctionDefinition(Tokens $tokens, $index, $isNullable, $returnType)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: The index of the end of the function definition line, EG at { or ;s&#10;    bool &lt;b&gt;$isNullable&lt;/b&gt;&#10;    string &lt;b&gt;$returnType&lt;/b&gt;;;d4,263;;b3,0;;m0;;eTokens $tokens;;pint $index;;pbool $isNullable;;pstring $returnType;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\PhpdocToReturnTypeFixer.php;f11;78;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,79;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\PhpdocToReturnTypeFixer.php;f11;127;5;132;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,128;;b1,0;;m0;;e">
</treenode>
<treenode node="hasReturnTypeHint;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\PhpdocToReturnTypeFixer.php;f12;248;5;254;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasReturnTypeHint(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Determine whether the function already has a return type hint.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: The index of the end of the function definition line, EG at { or ;s;;d4,249;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\PhpdocToReturnTypeFixer.php;f11;119;5;122;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,120;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\PhpdocToReturnTypeFixer.php;f11;137;5;140;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,138;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="PhpdocTrimConsecutiveBlankLineSeparationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimConsecutiveBlankLineSeparationFixer.php;f6;27;1;214;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocTrimConsecutiveBlankLineSeparationFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Nobu Funaki &lt;nobu.funaki&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimConsecutiveBlankLineSeparationFixer.php;f14;72;5;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,73;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="findFirstAnnotationOrEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimConsecutiveBlankLineSeparationFixer.php;f12;186;5;196;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findFirstAnnotationOrEnd(DocBlock $doc)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;;;d4,187;;b3,0;;m0;;eDocBlock $doc;;p">
</treenode>
<treenode node="findNonBlankLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimConsecutiveBlankLineSeparationFixer.php;f12;168;5;179;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findNonBlankLine(DocBlock $doc, $after)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;&#10;    int &lt;b&gt;$after&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,169;;b3,0;;m0;;eDocBlock $doc;;pint $after;;p">
</treenode>
<treenode node="fixAllTheRest;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimConsecutiveBlankLineSeparationFixer.php;f12;126;5;134;;;;vpos;;v;;a;;r;;d4,127;;b3,0;;m0;;edoc;;p">
</treenode>
<treenode node="fixDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimConsecutiveBlankLineSeparationFixer.php;f12;108;5;124;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixDescription(DocBlock $doc, $summaryEnd)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;&#10;    int &lt;b&gt;$summaryEnd&lt;/b&gt;;;d4,109;;b3,0;;m0;;eDocBlock $doc;;pint $summaryEnd;;p">
</treenode>
<treenode node="fixSummary;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimConsecutiveBlankLineSeparationFixer.php;f12;97;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSummary(DocBlock $doc, $summaryEnd)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;&#10;    int &lt;b&gt;$summaryEnd&lt;/b&gt;;;d4,98;;b3,0;;m0;;eDocBlock $doc;;pint $summaryEnd;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimConsecutiveBlankLineSeparationFixer.php;f11;32;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimConsecutiveBlankLineSeparationFixer.php;f11;64;5;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,65;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="removeExtraBlankLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimConsecutiveBlankLineSeparationFixer.php;f12;154;5;160;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeExtraBlankLine(Line $current, Line $next)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line &lt;b&gt;$current&lt;/b&gt;&#10;    Line &lt;b&gt;$next&lt;/b&gt;;;d4,155;;b3,0;;m0;;eLine $current;;pLine $next;;p">
</treenode>
<treenode node="removeExtraBlankLinesBetween;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimConsecutiveBlankLineSeparationFixer.php;f12;141;5;148;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeExtraBlankLinesBetween(DocBlock $doc, $from, $to)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;&#10;    int &lt;b&gt;$from&lt;/b&gt;&#10;    int &lt;b&gt;$to&lt;/b&gt;;;d4,142;;b3,0;;m0;;eDocBlock $doc;;pint $from;;pint $to;;p">
</treenode>
<treenode node="reverseFindLastUsefulContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimConsecutiveBlankLineSeparationFixer.php;f12;204;5;213;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    reverseFindLastUsefulContent(DocBlock $doc, $from)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    DocBlock &lt;b&gt;$doc&lt;/b&gt;&#10;    int &lt;b&gt;$from&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,205;;b3,0;;m0;;eDocBlock $doc;;pint $from;;p">
</treenode>
</treenode>
<treenode node="PhpdocTrimFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimFixer.php;f6;24;1;130;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocTrimFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimFixer.php;f14;69;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,70;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimFixer.php;f12;115;5;129;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixEnd($content)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Make sure the last useful line is immediately before the final line.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;;;d4,116;;b3,0;;m0;;estring $content;;p">
</treenode>
<treenode node="fixStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimFixer.php;f12;92;5;106;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixStart($content)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Make sure the first useful line starts immediately after the first line.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;;;d4,93;;b3,0;;m0;;estring $content;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimFixer.php;f11;29;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimFixer.php;f11;48;5;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTrimFixer.php;f11;61;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,62;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpdocTypesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTypesFixer.php;f6;26;1;146;;;;vpos;;v;;aAbstractPhpdocTypesFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocTypesFixer extends AbstractPhpdocTypesFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTypesFixer.php;f11;74;5;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,75;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTypesFixer.php;f14;134;5;145;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,135;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTypesFixer.php;f11;86;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,87;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTypesFixer.php;f11;104;5;115;;;;vpos;;v;;a;;r;;d4,105;;b1,0;;m0;;e">
</treenode>
<treenode node="normalize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTypesFixer.php;f14;120;5;129;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    normalize($type)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,121;;b2,0;;m0;;etype;;p">
</treenode>
</treenode>
<treenode node="PhpdocTypesOrderFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTypesOrderFixer.php;f6;27;1;211;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTypesOrderFixer.php;f14;111;5;144;;;;vpos;;v;;a;;r;;d4,112;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTypesOrderFixer.php;f14;97;5;109;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,98;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTypesOrderFixer.php;f11;32;5;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTypesOrderFixer.php;f11;89;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,90;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="sortJoinedTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTypesOrderFixer.php;f12;200;5;210;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortJoinedTypes($types)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$types&lt;/b&gt;;;d4,201;;b3,0;;m0;;estring $types;;p">
</treenode>
<treenode node="sortTypes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocTypesOrderFixer.php;f12;151;5;193;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortTypes(array $types)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$types&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,152;;b3,0;;m0;;estring[] $types;;p">
</treenode>
</treenode>
<treenode node="PhpdocVarAnnotationCorrectOrderFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocVarAnnotationCorrectOrderFixer.php;f6;24;1;66;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocVarAnnotationCorrectOrderFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Kuba Werlos &lt;werlos&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocVarAnnotationCorrectOrderFixer.php;f14;42;5;65;;;;vpos;;v;;a;;r;;d4,43;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocVarAnnotationCorrectOrderFixer.php;f11;26;5;35;;;;vpos;;v;;a;;r;;d4,27;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocVarAnnotationCorrectOrderFixer.php;f11;37;5;40;;;;vpos;;v;;a;;r;;d4,38;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PhpdocVarWithoutNameFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocVarWithoutNameFixer.php;f6;26;1;100;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PhpdocVarWithoutNameFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocVarWithoutNameFixer.php;f14;63;5;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,64;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocVarWithoutNameFixer.php;f12;90;5;99;;;;vpos;;v;;a;;r;;d4,91;;b3,0;;m0;;eline;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocVarWithoutNameFixer.php;f11;31;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Phpdoc\PhpdocVarWithoutNameFixer.php;f11;55;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="PowToExponentiationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\PowToExponentiationFixer.php;f6;25;1;213;;;;vpos;;v;;aAbstractFunctionReferenceFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PowToExponentiationFixer extends AbstractFunctionReferenceFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\PowToExponentiationFixer.php;f14;65;5;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="findPowCalls;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\PowToExponentiationFixer.php;f12;104;5;123;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findPowCalls(Tokens $tokens)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,105;;b3,0;;m0;;eTokens $tokens;;p">
</treenode>
<treenode node="fixPowToExponentiation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\PowToExponentiationFixer.php;f12;134;5;167;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixPowToExponentiation(Tokens $tokens, $functionNameIndex, $openParenthesisIndex, $closeParenthesisIndex, array $arguments)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$functionNameIndex&lt;/b&gt;&#10;    int &lt;b&gt;$openParenthesisIndex&lt;/b&gt;&#10;    int &lt;b&gt;$closeParenthesisIndex&lt;/b&gt;&#10;    array&lt;int,int&gt; &lt;b&gt;$arguments&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   number of tokens added to the collection;;d4,135;;b3,0;;m0;;eTokens $tokens;;pint $functionNameIndex;;pint $openParenthesisIndex;;pint $closeParenthesisIndex;;parray&lt;int,int&gt; $arguments;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\PowToExponentiationFixer.php;f11;39;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\PowToExponentiationFixer.php;f11;56;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\PowToExponentiationFixer.php;f11;30;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isParenthesisNeeded;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\PowToExponentiationFixer.php;f12;176;5;212;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isParenthesisNeeded(Tokens $tokens, $argumentStartIndex, $argumentEndIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$argumentStartIndex&lt;/b&gt;&#10;    int &lt;b&gt;$argumentEndIndex&lt;/b&gt;;;d4,177;;b3,0;;m0;;eTokens $tokens;;pint $argumentStartIndex;;pint $argumentEndIndex;;p">
</treenode>
</treenode>
<treenode node="PreIncrementFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\PreIncrementFixer.php;f6;24;1;55;;;;vpos;;v;;aAbstractProxyFixer;;cDeprecatedFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PreIncrementFixer extends AbstractProxyFixer implements DeprecatedFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gregor Harlan &lt;gharlan&#10;&lt;b&gt;web&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;deprecated&lt;/b&gt;: in 2.8, proxy to IncrementStyleFixer;;d0,25;;b0,0;;m0;;e">
<treenode node="createProxyFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\PreIncrementFixer.php;f14;48;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProxyFixers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\PreIncrementFixer.php;f11;29;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="getSuccessorsNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\PreIncrementFixer.php;f11;40;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSuccessorsNames()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Preg;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Preg.php;f6;22;1;188;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Preg&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class replaces preg_* functions to better handling UTF8 strings,&#10;ensuring no matter &quot;u&quot; modifier is present or absent subject will be handled correctly.&#10;&lt;b&gt;author&lt;/b&gt;: Kuba Werlos &lt;werlos&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="addUtf8Modifier;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Preg.php;f19;158;5;165;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addUtf8Modifier($pattern)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$pattern&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string[];;d4,159;;b3,5;;m0;;estring|string[] $pattern;;p">
</treenode>
<treenode node="match;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Preg.php;f18;35;5;48;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    match($pattern, $subject, &amp;$matches = null, $flags = 0, $offset = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: PregException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pattern&lt;/b&gt;&#10;    string &lt;b&gt;$subject&lt;/b&gt;&#10;    null|string[] &lt;b&gt;$matches&lt;/b&gt;&#10;    int &lt;b&gt;$flags&lt;/b&gt;&#10;    int &lt;b&gt;$offset&lt;/b&gt;;;d4,36;;b1,5;;m0;;estring $pattern;;pstring $subject;;pnull|string[] $matches;;pint $flags;;pint $offset;;p">
</treenode>
<treenode node="matchAll;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Preg.php;f18;61;5;74;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    matchAll($pattern, $subject, &amp;$matches = null, $flags = PREG_PATTERN_ORDER, $offset = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: PregException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pattern&lt;/b&gt;&#10;    string &lt;b&gt;$subject&lt;/b&gt;&#10;    null|string[] &lt;b&gt;$matches&lt;/b&gt;&#10;    int &lt;b&gt;$flags&lt;/b&gt;&#10;    int &lt;b&gt;$offset&lt;/b&gt;;;d4,62;;b1,5;;m0;;estring $pattern;;pstring $subject;;pnull|string[] $matches;;pint $flags;;pint $offset;;p">
</treenode>
<treenode node="removeUtf8Modifier;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Preg.php;f19;172;5;187;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeUtf8Modifier($pattern)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$pattern&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string[];;d4,173;;b3,5;;m0;;estring|string[] $pattern;;p">
</treenode>
<treenode node="replace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Preg.php;f18;87;5;100;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    replace($pattern, $replacement, $subject, $limit = -1, &amp;$count = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: PregException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$pattern&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$replacement&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$subject&lt;/b&gt;&#10;    int &lt;b&gt;$limit&lt;/b&gt;&#10;    null|int &lt;b&gt;$count&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string[];;d4,88;;b1,5;;m0;;estring|string[] $pattern;;pstring|string[] $replacement;;pstring|string[] $subject;;pint $limit;;pnull|int $count;;p">
</treenode>
<treenode node="replaceCallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Preg.php;f18;113;5;126;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    replaceCallback($pattern, $callback, $subject, $limit = -1, &amp;$count = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: PregException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$pattern&lt;/b&gt;&#10;    callable &lt;b&gt;$callback&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$subject&lt;/b&gt;&#10;    int &lt;b&gt;$limit&lt;/b&gt;&#10;    null|int &lt;b&gt;$count&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string[];;d4,114;;b1,5;;m0;;estring|string[] $pattern;;pcallable $callback;;pstring|string[] $subject;;pint $limit;;pnull|int $count;;p">
</treenode>
<treenode node="split;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Preg.php;f18;138;5;151;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    split($pattern, $subject, $limit = -1, $flags = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: PregException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$pattern&lt;/b&gt;&#10;    string &lt;b&gt;$subject&lt;/b&gt;&#10;    int &lt;b&gt;$limit&lt;/b&gt;&#10;    int &lt;b&gt;$flags&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,139;;b1,5;;m0;;estring $pattern;;pstring $subject;;pint $limit;;pint $flags;;p">
</treenode>
</treenode>
<treenode node="PregException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\PregException.php;f6;21;1;23;;;;vpos;;v;;aRuntimeException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class PregException extends \RuntimeException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exception that is thrown when PCRE function encounters an error.&#10;&lt;b&gt;author&lt;/b&gt;: Kuba Werlos &lt;werlos&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
</treenode>
<treenode node="Process;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f0;30;1;1644;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Process.php;f0;20;1;169;;;;vpos;;v;;aIteratorAggregate;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Process implements \IteratorAggregate&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Process is a thin wrapper around proc_* functions to easily&#10;start independent PHP processes.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Romain Neutron &lt;imprec&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,31;;b0,0;;m0;;e">
<treenode node="ERR;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f9;32;13;32;;;;vpos;;v;;a;;r&apos;err&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="ITER_KEEP_OUTPUT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f9;47;26;47;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="ITER_NON_BLOCKING;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f9;46;27;46;;;;vpos;;v;;a;;r1;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="ITER_SKIP_ERR;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f9;49;23;49;;;;vpos;;v;;a;;r8;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="ITER_SKIP_OUT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f9;48;23;48;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="OUT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f9;33;13;33;;;;vpos;;v;;a;;r&apos;out&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STATUS_READY;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f9;35;22;35;;;;vpos;;v;;a;;r&apos;ready&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STATUS_STARTED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f9;36;24;36;;;;vpos;;v;;a;;r&apos;started&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STATUS_TERMINATED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f9;37;27;37;;;;vpos;;v;;a;;r&apos;terminated&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STDERR;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f9;41;16;41;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STDIN;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f9;39;15;39;;;;vpos;;v;;a;;r0;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="STDOUT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f9;40;16;40;;;;vpos;;v;;a;;r1;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="TIMEOUT_PRECISION;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f9;44;27;44;;;;vpos;;v;;a;;r0.2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__clone;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;205;5;208;;;;vpos;;v;;a;;r;;d4,206;;b1,0;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;139;5;167;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($command, string $cwd = null, array $env = null, $input = null, ?float $timeout = 60)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: RuntimeException When proc_open is not installed&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$command&lt;/b&gt;: The command to run and its arguments listed as separate entries&#10;    string|null &lt;b&gt;$cwd&lt;/b&gt;: The working directory or null to use the working dir of the current PHP process&#10;    array|null &lt;b&gt;$env&lt;/b&gt;: The environment variables or null to use the same environment as the current PHP process&#10;    mixed|null &lt;b&gt;$input&lt;/b&gt;: The input as stream resource, scalar or \Traversable, or null for no input&#10;    int|float|null &lt;b&gt;$timeout&lt;/b&gt;: The timeout in seconds or null to disable;;d4,140;;b1,0;;m0;;earray $command;;pstring|null $cwd;;parray|null $env;;pmixed|null $input;;pint|float|null $timeout;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;200;5;203;;;;vpos;;v;;a;;r;;d4,201;;b1,0;;m0;;e">
</treenode>
<treenode node="addColorOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Process.php;f18;32;5;60;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addColorOption(array $args, $colorOption)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array of parameters, including a color option if required&#10;A color option is needed because child process output is piped.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$args&lt;/b&gt;: The script parameters&#10;    string &lt;b&gt;$colorOption&lt;/b&gt;: The long option to force color output;;d4,33;;b1,5;;m0;;earray $args;;pstring $colorOption;;p">
</treenode>
<treenode node="addErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;944;5;951;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addErrorOutput(string $line)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a line to the STDERR stream.&#10;&lt;b&gt;internal&lt;/b&gt;;;d4,945;;b1,0;;m0;;eline;;p">
</treenode>
<treenode node="addOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;930;5;937;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addOutput(string $line)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a line to the STDOUT stream.&#10;&lt;b&gt;internal&lt;/b&gt;;;d4,931;;b1,0;;m0;;eline;;p">
</treenode>
<treenode node="buildCallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f14;1303;5;1322;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    buildCallback(callable $callback = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Builds up the callback used by wait().&#10;The callbacks adds all occurred output to the specific buffer and calls&#10;the user callback (if present) with the received output.&#10;\Closure A PHP closure&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    callable|null &lt;b&gt;$callback&lt;/b&gt;: The user defined PHP callback;;d4,1304;;b2,0;;m0;;ecallable|null $callback;;p">
</treenode>
<treenode node="checkTimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1223;5;1240;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkTimeout()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Performs a check between the timeout definition and the time the process started.&#10;In case you run a background process (with the start method), you should&#10;trigger this method regularly to ensure the process timeout&#10;&lt;b&gt;throws&lt;/b&gt;: ProcessTimedOutException In case the timeout was reached;;d4,1224;;b1,0;;m0;;e">
</treenode>
<treenode node="clearErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;716;5;723;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearErrorOutput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clears the process output.&#10;$this;;d4,717;;b1,0;;m0;;e">
</treenode>
<treenode node="clearOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;657;5;664;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearOutput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clears the process output.&#10;$this;;d4,658;;b1,0;;m0;;e">
</treenode>
<treenode node="close;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f12;1432;5;1457;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    close(): int&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Closes process resource, closes file handles, sets the exitcode.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The exitcode;;d4,1433;;b3,0;;m0;;e">
</treenode>
<treenode node="disableOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;509;5;521;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    disableOutput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Disables fetching output and error output from the underlying process.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException In case the process is already running&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException   if an idle timeout is set;;d4,510;;b1,0;;m0;;e">
</treenode>
<treenode node="doSignal;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f12;1490;5;1532;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    doSignal(int $signal, bool $throwException): bool&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sends a POSIX signal to the process.&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException   In case the process is not running&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException In case --enable-sigchild is activated and the process can&apos;t be killed&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException In case of failure&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$signal&lt;/b&gt;: A valid POSIX signal (see https://php.net/pcntl.constants)&#10;    bool &lt;b&gt;$throwException&lt;/b&gt;: Whether to throw exception in case signal failed&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   True if the signal was sent successfully, false otherwise;;d4,1491;;b3,0;;m0;;eint $signal;;pbool $throwException;;p">
</treenode>
<treenode node="enableOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;530;5;539;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    enableOutput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enables fetching output and error output from the underlying process.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException In case the process is already running;;d4,531;;b1,0;;m0;;e">
</treenode>
<treenode node="escape;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Process.php;f18;74;5;103;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    escape($arg, $meta = true, $module = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Escapes a string to be used as a shell argument.&#10;From https://github.com/johnstevenson/winbox-args&#10;MIT Licensed (c) John Stevenson &lt;john-stevenson&#10;&lt;b&gt;blueyonder&lt;/b&gt;: .co.uk&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$arg&lt;/b&gt;: The argument to be escaped&#10;    bool &lt;b&gt;$meta&lt;/b&gt;: Additionally escape cmd.exe meta characters&#10;    bool &lt;b&gt;$module&lt;/b&gt;: The argument is the module to invoke&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The escaped argument;;d4,75;;b1,5;;m0;;estring $arg;;pbool $meta;;pbool $module;;p">
</treenode>
<treenode node="escapeArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f12;1607;5;1624;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    escapeArgument(?string $argument): string&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Escapes a string to be used as a shell argument.;;d4,1608;;b3,0;;m0;;eargument;;p">
</treenode>
<treenode node="fromShellCommandline;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f18;192;5;198;;;;vpos;;v;;astatic;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fromShellCommandline(string $command, string $cwd = null, array $env = null, $input = null, ?float $timeout = 60)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a Process instance as a command-line to be run in a shell wrapper.&#10;Command-lines are parsed by the shell of your OS (/bin/sh on Unix-like, cmd.exe on Windows.)&#10;This allows using e.g. pipes or conditional execution. In this mode, signals are sent to the&#10;shell wrapper and not to your commands.&#10;In order to inject dynamic values into command-lines, we strongly recommend using placeholders.&#10;This will save escaping values, which is not portable nor secure anyway:&#10;$process = Process::fromShellCommandline(&apos;my_command &quot;$MY_VAR&quot;&apos;);s&#10;$process-&gt;run(null, [&apos;MY_VAR&apos; =&gt; $theValue]);s&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When proc_open is not installed&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$command&lt;/b&gt;: The command line to pass to the shell of the OS&#10;    string|null &lt;b&gt;$cwd&lt;/b&gt;: The working directory or null to use the working dir of the current PHP process&#10;    array|null &lt;b&gt;$env&lt;/b&gt;: The environment variables or null to use the same environment as the current PHP process&#10;    mixed|null &lt;b&gt;$input&lt;/b&gt;: The input as stream resource, scalar or \Traversable, or null for no input&#10;    int|float|null &lt;b&gt;$timeout&lt;/b&gt;: The timeout in seconds or null to disable;;d4,193;;b1,5;;m0;;estring $command;;pstring|null $cwd;;parray|null $env;;pmixed|null $input;;pint|float|null $timeout;;p">
</treenode>
<treenode node="getCommandLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;958;5;961;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommandLine()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the command line to be executed.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The command to execute;;d4,959;;b1,0;;m0;;e">
</treenode>
<treenode node="getDefaultEnv;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f12;1626;5;1643;;;;vpos;;v;;a;;r;;d4,1627;;b3,0;;m0;;e">
</treenode>
<treenode node="getDescriptors;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f12;1279;5;1291;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDescriptors(): array&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates the descriptors needed by the proc_open.;;d4,1280;;b3,0;;m0;;e">
</treenode>
<treenode node="getEnv;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1135;5;1138;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEnv()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the environment variables.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The current environment variables;;d4,1136;;b1,0;;m0;;e">
</treenode>
<treenode node="getErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;674;5;683;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getErrorOutput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the current error output of the process (STDERR).&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException in case the output has been disabled&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException In case the process is not started&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The process error output;;d4,675;;b1,0;;m0;;e">
</treenode>
<treenode node="getExitCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;730;5;735;;;;vpos;;v;;aint|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getExitCode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the exit code returned by the process.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The exit status code, null if the Process is not terminated;;d4,731;;b1,0;;m0;;e">
</treenode>
<treenode node="getExitCodeText;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;748;5;755;;;;vpos;;v;;astring|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getExitCodeText()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a string representation for the exit code returned by the process.&#10;This method relies on the Unix exit code status standardization&#10;and might not be relevant for other operating systems.&#10;&lt;b&gt;see&lt;/b&gt;: http://tldp.org/LDP/abs/html/exitcodes.html&#10;&lt;b&gt;see&lt;/b&gt;: http://en.wikipedia.org/wiki/Unix_signal&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A string representation for the exit status code, null if the Process is not terminated;;d4,749;;b1,0;;m0;;e">
</treenode>
<treenode node="getIdleTimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;996;5;999;;;;vpos;;v;;afloat|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIdleTimeout()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the process idle timeout (max. time since last output).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The timeout in seconds or null if it&apos;s disabled;;d4,997;;b1,0;;m0;;e">
</treenode>
<treenode node="getIncrementalErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;697;5;709;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIncrementalErrorOutput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the errorOutput incrementally.&#10;In comparison with the getErrorOutput method which always return the&#10;whole error output, this one returns the new error output since the last&#10;call.&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException in case the output has been disabled&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException In case the process is not started&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The process error output since the last call;;d4,698;;b1,0;;m0;;e">
</treenode>
<treenode node="getIncrementalOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;581;5;593;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIncrementalOutput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the output incrementally.&#10;In comparison with the getOutput method which always return the whole&#10;output, this one returns the new output since the last call.&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException in case the output has been disabled&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException In case the process is not started&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The process output since the last call;;d4,582;;b1,0;;m0;;e">
</treenode>
<treenode node="getInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1172;5;1175;;;;vpos;;v;;aresource|string|\Iterator|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getInput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the Process input.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The Process input;;d4,1173;;b1,0;;m0;;e">
</treenode>
<treenode node="getIterator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;605;5;650;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIterator($flags = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an iterator to the output of the process, with the output type as keys (Process::OUT/ERR).&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException in case the output has been disabled&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException In case the process is not started&#10;\Generator&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$flags&lt;/b&gt;: A bit field of Process::ITER_* flags;;d4,606;;b1,0;;m0;;eint $flags;;p">
</treenode>
<treenode node="getOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;559;5;568;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOutput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the current output of the process (STDOUT).&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException in case the output has been disabled&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException In case the process is not started&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The process output;;d4,560;;b1,0;;m0;;e">
</treenode>
<treenode node="getPid;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;478;5;481;;;;vpos;;v;;aint|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPid()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the Pid (process identifier), if applicable.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The process id if running, null otherwise;;d4,479;;b1,0;;m0;;e">
</treenode>
<treenode node="getStatus;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;881;5;886;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStatus()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the process status.&#10;The status is one of: ready, started, terminated.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The current process status;;d4,882;;b1,0;;m0;;e">
</treenode>
<treenode node="getStopSignal;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;829;5;834;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStopSignal()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the number of the signal that caused the child process to stop its execution.&#10;It is only meaningful if hasBeenStopped() returns true.&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException In case the process is not terminated;;d4,830;;b1,0;;m0;;e">
</treenode>
<treenode node="getTermSignal;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;793;5;802;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTermSignal()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the number of the signal that caused the child process to terminate its execution.&#10;It is only meaningful if hasBeenSignaled() returns true.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException In case --enable-sigchild is activated&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException   In case the process is not terminated;;d4,794;;b1,0;;m0;;e">
</treenode>
<treenode node="getTimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;986;5;989;;;;vpos;;v;;afloat|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTimeout()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the process timeout (max. runtime).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The timeout in seconds or null if it&apos;s disabled;;d4,987;;b1,0;;m0;;e">
</treenode>
<treenode node="getWorkingDirectory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1105;5;1114;;;;vpos;;v;;astring|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getWorkingDirectory()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the working directory.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The current working directory or null on failure;;d4,1106;;b1,0;;m0;;e">
</treenode>
<treenode node="hasBeenSignaled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;776;5;781;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasBeenSignaled()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the child process has been terminated by an uncaught signal.&#10;It always returns false on Windows.&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException In case the process is not terminated;;d4,777;;b1,0;;m0;;e">
</treenode>
<treenode node="hasBeenStopped;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;813;5;818;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasBeenStopped()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the child process has been stopped by a signal.&#10;It always returns false on Windows.&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException In case the process is not terminated;;d4,814;;b1,0;;m0;;e">
</treenode>
<treenode node="inheritEnvironmentVariables;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1206;5;1213;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    inheritEnvironmentVariables($inheritEnv = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets whether environment variables will be inherited or not.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$inheritEnv&lt;/b&gt;;;d4,1207;;b1,0;;m0;;ebool $inheritEnv;;p">
</treenode>
<treenode node="isOutputDisabled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;546;5;549;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isOutputDisabled()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true in case the output is disabled, false otherwise.;;d4,547;;b1,0;;m0;;e">
</treenode>
<treenode node="isPty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1095;5;1098;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isPty()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns PTY state.;;d4,1096;;b1,0;;m0;;e">
</treenode>
<treenode node="isPtySupported;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f18;1261;5;1274;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isPtySupported()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether PTY is supported on the current operating system.;;d4,1262;;b1,5;;m0;;e">
</treenode>
<treenode node="isRunning;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;841;5;850;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRunning()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if the process is currently running.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the process is currently running, false otherwise;;d4,842;;b1,0;;m0;;e">
</treenode>
<treenode node="isSigchildEnabled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f14;1354;5;1368;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isSigchildEnabled()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether PHP has been compiled with the &apos;--enable-sigchild&apos; option or not.;;d4,1355;;b2,0;;m0;;e">
</treenode>
<treenode node="isStarted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;857;5;860;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isStarted()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if the process has been started with no regard to the current state.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if status is ready, false otherwise;;d4,858;;b1,0;;m0;;e">
</treenode>
<treenode node="isSuccessful;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;762;5;765;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isSuccessful()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if the process ended successfully.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the process ended successfully, false otherwise;;d4,763;;b1,0;;m0;;e">
</treenode>
<treenode node="isTerminated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;867;5;872;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isTerminated()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if the process is terminated.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if process is terminated, false otherwise;;d4,868;;b1,0;;m0;;e">
</treenode>
<treenode node="isTty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1071;5;1074;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isTty()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if the TTY mode is enabled.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the TTY mode is enabled, false otherwise;;d4,1072;;b1,0;;m0;;e">
</treenode>
<treenode node="isTtySupported;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f18;1245;5;1254;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isTtySupported(): bool&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether TTY is supported on the current operating system.;;d4,1246;;b1,5;;m0;;e">
</treenode>
<treenode node="mustRun;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;250;5;257;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mustRun(callable $callback = null, array $env = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runs the process.&#10;This is identical to run() except that an exception is thrown if the process&#10;exits with a non-zero exit code.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: ProcessFailedException if the process didn&apos;t terminate successfully&#10;&lt;b&gt;final&lt;/b&gt;;;d4,251;;b1,0;;m0;;ecallback;;penv;;p">
</treenode>
<treenode node="prepareWindowsCommandLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f12;1534;5;1578;;;;vpos;;v;;a;;r;;d4,1535;;b3,0;;m0;;ecmd;;penv;;p">
</treenode>
<treenode node="readPipes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f12;1413;5;1425;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    readPipes(bool $blocking, bool $close)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reads pipes, executes callback.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$blocking&lt;/b&gt;: Whether to use blocking calls or not&#10;    bool &lt;b&gt;$close&lt;/b&gt;: Whether to close file handles or not;;d4,1414;;b3,0;;m0;;ebool $blocking;;pbool $close;;p">
</treenode>
<treenode node="readPipesForOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f12;1378;5;1387;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    readPipesForOutput(string $caller, bool $blocking = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Reads pipes for the freshest output.&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException in case output has been disabled or process is not started&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$caller&lt;/b&gt;: The name of the method that needs fresh outputs&#10;    bool &lt;b&gt;$blocking&lt;/b&gt;: Whether to use blocking calls or not;;d4,1379;;b3,0;;m0;;estring $caller;;pbool $blocking;;p">
</treenode>
<treenode node="requireProcessIsStarted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f12;1585;5;1590;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    requireProcessIsStarted(string $functionName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Ensures the process is running or terminated, throws a LogicException if the process has a not started.&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException if the process has not run;;d4,1586;;b3,0;;m0;;efunctionName;;p">
</treenode>
<treenode node="requireProcessIsTerminated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f12;1597;5;1602;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    requireProcessIsTerminated(string $functionName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Ensures the process is terminated, throws a LogicException if the process has a status different than &quot;terminated&quot;.&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException if the process is not yet terminated;;d4,1598;;b3,0;;m0;;efunctionName;;p">
</treenode>
<treenode node="resetProcessData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f12;1462;5;1476;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resetProcessData()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Resets data related to the latest run of the process.;;d4,1463;;b3,0;;m0;;e">
</treenode>
<treenode node="restart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;369;5;379;;;;vpos;;v;;astatic;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    restart(callable $callback = null, array $env = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Restarts the process.&#10;Be warned that the process is cloned before being started.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When process can&apos;t be launched&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When process is already running&#10;&lt;b&gt;see&lt;/b&gt;: start()&#10;&lt;b&gt;final&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    callable|null &lt;b&gt;$callback&lt;/b&gt;: A PHP callback to run whenever there is some output available on STDOUT or STDERR;;d4,370;;b1,0;;m0;;ecallback;;penv;;p">
</treenode>
<treenode node="run;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;231;5;236;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    run(callable $callback = null, array $env = []): int&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runs the process.&#10;The callback receives the type of output (out or err) and&#10;some bytes from the output in real-time. It allows to have feedback&#10;from the independent process during execution.&#10;The STDOUT and STDERR are also available after the process is finished&#10;via the getOutput() and getErrorOutput() methods.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When process can&apos;t be launched&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When process stopped after receiving signal&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException   In case a callback is provided and output has been disabled&#10;&lt;b&gt;final&lt;/b&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    callable|null &lt;b&gt;$callback&lt;/b&gt;: A PHP callback to run whenever there is some output available on STDOUT or STDERR&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The exit status code;;d4,232;;b1,0;;m0;;ecallback;;penv;;p">
</treenode>
<treenode node="setCommandLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;972;5;979;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCommandLine($commandline)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the command line to be executed.&#10;$this&#10;&lt;b&gt;deprecated&lt;/b&gt;: since Symfony 4.2.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array &lt;b&gt;$commandline&lt;/b&gt;: The command to execute;;d4,973;;b1,0;;m0;;estring|array $commandline;;p">
</treenode>
<treenode node="setEnv;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1155;5;1165;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Process.php;f18;144;5;168;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setEnv(array $env)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the environment variables.&#10;Each environment variable value should be a string.&#10;If it is an array, the variable is ignored.&#10;If it is false or null, it will be removed when&#10;env vars are otherwise inherited.&#10;That happens in PHP when &apos;argv&apos; is registered into&#10;the $_ENV array for instance.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$env&lt;/b&gt;: The new environment variables;;d4,1156;;b1,0;;m0;;earray $env;;p">
</treenode>
<treenode node="setIdleTimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1031;5;1040;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setIdleTimeout($timeout)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the process idle timeout (max. time since last output).&#10;To disable the timeout, set this value to null.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException           if the output is disabled&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException if the timeout is negative&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|float|null &lt;b&gt;$timeout&lt;/b&gt;: The timeout in seconds;;d4,1032;;b1,0;;m0;;eint|float|null $timeout;;p">
</treenode>
<treenode node="setInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1188;5;1197;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setInput($input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the input.&#10;This content will be passed to the underlying process standard input.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException In case the process is running&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|int|float|bool|resource|\Traversable|null &lt;b&gt;$input&lt;/b&gt;: The content;;d4,1189;;b1,0;;m0;;estring|int|float|bool|resource|\Traversable|null $input;;p">
</treenode>
<treenode node="setPty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1083;5;1088;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPty($bool)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets PTY mode.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$bool&lt;/b&gt;;;d4,1084;;b1,0;;m0;;ebool $bool;;p">
</treenode>
<treenode node="setTimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1012;5;1017;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTimeout($timeout)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the process timeout (max. runtime) in seconds.&#10;To disable the timeout, set this value to null.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException if the timeout is negative&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|float|null &lt;b&gt;$timeout&lt;/b&gt;: The timeout in seconds;;d4,1013;;b1,0;;m0;;eint|float|null $timeout;;p">
</treenode>
<treenode node="setTty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1051;5;1064;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setTty($tty)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Enables or disables the TTY mode.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException In case the TTY mode is not supported&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$tty&lt;/b&gt;: True to enabled and false to disable;;d4,1052;;b1,0;;m0;;ebool $tty;;p">
</treenode>
<treenode node="setWorkingDirectory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;1123;5;1128;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setWorkingDirectory($cwd)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the current working directory.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cwd&lt;/b&gt;: The new working directory;;d4,1124;;b1,0;;m0;;estring $cwd;;p">
</treenode>
<treenode node="signal;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;494;5;499;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    signal($signal)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sends a POSIX signal to the process.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException   In case the process is not running&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException In case --enable-sigchild is activated and the process can&apos;t be killed&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException In case of failure&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$signal&lt;/b&gt;: A valid POSIX signal (see https://php.net/pcntl.constants);;d4,495;;b1,0;;m0;;eint $signal;;p">
</treenode>
<treenode node="start;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;278;5;350;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    start(callable $callback = null, array $env = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Starts the process and returns after writing the input to STDIN.&#10;This method blocks until all STDIN data is sent to the process then it&#10;returns while the process runs in the background.&#10;The termination of the process can be awaited with wait().&#10;The callback receives the type of output (out or err) and some bytes from&#10;the output in real-time while writing the standard input to the process.&#10;It allows to have feedback from the independent process during execution.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When process can&apos;t be launched&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When process is already running&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException   In case a callback is provided and output has been disabled&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    callable|null &lt;b&gt;$callback&lt;/b&gt;: A PHP callback to run whenever there is some output available on STDOUT or STDERR;;d4,279;;b1,0;;m0;;ecallback;;penv;;p">
</treenode>
<treenode node="stop;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;896;5;923;;;;vpos;;v;;aint|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    stop($timeout = 10, $signal = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stops the process.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|float &lt;b&gt;$timeout&lt;/b&gt;: The timeout in seconds&#10;    int &lt;b&gt;$signal&lt;/b&gt;: A POSIX signal to send in case the process has not stop at timeout, default is SIGKILL (9)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The exit-code of the process or null if it&apos;s not running;;d4,897;;b1,0;;m0;;eint|float $timeout;;pint $signal;;p">
</treenode>
<treenode node="supportsColor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Process.php;f18;115;5;134;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    supportsColor($output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the output stream supports colors&#10;This is tricky on Windows, because Cygwin, Msys2 etc emulate pseudo&#10;terminals via named pipes, so we can only check the environment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$output&lt;/b&gt;: A valid CLI output stream;;d4,116;;b1,5;;m0;;emixed $output;;p">
</treenode>
<treenode node="updateStatus;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f14;1329;5;1347;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    updateStatus($blocking)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Updates the status of the process, reads pipes.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$blocking&lt;/b&gt;: Whether to use a blocking read call;;d4,1330;;b2,0;;m0;;ebool $blocking;;p">
</treenode>
<treenode node="validateTimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f12;1394;54;1394;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Validates and returns the filtered timeout.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException if the given timeout is a negative number;;d-1,-1;;b3,0;;m0;;etimeout;;p">
</treenode>
<treenode node="wait;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;396;5;426;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    wait(callable $callback = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Waits for the process to terminate.&#10;The callback receives the type of output (out or err) and some bytes&#10;from the output in real-time while writing the standard input to the process.&#10;It allows to have feedback from the independent process during execution.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When process timed out&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When process stopped after receiving signal&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException   When process is not yet started&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    callable|null &lt;b&gt;$callback&lt;/b&gt;: A valid PHP callback&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The exitcode of the process;;d4,397;;b1,0;;m0;;ecallable|null $callback;;p">
</treenode>
<treenode node="waitUntil;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Process.php;f11;438;5;471;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    waitUntil(callable $callback): bool&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Waits until the callback returns true.&#10;The callback receives the type of output (out or err) and some bytes&#10;from the output in real-time while writing the standard input to the process.&#10;It allows to have feedback from the independent process during execution.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException When process timed out&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException   When process is not yet started;;d4,439;;b1,0;;m0;;ecallback;;p">
</treenode>
</treenode>
<treenode node="ProcessFailedException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessFailedException.php;f0;20;1;53;;;;vpos;;v;;aRuntimeException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProcessFailedException extends RuntimeException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exception for failed processes.&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessFailedException.php;f11;24;5;47;;;;vpos;;v;;a;;r;;d4,25;;b1,0;;m0;;eprocess;;p">
</treenode>
<treenode node="getProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessFailedException.php;f11;49;5;52;;;;vpos;;v;;a;;r;;d4,50;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ProcessFailedExceptionTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessFailedExceptionTest.php;f0;19;1;132;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProcessFailedExceptionTest extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Sebastian Marek &lt;proofek&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="testDisabledOutputInFailedExceptionDoesNotPopulateOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessFailedExceptionTest.php;f11;91;5;131;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testDisabledOutputInFailedExceptionDoesNotPopulateOutput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tests that ProcessFailedException does not extract information from&#10;process output if it was previously disabled.;;d4,92;;b1,0;;m0;;e">
</treenode>
<treenode node="testProcessFailedExceptionPopulatesInformationFromProcessOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessFailedExceptionTest.php;f11;41;5;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testProcessFailedExceptionPopulatesInformationFromProcessOutput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    tests ProcessFailedException uses information from process output&#10;to generate exception message.;;d4,42;;b1,0;;m0;;e">
</treenode>
<treenode node="testProcessFailedExceptionThrowsException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessFailedExceptionTest.php;f11;24;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testProcessFailedExceptionThrowsException()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    tests ProcessFailedException throws exception if the process was successful.;;d4,25;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ProcessHelper;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProcessHelper.php;f0;25;1;155;;;;vpos;;v;;aHelper;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProcessHelper extends Helper&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The ProcessHelper class provides helpers to run external processes.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;final&lt;/b&gt;: since Symfony 4.2;;d0,26;;b0,0;;m0;;e">
<treenode node="escapeString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProcessHelper.php;f12;143;5;146;;;;vpos;;v;;a;;r;;d4,144;;b3,0;;m0;;estr;;p">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProcessHelper.php;f11;151;5;154;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,152;;b1,0;;m0;;e">
</treenode>
<treenode node="mustRun;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProcessHelper.php;f11;106;5;115;;;;vpos;;v;;aProcess;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mustRun(OutputInterface $output, $cmd, $error = null, callable $callback = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runs the process.&#10;This is identical to run() except that an exception is thrown if the process&#10;exits with a non-zero exit code.&#10;&lt;b&gt;throws&lt;/b&gt;: ProcessFailedException&#10;&lt;b&gt;see&lt;/b&gt;: run()&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    OutputInterface &lt;b&gt;$output&lt;/b&gt;: An OutputInterface instance&#10;    string|Process &lt;b&gt;$cmd&lt;/b&gt;: An instance of Process or a command to run&#10;    string|null &lt;b&gt;$error&lt;/b&gt;: An error message that must be displayed if something went wrong&#10;    callable|null &lt;b&gt;$callback&lt;/b&gt;: A PHP callback to run whenever there is some output available on STDOUT or STDERR&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The process that ran;;d4,107;;b1,0;;m0;;eOutputInterface $output;;pstring|Process $cmd;;pstring|null $error;;pcallable|null $callback;;p">
</treenode>
<treenode node="run;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProcessHelper.php;f11;39;5;86;;;;vpos;;v;;aProcess;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    run(OutputInterface $output, $cmd, $error = null, callable $callback = null, $verbosity = OutputInterface::VERBOSITY_VERY_VERBOSE)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runs an external process.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    OutputInterface &lt;b&gt;$output&lt;/b&gt;: An OutputInterface instance&#10;    array|Process &lt;b&gt;$cmd&lt;/b&gt;: An instance of Process or an array of the command and arguments&#10;    string|null &lt;b&gt;$error&lt;/b&gt;: An error message that must be displayed if something went wrong&#10;    callable|null &lt;b&gt;$callback&lt;/b&gt;: A PHP callback to run whenever there is some output available on STDOUT or STDERR&#10;    int &lt;b&gt;$verbosity&lt;/b&gt;: The threshold for verbosity&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The process that ran;;d4,40;;b1,0;;m0;;eOutputInterface $output;;parray|Process $cmd;;pstring|null $error;;pcallable|null $callback;;pint $verbosity;;p">
</treenode>
<treenode node="wrapCallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProcessHelper.php;f11;126;5;141;;;;vpos;;v;;acallable;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    wrapCallback(OutputInterface $output, Process $process, callable $callback = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Wraps a Process callback to add debugging output.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    OutputInterface &lt;b&gt;$output&lt;/b&gt;: An OutputInterface interface&#10;    Process &lt;b&gt;$process&lt;/b&gt;: The Process&#10;    callable|null &lt;b&gt;$callback&lt;/b&gt;: A PHP callable;;d4,127;;b1,0;;m0;;eOutputInterface $output;;pProcess $process;;pcallable|null $callback;;p">
</treenode>
</treenode>
<treenode node="ProcessHelperTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProcessHelperTest.php;f0;20;1;132;;;;vpos;;v;;aTestCase;;c;;r;;d0,21;;b0,0;;m0;;e">
<treenode node="getOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProcessHelperTest.php;f12;126;5;131;;;;vpos;;v;;a;;r;;d4,127;;b3,0;;m0;;eoutput;;p">
</treenode>
<treenode node="getOutputStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProcessHelperTest.php;f12;121;5;124;;;;vpos;;v;;a;;r;;d4,122;;b3,0;;m0;;everbosity;;p">
</treenode>
<treenode node="provideCommandsAndOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProcessHelperTest.php;f11;51;5;119;;;;vpos;;v;;a;;r;;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="testPassedCallbackIsExecuted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProcessHelperTest.php;f11;38;5;49;;;;vpos;;v;;a;;r;;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="testVariousProcessRuns;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProcessHelperTest.php;f11;25;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testVariousProcessRuns($expected, $cmd, $verbosity, $error)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideCommandsAndOutput;;d4,26;;b1,0;;m0;;eexpected;;pcmd;;pverbosity;;perror;;p">
</treenode>
</treenode>
<treenode node="ProcessLinter;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLinter.php;f6;27;1;148;;;;vpos;;v;;aLinterInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProcessLinter implements LinterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Handle PHP code linting using separated process of `php -l _file_`.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLinter.php;f11;49;5;76;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($executable = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|string &lt;b&gt;$executable&lt;/b&gt;: PHP executable, null for autodetection;;d4,50;;b1,0;;m0;;enull|string $executable;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLinter.php;f11;78;5;83;;;;vpos;;v;;a;;r;;d4,79;;b1,0;;m0;;e">
</treenode>
<treenode node="createProcessForFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLinter.php;f12;114;5;126;;;;vpos;;v;;aProcess;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProcessForFile($path)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$path&lt;/b&gt;: path to file;;d4,115;;b3,0;;m0;;estring $path;;p">
</treenode>
<treenode node="createProcessForSource;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLinter.php;f12;135;5;147;;;;vpos;;v;;aProcess;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProcessForSource($source)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create process that lint PHP code.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$source&lt;/b&gt;: code;;d4,136;;b3,0;;m0;;estring $source;;p">
</treenode>
<treenode node="isAsync;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLinter.php;f11;88;5;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAsync()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,89;;b1,0;;m0;;e">
</treenode>
<treenode node="lintFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLinter.php;f11;96;5;99;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lintFile($path)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,97;;b1,0;;m0;;epath;;p">
</treenode>
<treenode node="lintSource;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLinter.php;f11;104;5;107;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lintSource($source)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,105;;b1,0;;m0;;esource;;p">
</treenode>
</treenode>
<treenode node="ProcessLinterProcessBuilder;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLinterProcessBuilder.php;f6;21;1;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProcessLinterProcessBuilder&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLinterProcessBuilder.php;f11;31;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($executable)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$executable&lt;/b&gt;: PHP executable;;d4,32;;b1,0;;m0;;estring $executable;;p">
</treenode>
<treenode node="build;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLinterProcessBuilder.php;f11;41;5;48;;;;vpos;;v;;aProcess;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    build($path)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$path&lt;/b&gt;;;d4,42;;b1,0;;m0;;estring $path;;p">
</treenode>
</treenode>
<treenode node="ProcessLintingResult;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLintingResult.php;f6;21;1;58;;;;vpos;;v;;aLintingResultInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProcessLintingResult implements LintingResultInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLintingResult.php;f11;33;5;36;;;;vpos;;v;;a;;r;;d4,34;;b1,0;;m0;;eprocess;;p">
</treenode>
<treenode node="check;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLintingResult.php;f11;41;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    check()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;e">
</treenode>
<treenode node="isSuccessful;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\ProcessLintingResult.php;f12;49;5;57;;;;vpos;;v;;a;;r;;d4,50;;b3,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ProcessOutput;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\ProcessOutput.php;f6;23;1;146;;;;vpos;;v;;aProcessOutputInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProcessOutput implements ProcessOutputInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output writer to show the process of a FixCommand.&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\ProcessOutput.php;f11;73;5;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(OutputInterface $output, EventDispatcherInterface $dispatcher, $width, $nbFiles)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;TODO&lt;/b&gt;: 3.0 make all parameters mandatory (`null` not allowed)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    OutputInterface &lt;b&gt;$output&lt;/b&gt;&#10;    EventDispatcherInterface &lt;b&gt;$dispatcher&lt;/b&gt;&#10;    null|int &lt;b&gt;$width&lt;/b&gt;&#10;    null|int &lt;b&gt;$nbFiles&lt;/b&gt;;;d4,74;;b1,0;;m0;;eOutputInterface $output;;pEventDispatcherInterface $dispatcher;;pnull|int $width;;pnull|int $nbFiles;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\ProcessOutput.php;f11;90;5;93;;;;vpos;;v;;a;;r;;d4,91;;b1,0;;m0;;e">
</treenode>
<treenode node="onFixerFileProcessed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\ProcessOutput.php;f11;95;5;129;;;;vpos;;v;;a;;r;;d4,96;;b1,0;;m0;;eevent;;p">
</treenode>
<treenode node="printLegend;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Output\ProcessOutput.php;f11;131;5;145;;;;vpos;;v;;a;;r;;d4,132;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ProcessSignaledException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessSignaledException.php;f6;20;1;40;;;;vpos;;v;;aRuntimeException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProcessSignaledException extends RuntimeException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exception that is thrown when a process has been signaled.&#10;&lt;b&gt;author&lt;/b&gt;: Sullivan Senechal &lt;soullivaneuh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessSignaledException.php;f11;24;5;29;;;;vpos;;v;;a;;r;;d4,25;;b1,0;;m0;;eprocess;;p">
</treenode>
<treenode node="getProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessSignaledException.php;f11;31;5;34;;;;vpos;;v;;a Process;;r;;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getSignal;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessSignaledException.php;f11;36;5;39;;;;vpos;;v;;a int;;r;;d4,37;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ProcessTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f0;25;1;1510;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProcessTest extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Robert Schönthal &lt;seroscho&#10;&lt;b&gt;googlemail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="chainedCommandsOutputProvider;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;327;5;339;;;;vpos;;v;;a;;r;;d4,328;;b1,0;;m0;;e">
</treenode>
<treenode node="getProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f12;1490;5;1504;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getProcess($commandline, string $cwd = null, array $env = null, $input = null, ?int $timeout = 60): Process&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$commandline&lt;/b&gt;&#10;    string|null &lt;b&gt;$input&lt;/b&gt;&#10;    int &lt;b&gt;$timeout&lt;/b&gt;;;d4,1491;;b3,0;;m0;;ecommandline;;pcwd;;penv;;pinput;;ptimeout;;p">
</treenode>
<treenode node="getProcessForCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f12;1506;5;1509;;;;vpos;;v;;a Process;;r;;d4,1507;;b3,0;;m0;;ecode;;pcwd;;penv;;pinput;;ptimeout;;p">
</treenode>
<treenode node="pipesCodeProvider;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1131;5;1153;;;;vpos;;v;;a;;r;;d4,1132;;b1,0;;m0;;e">
</treenode>
<treenode node="provideEscapeArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1451;5;1463;;;;vpos;;v;;a;;r;;d4,1452;;b1,0;;m0;;e">
</treenode>
<treenode node="provideIncrementalOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;421;5;427;;;;vpos;;v;;a;;r;;d4,422;;b1,0;;m0;;e">
</treenode>
<treenode node="provideInputValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;318;5;325;;;;vpos;;v;;a;;r;;d4,319;;b1,0;;m0;;e">
</treenode>
<treenode node="provideInvalidInputValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;300;5;306;;;;vpos;;v;;a;;r;;d4,301;;b1,0;;m0;;e">
</treenode>
<treenode node="provideMethodsThatNeedARunningProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;947;5;956;;;;vpos;;v;;a;;r;;d4,948;;b1,0;;m0;;e">
</treenode>
<treenode node="provideMethodsThatNeedATerminatedProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;978;5;986;;;;vpos;;v;;a;;r;;d4,979;;b1,0;;m0;;e">
</treenode>
<treenode node="provideOutputFetchingMethods;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1084;5;1092;;;;vpos;;v;;a;;r;;d4,1085;;b1,0;;m0;;e">
</treenode>
<treenode node="provideVariousIncrementals;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1174;5;1180;;;;vpos;;v;;a;;r;;d4,1175;;b1,0;;m0;;e">
</treenode>
<treenode node="responsesCodeProvider;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1121;5;1129;;;;vpos;;v;;a;;r;;d4,1122;;b1,0;;m0;;e">
</treenode>
<treenode node="setUpBeforeClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f18;31;5;39;;;;vpos;;v;;a void;;r;;d4,32;;b1,5;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f14;41;5;47;;;;vpos;;v;;a void;;r;;d4,42;;b2,0;;m0;;e">
</treenode>
<treenode node="testAllOutputIsActuallyReadOnTermination;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;157;5;187;;;;vpos;;v;;a;;r;;d4,158;;b1,0;;m0;;e">
</treenode>
<treenode node="testCallbackIsExecutedForOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;351;5;361;;;;vpos;;v;;a;;r;;d4,352;;b1,0;;m0;;e">
</treenode>
<treenode node="testCallbackIsExecutedForOutputWheneverOutputIsDisabled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;363;5;374;;;;vpos;;v;;a;;r;;d4,364;;b1,0;;m0;;e">
</treenode>
<treenode node="testCallbacksAreExecutedWithStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;189;5;199;;;;vpos;;v;;a;;r;;d4,190;;b1,0;;m0;;e">
</treenode>
<treenode node="testChainedCommandsOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;344;5;349;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testChainedCommandsOutput($expected, $operator, $input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: chainedCommandsOutputProvider;;d4,345;;b1,0;;m0;;eexpected;;poperator;;pinput;;p">
</treenode>
<treenode node="testChainedProcesses;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1351;5;1364;;;;vpos;;v;;a;;r;;d4,1352;;b1,0;;m0;;e">
</treenode>
<treenode node="testCheckTimeoutOnNonStartedProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;773;5;777;;;;vpos;;v;;a;;r;;d4,774;;b1,0;;m0;;e">
</treenode>
<treenode node="testCheckTimeoutOnStartedProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;786;5;808;;;;vpos;;v;;a;;r;;d4,787;;b1,0;;m0;;e">
</treenode>
<treenode node="testCheckTimeoutOnTerminatedProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;779;5;784;;;;vpos;;v;;a;;r;;d4,780;;b1,0;;m0;;e">
</treenode>
<treenode node="testDisableOutputDisablesTheOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1007;5;1015;;;;vpos;;v;;a;;r;;d4,1008;;b1,0;;m0;;e">
</treenode>
<treenode node="testDisableOutputWhileIdleTimeoutIsSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1046;5;1053;;;;vpos;;v;;a;;r;;d4,1047;;b1,0;;m0;;e">
</treenode>
<treenode node="testDisableOutputWhileRunningThrowsException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1017;5;1024;;;;vpos;;v;;a;;r;;d4,1018;;b1,0;;m0;;e">
</treenode>
<treenode node="testEnableOrDisableOutputAfterRunDoesNotThrowException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1036;5;1044;;;;vpos;;v;;a;;r;;d4,1037;;b1,0;;m0;;e">
</treenode>
<treenode node="testEnableOutputWhileRunningThrowsException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1026;5;1034;;;;vpos;;v;;a;;r;;d4,1027;;b1,0;;m0;;e">
</treenode>
<treenode node="testEnvArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1465;5;1474;;;;vpos;;v;;a;;r;;d4,1466;;b1,0;;m0;;e">
</treenode>
<treenode node="testEnvBackupDoesNotDeleteExistingVars;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1378;5;1394;;;;vpos;;v;;a;;r;;d4,1379;;b1,0;;m0;;e">
</treenode>
<treenode node="testEnvIsInherited;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1396;5;1412;;;;vpos;;v;;a;;r;;d4,1397;;b1,0;;m0;;e">
</treenode>
<treenode node="testEscapeArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1425;5;1431;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testEscapeArgument($arg)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideEscapeArgument;;d4,1426;;b1,0;;m0;;earg;;p">
</treenode>
<treenode node="testExitCodeCommandFailed;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;459;5;470;;;;vpos;;v;;a;;r;;d4,460;;b1,0;;m0;;e">
</treenode>
<treenode node="testExitCodeIsAvailableAfterSignal;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;910;5;924;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testExitCodeIsAvailableAfterSignal()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;requires&lt;/b&gt;: extension pcntl;;d4,911;;b1,0;;m0;;e">
</treenode>
<treenode node="testExitCodeText;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;554;5;563;;;;vpos;;v;;a;;r;;d4,555;;b1,0;;m0;;e">
</treenode>
<treenode node="testExitCodeTextIsNullWhenExitCodeIsNull;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;513;5;517;;;;vpos;;v;;a;;r;;d4,514;;b1,0;;m0;;e">
</treenode>
<treenode node="testFloatAndNullTimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;91;5;103;;;;vpos;;v;;a;;r;;d4,92;;b1,0;;m0;;e">
</treenode>
<treenode node="testFlushErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;384;5;391;;;;vpos;;v;;a;;r;;d4,385;;b1,0;;m0;;e">
</treenode>
<treenode node="testFlushOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;437;5;444;;;;vpos;;v;;a;;r;;d4,438;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetCommandLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1414;5;1420;;;;vpos;;v;;a;;r;;d4,1415;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;376;5;382;;;;vpos;;v;;a;;r;;d4,377;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetExitCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;603;5;608;;;;vpos;;v;;a;;r;;d4,604;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetExitCodeIsNullOnStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;582;5;590;;;;vpos;;v;;a;;r;;d4,583;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetExitCodeIsNullOnWhenStartingAgain;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;592;5;601;;;;vpos;;v;;a;;r;;d4,593;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;429;5;435;;;;vpos;;v;;a;;r;;d4,430;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetOutputWhileDisabled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1074;5;1082;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testGetOutputWhileDisabled($fetchMethod)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideOutputFetchingMethods;;d4,1075;;b1,0;;m0;;efetchMethod;;p">
</treenode>
<treenode node="testGetPid;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;869;5;875;;;;vpos;;v;;a;;r;;d4,870;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetPidIsNullAfterRun;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;883;5;888;;;;vpos;;v;;a;;r;;d4,884;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetPidIsNullBeforeStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;877;5;881;;;;vpos;;v;;a;;r;;d4,878;;b1,0;;m0;;e">
</treenode>
<treenode node="testIdleTimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;810;5;825;;;;vpos;;v;;a;;r;;d4,811;;b1,0;;m0;;e">
</treenode>
<treenode node="testIdleTimeoutNotExceededWhenOutputIsSent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;827;5;847;;;;vpos;;v;;a;;r;;d4,828;;b1,0;;m0;;e">
</treenode>
<treenode node="testIncrementalOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;396;5;419;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testIncrementalOutput($getOutput, $getIncrementalOutput, $uri)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideIncrementalOutput;;d4,397;;b1,0;;m0;;egetOutput;;pgetIncrementalOutput;;puri;;p">
</treenode>
<treenode node="testIncrementalOutputDoesNotRequireAnotherCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1158;5;1172;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testIncrementalOutputDoesNotRequireAnotherCall($stream, $method)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideVariousIncrementals;;d4,1159;;b1,0;;m0;;estream;;pmethod;;p">
</treenode>
<treenode node="testInputStreamOnEmpty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1260;5;1277;;;;vpos;;v;;a;;r;;d4,1261;;b1,0;;m0;;e">
</treenode>
<treenode node="testInputStreamWithCallable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1214;5;1242;;;;vpos;;v;;a;;r;;d4,1215;;b1,0;;m0;;e">
</treenode>
<treenode node="testInputStreamWithGenerator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1244;5;1258;;;;vpos;;v;;a;;r;;d4,1245;;b1,0;;m0;;e">
</treenode>
<treenode node="testInvalidCwd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;49;5;63;;;;vpos;;v;;a;;r;;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="testInvalidInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;292;5;298;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testInvalidInput($value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideInvalidInputValues;;d4,293;;b1,0;;m0;;evalue;;p">
</treenode>
<treenode node="testIsNotSuccessful;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;657;5;662;;;;vpos;;v;;a;;r;;d4,658;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsSuccessful;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;638;5;643;;;;vpos;;v;;a;;r;;d4,639;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsSuccessfulOnlyAfterTerminated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;645;5;655;;;;vpos;;v;;a;;r;;d4,646;;b1,0;;m0;;e">
</treenode>
<treenode node="testIterateOverProcessWithTimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;754;5;771;;;;vpos;;v;;a;;r;;d4,755;;b1,0;;m0;;e">
</treenode>
<treenode node="testIteratorInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1182;5;1192;;;;vpos;;v;;a;;r;;d4,1183;;b1,0;;m0;;e">
</treenode>
<treenode node="testIteratorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1279;5;1313;;;;vpos;;v;;a;;r;;d4,1280;;b1,0;;m0;;e">
</treenode>
<treenode node="testKillSignalTerminatesProcessCleanly;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1103;5;1110;;;;vpos;;v;;a;;r;;d4,1104;;b1,0;;m0;;e">
</treenode>
<treenode node="testLiveStreamAsInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;254;5;270;;;;vpos;;v;;a;;r;;d4,255;;b1,0;;m0;;e">
</treenode>
<treenode node="testMethodsThatNeedARunningProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;937;5;945;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testMethodsThatNeedARunningProcess($method)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideMethodsThatNeedARunningProcess;;d4,938;;b1,0;;m0;;emethod;;p">
</treenode>
<treenode node="testMethodsThatNeedATerminatedProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;961;5;976;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testMethodsThatNeedATerminatedProcess($method)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideMethodsThatNeedATerminatedProcess;;d4,962;;b1,0;;m0;;emethod;;p">
</treenode>
<treenode node="testMustRun;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;533;5;539;;;;vpos;;v;;a;;r;;d4,534;;b1,0;;m0;;e">
</treenode>
<treenode node="testMustRunThrowsException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;547;5;552;;;;vpos;;v;;a;;r;;d4,548;;b1,0;;m0;;e">
</treenode>
<treenode node="testNegativeTimeoutFromConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;78;5;82;;;;vpos;;v;;a;;r;;d4,79;;b1,0;;m0;;e">
</treenode>
<treenode node="testNegativeTimeoutFromSetter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;84;5;89;;;;vpos;;v;;a;;r;;d4,85;;b1,0;;m0;;e">
</treenode>
<treenode node="testNonBlockingNorClearingIteratorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1315;5;1349;;;;vpos;;v;;a;;r;;d4,1316;;b1,0;;m0;;e">
</treenode>
<treenode node="testPTYCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;519;5;531;;;;vpos;;v;;a;;r;;d4,520;;b1,0;;m0;;e">
</treenode>
<treenode node="testProcessIsNotSignaled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;664;5;673;;;;vpos;;v;;a;;r;;d4,665;;b1,0;;m0;;e">
</treenode>
<treenode node="testProcessIsSignaledIfStopped;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;686;5;697;;;;vpos;;v;;a;;r;;d4,687;;b1,0;;m0;;e">
</treenode>
<treenode node="testProcessPipes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;219;5;230;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testProcessPipes($code, $size)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    tests results from sub processes.&#10;&lt;b&gt;dataProvider&lt;/b&gt;: pipesCodeProvider;;d4,220;;b1,0;;m0;;ecode;;psize;;p">
</treenode>
<treenode node="testProcessResponses;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;206;5;212;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testProcessResponses($expected, $getter, $code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    tests results from sub processes.&#10;&lt;b&gt;dataProvider&lt;/b&gt;: responsesCodeProvider;;d4,207;;b1,0;;m0;;eexpected;;pgetter;;pcode;;p">
</treenode>
<treenode node="testProcessThrowsExceptionWhenExternallySignaled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;699;5;716;;;;vpos;;v;;a;;r;;d4,700;;b1,0;;m0;;e">
</treenode>
<treenode node="testProcessWithoutTermSignal;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;675;5;684;;;;vpos;;v;;a;;r;;d4,676;;b1,0;;m0;;e">
</treenode>
<treenode node="testRawCommandLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1433;5;1449;;;;vpos;;v;;a;;r;;d4,1434;;b1,0;;m0;;e">
</treenode>
<treenode node="testRestart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;718;5;734;;;;vpos;;v;;a;;r;;d4,719;;b1,0;;m0;;e">
</treenode>
<treenode node="testRunProcessWithTimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;736;5;752;;;;vpos;;v;;a;;r;;d4,737;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetBadEnv;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1366;5;1376;;;;vpos;;v;;a;;r;;d4,1367;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetIdleTimeoutWhileOutputIsDisabled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1055;5;1062;;;;vpos;;v;;a;;r;;d4,1056;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetInputWhileRunningThrowsAnException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;272;5;287;;;;vpos;;v;;a;;r;;d4,273;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetNullIdleTimeoutWhileOutputIsDisabled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1064;5;1069;;;;vpos;;v;;a;;r;;d4,1065;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetStreamAsInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;235;5;252;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testSetStreamAsInput($code, $size)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: pipesCodeProvider;;d4,236;;b1,0;;m0;;ecode;;psize;;p">
</treenode>
<treenode node="testSignal;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;893;5;905;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testSignal()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;requires&lt;/b&gt;: extension pcntl;;d4,894;;b1,0;;m0;;e">
</treenode>
<treenode node="testSignalProcessNotRunning;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;926;5;932;;;;vpos;;v;;a;;r;;d4,927;;b1,0;;m0;;e">
</treenode>
<treenode node="testSimpleInputStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1194;5;1212;;;;vpos;;v;;a;;r;;d4,1195;;b1,0;;m0;;e">
</treenode>
<treenode node="testStartAfterATimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;849;5;867;;;;vpos;;v;;a;;r;;d4,850;;b1,0;;m0;;e">
</treenode>
<treenode node="testStartIsNonBlocking;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;565;5;573;;;;vpos;;v;;a;;r;;d4,566;;b1,0;;m0;;e">
</treenode>
<treenode node="testStatus;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;610;5;627;;;;vpos;;v;;a;;r;;d4,611;;b1,0;;m0;;e">
</treenode>
<treenode node="testStop;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;629;5;636;;;;vpos;;v;;a;;r;;d4,630;;b1,0;;m0;;e">
</treenode>
<treenode node="testStopTerminatesProcessCleanly;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1094;5;1101;;;;vpos;;v;;a;;r;;d4,1095;;b1,0;;m0;;e">
</treenode>
<treenode node="testStopWithTimeoutIsActuallyWorking;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;108;5;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testStopWithTimeoutIsActuallyWorking()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;requires&lt;/b&gt;: extension pcntl;;d4,109;;b1,0;;m0;;e">
</treenode>
<treenode node="testSuccessfulMustRunHasCorrectExitCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;541;5;545;;;;vpos;;v;;a;;r;;d4,542;;b1,0;;m0;;e">
</treenode>
<treenode node="testTTYCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;472;5;485;;;;vpos;;v;;a;;r;;d4,473;;b1,0;;m0;;e">
</treenode>
<treenode node="testTTYCommandExitCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;487;5;498;;;;vpos;;v;;a;;r;;d4,488;;b1,0;;m0;;e">
</treenode>
<treenode node="testTTYInWindowsEnvironment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;500;5;511;;;;vpos;;v;;a;;r;;d4,501;;b1,0;;m0;;e">
</treenode>
<treenode node="testTermSignalTerminatesProcessCleanly;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1112;5;1119;;;;vpos;;v;;a;;r;;d4,1113;;b1,0;;m0;;e">
</treenode>
<treenode node="testThatProcessDoesNotThrowWarningDuringRun;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;65;5;76;;;;vpos;;v;;a;;r;;d4,66;;b1,0;;m0;;e">
</treenode>
<treenode node="testUpdateStatus;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;575;5;580;;;;vpos;;v;;a;;r;;d4,576;;b1,0;;m0;;e">
</treenode>
<treenode node="testValidInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;311;5;316;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testValidInput($expected, $value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideInputValues;;d4,312;;b1,0;;m0;;eexpected;;pvalue;;p">
</treenode>
<treenode node="testWaitStoppedDeadProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;1476;5;1483;;;;vpos;;v;;a;;r;;d4,1477;;b1,0;;m0;;e">
</treenode>
<treenode node="testWaitUntilCanReturnFalse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;150;5;155;;;;vpos;;v;;a;;r;;d4,151;;b1,0;;m0;;e">
</treenode>
<treenode node="testWaitUntilSpecificOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;129;5;148;;;;vpos;;v;;a;;r;;d4,130;;b1,0;;m0;;e">
</treenode>
<treenode node="testWrongSignal;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;988;5;1005;;;;vpos;;v;;a;;r;;d4,989;;b1,0;;m0;;e">
</treenode>
<treenode node="testZeroAsOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\ProcessTest.php;f11;446;5;457;;;;vpos;;v;;a;;r;;d4,447;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ProcessTimedOutException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessTimedOutException.php;f0;20;1;68;;;;vpos;;v;;aRuntimeException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProcessTimedOutException extends RuntimeException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exception that is thrown when a process times out.&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="TYPE_GENERAL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessTimedOutException.php;f9;22;22;22;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="TYPE_IDLE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessTimedOutException.php;f9;23;19;23;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessTimedOutException.php;f11;28;5;38;;;;vpos;;v;;a;;r;;d4,29;;b1,0;;m0;;eprocess;;ptimeoutType;;p">
</treenode>
<treenode node="getExceededTimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessTimedOutException.php;f11;55;5;67;;;;vpos;;v;;a;;r;;d4,56;;b1,0;;m0;;e">
</treenode>
<treenode node="getProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessTimedOutException.php;f11;40;5;43;;;;vpos;;v;;a;;r;;d4,41;;b1,0;;m0;;e">
</treenode>
<treenode node="isGeneralTimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessTimedOutException.php;f11;45;5;48;;;;vpos;;v;;a;;r;;d4,46;;b1,0;;m0;;e">
</treenode>
<treenode node="isIdleTimeout;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\ProcessTimedOutException.php;f11;50;5;53;;;;vpos;;v;;a;;r;;d4,51;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ProcessUtils;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\ProcessUtils.php;f0;22;1;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProcessUtils&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    ProcessUtils is a bunch of utility methods.&#10;This class contains static methods only and is not meant to be instantiated.&#10;&lt;b&gt;author&lt;/b&gt;: Martin Hason &lt;martin.hason&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\ProcessUtils.php;f12;27;5;29;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class should not be instantiated.;;d4,28;;b3,0;;m0;;e">
</treenode>
<treenode node="validateInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\ProcessUtils.php;f18;41;5;67;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    validateInput($caller, $input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Validates and normalizes a Process input.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException In case the input is not valid&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$caller&lt;/b&gt;: The name of method call that validates the input&#10;    mixed &lt;b&gt;$input&lt;/b&gt;: The input to validate&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The validated input;;d4,42;;b1,5;;m0;;estring $caller;;pmixed $input;;p">
</treenode>
</treenode>
<treenode node="ProgressBar;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f6;25;1;544;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProgressBar&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The ProgressBar provides helpers to display progress output.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Chris Jones &lt;leeked&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;53;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(OutputInterface $output, int $max = 0)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    OutputInterface &lt;b&gt;$output&lt;/b&gt;: An OutputInterface instance&#10;    int &lt;b&gt;$max&lt;/b&gt;: Maximum steps (0 if unknown);;d4,54;;b1,0;;m0;;eOutputInterface $output;;pint $max;;p">
</treenode>
<treenode node="advance;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;286;5;289;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    advance(int $step = 1)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Advances the progress output X steps.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$step&lt;/b&gt;: Number of steps to advance;;d4,287;;b1,0;;m0;;eint $step;;p">
</treenode>
<treenode node="buildLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f12;508;5;543;;;;vpos;;v;;a string;;r;;d4,509;;b3,0;;m0;;e">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;363;5;374;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clear(): void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Removes the progress bar from the current line.&#10;This is useful if you wish to write some output&#10;while a progress bar is running.&#10;Call display() to show the progress bar again.;;d4,364;;b1,0;;m0;;e">
</treenode>
<treenode node="determineBestFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f12;419;5;432;;;;vpos;;v;;a string;;r;;d4,420;;b3,0;;m0;;e">
</treenode>
<treenode node="display;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;343;5;354;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    display(): void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Outputs the current progress string.;;d4,344;;b1,0;;m0;;e">
</treenode>
<treenode node="finish;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;326;5;338;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    finish(): void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finishes the progress output.;;d4,327;;b1,0;;m0;;e">
</treenode>
<treenode node="getBarCharacter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;200;5;207;;;;vpos;;v;;a string;;r;;d4,201;;b1,0;;m0;;e">
</treenode>
<treenode node="getBarWidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;190;5;193;;;;vpos;;v;;a int;;r;;d4,191;;b1,0;;m0;;e">
</treenode>
<treenode node="getEmptyBarCharacter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;214;5;217;;;;vpos;;v;;a string;;r;;d4,215;;b1,0;;m0;;e">
</treenode>
<treenode node="getFormatDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f18;131;61;131;;;;vpos;;v;;astring|null;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the format for a given name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The format name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A format string;;d-1,-1;;b1,5;;m0;;estring $name;;p">
</treenode>
<treenode node="getMaxSteps;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;165;5;168;;;;vpos;;v;;a int;;r;;d4,166;;b1,0;;m0;;e">
</treenode>
<treenode node="getMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;155;5;158;;;;vpos;;v;;a;;r;;d4,156;;b1,0;;m0;;ename;;p">
</treenode>
<treenode node="getPlaceholderFormatterDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f18;98;75;98;;;;vpos;;v;;acallable|null;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the placeholder formatter for a given name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The placeholder name (including the delimiter char like %)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A PHP callable;;d-1,-1;;b1,5;;m0;;estring $name;;p">
</treenode>
<treenode node="getProgress;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;170;5;173;;;;vpos;;v;;a int;;r;;d4,171;;b1,0;;m0;;e">
</treenode>
<treenode node="getProgressCharacter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;224;5;227;;;;vpos;;v;;a string;;r;;d4,225;;b1,0;;m0;;e">
</treenode>
<treenode node="getProgressPercent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;180;5;183;;;;vpos;;v;;a float;;r;;d4,181;;b1,0;;m0;;e">
</treenode>
<treenode node="getStartTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;160;5;163;;;;vpos;;v;;a int;;r;;d4,161;;b1,0;;m0;;e">
</treenode>
<treenode node="getStepWidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f12;175;5;178;;;;vpos;;v;;a int;;r;;d4,176;;b3,0;;m0;;e">
</treenode>
<treenode node="initFormats;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f19;491;5;506;;;;vpos;;v;;a array;;r;;d4,492;;b3,5;;m0;;e">
</treenode>
<treenode node="initPlaceholderFormatters;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f19;434;5;489;;;;vpos;;v;;a array;;r;;d4,435;;b3,5;;m0;;e">
</treenode>
<treenode node="iterate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;250;5;261;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    iterate(iterable $iterable, int $max = null): iterable&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an iterator that will automatically update the progress bar when iterated.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|null &lt;b&gt;$max&lt;/b&gt;: Number of steps to complete the bar (0 if indeterminate), if null it will be inferred from $iterable;;d4,251;;b1,0;;m0;;eiterable;;pmax;;p">
</treenode>
<treenode node="overwrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f12;393;5;417;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    overwrite(string $message): void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Overwrites a previous message to the output.;;d4,394;;b3,0;;m0;;emessage;;p">
</treenode>
<treenode node="setBarCharacter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;195;5;198;;;;vpos;;v;;a;;r;;d4,196;;b1,0;;m0;;echar;;p">
</treenode>
<treenode node="setBarWidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;185;5;188;;;;vpos;;v;;a;;r;;d4,186;;b1,0;;m0;;esize;;p">
</treenode>
<treenode node="setEmptyBarCharacter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;209;5;212;;;;vpos;;v;;a;;r;;d4,210;;b1,0;;m0;;echar;;p">
</treenode>
<treenode node="setFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;229;5;233;;;;vpos;;v;;a;;r;;d4,230;;b1,0;;m0;;eformat;;p">
</treenode>
<treenode node="setFormatDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f18;115;5;122;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setFormatDefinition(string $name, string $format): void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets a format for a given name.&#10;This method also allow you to override an existing format.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The format name&#10;    string &lt;b&gt;$format&lt;/b&gt;: A format string;;d4,116;;b1,5;;m0;;estring $name;;pstring $format;;p">
</treenode>
<treenode node="setMaxSteps;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;316;5;321;;;;vpos;;v;;a;;r;;d4,317;;b1,0;;m0;;emax;;p">
</treenode>
<treenode node="setMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;150;5;153;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setMessage(string $message, string $name = &apos;message&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Associates a text with a named placeholder.&#10;The text is displayed when the progress bar is rendered but only&#10;when the corresponding placeholder is part of the custom format line&#10;(by wrapping the name with %).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$message&lt;/b&gt;: The text to associate with the placeholder&#10;    string &lt;b&gt;$name&lt;/b&gt;: The name of the placeholder;;d4,151;;b1,0;;m0;;estring $message;;pstring $name;;p">
</treenode>
<treenode node="setOverwrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;294;5;297;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setOverwrite(bool $overwrite)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets whether to overwrite the progressbar, false for new line.;;d4,295;;b1,0;;m0;;eoverwrite;;p">
</treenode>
<treenode node="setPlaceholderFormatterDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f18;82;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPlaceholderFormatterDefinition(string $name, callable $callable): void&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets a placeholder formatter for a given name.&#10;This method also allow you to override an existing placeholder.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The placeholder name (including the delimiter char like %)&#10;    callable &lt;b&gt;$callable&lt;/b&gt;: A PHP callable;;d4,83;;b1,5;;m0;;estring $name;;pcallable $callable;;p">
</treenode>
<treenode node="setProgress;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;299;5;314;;;;vpos;;v;;a;;r;;d4,300;;b1,0;;m0;;estep;;p">
</treenode>
<treenode node="setProgressCharacter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;219;5;222;;;;vpos;;v;;a;;r;;d4,220;;b1,0;;m0;;echar;;p">
</treenode>
<treenode node="setRealFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f12;376;5;388;;;;vpos;;v;;a;;r;;d4,377;;b3,0;;m0;;eformat;;p">
</treenode>
<treenode node="setRedrawFrequency;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;240;5;243;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setRedrawFrequency(int $freq)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the redraw frequency.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|float &lt;b&gt;$freq&lt;/b&gt;: The frequency in steps;;d4,241;;b1,0;;m0;;eint|float $freq;;p">
</treenode>
<treenode node="start;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressBar.php;f11;268;5;279;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    start(int $max = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Starts the progress output.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|null &lt;b&gt;$max&lt;/b&gt;: Number of steps to complete the bar (0 if indeterminate), null to leave unchanged;;d4,269;;b1,0;;m0;;eint|null $max;;p">
</treenode>
</treenode>
<treenode node="ProgressBarTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f0;23;1;946;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProgressBarTest extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: time-sensitive;;d0,24;;b0,0;;m0;;e">
<treenode node="generateOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f14;922;5;927;;;;vpos;;v;;a;;r;;d4,923;;b2,0;;m0;;eexpected;;p">
</treenode>
<treenode node="getOutputStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f14;917;5;920;;;;vpos;;v;;a;;r;;d4,918;;b2,0;;m0;;edecorated;;pverbosity;;p">
</treenode>
<treenode node="provideFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;872;5;880;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    provideFormat()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Provides each defined format.;;d4,873;;b1,0;;m0;;e">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f14;27;5;31;;;;vpos;;v;;a void;;r;;d4,28;;b2,0;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f14;33;5;36;;;;vpos;;v;;a void;;r;;d4,34;;b2,0;;m0;;e">
</treenode>
<treenode node="testAddingPlaceholderFormatter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;732;5;751;;;;vpos;;v;;a;;r;;d4,733;;b1,0;;m0;;e">
</treenode>
<treenode node="testAdvance;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;54;5;66;;;;vpos;;v;;a;;r;;d4,55;;b1,0;;m0;;e">
</treenode>
<treenode node="testAdvanceMultipleTimes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;82;5;96;;;;vpos;;v;;a;;r;;d4,83;;b1,0;;m0;;e">
</treenode>
<treenode node="testAdvanceOverMax;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;98;5;112;;;;vpos;;v;;a;;r;;d4,99;;b1,0;;m0;;e">
</treenode>
<treenode node="testAdvanceWithStep;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;68;5;80;;;;vpos;;v;;a;;r;;d4,69;;b1,0;;m0;;e">
</treenode>
<treenode node="testAnsiColorsAndEmojis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;773;5;831;;;;vpos;;v;;a;;r;;d4,774;;b1,0;;m0;;e">
</treenode>
<treenode node="testBarWidthWithMultilineFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;929;5;945;;;;vpos;;v;;a;;r;;d4,930;;b1,0;;m0;;e">
</treenode>
<treenode node="testClear;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;516;5;530;;;;vpos;;v;;a;;r;;d4,517;;b1,0;;m0;;e">
</treenode>
<treenode node="testCustomizations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;232;5;249;;;;vpos;;v;;a;;r;;d4,233;;b1,0;;m0;;e">
</treenode>
<treenode node="testDisplayWithQuietVerbosity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;263;5;273;;;;vpos;;v;;a;;r;;d4,264;;b1,0;;m0;;e">
</treenode>
<treenode node="testDisplayWithoutStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;251;5;261;;;;vpos;;v;;a;;r;;d4,252;;b1,0;;m0;;e">
</treenode>
<treenode node="testFinishWithoutStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;275;5;285;;;;vpos;;v;;a;;r;;d4,276;;b1,0;;m0;;e">
</treenode>
<treenode node="testFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;185;5;230;;;;vpos;;v;;a;;r;;d4,186;;b1,0;;m0;;e">
</treenode>
<treenode node="testFormatsWithoutMax;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;857;5;865;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testFormatsWithoutMax($format)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideFormat;;d4,858;;b1,0;;m0;;eformat;;p">
</treenode>
<treenode node="testIterate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;882;5;896;;;;vpos;;v;;a void;;r;;d4,883;;b1,0;;m0;;e">
</treenode>
<treenode node="testIterateUncountable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;898;5;915;;;;vpos;;v;;a void;;r;;d4,899;;b1,0;;m0;;e">
</treenode>
<treenode node="testMultiByteSupport;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;501;5;514;;;;vpos;;v;;a;;r;;d4,502;;b1,0;;m0;;e">
</treenode>
<treenode node="testMultilineFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;753;5;771;;;;vpos;;v;;a;;r;;d4,754;;b1,0;;m0;;e">
</treenode>
<treenode node="testMultipleSectionsWithCustomFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;378;5;407;;;;vpos;;v;;a;;r;;d4,379;;b1,0;;m0;;e">
</treenode>
<treenode node="testMultipleStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;38;5;52;;;;vpos;;v;;a;;r;;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="testNonDecoratedOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;550;5;576;;;;vpos;;v;;a;;r;;d4,551;;b1,0;;m0;;e">
</treenode>
<treenode node="testNonDecoratedOutputWithClear;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;578;5;594;;;;vpos;;v;;a;;r;;d4,579;;b1,0;;m0;;e">
</treenode>
<treenode node="testNonDecoratedOutputWithoutMax;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;596;5;608;;;;vpos;;v;;a;;r;;d4,597;;b1,0;;m0;;e">
</treenode>
<treenode node="testOverwriteMultipleProgressBarsWithSectionOutputs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;349;5;376;;;;vpos;;v;;a;;r;;d4,350;;b1,0;;m0;;e">
</treenode>
<treenode node="testOverwriteWithSectionOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;327;5;347;;;;vpos;;v;;a;;r;;d4,328;;b1,0;;m0;;e">
</treenode>
<treenode node="testOverwriteWithShorterLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;305;5;325;;;;vpos;;v;;a;;r;;d4,306;;b1,0;;m0;;e">
</treenode>
<treenode node="testParallelBars;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;610;5;667;;;;vpos;;v;;a;;r;;d4,611;;b1,0;;m0;;e">
</treenode>
<treenode node="testPercent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;287;5;303;;;;vpos;;v;;a;;r;;d4,288;;b1,0;;m0;;e">
</treenode>
<treenode node="testPercentNotHundredBeforeComplete;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;532;5;548;;;;vpos;;v;;a;;r;;d4,533;;b1,0;;m0;;e">
</treenode>
<treenode node="testRedrawFrequency;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;451;5;469;;;;vpos;;v;;a;;r;;d4,452;;b1,0;;m0;;e">
</treenode>
<treenode node="testRedrawFrequencyIsAtLeastOneIfSmallerOneGiven;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;486;5;499;;;;vpos;;v;;a;;r;;d4,487;;b1,0;;m0;;e">
</treenode>
<treenode node="testRedrawFrequencyIsAtLeastOneIfZeroGiven;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;471;5;484;;;;vpos;;v;;a;;r;;d4,472;;b1,0;;m0;;e">
</treenode>
<treenode node="testRegress;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;114;5;130;;;;vpos;;v;;a;;r;;d4,115;;b1,0;;m0;;e">
</treenode>
<treenode node="testRegressBelowMin;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;170;5;183;;;;vpos;;v;;a;;r;;d4,171;;b1,0;;m0;;e">
</treenode>
<treenode node="testRegressMultipleTimes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;150;5;168;;;;vpos;;v;;a;;r;;d4,151;;b1,0;;m0;;e">
</treenode>
<treenode node="testRegressWithStep;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;132;5;148;;;;vpos;;v;;a;;r;;d4,133;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetCurrentBeforeStarting;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;444;5;449;;;;vpos;;v;;a;;r;;d4,445;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetCurrentProgress;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;424;5;442;;;;vpos;;v;;a;;r;;d4,425;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;833;5;852;;;;vpos;;v;;a;;r;;d4,834;;b1,0;;m0;;e">
</treenode>
<treenode node="testSettingMaxStepsDuringProgressing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;691;5;712;;;;vpos;;v;;a;;r;;d4,692;;b1,0;;m0;;e">
</treenode>
<treenode node="testStartWithMax;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;409;5;422;;;;vpos;;v;;a;;r;;d4,410;;b1,0;;m0;;e">
</treenode>
<treenode node="testWithSmallScreen;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;714;5;730;;;;vpos;;v;;a;;r;;d4,715;;b1,0;;m0;;e">
</treenode>
<treenode node="testWithoutMax;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressBarTest.php;f11;669;5;689;;;;vpos;;v;;a;;r;;d4,670;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ProgressIndicator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f0;20;1;267;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProgressIndicator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Kevin Bond &lt;kevinbond&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f11;40;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(OutputInterface $output, string $format = null, int $indicatorChangeInterval = 100, array $indicatorValues = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$format&lt;/b&gt;: Indicator format&#10;    int &lt;b&gt;$indicatorChangeInterval&lt;/b&gt;: Change interval in milliseconds&#10;    array|null &lt;b&gt;$indicatorValues&lt;/b&gt;: Animated indicator characters;;d4,41;;b1,0;;m0;;eoutput;;pformat;;pindicatorChangeInterval;;pindicatorValues;;p">
</treenode>
<treenode node="advance;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f11;99;5;119;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    advance()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Advances the indicator.;;d4,100;;b1,0;;m0;;e">
</treenode>
<treenode node="determineBestFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f12;204;5;216;;;;vpos;;v;;a;;r;;d4,205;;b3,0;;m0;;e">
</treenode>
<treenode node="display;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f12;187;5;202;;;;vpos;;v;;a;;r;;d4,188;;b3,0;;m0;;e">
</treenode>
<treenode node="finish;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f11;126;5;136;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    finish($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finish the indicator with message.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$message&lt;/b&gt;;;d4,127;;b1,0;;m0;;e $message;;p">
</treenode>
<treenode node="getCurrentTimeInMilliseconds;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f12;231;5;234;;;;vpos;;v;;a;;r;;d4,232;;b3,0;;m0;;e">
</treenode>
<treenode node="getFormatDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f18;145;5;152;;;;vpos;;v;;astring|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormatDefinition($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the format for a given name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The format name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A format string;;d4,146;;b1,5;;m0;;estring $name;;p">
</treenode>
<treenode node="getPlaceholderFormatterDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f18;178;5;185;;;;vpos;;v;;acallable|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPlaceholderFormatterDefinition($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the placeholder formatter for a given name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The placeholder name (including the delimiter char like %)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A PHP callable;;d4,179;;b1,5;;m0;;estring $name;;p">
</treenode>
<treenode node="initFormats;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f19;254;5;266;;;;vpos;;v;;a;;r;;d4,255;;b3,5;;m0;;e">
</treenode>
<treenode node="initPlaceholderFormatters;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f19;236;5;252;;;;vpos;;v;;a;;r;;d4,237;;b3,5;;m0;;e">
</treenode>
<treenode node="overwrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f12;221;5;229;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    overwrite(string $message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Overwrites a previous message to the output.;;d4,222;;b3,0;;m0;;emessage;;p">
</treenode>
<treenode node="setMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f11;69;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setMessage($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the current indicator message.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$message&lt;/b&gt;;;d4,70;;b1,0;;m0;;estring|null $message;;p">
</treenode>
<treenode node="setPlaceholderFormatterDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f18;162;5;169;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPlaceholderFormatterDefinition($name, $callable)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets a placeholder formatter for a given name.&#10;This method also allow you to override an existing placeholder.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The placeholder name (including the delimiter char like %)&#10;    callable &lt;b&gt;$callable&lt;/b&gt;: A PHP callable;;d4,163;;b1,5;;m0;;estring $name;;pcallable $callable;;p">
</treenode>
<treenode node="start;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\ProgressIndicator.php;f11;81;5;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    start($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Starts the indicator output.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;     &lt;b&gt;$message&lt;/b&gt;;;d4,82;;b1,0;;m0;;e $message;;p">
</treenode>
</treenode>
<treenode node="ProgressIndicatorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressIndicatorTest.php;f0;11;1;174;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProgressIndicatorTest extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: time-sensitive;;d0,12;;b0,0;;m0;;e">
<treenode node="generateOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressIndicatorTest.php;f14;168;5;173;;;;vpos;;v;;a;;r;;d4,169;;b2,0;;m0;;eexpected;;p">
</treenode>
<treenode node="getOutputStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressIndicatorTest.php;f14;163;5;166;;;;vpos;;v;;a;;r;;d4,164;;b2,0;;m0;;edecorated;;pverbosity;;p">
</treenode>
<treenode node="provideFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressIndicatorTest.php;f11;153;5;161;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    provideFormat()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Provides each defined format.;;d4,154;;b1,0;;m0;;e">
</treenode>
<treenode node="testCannotAdvanceUnstartedIndicator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressIndicatorTest.php;f11;118;5;124;;;;vpos;;v;;a;;r;;d4,119;;b1,0;;m0;;e">
</treenode>
<treenode node="testCannotFinishUnstartedIndicator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressIndicatorTest.php;f11;126;5;132;;;;vpos;;v;;a;;r;;d4,127;;b1,0;;m0;;e">
</treenode>
<treenode node="testCannotSetInvalidIndicatorCharacters;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressIndicatorTest.php;f11;102;5;107;;;;vpos;;v;;a;;r;;d4,103;;b1,0;;m0;;e">
</treenode>
<treenode node="testCannotStartAlreadyStartedIndicator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressIndicatorTest.php;f11;109;5;116;;;;vpos;;v;;a;;r;;d4,110;;b1,0;;m0;;e">
</treenode>
<treenode node="testCustomIndicatorValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressIndicatorTest.php;f11;79;5;100;;;;vpos;;v;;a;;r;;d4,80;;b1,0;;m0;;e">
</treenode>
<treenode node="testDefaultIndicator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressIndicatorTest.php;f11;13;5;55;;;;vpos;;v;;a;;r;;d4,14;;b1,0;;m0;;e">
</treenode>
<treenode node="testFormats;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressIndicatorTest.php;f11;137;5;146;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testFormats($format)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideFormat;;d4,138;;b1,0;;m0;;eformat;;p">
</treenode>
<treenode node="testNonDecoratedOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\ProgressIndicatorTest.php;f11;57;5;77;;;;vpos;;v;;a;;r;;d4,58;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ProtectedToPrivateFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ProtectedToPrivateFixer.php;f6;25;1;136;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ProtectedToPrivateFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ProtectedToPrivateFixer.php;f14;68;5;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,69;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ProtectedToPrivateFixer.php;f12;92;5;107;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixClass(Tokens $tokens, $classOpenIndex, $classCloseIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classOpenIndex&lt;/b&gt;&#10;    int &lt;b&gt;$classCloseIndex&lt;/b&gt;;;d4,93;;b3,0;;m0;;eTokens $tokens;;pint $classOpenIndex;;pint $classCloseIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ProtectedToPrivateFixer.php;f11;30;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ProtectedToPrivateFixer.php;f11;51;5;55;;;;vpos;;v;;a;;r;;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ProtectedToPrivateFixer.php;f11;60;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="skipClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\ProtectedToPrivateFixer.php;f12;119;5;135;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    skipClass(Tokens $tokens, $classIndex, $classOpenIndex, $classCloseIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Decide whether or not skip the fix for given class.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$classIndex&lt;/b&gt;&#10;    int &lt;b&gt;$classOpenIndex&lt;/b&gt;&#10;    int &lt;b&gt;$classCloseIndex&lt;/b&gt;;;d4,120;;b3,0;;m0;;eTokens $tokens;;pint $classIndex;;pint $classOpenIndex;;pint $classCloseIndex;;p">
</treenode>
</treenode>
<treenode node="Psr0Fixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\Psr0Fixer.php;f6;29;1;168;;;;vpos;;v;;aAbstractPsrAutoloadingFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Psr0Fixer extends AbstractPsrAutoloadingFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jordi Boggiano &lt;j.boggiano&#10;&lt;b&gt;seld&lt;/b&gt;: .be&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Bram Gotink &lt;bram&#10;&lt;b&gt;gotink&lt;/b&gt;: .me&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\Psr0Fixer.php;f14;63;5;154;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,64;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\Psr0Fixer.php;f14;159;5;167;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,160;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\Psr0Fixer.php;f11;34;5;58;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Psr4Fixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\Psr4Fixer.php;f6;26;1;99;;;;vpos;;v;;aAbstractPsrAutoloadingFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Psr4Fixer extends AbstractPsrAutoloadingFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jordi Boggiano &lt;j.boggiano&#10;&lt;b&gt;seld&lt;/b&gt;: .be&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Bram Gotink &lt;bram&#10;&lt;b&gt;gotink&lt;/b&gt;: .me&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\Psr4Fixer.php;f14;52;5;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,53;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Basic\Psr4Fixer.php;f11;31;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Question;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f0;21;1;272;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Question&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Represents a Question.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;36;5;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $question, $default = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$question&lt;/b&gt;: The question to ask to the user&#10;    mixed &lt;b&gt;$default&lt;/b&gt;: The default answer to return if the user enters nothing;;d4,37;;b1,0;;m0;;estring $question;;pmixed $default;;p">
</treenode>
<treenode node="getAutocompleterCallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;163;47;163;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the callback function used for the autocompleter.;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="getAutocompleterValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;121;5;126;;;;vpos;;v;;aiterable;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAutocompleterValues()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets values for the autocompleter.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,122;;b1,0;;m0;;e">
</treenode>
<treenode node="getDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;57;5;60;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefault()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the default answer.;;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="getMaxAttempts;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;237;5;240;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMaxAttempts()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the maximum number of attempts.&#10;Null means an unlimited number of attempts.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,238;;b1,0;;m0;;e">
</treenode>
<treenode node="getNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;263;5;266;;;;vpos;;v;;acallable;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNormalizer()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the normalizer for the response.&#10;The normalizer can ba a callable (a string), a closure or a class implementing __invoke.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,264;;b1,0;;m0;;e">
</treenode>
<treenode node="getQuestion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;47;5;50;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getQuestion()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the question.;;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="getValidator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;203;5;206;;;;vpos;;v;;acallable;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getValidator()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the validator for the question.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,204;;b1,0;;m0;;e">
</treenode>
<treenode node="isAssoc;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f14;268;5;271;;;;vpos;;v;;a;;r;;d4,269;;b2,0;;m0;;earray;;p">
</treenode>
<treenode node="isHidden;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;67;5;70;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isHidden()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether the user response must be hidden.;;d4,68;;b1,0;;m0;;e">
</treenode>
<treenode node="isHiddenFallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;97;5;100;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isHiddenFallback()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    In case the response can not be hidden, whether to fallback on non-hidden question or not.;;d4,98;;b1,0;;m0;;e">
</treenode>
<treenode node="setAutocompleterCallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;175;5;184;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAutocompleterCallback(callable $callback = null): self&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the callback function used for the autocompleter.&#10;The callback is passed the user input as argument and should return an iterable of corresponding suggestions.&#10;$this;;d4,176;;b1,0;;m0;;ecallback;;p">
</treenode>
<treenode node="setAutocompleterValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;138;5;158;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setAutocompleterValues($values)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets values for the autocompleter.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    iterable|null &lt;b&gt;$values&lt;/b&gt;;;d4,139;;b1,0;;m0;;eiterable|null $values;;p">
</treenode>
<treenode node="setHidden;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;81;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHidden($hidden)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets whether the user response must be hidden or not.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: LogicException In case the autocompleter is also used&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$hidden&lt;/b&gt;;;d4,82;;b1,0;;m0;;ebool $hidden;;p">
</treenode>
<treenode node="setHiddenFallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;109;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHiddenFallback($fallback)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets whether to fallback on non-hidden question if the response can not be hidden.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$fallback&lt;/b&gt;;;d4,110;;b1,0;;m0;;ebool $fallback;;p">
</treenode>
<treenode node="setMaxAttempts;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;219;5;228;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setMaxAttempts($attempts)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the maximum number of attempts.&#10;Null means an unlimited number of attempts.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException in case the number of attempts is invalid&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|null &lt;b&gt;$attempts&lt;/b&gt;;;d4,220;;b1,0;;m0;;eint|null $attempts;;p">
</treenode>
<treenode node="setNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;249;5;254;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setNormalizer(callable $normalizer)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets a normalizer for the response.&#10;The normalizer can be a callable (a string), a closure or a class implementing __invoke.&#10;$this;;d4,250;;b1,0;;m0;;enormalizer;;p">
</treenode>
<treenode node="setValidator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Question\Question.php;f11;191;5;196;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setValidator(callable $validator = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets a validator for the question.&#10;$this;;d4,192;;b1,0;;m0;;evalidator;;p">
</treenode>
</treenode>
<treenode node="QuestionHelper;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\QuestionHelper.php;f0;30;1;465;;;;vpos;;v;;aHelper;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class QuestionHelper extends Helper&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    The QuestionHelper class provides helpers to interact with the user.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,31;;b0,0;;m0;;e">
<treenode node="ask;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\QuestionHelper.php;f11;43;5;88;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ask(InputInterface $input, OutputInterface $output, Question $question)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Asks a question to the user.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException If there is no data to read in the input stream&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The user answer;;d4,44;;b1,0;;m0;;einput;;poutput;;pquestion;;p">
</treenode>
<treenode node="autocomplete;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\QuestionHelper.php;f12;199;5;332;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    autocomplete(OutputInterface $output, Question $question, $inputStream, callable $autocomplete): string&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Autocompletes a question.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource &lt;b&gt;$inputStream&lt;/b&gt;;;d4,200;;b3,0;;m0;;eoutput;;pquestion;;pinputStream;;pautocomplete;;p">
</treenode>
<treenode node="disableStty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\QuestionHelper.php;f18;101;5;104;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    disableStty()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Prevents usage of stty.;;d4,102;;b1,5;;m0;;e">
</treenode>
<treenode node="doAsk;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\QuestionHelper.php;f12;113;5;154;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    doAsk(OutputInterface $output, Question $question)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Asks the question to the user.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException In case the fallback is deactivated and the response cannot be hidden&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |mixed|string|null;;d4,114;;b3,0;;m0;;eoutput;;pquestion;;p">
</treenode>
<treenode node="getHiddenResponse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\QuestionHelper.php;f12;357;5;406;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHiddenResponse(OutputInterface $output, $inputStream): string&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets a hidden response from user.&#10;&lt;b&gt;throws&lt;/b&gt;: RuntimeException In case the fallback is deactivated and the response cannot be hidden&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    OutputInterface &lt;b&gt;$output&lt;/b&gt;: An Output instance&#10;    resource &lt;b&gt;$inputStream&lt;/b&gt;: The handler resource;;d4,358;;b3,0;;m0;;eOutputInterface $output;;presource $inputStream;;p">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\QuestionHelper.php;f11;93;5;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,94;;b1,0;;m0;;e">
</treenode>
<treenode node="getShell;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\QuestionHelper.php;f12;444;5;464;;;;vpos;;v;;astring|bool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getShell()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a valid unix shell.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The valid shell name, false in case no valid shell is found;;d4,445;;b3,0;;m0;;e">
</treenode>
<treenode node="mostRecentlyEnteredValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\QuestionHelper.php;f12;334;5;347;;;;vpos;;v;;a;;r;;d4,335;;b3,0;;m0;;eentered;;p">
</treenode>
<treenode node="validateAttempts;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\QuestionHelper.php;f12;419;5;437;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    validateAttempts(callable $interviewer, OutputInterface $output, Question $question)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Validates an attempt.&#10;&lt;b&gt;throws&lt;/b&gt;: \Exception In case the max number of attempts has been reached and no valid response has been given&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    callable &lt;b&gt;$interviewer&lt;/b&gt;: A callable that will ask for a question and return the result&#10;    OutputInterface &lt;b&gt;$output&lt;/b&gt;: An Output instance&#10;    Question &lt;b&gt;$question&lt;/b&gt;: A Question instance&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The validated response;;d4,420;;b3,0;;m0;;ecallable $interviewer;;pOutputInterface $output;;pQuestion $question;;p">
</treenode>
<treenode node="writeError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\QuestionHelper.php;f14;183;5;192;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writeError(OutputInterface $output, \Exception $error)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Outputs an error message.;;d4,184;;b2,0;;m0;;eoutput;;perror;;p">
</treenode>
<treenode node="writePrompt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\QuestionHelper.php;f14;159;5;178;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writePrompt(OutputInterface $output, Question $question)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Outputs the question prompt.;;d4,160;;b2,0;;m0;;eoutput;;pquestion;;p">
</treenode>
</treenode>
<treenode node="QuestionHelperTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f0;26;1;757;;;;vpos;;v;;aAbstractQuestionHelperTest;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class QuestionHelperTest extends AbstractQuestionHelperTest&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: tty;;d0,27;;b0,0;;m0;;e">
<treenode node="answerProvider;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;584;5;592;;;;vpos;;v;;a;;r;;d4,585;;b1,0;;m0;;e">
</treenode>
<treenode node="createInputInterfaceMock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f14;748;5;756;;;;vpos;;v;;a;;r;;d4,749;;b2,0;;m0;;einteractive;;p">
</treenode>
<treenode node="createOutputInterface;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f14;743;5;746;;;;vpos;;v;;a;;r;;d4,744;;b2,0;;m0;;e">
</treenode>
<treenode node="getAskConfirmationData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;388;5;398;;;;vpos;;v;;a;;r;;d4,389;;b1,0;;m0;;e">
</treenode>
<treenode node="getInputStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f14;734;5;741;;;;vpos;;v;;a;;r;;d4,735;;b2,0;;m0;;einput;;p">
</treenode>
<treenode node="getInputs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;286;5;294;;;;vpos;;v;;a;;r;;d4,287;;b1,0;;m0;;e">
</treenode>
<treenode node="mixedKeysChoiceListAnswerProvider;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;530;5;540;;;;vpos;;v;;a;;r;;d4,531;;b1,0;;m0;;e">
</treenode>
<treenode node="simpleAnswerProvider;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;464;5;474;;;;vpos;;v;;a;;r;;d4,465;;b1,0;;m0;;e">
</treenode>
<treenode node="specialCharacterInMultipleChoice;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;499;5;505;;;;vpos;;v;;a;;r;;d4,500;;b1,0;;m0;;e">
</treenode>
<treenode node="testAmbiguousChoiceFromChoicelist;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;564;5;582;;;;vpos;;v;;a;;r;;d4,565;;b1,0;;m0;;e">
</treenode>
<treenode node="testAsk;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;152;5;166;;;;vpos;;v;;a;;r;;d4,153;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskAndValidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;411;5;440;;;;vpos;;v;;a;;r;;d4,412;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskChoice;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;28;5;90;;;;vpos;;v;;a;;r;;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskChoiceNonInteractive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;92;5;150;;;;vpos;;v;;a;;r;;d4,93;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskConfirmation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;379;5;386;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testAskConfirmation($question, $expected, $default = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getAskConfirmationData;;d4,380;;b1,0;;m0;;equestion;;pexpected;;pdefault;;p">
</treenode>
<treenode node="testAskConfirmationWithCustomTrueAnswer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;400;5;409;;;;vpos;;v;;a;;r;;d4,401;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskHiddenResponse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;362;5;374;;;;vpos;;v;;a;;r;;d4,363;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskThrowsExceptionOnMissingInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;631;5;637;;;;vpos;;v;;a;;r;;d4,632;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskThrowsExceptionOnMissingInputForChoiceQuestion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;639;5;645;;;;vpos;;v;;a;;r;;d4,640;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskThrowsExceptionOnMissingInputWithValidator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;647;5;661;;;;vpos;;v;;a;;r;;d4,648;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskWithAutocomplete;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;168;5;199;;;;vpos;;v;;a;;r;;d4,169;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskWithAutocompleteCallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;201;5;242;;;;vpos;;v;;a;;r;;d4,202;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskWithAutocompleteWithExactMatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;263;5;284;;;;vpos;;v;;a;;r;;d4,264;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskWithAutocompleteWithMultiByteCharacter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;299;5;321;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testAskWithAutocompleteWithMultiByteCharacter($character)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getInputs;;d4,300;;b1,0;;m0;;echaracter;;p">
</treenode>
<treenode node="testAskWithAutocompleteWithNonSequentialKeys;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;244;5;261;;;;vpos;;v;;a;;r;;d4,245;;b1,0;;m0;;e">
</treenode>
<treenode node="testAutocompleteWithTrailingBackslash;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;323;5;360;;;;vpos;;v;;a;;r;;d4,324;;b1,0;;m0;;e">
</treenode>
<treenode node="testChoiceFromChoicelistWithMixedKeys;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;510;5;528;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testChoiceFromChoicelistWithMixedKeys($providedAnswer, $expectedValue)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: mixedKeysChoiceListAnswerProvider;;d4,511;;b1,0;;m0;;eprovidedAnswer;;pexpectedValue;;p">
</treenode>
<treenode node="testChoiceOutputFormattingQuestionForUtf8Keys;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;604;5;629;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testChoiceOutputFormattingQuestionForUtf8Keys()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;requires&lt;/b&gt;: function mb_strwidth;;d4,605;;b1,0;;m0;;e">
</treenode>
<treenode node="testEmptyChoices;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;663;5;668;;;;vpos;;v;;a;;r;;d4,664;;b1,0;;m0;;e">
</treenode>
<treenode node="testNoInteraction;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;594;5;599;;;;vpos;;v;;a;;r;;d4,595;;b1,0;;m0;;e">
</treenode>
<treenode node="testSelectChoiceFromChoiceList;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;545;5;562;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testSelectChoiceFromChoiceList($providedAnswer, $expectedValue)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: answerProvider;;d4,546;;b1,0;;m0;;eprovidedAnswer;;pexpectedValue;;p">
</treenode>
<treenode node="testSelectChoiceFromSimpleChoices;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;445;5;462;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testSelectChoiceFromSimpleChoices($providedAnswer, $expectedValue)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: simpleAnswerProvider;;d4,446;;b1,0;;m0;;eprovidedAnswer;;pexpectedValue;;p">
</treenode>
<treenode node="testSpecialCharacterChoiceFromMultipleChoiceList;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;479;5;497;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testSpecialCharacterChoiceFromMultipleChoiceList($providedAnswer, $expectedValue)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: specialCharacterInMultipleChoice;;d4,480;;b1,0;;m0;;eprovidedAnswer;;pexpectedValue;;p">
</treenode>
<treenode node="testTraversableAutocomplete;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;670;5;701;;;;vpos;;v;;a;;r;;d4,671;;b1,0;;m0;;e">
</treenode>
<treenode node="testTraversableMultiselectAutocomplete;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\QuestionHelperTest.php;f11;703;5;732;;;;vpos;;v;;a;;r;;d4,704;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="QuestionTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f0;17;1;303;;;;vpos;;v;;aTestCase;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="providerGetSetAutocompleterValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;107;5;124;;;;vpos;;v;;a;;r;;d4,108;;b1,0;;m0;;e">
</treenode>
<treenode node="providerGetSetMaxAttempts;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;257;5;260;;;;vpos;;v;;a;;r;;d4,258;;b1,0;;m0;;e">
</treenode>
<treenode node="providerGetSetValidator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;235;5;241;;;;vpos;;v;;a;;r;;d4,236;;b1,0;;m0;;e">
</treenode>
<treenode node="providerSetAutocompleterValuesInvalid;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;138;5;145;;;;vpos;;v;;a;;r;;d4,139;;b1,0;;m0;;e">
</treenode>
<treenode node="providerSetMaxAttemptsInvalid;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;271;5;274;;;;vpos;;v;;a;;r;;d4,272;;b1,0;;m0;;e">
</treenode>
<treenode node="providerTrueFalse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;27;5;30;;;;vpos;;v;;a;;r;;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f14;21;5;25;;;;vpos;;v;;a void;;r;;d4,22;;b2,0;;m0;;e">
</treenode>
<treenode node="testGetAutocompleterCallbackDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;199;5;202;;;;vpos;;v;;a;;r;;d4,200;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetAutocompleterValuesDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;186;5;189;;;;vpos;;v;;a;;r;;d4,187;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;37;5;41;;;;vpos;;v;;a;;r;;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDefaultDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;43;5;46;;;;vpos;;v;;a;;r;;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetMaxAttemptsDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;287;5;290;;;;vpos;;v;;a;;r;;d4,288;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetNormalizerDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;299;5;302;;;;vpos;;v;;a;;r;;d4,300;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetQuestion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;32;5;35;;;;vpos;;v;;a;;r;;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetSetAutocompleterCallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;191;5;197;;;;vpos;;v;;a;;r;;d4,192;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetSetAutocompleterValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;129;5;136;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testGetSetAutocompleterValues($values, $expectValues)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: providerGetSetAutocompleterValues;;d4,130;;b1,0;;m0;;evalues;;pexpectValues;;p">
</treenode>
<treenode node="testGetSetMaxAttempts;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;265;5;269;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testGetSetMaxAttempts($attempts)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: providerGetSetMaxAttempts;;d4,266;;b1,0;;m0;;eattempts;;p">
</treenode>
<treenode node="testGetSetNormalizer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;292;5;297;;;;vpos;;v;;a;;r;;d4,293;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetSetValidator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;246;5;250;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testGetSetValidator($callback)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: providerGetSetValidator;;d4,247;;b1,0;;m0;;ecallback;;p">
</treenode>
<treenode node="testGetValidatorDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;252;5;255;;;;vpos;;v;;a;;r;;d4,253;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsHiddenDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;57;5;60;;;;vpos;;v;;a;;r;;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsHiddenFallbackDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;102;5;105;;;;vpos;;v;;a;;r;;d4,103;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsSetHidden;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;51;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testIsSetHidden(bool $hidden)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: providerTrueFalse;;d4,52;;b1,0;;m0;;ehidden;;p">
</treenode>
<treenode node="testIsSetHiddenFallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;96;5;100;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testIsSetHiddenFallback(bool $hidden)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: providerTrueFalse;;d4,97;;b1,0;;m0;;ehidden;;p">
</treenode>
<treenode node="testSetAutocompleterCallbackWhenHidden;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;204;5;216;;;;vpos;;v;;a;;r;;d4,205;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetAutocompleterCallbackWhenNotHidden;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;218;5;233;;;;vpos;;v;;a;;r;;d4,219;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetAutocompleterValuesInvalid;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;150;5;158;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testSetAutocompleterValuesInvalid($values)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: providerSetAutocompleterValuesInvalid;;d4,151;;b1,0;;m0;;evalues;;p">
</treenode>
<treenode node="testSetAutocompleterValuesWithTraversable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;160;5;184;;;;vpos;;v;;a;;r;;d4,161;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetHiddenWithAutocompleterCallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;62;5;74;;;;vpos;;v;;a;;r;;d4,63;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetHiddenWithNoAutocompleterCallback;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;76;5;91;;;;vpos;;v;;a;;r;;d4,77;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetMaxAttemptsInvalid;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Question\QuestionTest.php;f11;279;5;285;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testSetMaxAttemptsInvalid($attempts)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: providerSetMaxAttemptsInvalid;;d4,280;;b1,0;;m0;;eattempts;;p">
</treenode>
</treenode>
<treenode node="RandomApiMigrationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\RandomApiMigrationFixer.php;f6;28;1;166;;;;vpos;;v;;aAbstractFunctionReferenceFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class RandomApiMigrationFixer extends AbstractFunctionReferenceFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Vladimir Reznichenko &lt;kalessil&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\RandomApiMigrationFixer.php;f14;85;5;128;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,86;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\RandomApiMigrationFixer.php;f11;43;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\RandomApiMigrationFixer.php;f14;133;5;165;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,134;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\RandomApiMigrationFixer.php;f11;58;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\RandomApiMigrationFixer.php;f11;77;5;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,78;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="ReadmeCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\ReadmeCommand.php;f6;25;1;293;;;;vpos;;v;;aCommand;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ReadmeCommand extends Command&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="COMMAND_NAME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\ReadmeCommand.php;f9;27;22;27;;;;vpos;;v;;a;;r&apos;readme&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\ReadmeCommand.php;f14;32;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\ReadmeCommand.php;f14;43;5;292;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    execute(InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="RealIteratorTestCase;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\RealIteratorTestCase.php;f9;13;1;129;;;;vpos;;v;;aIteratorTestCase;;c;;r;;d0,14;;b0,0;;m0;;e">
<treenode node="setUpBeforeClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\RealIteratorTestCase.php;f18;18;5;69;;;;vpos;;v;;a void;;r;;d4,19;;b1,5;;m0;;e">
</treenode>
<treenode node="tearDownAfterClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\RealIteratorTestCase.php;f18;71;5;89;;;;vpos;;v;;a void;;r;;d4,72;;b1,5;;m0;;e">
</treenode>
<treenode node="toAbsolute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\RealIteratorTestCase.php;f21;91;5;118;;;;vpos;;v;;a;;r;;d4,92;;b2,5;;m0;;efiles;;p">
</treenode>
<treenode node="toAbsoluteFixtures;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\RealIteratorTestCase.php;f21;120;5;128;;;;vpos;;v;;a;;r;;d4,121;;b2,5;;m0;;efiles;;p">
</treenode>
</treenode>
<treenode node="RecursiveDirectoryIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\RecursiveDirectoryIterator.php;f0;21;1;139;;;;vpos;;v;;aRecursiveDirectoryIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class RecursiveDirectoryIterator extends \RecursiveDirectoryIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Extends the \RecursiveDirectoryIterator to support relative paths.&#10;&lt;b&gt;author&lt;/b&gt;: Victor Berchet &lt;victor&#10;&lt;b&gt;suumit&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\RecursiveDirectoryIterator.php;f11;41;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $path, int $flags, bool $ignoreUnreadableDirs = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \RuntimeException;;d4,42;;b1,0;;m0;;epath;;pflags;;pignoreUnreadableDirs;;p">
</treenode>
<treenode node="current;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\RecursiveDirectoryIterator.php;f11;60;5;73;;;;vpos;;v;;aSplFileInfo;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    current()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return an instance of SplFileInfo with support for relative paths.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   File information;;d4,61;;b1,0;;m0;;e">
</treenode>
<treenode node="getChildren;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\RecursiveDirectoryIterator.php;f11;80;5;103;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getChildren()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \RecursiveIterator&#10;&lt;b&gt;throws&lt;/b&gt;: AccessDeniedException;;d4,81;;b1,0;;m0;;e">
</treenode>
<treenode node="isRewindable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\RecursiveDirectoryIterator.php;f11;122;5;138;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRewindable()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if the stream is rewindable.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true when the stream is rewindable, false otherwise;;d4,123;;b1,0;;m0;;e">
</treenode>
<treenode node="rewind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\RecursiveDirectoryIterator.php;f11;108;5;115;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rewind()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Do nothing for non rewindable stream.;;d4,109;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="RecursiveDirectoryIteratorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\RecursiveDirectoryIteratorTest.php;f0;15;1;58;;;;vpos;;v;;aIteratorTestCase;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="testRewindOnFtp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\RecursiveDirectoryIteratorTest.php;f11;20;5;31;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testRewindOnFtp()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: network;;d4,21;;b1,0;;m0;;e">
</treenode>
<treenode node="testSeekOnFtp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\RecursiveDirectoryIteratorTest.php;f11;36;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testSeekOnFtp()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: network;;d4,37;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="RegisterListenersPass;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\DependencyInjection\RegisterListenersPass.php;f0;24;1;124;;;;vpos;;v;;aCompilerPassInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class RegisterListenersPass implements CompilerPassInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Compiler pass to register tagged services for an event dispatcher.;;d0,25;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\DependencyInjection\RegisterListenersPass.php;f11;34;5;40;;;;vpos;;v;;a;;r;;d4,35;;b1,0;;m0;;edispatcherService;;plistenerTag;;psubscriberTag;;peventAliasesParameter;;p">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\DependencyInjection\RegisterListenersPass.php;f11;50;5;123;;;;vpos;;v;;a;;r;;d4,51;;b1,0;;m0;;econtainer;;p">
</treenode>
<treenode node="setHotPathEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\DependencyInjection\RegisterListenersPass.php;f11;42;5;48;;;;vpos;;v;;a;;r;;d4,43;;b1,0;;m0;;ehotPathEvents;;ptagName;;p">
</treenode>
</treenode>
<treenode node="RegisterListenersPassTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f0;20;1;222;;;;vpos;;v;;aTestCase;;c;;r;;d0,21;;b0,0;;m0;;e">
<treenode node="testAbstractEventListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f11;85;5;95;;;;vpos;;v;;a;;r;;d4,86;;b1,0;;m0;;e">
</treenode>
<treenode node="testAbstractEventSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f11;97;5;107;;;;vpos;;v;;a;;r;;d4,98;;b1,0;;m0;;e">
</treenode>
<treenode node="testAliasedEventListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f11;199;5;221;;;;vpos;;v;;a void;;r;;d4,200;;b1,0;;m0;;e">
</treenode>
<treenode node="testAliasedEventSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f11;61;5;83;;;;vpos;;v;;a void;;r;;d4,62;;b1,0;;m0;;e">
</treenode>
<treenode node="testEventSubscriberResolvableClassName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f11;109;5;132;;;;vpos;;v;;a;;r;;d4,110;;b1,0;;m0;;e">
</treenode>
<treenode node="testEventSubscriberUnresolvableClassName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f11;146;5;156;;;;vpos;;v;;a;;r;;d4,147;;b1,0;;m0;;e">
</treenode>
<treenode node="testEventSubscriberWithoutInterface;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f11;26;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testEventSubscriberWithoutInterface()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tests that event subscribers not implementing EventSubscriberInterface&#10;trigger an exception.;;d4,27;;b1,0;;m0;;e">
</treenode>
<treenode node="testHotPathEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f11;134;5;144;;;;vpos;;v;;a;;r;;d4,135;;b1,0;;m0;;e">
</treenode>
<treenode node="testInvokableEventListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f11;158;5;197;;;;vpos;;v;;a;;r;;d4,159;;b1,0;;m0;;e">
</treenode>
<treenode node="testValidEventSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f11;38;5;59;;;;vpos;;v;;a;;r;;d4,39;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ReportSummary;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReportSummary.php;f6;19;1;122;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ReportSummary&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReportSummary.php;f11;59;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        array $changed,&#10;        $time,&#10;        $memory,&#10;        $addAppliedFixers,&#10;        $isDryRun,&#10;        $isDecoratedOutput&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$changed&lt;/b&gt;&#10;    int &lt;b&gt;$time&lt;/b&gt;: duration in milliseconds&#10;    int &lt;b&gt;$memory&lt;/b&gt;: memory usage in bytes&#10;    bool &lt;b&gt;$addAppliedFixers&lt;/b&gt;&#10;    bool &lt;b&gt;$isDryRun&lt;/b&gt;&#10;    bool &lt;b&gt;$isDecoratedOutput&lt;/b&gt;;;d6,66;;b1,0;;m0;;earray $changed;;pint $time;;pint $memory;;pbool $addAppliedFixers;;pbool $isDryRun;;pbool $isDecoratedOutput;;p">
</treenode>
<treenode node="getChanged;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReportSummary.php;f11;94;5;97;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getChanged()&#10;;;d4,95;;b1,0;;m0;;e">
</treenode>
<treenode node="getMemory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReportSummary.php;f11;102;5;105;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMemory()&#10;;;d4,103;;b1,0;;m0;;e">
</treenode>
<treenode node="getTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReportSummary.php;f11;110;5;113;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTime()&#10;;;d4,111;;b1,0;;m0;;e">
</treenode>
<treenode node="isDecoratedOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReportSummary.php;f11;78;5;81;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isDecoratedOutput()&#10;;;d4,79;;b1,0;;m0;;e">
</treenode>
<treenode node="isDryRun;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReportSummary.php;f11;86;5;89;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isDryRun()&#10;;;d4,87;;b1,0;;m0;;e">
</treenode>
<treenode node="shouldAddAppliedFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReportSummary.php;f11;118;5;121;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    shouldAddAppliedFixers()&#10;;;d4,119;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ReporterFactory;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReporterFactory.php;f6;22;1;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ReporterFactory&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Boris Gorbylev &lt;ekho&#10;&lt;b&gt;ekho&lt;/b&gt;: .name&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="create;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReporterFactory.php;f18;27;5;30;;;;vpos;;v;;a;;r;;d4,28;;b1,5;;m0;;e">
</treenode>
<treenode node="getFormats;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReporterFactory.php;f11;80;5;86;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormats()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,81;;b1,0;;m0;;e">
</treenode>
<treenode node="getReporter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReporterFactory.php;f11;93;5;100;;;;vpos;;v;;aReporterInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getReporter($format)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$format&lt;/b&gt;;;d4,94;;b1,0;;m0;;estring $format;;p">
</treenode>
<treenode node="registerBuiltInReporters;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReporterFactory.php;f11;32;5;57;;;;vpos;;v;;a;;r;;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="registerReporter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\ReporterFactory.php;f11;64;5;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registerReporter(ReporterInterface $reporter)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    $this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ReporterInterface &lt;b&gt;$reporter&lt;/b&gt;;;d4,65;;b1,0;;m0;;eReporterInterface $reporter;;p">
</treenode>
</treenode>
<treenode node="Required;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\Required.php;f6;30;1;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Required&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Annotation that can be used to signal to the parser&#10;to check if that attribute is required during the parsing process.&#10;&lt;b&gt;author&lt;/b&gt;: Fabio B. Silva &lt;fabio.bat.silva&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;Annotation&lt;/b&gt;;;d0,31;;b0,0;;m0;;e">
</treenode>
<treenode node="RequiredFixerConfigurationException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ConfigurationException\RequiredFixerConfigurationException.php;f6;19;1;21;;;;vpos;;v;;aInvalidFixerConfigurationException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class RequiredFixerConfigurationException extends InvalidFixerConfigurationException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
</treenode>
<treenode node="ReturnAssignmentFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\ReturnAssignmentFixer.php;f6;24;1;361;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ReturnAssignmentFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\ReturnAssignmentFixer.php;f14;58;5;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="clearIfSave;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\ReturnAssignmentFixer.php;f12;323;5;334;;;;vpos;;v;;a;;r;;d4,324;;b3,0;;m0;;etokens;;pindex;;p">
</treenode>
<treenode node="fixFunction;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\ReturnAssignmentFixer.php;f12;96;5;250;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunction(Tokens $tokens, $functionIndex, $functionOpenIndex, $functionCloseIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$functionIndex&lt;/b&gt;: token index of T_FUNCTION&#10;    int &lt;b&gt;$functionOpenIndex&lt;/b&gt;: token index of the opening brace token of the function&#10;    int &lt;b&gt;$functionCloseIndex&lt;/b&gt;: token index of the closing brace token of the function&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &gt;= 0 number of tokens inserted into the Tokens collection;;d4,97;;b3,0;;m0;;eTokens $tokens;;pint $functionIndex;;pint $functionOpenIndex;;pint $functionCloseIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\ReturnAssignmentFixer.php;f11;29;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\ReturnAssignmentFixer.php;f11;40;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\ReturnAssignmentFixer.php;f11;50;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isSuperGlobal;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\ReturnAssignmentFixer.php;f12;341;5;360;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isSuperGlobal(Token $token)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Token &lt;b&gt;$token&lt;/b&gt;;;d4,342;;b3,0;;m0;;eToken $token;;p">
</treenode>
<treenode node="simplifyReturnStatement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\ReturnAssignmentFixer.php;f12;261;5;321;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    simplifyReturnStatement(&#10;        Tokens $tokens,&#10;        $assignVarIndex,&#10;        $assignVarOperatorIndex,&#10;        $returnIndex,&#10;        $returnVarEndIndex&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$assignVarIndex&lt;/b&gt;&#10;    int &lt;b&gt;$assignVarOperatorIndex&lt;/b&gt;&#10;    int &lt;b&gt;$returnIndex&lt;/b&gt;&#10;    int &lt;b&gt;$returnVarEndIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &gt;= 0 number of tokens inserted into the Tokens collection;;d6,267;;b3,0;;m0;;eTokens $tokens;;pint $assignVarIndex;;pint $assignVarOperatorIndex;;pint $returnIndex;;pint $returnVarEndIndex;;p">
</treenode>
</treenode>
<treenode node="ReturnRefTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ReturnRefTransformer.php;f6;26;1;56;;;;vpos;;v;;aAbstractTransformer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ReturnRefTransformer extends AbstractTransformer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform `&amp;` operator into CT::T_RETURN_REF in `function &amp; foo() {}`.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ReturnRefTransformer.php;f11;31;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ReturnRefTransformer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredPhpVersionId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\ReturnRefTransformer.php;f11;47;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    process(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
</treenode>
<treenode node="ReturnTypeDeclarationFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\ReturnTypeDeclarationFixer.php;f6;28;1;122;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ReturnTypeDeclarationFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\ReturnTypeDeclarationFixer.php;f14;70;5;108;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,71;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\ReturnTypeDeclarationFixer.php;f14;113;5;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,114;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\ReturnTypeDeclarationFixer.php;f11;33;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\ReturnTypeDeclarationFixer.php;f11;62;5;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="RuleSet;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSet.php;f6;25;1;530;;;;vpos;;v;;aRuleSetInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class RuleSet implements RuleSetInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set of rules to be used by fixer.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSet.php;f11;399;5;409;;;;vpos;;v;;a;;r;;d4,400;;b1,0;;m0;;eset;;p">
</treenode>
<treenode node="create;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSet.php;f18;411;5;414;;;;vpos;;v;;a;;r;;d4,412;;b1,5;;m0;;eset;;p">
</treenode>
<treenode node="getRuleConfiguration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSet.php;f11;427;5;438;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRuleConfiguration($rule)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,428;;b1,0;;m0;;erule;;p">
</treenode>
<treenode node="getRules;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSet.php;f11;443;5;446;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRules()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,444;;b1,0;;m0;;e">
</treenode>
<treenode node="getSetDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSet.php;f12;461;5;468;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSetDefinition($name)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: name of set;;d4,462;;b3,0;;m0;;estring $name;;p">
</treenode>
<treenode node="getSetDefinitionNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSet.php;f11;451;5;454;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSetDefinitionNames()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,452;;b1,0;;m0;;e">
</treenode>
<treenode node="hasRule;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSet.php;f11;419;5;422;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasRule($rule)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,420;;b1,0;;m0;;erule;;p">
</treenode>
<treenode node="resolveSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSet.php;f12;475;5;500;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resolveSet()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Resolve input set into group of rules.&#10;$this;;d4,476;;b3,0;;m0;;e">
</treenode>
<treenode node="resolveSubset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\RuleSet.php;f12;513;5;529;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resolveSubset($setName, $setValue)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Resolve set rules as part of another set.&#10;If set value is false then disable all fixers in set,&#10;if not then get value from set item.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$setName&lt;/b&gt;&#10;    bool &lt;b&gt;$setValue&lt;/b&gt;;;d4,514;;b3,0;;m0;;estring $setName;;pbool $setValue;;p">
</treenode>
</treenode>
<treenode node="Runner;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\Runner.php;f6;35;1;307;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Runner&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,36;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\Runner.php;f11;87;5;109;;;;vpos;;v;;a;;r;;d6,98;;b1,0;;m0;;efinder;;pfixers;;pdiffer;;peventDispatcher;;perrorsManager;;plinter;;pisDryRun;;pcacheManager;;pdirectory;;pstopOnViolation;;p">
</treenode>
<treenode node="dispatchEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\Runner.php;f12;290;5;306;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    dispatchEvent($name, Event $event)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;&#10;    Event &lt;b&gt;$event&lt;/b&gt;;;d4,291;;b3,0;;m0;;estring $name;;pEvent $event;;p">
</treenode>
<treenode node="fix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\Runner.php;f11;114;5;147;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fix()&#10;;;d4,115;;b1,0;;m0;;e">
</treenode>
<treenode node="fixFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\Runner.php;f12;149;5;268;;;;vpos;;v;;a;;r;;d4,150;;b3,0;;m0;;efile;;plintingResult;;p">
</treenode>
<treenode node="processException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Runner\Runner.php;f12;276;5;284;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    processException($name, $e)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Process an exception that occurred.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;&#10;    \Throwable &lt;b&gt;$e&lt;/b&gt;;;d4,277;;b3,0;;m0;;estring $name;;p\Throwable $e;;p">
</treenode>
</treenode>
<treenode node="RuntimeException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Exception\RuntimeException.php;f0;18;1;20;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Exception\RuntimeException.php;f0;16;1;18;;;;vpos;;v;;aRuntimeException;;cExceptionInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class RuntimeException extends \RuntimeException implements ExceptionInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    RuntimeException for the Process Component.&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
</treenode>
<treenode node="SebastianBergmannDiffer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\SebastianBergmannDiffer.php;f6;19;1;38;;;;vpos;;v;;aDifferInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SebastianBergmannDiffer implements DifferInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\SebastianBergmannDiffer.php;f11;26;5;29;;;;vpos;;v;;a;;r;;d4,27;;b1,0;;m0;;e">
</treenode>
<treenode node="diff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\SebastianBergmannDiffer.php;f11;34;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    diff($old, $new)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;eold;;pnew;;p">
</treenode>
</treenode>
<treenode node="SebastianBergmannShortDiffer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\SebastianBergmannShortDiffer.php;f6;19;1;38;;;;vpos;;v;;aDifferInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SebastianBergmannShortDiffer implements DifferInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\SebastianBergmannShortDiffer.php;f11;26;5;29;;;;vpos;;v;;a;;r;;d4,27;;b1,0;;m0;;e">
</treenode>
<treenode node="diff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\SebastianBergmannShortDiffer.php;f11;34;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    diff($old, $new)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;eold;;pnew;;p">
</treenode>
</treenode>
<treenode node="Section;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Section.php;f0;18;1;199;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Section&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stopwatch section.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Section.php;f11;49;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(float $origin = null, bool $morePrecision = false)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float|null &lt;b&gt;$origin&lt;/b&gt;: Set the origin of the events in this section, use null to set their origin to their start time&#10;    bool &lt;b&gt;$morePrecision&lt;/b&gt;: If true, time is stored as float to keep the original microsecond precision;;d4,50;;b1,0;;m0;;efloat|null $origin;;pbool $morePrecision;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Section.php;f11;62;5;71;;;;vpos;;v;;aself|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    get($id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the child section.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$id&lt;/b&gt;: The child section identifier&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The child section or null when none found;;d4,63;;b1,0;;m0;;estring $id;;p">
</treenode>
<treenode node="getEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Section.php;f11;181;5;188;;;;vpos;;v;;aStopwatchEvent;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEvent($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a specific event by name.&#10;&lt;b&gt;throws&lt;/b&gt;: \LogicException When the event is not known&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The event name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The event;;d4,182;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="getEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Section.php;f11;195;5;198;;;;vpos;;v;;aStopwatchEvent;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEvents()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the events from this section.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] An array of StopwatchEvent instances;;d4,196;;b1,0;;m0;;e">
</treenode>
<treenode node="getId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Section.php;f11;92;5;95;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getId()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The identifier of the section;;d4,93;;b1,0;;m0;;e">
</treenode>
<treenode node="isEventStarted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Section.php;f11;135;5;138;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isEventStarted($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if the event was started.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The event name;;d4,136;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="lap;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Section.php;f11;167;5;170;;;;vpos;;v;;aStopwatchEvent;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lap($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stops then restarts an event.&#10;&lt;b&gt;throws&lt;/b&gt;: \LogicException When the event has not been started&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The event name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The event;;d4,168;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="open;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Section.php;f11;80;5;87;;;;vpos;;v;;aself;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    open($id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates or re-opens a child section.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$id&lt;/b&gt;: Null to create a new section, the identifier to re-open an existing one;;d4,81;;b1,0;;m0;;estring|null $id;;p">
</treenode>
<treenode node="setId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Section.php;f11;104;5;109;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setId($id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the session identifier.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$id&lt;/b&gt;: The session identifier;;d4,105;;b1,0;;m0;;estring $id;;p">
</treenode>
<treenode node="startEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Section.php;f11;119;5;126;;;;vpos;;v;;aStopwatchEvent;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    startEvent($name, $category)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Starts an event.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The event name&#10;    string|null &lt;b&gt;$category&lt;/b&gt;: The event category&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The event;;d4,120;;b1,0;;m0;;estring $name;;pstring|null $category;;p">
</treenode>
<treenode node="stopEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Section.php;f11;149;5;156;;;;vpos;;v;;aStopwatchEvent;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    stopEvent($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stops an event.&#10;&lt;b&gt;throws&lt;/b&gt;: \LogicException When the event has not been started&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The event name&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The event;;d4,150;;b1,0;;m0;;estring $name;;p">
</treenode>
</treenode>
<treenode node="SelfAccessorFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SelfAccessorFixer.php;f6;27;1;193;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SelfAccessorFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gregor Harlan &lt;gharlan&#10;&lt;b&gt;web&lt;/b&gt;: .de&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SelfAccessorFixer.php;f14;76;5;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,77;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getClassStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SelfAccessorFixer.php;f12;174;5;192;;;;vpos;;v;;a;;r;;d4,175;;b3,0;;m0;;etokens;;pindex;;pnamespace;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SelfAccessorFixer.php;f11;32;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SelfAccessorFixer.php;f11;60;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SelfAccessorFixer.php;f11;68;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,69;;b1,0;;m0;;e">
</treenode>
<treenode node="replaceNameOccurrences;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SelfAccessorFixer.php;f12;108;5;172;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    replaceNameOccurrences(Tokens $tokens, $namespace, $name, $startIndex, $endIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Replace occurrences of the name of the classy element by &quot;self&quot; (if possible).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    string &lt;b&gt;$namespace&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,109;;b3,0;;m0;;eTokens $tokens;;pstring $namespace;;pstring $name;;pint $startIndex;;pint $endIndex;;p">
</treenode>
</treenode>
<treenode node="SelfUpdateCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\SelfUpdateCommand.php;f6;32;1;175;;;;vpos;;v;;aCommand;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SelfUpdateCommand extends Command&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Igor Wiedler &lt;igor&#10;&lt;b&gt;wiedler&lt;/b&gt;: .ch&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Stephane PY &lt;py.stephane1&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Grégoire Pineau &lt;lyrixx&#10;&lt;b&gt;lyrixx&lt;/b&gt;: .info&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,33;;b0,0;;m0;;e">
<treenode node="COMMAND_NAME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\SelfUpdateCommand.php;f9;34;22;34;;;;vpos;;v;;a;;r&apos;self-update&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\SelfUpdateCommand.php;f11;51;5;61;;;;vpos;;v;;a;;r;;d6,55;;b1,0;;m0;;eversionChecker;;ptoolInfo;;ppharChecker;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\SelfUpdateCommand.php;f14;66;5;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\Command\SelfUpdateCommand.php;f14;93;5;174;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    execute(InputInterface $input, OutputInterface $output)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,94;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="SemicolonAfterInstructionFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\SemicolonAfterInstructionFixer.php;f6;23;1;62;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SemicolonAfterInstructionFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\SemicolonAfterInstructionFixer.php;f14;47;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\SemicolonAfterInstructionFixer.php;f11;28;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\SemicolonAfterInstructionFixer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="Semver;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Semver.php;f0;15;1;126;;;;vpos;;v;;a;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="SORT_ASC;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Semver.php;f9;17;18;17;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="SORT_DESC;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Semver.php;f9;18;19;18;;;;vpos;;v;;a;;r-1;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="rsort;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Semver.php;f18;80;5;83;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    rsort(array $versions)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sort given array of versions in reverse.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$versions&lt;/b&gt;;;d4,81;;b1,5;;m0;;earray $versions;;p">
</treenode>
<treenode node="satisfiedBy;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Semver.php;f18;52;5;59;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    satisfiedBy(array $versions, $constraints)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return all versions that satisfy given constraints.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$versions&lt;/b&gt;&#10;    string &lt;b&gt;$constraints&lt;/b&gt;;;d4,53;;b1,5;;m0;;earray $versions;;pstring $constraints;;p">
</treenode>
<treenode node="satisfies;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Semver.php;f18;31;5;42;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    satisfies($version, $constraints)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Determine if given version satisfies given constraints.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$version&lt;/b&gt;&#10;    string &lt;b&gt;$constraints&lt;/b&gt;;;d4,32;;b1,5;;m0;;estring $version;;pstring $constraints;;p">
</treenode>
<treenode node="sort;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Semver.php;f18;68;5;71;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sort(array $versions)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sort given array of versions.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$versions&lt;/b&gt;;;d4,69;;b1,5;;m0;;earray $versions;;p">
</treenode>
<treenode node="usort;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\Semver.php;f19;91;5;125;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    usort(array $versions, $direction)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$versions&lt;/b&gt;&#10;    int &lt;b&gt;$direction&lt;/b&gt;;;d4,92;;b3,5;;m0;;earray $versions;;pint $direction;;p">
</treenode>
</treenode>
<treenode node="ServiceLocatorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\Test\ServiceLocatorTest.php;f0;17;1;91;;;;vpos;;v;;aTestCase;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="getServiceLocator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\Test\ServiceLocatorTest.php;f11;19;5;24;;;;vpos;;v;;a;;r;;d4,20;;b1,0;;m0;;efactories;;p">
</treenode>
<treenode node="testGet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\Test\ServiceLocatorTest.php;f11;39;5;48;;;;vpos;;v;;a;;r;;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDoesNotMemoize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\Test\ServiceLocatorTest.php;f11;50;5;64;;;;vpos;;v;;a;;r;;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="testHas;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\Test\ServiceLocatorTest.php;f11;26;5;37;;;;vpos;;v;;a;;r;;d4,27;;b1,0;;m0;;e">
</treenode>
<treenode node="testThrowsOnCircularReference;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\Test\ServiceLocatorTest.php;f11;79;5;90;;;;vpos;;v;;a;;r;;d4,80;;b1,0;;m0;;e">
</treenode>
<treenode node="testThrowsOnUndefinedInternalService;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\Test\ServiceLocatorTest.php;f11;66;5;77;;;;vpos;;v;;a;;r;;d4,67;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ServiceLocatorTrait;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceLocatorTrait.php;f0;22;1;121;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    trait ServiceLocatorTrait&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A trait to help implement ServiceProviderInterface.&#10;&lt;b&gt;author&lt;/b&gt;: Robin Chalas &lt;robin.chalas&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Nicolas Grekas &lt;p&#10;&lt;b&gt;tchwork&lt;/b&gt;: .com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceLocatorTrait.php;f11;31;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(array $factories)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    callable[] &lt;b&gt;$factories&lt;/b&gt;;;d4,32;;b1,0;;m0;;ecallable[] $factories;;p">
</treenode>
<treenode node="createCircularReferenceException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceLocatorTrait.php;f12;116;5;120;;;;vpos;;v;;a ContainerExceptionInterface;;r;;d4,117;;b3,0;;m0;;eid;;ppath;;p">
</treenode>
<treenode node="createNotFoundException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceLocatorTrait.php;f12;93;5;114;;;;vpos;;v;;a NotFoundExceptionInterface;;r;;d4,94;;b3,0;;m0;;eid;;p">
</treenode>
<treenode node="get;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceLocatorTrait.php;f11;49;5;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    get($id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;eid;;p">
</treenode>
<treenode node="getProvidedServices;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceLocatorTrait.php;f11;74;5;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getProvidedServices(): array&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,75;;b1,0;;m0;;e">
</treenode>
<treenode node="has;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceLocatorTrait.php;f11;41;5;44;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    has($id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;eid;;p">
</treenode>
</treenode>
<treenode node="ServiceSubscriberTrait;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceSubscriberTrait.php;f0;21;1;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    trait ServiceSubscriberTrait&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Implementation of ServiceSubscriberInterface that determines subscribed services from&#10;private method return types. Service ids are available as &quot;ClassName::methodName&quot;.&#10;&lt;b&gt;author&lt;/b&gt;: Kevin Bond &lt;kevinbond&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="getSubscribedServices;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceSubscriberTrait.php;f18;26;5;47;;;;vpos;;v;;a array;;r;;d4,27;;b1,5;;m0;;e">
</treenode>
<treenode node="setContainer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\service-contracts\ServiceSubscriberTrait.php;f11;52;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setContainer(ContainerInterface $container)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;required&lt;/b&gt;;;d4,53;;b1,0;;m0;;econtainer;;p">
</treenode>
</treenode>
<treenode node="SetTypeToCastFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\SetTypeToCastFixer.php;f6;24;1;254;;;;vpos;;v;;aAbstractFunctionReferenceFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SetTypeToCastFixer extends AbstractFunctionReferenceFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\SetTypeToCastFixer.php;f14;58;5;152;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="findSettypeCalls;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\SetTypeToCastFixer.php;f12;154;5;170;;;;vpos;;v;;a;;r;;d4,155;;b3,0;;m0;;etokens;;p">
</treenode>
<treenode node="findSettypeNullCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\SetTypeToCastFixer.php;f12;236;5;253;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findSettypeNullCall(&#10;        Tokens $tokens,&#10;        $functionNameIndex,&#10;        Token $argumentToken&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$functionNameIndex&lt;/b&gt;&#10;    Token &lt;b&gt;$argumentToken&lt;/b&gt;;;d6,240;;b3,0;;m0;;eTokens $tokens;;pint $functionNameIndex;;pToken $argumentToken;;p">
</treenode>
<treenode node="fixSettypeCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\SetTypeToCastFixer.php;f12;209;5;229;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSettypeCall(&#10;        Tokens $tokens,&#10;        $functionNameIndex,&#10;        Token $argumentToken,&#10;        Token $castToken&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    Token &lt;b&gt;$castToken&lt;/b&gt;&#10;    int &lt;b&gt;$functionNameIndex&lt;/b&gt;&#10;    Token &lt;b&gt;$argumentToken&lt;/b&gt;;;d6,214;;b3,0;;m0;;eTokens $tokens;;pToken $castToken;;pint $functionNameIndex;;pToken $argumentToken;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\SetTypeToCastFixer.php;f11;29;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\SetTypeToCastFixer.php;f11;50;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="removeSettypeCall;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Alias\SetTypeToCastFixer.php;f12;181;5;201;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeSettypeCall(&#10;        Tokens $tokens,&#10;        $functionNameIndex,&#10;        $openParenthesisIndex,&#10;        $firstArgumentStart,&#10;        $commaIndex,&#10;        $secondArgumentStart,&#10;        $closeParenthesisIndex&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$functionNameIndex&lt;/b&gt;&#10;    int &lt;b&gt;$openParenthesisIndex&lt;/b&gt;&#10;    int &lt;b&gt;$firstArgumentStart&lt;/b&gt;&#10;    int &lt;b&gt;$commaIndex&lt;/b&gt;&#10;    int &lt;b&gt;$secondArgumentStart&lt;/b&gt;&#10;    int &lt;b&gt;$closeParenthesisIndex&lt;/b&gt;;;d6,189;;b3,0;;m0;;eTokens $tokens;;pint $functionNameIndex;;pint $openParenthesisIndex;;pint $firstArgumentStart;;pint $commaIndex;;pint $secondArgumentStart;;pint $closeParenthesisIndex;;p">
</treenode>
</treenode>
<treenode node="ShortDescription;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\ShortDescription.php;f6;19;1;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ShortDescription&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class represents a short description (aka summary) of a docblock.&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\ShortDescription.php;f11;28;5;31;;;;vpos;;v;;a;;r;;d4,29;;b1,0;;m0;;edoc;;p">
</treenode>
<treenode node="getEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\ShortDescription.php;f11;39;5;61;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEnd()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the line index of the line containing the end of the short&#10;description, if present.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,40;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="ShortScalarCastFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\ShortScalarCastFixer.php;f6;23;1;75;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ShortScalarCastFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\ShortScalarCastFixer.php;f14;47;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\ShortScalarCastFixer.php;f11;28;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\CastNotation\ShortScalarCastFixer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="Signature;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Signature.php;f6;19;1;110;;;;vpos;;v;;aSignatureInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Signature implements SignatureInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Andreas Möller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Signature.php;f11;53;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($phpVersion, $fixerVersion, $indent, $lineEnding, array $rules)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$phpVersion&lt;/b&gt;&#10;    string &lt;b&gt;$fixerVersion&lt;/b&gt;&#10;    string &lt;b&gt;$indent&lt;/b&gt;&#10;    string &lt;b&gt;$lineEnding&lt;/b&gt;&#10;    array &lt;b&gt;$rules&lt;/b&gt;;;d4,54;;b1,0;;m0;;estring $phpVersion;;pstring $fixerVersion;;pstring $indent;;pstring $lineEnding;;parray $rules;;p">
</treenode>
<treenode node="equals;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Signature.php;f11;87;5;94;;;;vpos;;v;;a;;r;;d4,88;;b1,0;;m0;;esignature;;p">
</treenode>
<treenode node="getFixerVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Signature.php;f11;67;5;70;;;;vpos;;v;;a;;r;;d4,68;;b1,0;;m0;;e">
</treenode>
<treenode node="getIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Signature.php;f11;72;5;75;;;;vpos;;v;;a;;r;;d4,73;;b1,0;;m0;;e">
</treenode>
<treenode node="getLineEnding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Signature.php;f11;77;5;80;;;;vpos;;v;;a;;r;;d4,78;;b1,0;;m0;;e">
</treenode>
<treenode node="getPhpVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Signature.php;f11;62;5;65;;;;vpos;;v;;a;;r;;d4,63;;b1,0;;m0;;e">
</treenode>
<treenode node="getRules;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Signature.php;f11;82;5;85;;;;vpos;;v;;a;;r;;d4,83;;b1,0;;m0;;e">
</treenode>
<treenode node="utf8Encode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Cache\Signature.php;f19;96;5;109;;;;vpos;;v;;a;;r;;d4,97;;b3,5;;m0;;edata;;p">
</treenode>
</treenode>
<treenode node="SilencedDeprecationErrorFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\SilencedDeprecationErrorFixer.php;f6;24;1;54;;;;vpos;;v;;aAbstractProxyFixer;;cDeprecatedFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SilencedDeprecationErrorFixer extends AbstractProxyFixer implements DeprecatedFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jules Pietri &lt;jules&#10;&lt;b&gt;heahprod&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;deprecated&lt;/b&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="createProxyFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\SilencedDeprecationErrorFixer.php;f14;50;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProxyFixers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\SilencedDeprecationErrorFixer.php;f11;29;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="getSuccessorsNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\LanguageConstruct\SilencedDeprecationErrorFixer.php;f11;42;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSuccessorsNames()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,43;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="SimpleAnnotationReader;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\SimpleAnnotationReader.php;f0;31;1;126;;;;vpos;;v;;aReader;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SimpleAnnotationReader implements Reader&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Simple Annotation Reader.&#10;This annotation reader is intended to be used in projects where you have&#10;full-control over all annotations that are available.&#10;&lt;b&gt;since&lt;/b&gt;: 2.2&#10;&lt;b&gt;author&lt;/b&gt;: Johannes M. Schmitt &lt;schmittjoh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Fabio B. Silva &lt;fabio.bat.silva&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,32;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\SimpleAnnotationReader.php;f11;43;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constructor.&#10;Initializes a new SimpleAnnotationReader.;;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="addNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\SimpleAnnotationReader.php;f11;56;5;59;;;;vpos;;v;;avoid;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addNamespace($namespace)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a namespace in which we will look for annotations.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$namespace&lt;/b&gt;;;d4,57;;b1,0;;m0;;estring $namespace;;p">
</treenode>
<treenode node="getClassAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\SimpleAnnotationReader.php;f11;88;5;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassAnnotation(\ReflectionClass $class, $annotationName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,89;;b1,0;;m0;;eclass;;pannotationName;;p">
</treenode>
<treenode node="getClassAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\SimpleAnnotationReader.php;f11;64;5;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassAnnotations(\ReflectionClass $class)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,65;;b1,0;;m0;;eclass;;p">
</treenode>
<treenode node="getMethodAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\SimpleAnnotationReader.php;f11;102;5;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMethodAnnotation(\ReflectionMethod $method, $annotationName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,103;;b1,0;;m0;;emethod;;pannotationName;;p">
</treenode>
<treenode node="getMethodAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\SimpleAnnotationReader.php;f11;72;5;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMethodAnnotations(\ReflectionMethod $method)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,73;;b1,0;;m0;;emethod;;p">
</treenode>
<treenode node="getPropertyAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\SimpleAnnotationReader.php;f11;116;5;125;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPropertyAnnotation(\ReflectionProperty $property, $annotationName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,117;;b1,0;;m0;;eproperty;;pannotationName;;p">
</treenode>
<treenode node="getPropertyAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\SimpleAnnotationReader.php;f11;80;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPropertyAnnotations(\ReflectionProperty $property)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritDoc&lt;/b&gt;: };;d4,81;;b1,0;;m0;;eproperty;;p">
</treenode>
</treenode>
<treenode node="SimpleToComplexStringVariableFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\SimpleToComplexStringVariableFixer.php;f6;24;1;111;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SimpleToComplexStringVariableFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dave van der Brugge &lt;dmvdbrugge&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\SimpleToComplexStringVariableFixer.php;f14;74;5;110;;;;vpos;;v;;a;;r;;d4,75;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\SimpleToComplexStringVariableFixer.php;f11;29;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\SimpleToComplexStringVariableFixer.php;f11;60;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\SimpleToComplexStringVariableFixer.php;f11;69;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,70;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="SimplifiedNullReturnFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\SimplifiedNullReturnFixer.php;f6;25;1;172;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SimplifiedNullReturnFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\SimplifiedNullReturnFixer.php;f14;72;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,73;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\SimplifiedNullReturnFixer.php;f12;91;5;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clear(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clear the return statement located at a given index.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,92;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\SimplifiedNullReturnFixer.php;f11;30;5;50;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\SimplifiedNullReturnFixer.php;f11;55;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,56;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\SimplifiedNullReturnFixer.php;f11;64;5;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,65;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isStrictOrNullableReturnTypeFunction;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\SimplifiedNullReturnFixer.php;f12;134;5;153;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isStrictOrNullableReturnTypeFunction(Tokens $tokens, $returnIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Is the return within a function with a non-void or nullable return type?&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$returnIndex&lt;/b&gt;: Current return token index;;d4,135;;b3,0;;m0;;eTokens $tokens;;pint $returnIndex;;p">
</treenode>
<treenode node="needFixing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\SimplifiedNullReturnFixer.php;f12;108;5;124;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    needFixing(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Does the return statement located at a given index need fixing?&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,109;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="shouldClearToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ReturnNotation\SimplifiedNullReturnFixer.php;f12;166;5;171;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    shouldClearToken(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Should we clear the specific token?&#10;If the token is a comment, or is whitespace that is immediately before a&#10;comment, then we&apos;ll leave it alone.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,167;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="SingleBlankLineAtEofFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\SingleBlankLineAtEofFixer.php;f6;28;1;69;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SingleBlankLineAtEofFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A file must always end with a line endings character.&#10;Fixer for rules defined in PSR2 ¶2.2.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\SingleBlankLineAtEofFixer.php;f14;61;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,62;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\SingleBlankLineAtEofFixer.php;f11;33;5;39;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\SingleBlankLineAtEofFixer.php;f11;44;5;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,45;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Whitespace\SingleBlankLineAtEofFixer.php;f11;53;5;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,54;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="SingleBlankLineBeforeNamespaceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\SingleBlankLineBeforeNamespaceFixer.php;f6;22;1;68;;;;vpos;;v;;aAbstractLinesBeforeNamespaceFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SingleBlankLineBeforeNamespaceFixer extends AbstractLinesBeforeNamespaceFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\SingleBlankLineBeforeNamespaceFixer.php;f14;58;5;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\SingleBlankLineBeforeNamespaceFixer.php;f11;27;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\SingleBlankLineBeforeNamespaceFixer.php;f11;49;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\NamespaceNotation\SingleBlankLineBeforeNamespaceFixer.php;f11;41;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="SingleClassElementPerStatementFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleClassElementPerStatementFixer.php;f6;35;1;225;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SingleClassElementPerStatementFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface, WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶4.2.&#10;&lt;b&gt;author&lt;/b&gt;: Javier Spagnoletti &lt;phansys&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,36;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleClassElementPerStatementFixer.php;f14;79;5;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,80;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleClassElementPerStatementFixer.php;f14;96;5;107;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,97;;b2,0;;m0;;e">
</treenode>
<treenode node="expandElement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleClassElementPerStatementFixer.php;f12;155;5;198;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    expandElement(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,156;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="fixElement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleClassElementPerStatementFixer.php;f12;113;5;148;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixElement(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,114;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleClassElementPerStatementFixer.php;f11;48;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="getModifiersSequences;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleClassElementPerStatementFixer.php;f12;207;5;224;;;;vpos;;v;;aToken;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getModifiersSequences(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,208;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleClassElementPerStatementFixer.php;f11;40;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="SingleImportPerStatementFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleImportPerStatementFixer.php;f6;29;1;251;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SingleImportPerStatementFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶3.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,30;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleImportPerStatementFixer.php;f14;59;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,60;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="detectIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleImportPerStatementFixer.php;f12;82;5;91;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    detectIndent(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,83;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixGroupUse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleImportPerStatementFixer.php;f12;198;5;218;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixGroupUse(Tokens $tokens, $index, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,199;;b3,0;;m0;;eTokens $tokens;;pint $index;;pint $endIndex;;p">
</treenode>
<treenode node="fixMultipleUse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleImportPerStatementFixer.php;f12;225;5;250;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixMultipleUse(Tokens $tokens, $index, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,226;;b3,0;;m0;;eTokens $tokens;;pint $index;;pint $endIndex;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleImportPerStatementFixer.php;f11;34;5;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;e">
</treenode>
<treenode node="getGroupDeclaration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleImportPerStatementFixer.php;f12;99;5;134;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getGroupDeclaration(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,100;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getGroupStatements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleImportPerStatementFixer.php;f12;145;5;191;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getGroupStatements(Tokens $tokens, $groupPrefix, $groupOpenIndex, $groupCloseIndex, $comment)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    string &lt;b&gt;$groupPrefix&lt;/b&gt;&#10;    int &lt;b&gt;$groupOpenIndex&lt;/b&gt;&#10;    int &lt;b&gt;$groupCloseIndex&lt;/b&gt;&#10;    string &lt;b&gt;$comment&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,146;;b3,0;;m0;;eTokens $tokens;;pstring $groupPrefix;;pint $groupOpenIndex;;pint $groupCloseIndex;;pstring $comment;;p">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleImportPerStatementFixer.php;f11;42;5;46;;;;vpos;;v;;a;;r;;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleImportPerStatementFixer.php;f11;51;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="SingleLineAfterImportsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleLineAfterImportsFixer.php;f6;29;1;144;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SingleLineAfterImportsFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶3.&#10;&lt;b&gt;author&lt;/b&gt;: Ceeram &lt;ceeram&#10;&lt;b&gt;cakephp&lt;/b&gt;: .org&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleLineAfterImportsFixer.php;f14;78;5;143;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,79;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleLineAfterImportsFixer.php;f11;42;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Import\SingleLineAfterImportsFixer.php;f11;34;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="SingleLineCommentStyleFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\SingleLineCommentStyleFixer.php;f6;28;1;167;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SingleLineCommentStyleFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\SingleLineCommentStyleFixer.php;f14;111;5;152;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,112;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\SingleLineCommentStyleFixer.php;f11;43;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\SingleLineCommentStyleFixer.php;f14;157;5;166;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,158;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\SingleLineCommentStyleFixer.php;f11;54;5;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Comment\SingleLineCommentStyleFixer.php;f11;103;5;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,104;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="SingleQuoteFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\SingleQuoteFixer.php;f6;27;1;105;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SingleQuoteFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gregor Harlan &lt;gharlan&#10;&lt;b&gt;web&lt;/b&gt;: .de&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\SingleQuoteFixer.php;f14;65;5;91;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\SingleQuoteFixer.php;f14;96;5;104;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,97;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\SingleQuoteFixer.php;f11;32;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\SingleQuoteFixer.php;f11;57;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="SingleTraitInsertPerStatementFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleTraitInsertPerStatementFixer.php;f6;24;1;103;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SingleTraitInsertPerStatementFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleTraitInsertPerStatementFixer.php;f14;54;5;64;;;;vpos;;v;;a;;r;;d4,55;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixTraitUse;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleTraitInsertPerStatementFixer.php;f12;69;5;79;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixTraitUse(Tokens $tokens, array $candidates)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int[] &lt;b&gt;$candidates&lt;/b&gt;: &apos;,&apos; indexes to fix;;d4,70;;b3,0;;m0;;etokens;;pcandidates;;p">
</treenode>
<treenode node="getCandidates;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleTraitInsertPerStatementFixer.php;f12;87;5;102;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCandidates(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,88;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleTraitInsertPerStatementFixer.php;f11;26;5;41;;;;vpos;;v;;a;;r;;d4,27;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleTraitInsertPerStatementFixer.php;f11;43;5;47;;;;vpos;;v;;a;;r;;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\SingleTraitInsertPerStatementFixer.php;f11;49;5;52;;;;vpos;;v;;a;;r;;d4,50;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="SizeRangeFilterIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\SizeRangeFilterIterator.php;f0;20;1;56;;;;vpos;;v;;aFilterIterator;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SizeRangeFilterIterator extends \FilterIterator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SizeRangeFilterIterator filters out files that are not in the given size range.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\SizeRangeFilterIterator.php;f11;28;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(\Iterator $iterator, array $comparators)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \Iterator &lt;b&gt;$iterator&lt;/b&gt;: The Iterator to filter&#10;    NumberComparator[] &lt;b&gt;$comparators&lt;/b&gt;: An array of NumberComparator instances;;d4,29;;b1,0;;m0;;e\Iterator $iterator;;pNumberComparator[] $comparators;;p">
</treenode>
<treenode node="accept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\SizeRangeFilterIterator.php;f11;40;5;55;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    accept()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Filters the iterator values.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the value should be kept, false otherwise;;d4,41;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="SizeRangeFilterIteratorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\SizeRangeFilterIteratorTest.php;f0;16;1;46;;;;vpos;;v;;aRealIteratorTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="getAcceptData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\SizeRangeFilterIteratorTest.php;f11;30;5;45;;;;vpos;;v;;a;;r;;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="testAccept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\SizeRangeFilterIteratorTest.php;f11;21;5;28;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testAccept($size, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getAcceptData;;d4,22;;b1,0;;m0;;esize;;pexpected;;p">
</treenode>
</treenode>
<treenode node="SortableIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\SortableIterator.php;f0;18;1;97;;;;vpos;;v;;aIteratorAggregate;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SortableIterator implements \IteratorAggregate&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    SortableIterator applies a sort on a given Iterator.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="SORT_BY_ACCESSED_TIME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\SortableIterator.php;f9;23;31;23;;;;vpos;;v;;a;;r3;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="SORT_BY_CHANGED_TIME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\SortableIterator.php;f9;24;30;24;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="SORT_BY_MODIFIED_TIME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\SortableIterator.php;f9;25;31;25;;;;vpos;;v;;a;;r5;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="SORT_BY_NAME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\SortableIterator.php;f9;21;22;21;;;;vpos;;v;;a;;r1;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="SORT_BY_NAME_NATURAL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\SortableIterator.php;f9;26;30;26;;;;vpos;;v;;a;;r6;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="SORT_BY_NONE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\SortableIterator.php;f9;20;22;20;;;;vpos;;v;;a;;r0;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="SORT_BY_TYPE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\SortableIterator.php;f9;22;22;22;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\SortableIterator.php;f11;37;5;79;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(\Traversable $iterator, $sort, bool $reverseOrder = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \Traversable &lt;b&gt;$iterator&lt;/b&gt;: The Iterator to filter&#10;    int|callable &lt;b&gt;$sort&lt;/b&gt;: The sort type (SORT_BY_NAME, SORT_BY_TYPE, or a PHP callback);;d4,38;;b1,0;;m0;;eiterator;;psort;;preverseOrder;;p">
</treenode>
<treenode node="getIterator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Iterator\SortableIterator.php;f11;81;5;96;;;;vpos;;v;;a;;r;;d4,82;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="SortableIteratorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\SortableIteratorTest.php;f0;15;1;257;;;;vpos;;v;;aRealIteratorTestCase;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="getAcceptData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\SortableIteratorTest.php;f11;69;5;256;;;;vpos;;v;;a;;r;;d4,70;;b1,0;;m0;;e">
</treenode>
<treenode node="testAccept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\SortableIteratorTest.php;f11;30;5;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testAccept($mode, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getAcceptData;;d4,31;;b1,0;;m0;;emode;;pexpected;;p">
</treenode>
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\SortableIteratorTest.php;f11;17;5;25;;;;vpos;;v;;a;;r;;d4,18;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="SpaceAfterSemicolonFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\SpaceAfterSemicolonFixer.php;f6;27;1;142;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SpaceAfterSemicolonFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\SpaceAfterSemicolonFixer.php;f14;83;5;141;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,84;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\SpaceAfterSemicolonFixer.php;f14;70;5;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,71;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\SpaceAfterSemicolonFixer.php;f11;32;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\SpaceAfterSemicolonFixer.php;f11;54;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Semicolon\SpaceAfterSemicolonFixer.php;f11;62;5;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="SplFileInfo;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\SplFileInfo.php;f0;18;1;84;;;;vpos;;v;;aSplFileInfo;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SplFileInfo extends \SplFileInfo&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Extends \SplFileInfo to support relative paths.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\SplFileInfo.php;f11;28;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $file, string $relativePath, string $relativePathname)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$file&lt;/b&gt;: The file name&#10;    string &lt;b&gt;$relativePath&lt;/b&gt;: The relative path&#10;    string &lt;b&gt;$relativePathname&lt;/b&gt;: The relative path name;;d4,29;;b1,0;;m0;;estring $file;;pstring $relativePath;;pstring $relativePathname;;p">
</treenode>
<treenode node="getContents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\SplFileInfo.php;f11;73;5;83;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getContents()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the contents of the file.&#10;&lt;b&gt;throws&lt;/b&gt;: \RuntimeException&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the contents of the file;;d4,74;;b1,0;;m0;;e">
</treenode>
<treenode node="getFilenameWithoutExtension;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\SplFileInfo.php;f11;59;5;64;;;;vpos;;v;;a string;;r;;d4,60;;b1,0;;m0;;e">
</treenode>
<treenode node="getRelativePath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\SplFileInfo.php;f11;42;5;45;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRelativePath()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the relative path.&#10;This path does not contain the file name.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the relative path;;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="getRelativePathname;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\SplFileInfo.php;f11;54;5;57;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRelativePathname()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the relative path name.&#10;This path contains the file name.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   the relative path name;;d4,55;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="SquareBraceTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\SquareBraceTransformer.php;f6;31;1;199;;;;vpos;;v;;aAbstractTransformer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SquareBraceTransformer extends AbstractTransformer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform discriminate overloaded square braces tokens.&#10;Performed transformations:&#10;- in `[1, 2, 3]` into CT::T_ARRAY_SQUARE_BRACE_OPEN and CT::T_ARRAY_SQUARE_BRACE_CLOSE,&#10;- in `[$a, &amp;$b, [$c]] = array(1, 2, array(3))` into CT::T_DESTRUCTURING_SQUARE_BRACE_OPEN and CT::T_DESTRUCTURING_SQUARE_BRACE_CLOSE.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,32;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\SquareBraceTransformer.php;f11;36;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,37;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\SquareBraceTransformer.php;f11;49;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\SquareBraceTransformer.php;f11;58;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredPhpVersionId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b1,0;;m0;;e">
</treenode>
<treenode node="isArrayDestructing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\SquareBraceTransformer.php;f12;167;5;198;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isArrayDestructing(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,168;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isShortArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\SquareBraceTransformer.php;f12;127;5;159;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isShortArray(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token under given index is short array opening.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,128;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\SquareBraceTransformer.php;f11;69;5;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    process(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,70;;b1,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
<treenode node="transformIntoArraySquareBrace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\SquareBraceTransformer.php;f12;86;5;92;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    transformIntoArraySquareBrace(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,87;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="transformIntoDestructuringSquareBrace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\SquareBraceTransformer.php;f12;98;5;117;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    transformIntoDestructuringSquareBrace(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,99;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
</treenode>
<treenode node="StandardizeIncrementFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeIncrementFixer.php;f6;24;1;168;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StandardizeIncrementFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: ntzm;;d0,25;;b0,0;;m0;;e">
<treenode node="CT;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeIncrementFixer.php;f9;35;11;35;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="EXPRESSION_END_TOKENS;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeIncrementFixer.php;f9;29;31;29;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="T_CLOSE_TAG;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeIncrementFixer.php;f9;37;20;37;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="T_DYNAMIC_VAR_BRACE_CLOSE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeIncrementFixer.php;f13;36;38;36;;;;vpos;;v;;a;;r;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeIncrementFixer.php;f14;75;5;108;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,76;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="clearRangeLeaveComments;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeIncrementFixer.php;f12;152;5;167;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearRangeLeaveComments(Tokens $tokens, $indexStart, $indexEnd)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clear tokens in the given range unless they are comments.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$indexStart&lt;/b&gt;&#10;    int &lt;b&gt;$indexEnd&lt;/b&gt;;;d4,153;;b3,0;;m0;;eTokens $tokens;;pint $indexStart;;pint $indexEnd;;p">
</treenode>
<treenode node="findStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeIncrementFixer.php;f12;118;5;143;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findStart(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Find the start of a reference.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,119;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeIncrementFixer.php;f11;43;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeIncrementFixer.php;f11;57;5;62;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeIncrementFixer.php;f11;67;5;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,68;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="StandardizeNotEqualsFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeNotEqualsFixer.php;f6;23;1;55;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StandardizeNotEqualsFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeNotEqualsFixer.php;f14;47;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeNotEqualsFixer.php;f11;28;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\StandardizeNotEqualsFixer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="StaticLambdaFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\StaticLambdaFixer.php;f6;25;1;133;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StaticLambdaFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\StaticLambdaFixer.php;f14;59;5;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,60;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\StaticLambdaFixer.php;f11;30;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="hasPossibleReferenceToThis;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\StaticLambdaFixer.php;f12;105;5;132;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasPossibleReferenceToThis(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns &apos;true&apos; if there is a possible reference to &apos;$this&apos; within the given tokens index range.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,106;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\StaticLambdaFixer.php;f11;43;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,44;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\StaticLambdaFixer.php;f11;51;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Status;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f0;20;1;162;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Status&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: John Stevenson &lt;john-stevenson&#10;&lt;b&gt;blueyonder&lt;/b&gt;: .co.uk&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="CHECK;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f9;23;15;23;;;;vpos;;v;;a;;r&apos;Check&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="ENV_RESTART;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f9;22;21;22;;;;vpos;;v;;a;;r&apos;XDEBUG_HANDLER_RESTART&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="ERROR;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f9;24;15;24;;;;vpos;;v;;a;;r&apos;Error&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="INFO;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f9;25;14;25;;;;vpos;;v;;a;;r&apos;Info&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="NORESTART;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f9;26;19;26;;;;vpos;;v;;a;;r&apos;NoRestart&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="RESTART;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f9;27;17;27;;;;vpos;;v;;a;;r&apos;Restart&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="RESTARTED;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f9;29;19;29;;;;vpos;;v;;a;;r&apos;Restarted&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="RESTARTING;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f9;28;20;28;;;;vpos;;v;;a;;r&apos;Restarting&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f11;43;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($envAllowXdebug, $debug)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constructor&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$envAllowXdebug&lt;/b&gt;: Prefixed _ALLOW_XDEBUG name&#10;    bool &lt;b&gt;$debug&lt;/b&gt;: Whether debug output is required;;d4,44;;b1,0;;m0;;estring $envAllowXdebug;;pbool $debug;;p">
</treenode>
<treenode node="getEnvAllow;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f12;147;5;150;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEnvAllow()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the _ALLOW_XDEBUG environment variable as name=value;;d4,148;;b3,0;;m0;;e">
</treenode>
<treenode node="getLoadedMessage;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f12;157;5;161;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLoadedMessage()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the xdebug status and version;;d4,158;;b3,0;;m0;;e">
</treenode>
<treenode node="output;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f12;80;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    output($text, $level = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Outputs a status message&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$text&lt;/b&gt;&#10;    string &lt;b&gt;$level&lt;/b&gt;;;d4,81;;b3,0;;m0;;estring $text;;pstring $level;;p">
</treenode>
<treenode node="report;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f11;67;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    report($op, $data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calls a handler method to report a message&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$op&lt;/b&gt;: The handler constant&#10;    null|string &lt;b&gt;$data&lt;/b&gt;: Data required by the handler;;d4,68;;b1,0;;m0;;estring $op;;pnull|string $data;;p">
</treenode>
<treenode node="reportCheck;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f12;91;5;95;;;;vpos;;v;;a;;r;;d4,92;;b3,0;;m0;;eloaded;;p">
</treenode>
<treenode node="reportError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f12;97;5;100;;;;vpos;;v;;a;;r;;d4,98;;b3,0;;m0;;eerror;;p">
</treenode>
<treenode node="reportInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f12;102;5;105;;;;vpos;;v;;a;;r;;d4,103;;b3,0;;m0;;einfo;;p">
</treenode>
<treenode node="reportNoRestart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f12;107;5;118;;;;vpos;;v;;a;;r;;d4,108;;b3,0;;m0;;e">
</treenode>
<treenode node="reportRestart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f12;120;5;124;;;;vpos;;v;;a;;r;;d4,121;;b3,0;;m0;;e">
</treenode>
<treenode node="reportRestarted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f12;126;5;132;;;;vpos;;v;;a;;r;;d4,127;;b3,0;;m0;;e">
</treenode>
<treenode node="reportRestarting;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f12;134;5;140;;;;vpos;;v;;a;;r;;d4,135;;b3,0;;m0;;ecommand;;p">
</treenode>
<treenode node="setLogger;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\Status.php;f11;56;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLogger(LoggerInterface $logger)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    LoggerInterface &lt;b&gt;$logger&lt;/b&gt;;;d4,57;;b1,0;;m0;;eLoggerInterface $logger;;p">
</treenode>
</treenode>
<treenode node="StdinFileInfo;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f6;19;1;171;;;;vpos;;v;;aSplFileInfo;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StdinFileInfo extends \SplFileInfo&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Davi Koscianski Vidal &lt;davividal&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;21;5;23;;;;vpos;;v;;a;;r;;d4,22;;b1,0;;m0;;e">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;25;5;28;;;;vpos;;v;;a;;r;;d4,26;;b1,0;;m0;;e">
</treenode>
<treenode node="getATime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;37;5;40;;;;vpos;;v;;a;;r;;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="getBasename;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;42;5;45;;;;vpos;;v;;a;;r;;d4,43;;b1,0;;m0;;esuffix;;p">
</treenode>
<treenode node="getCTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;47;5;50;;;;vpos;;v;;a;;r;;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="getExtension;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;52;5;55;;;;vpos;;v;;a;;r;;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="getFileInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;57;5;60;;;;vpos;;v;;a;;r;;d4,58;;b1,0;;m0;;eclassName;;p">
</treenode>
<treenode node="getFilename;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;62;5;72;;;;vpos;;v;;a;;r;;d4,63;;b1,0;;m0;;e">
</treenode>
<treenode node="getGroup;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;74;5;77;;;;vpos;;v;;a;;r;;d4,75;;b1,0;;m0;;e">
</treenode>
<treenode node="getInode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;79;5;82;;;;vpos;;v;;a;;r;;d4,80;;b1,0;;m0;;e">
</treenode>
<treenode node="getLinkTarget;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;84;5;87;;;;vpos;;v;;a;;r;;d4,85;;b1,0;;m0;;e">
</treenode>
<treenode node="getMTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;89;5;92;;;;vpos;;v;;a;;r;;d4,90;;b1,0;;m0;;e">
</treenode>
<treenode node="getOwner;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;94;5;97;;;;vpos;;v;;a;;r;;d4,95;;b1,0;;m0;;e">
</treenode>
<treenode node="getPath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;99;5;102;;;;vpos;;v;;a;;r;;d4,100;;b1,0;;m0;;e">
</treenode>
<treenode node="getPathInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;104;5;107;;;;vpos;;v;;a;;r;;d4,105;;b1,0;;m0;;eclassName;;p">
</treenode>
<treenode node="getPathname;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;109;5;112;;;;vpos;;v;;a;;r;;d4,110;;b1,0;;m0;;e">
</treenode>
<treenode node="getPerms;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;114;5;117;;;;vpos;;v;;a;;r;;d4,115;;b1,0;;m0;;e">
</treenode>
<treenode node="getRealPath;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;30;5;35;;;;vpos;;v;;a;;r;;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getSize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;119;5;122;;;;vpos;;v;;a;;r;;d4,120;;b1,0;;m0;;e">
</treenode>
<treenode node="getType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;124;5;127;;;;vpos;;v;;a;;r;;d4,125;;b1,0;;m0;;e">
</treenode>
<treenode node="isDir;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;129;5;132;;;;vpos;;v;;a;;r;;d4,130;;b1,0;;m0;;e">
</treenode>
<treenode node="isExecutable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;134;5;137;;;;vpos;;v;;a;;r;;d4,135;;b1,0;;m0;;e">
</treenode>
<treenode node="isFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;139;5;142;;;;vpos;;v;;a;;r;;d4,140;;b1,0;;m0;;e">
</treenode>
<treenode node="isLink;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;144;5;147;;;;vpos;;v;;a;;r;;d4,145;;b1,0;;m0;;e">
</treenode>
<treenode node="isReadable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;149;5;152;;;;vpos;;v;;a;;r;;d4,150;;b1,0;;m0;;e">
</treenode>
<treenode node="isWritable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;154;5;157;;;;vpos;;v;;a;;r;;d4,155;;b1,0;;m0;;e">
</treenode>
<treenode node="openFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;159;5;162;;;;vpos;;v;;a;;r;;d4,160;;b1,0;;m0;;eopenMode;;puseIncludePath;;pcontext;;p">
</treenode>
<treenode node="setFileClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;164;5;166;;;;vpos;;v;;a;;r;;d4,165;;b1,0;;m0;;eclassName;;p">
</treenode>
<treenode node="setInfoClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\StdinFileInfo.php;f11;168;5;170;;;;vpos;;v;;a;;r;;d4,169;;b1,0;;m0;;eclassName;;p">
</treenode>
</treenode>
<treenode node="Stopwatch;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Stopwatch.php;f0;20;1;177;;;;vpos;;v;;aResetInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Stopwatch implements ResetInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stopwatch provides a way to profile code.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Stopwatch.php;f11;40;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(bool $morePrecision = false)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$morePrecision&lt;/b&gt;: If true, time is stored as float to keep the original microsecond precision;;d4,41;;b1,0;;m0;;ebool $morePrecision;;p">
</treenode>
<treenode node="getEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Stopwatch.php;f11;153;5;156;;;;vpos;;v;;aStopwatchEvent;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEvent($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a specific event by name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The event name;;d4,154;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="getSectionEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Stopwatch.php;f11;165;5;168;;;;vpos;;v;;aStopwatchEvent;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSectionEvents($id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets all events for a given section.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$id&lt;/b&gt;: A section identifier&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,166;;b1,0;;m0;;estring $id;;p">
</treenode>
<treenode node="getSections;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Stopwatch.php;f11;49;5;52;;;;vpos;;v;;aSection;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSections()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,50;;b1,0;;m0;;e">
</treenode>
<treenode node="isStarted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Stopwatch.php;f11;117;5;120;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isStarted($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if the event was started.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The event name;;d4,118;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="lap;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Stopwatch.php;f11;141;5;144;;;;vpos;;v;;aStopwatchEvent;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lap($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stops then restarts an event.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The event name;;d4,142;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="openSection;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Stopwatch.php;f11;61;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    openSection($id = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new section or re-opens an existing section.&#10;&lt;b&gt;throws&lt;/b&gt;: \LogicException When the section to re-open is not reachable&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$id&lt;/b&gt;: The id of the session to re-open, null to create a new one;;d4,62;;b1,0;;m0;;estring|null $id;;p">
</treenode>
<treenode node="reset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Stopwatch.php;f11;173;5;176;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    reset()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Resets the stopwatch to its original state.;;d4,174;;b1,0;;m0;;e">
</treenode>
<treenode node="start;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Stopwatch.php;f11;105;5;108;;;;vpos;;v;;aStopwatchEvent;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    start($name, $category = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Starts an event.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The event name&#10;    string|null &lt;b&gt;$category&lt;/b&gt;: The event category;;d4,106;;b1,0;;m0;;estring $name;;pstring|null $category;;p">
</treenode>
<treenode node="stop;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Stopwatch.php;f11;129;5;132;;;;vpos;;v;;aStopwatchEvent;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    stop($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stops an event.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The event name;;d4,130;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="stopSection;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Stopwatch.php;f11;85;5;95;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    stopSection($id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stops the last started section.&#10;The id parameter is used to retrieve the events from this section.&#10;&lt;b&gt;see&lt;/b&gt;: getSectionEvents()&#10;&lt;b&gt;throws&lt;/b&gt;: \LogicException When there&apos;s no started section to be stopped&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$id&lt;/b&gt;: The identifier of the section;;d4,86;;b1,0;;m0;;estring $id;;p">
</treenode>
</treenode>
<treenode node="StopwatchEvent;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f0;18;1;247;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StopwatchEvent&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Represents an Event managed by Stopwatch.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;52;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(float $origin, string $category = null, bool $morePrecision = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException When the raw time is not valid&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$origin&lt;/b&gt;: The origin time in milliseconds&#10;    string|null &lt;b&gt;$category&lt;/b&gt;: The event category or null to use the default&#10;    bool &lt;b&gt;$morePrecision&lt;/b&gt;: If true, time is stored as float to keep the original microsecond precision;;d4,53;;b1,0;;m0;;efloat $origin;;pstring|null $category;;pbool $morePrecision;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;243;5;246;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __toString()&#10;;;d4,244;;b1,0;;m0;;e">
</treenode>
<treenode node="ensureStopped;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;132;5;137;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ensureStopped()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stops all non already stopped periods.;;d4,133;;b1,0;;m0;;e">
</treenode>
<treenode node="formatTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f12;231;5;238;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    formatTime($time)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a time.&#10;&lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException When the raw time is not valid&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|float &lt;b&gt;$time&lt;/b&gt;: A raw time&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The formatted time;;d4,232;;b3,0;;m0;;eint|float $time;;p">
</treenode>
<treenode node="getCategory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;64;5;67;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCategory()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the category.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The category;;d4,65;;b1,0;;m0;;e">
</treenode>
<treenode node="getDuration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;176;5;193;;;;vpos;;v;;aint|float;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDuration()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the duration of the events (including all periods).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The duration (in milliseconds);;d4,177;;b1,0;;m0;;e">
</treenode>
<treenode node="getEndTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;164;5;169;;;;vpos;;v;;aint|float;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEndTime()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the relative time of the end of the last period.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The time (in milliseconds);;d4,165;;b1,0;;m0;;e">
</treenode>
<treenode node="getMemory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;200;5;210;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMemory()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the max memory usage of all periods.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The memory usage (in bytes);;d4,201;;b1,0;;m0;;e">
</treenode>
<treenode node="getNow;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f14;217;5;220;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNow()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the current time relative to origin.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Time in ms;;d4,218;;b2,0;;m0;;e">
</treenode>
<treenode node="getOrigin;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;74;5;77;;;;vpos;;v;;afloat;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOrigin()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the origin.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The origin in milliseconds;;d4,75;;b1,0;;m0;;e">
</treenode>
<treenode node="getPeriods;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;144;5;147;;;;vpos;;v;;aStopwatchPeriod;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPeriods()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets all event periods.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [] An array of StopwatchPeriod instances;;d4,145;;b1,0;;m0;;e">
</treenode>
<treenode node="getStartTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;154;5;157;;;;vpos;;v;;aint|float;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStartTime()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the relative time of the start of the first period.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The time (in milliseconds);;d4,155;;b1,0;;m0;;e">
</treenode>
<treenode node="isStarted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;114;5;117;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isStarted()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if the event was started.;;d4,115;;b1,0;;m0;;e">
</treenode>
<treenode node="lap;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;124;5;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lap()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stops the current period and then starts a new one.&#10;$this;;d4,125;;b1,0;;m0;;e">
</treenode>
<treenode node="start;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;84;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    start()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Starts a new event period.&#10;$this;;d4,85;;b1,0;;m0;;e">
</treenode>
<treenode node="stop;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchEvent.php;f11;98;5;107;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    stop()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Stops the last started event period.&#10;$this&#10;&lt;b&gt;throws&lt;/b&gt;: \LogicException When stop() is called without a matching call to start();;d4,99;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="StopwatchEventTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f0;23;1;165;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StopwatchEventTest extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    StopwatchEventTest.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;group&lt;/b&gt;: time-sensitive;;d0,24;;b0,0;;m0;;e">
<treenode node="DELTA;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f9;25;15;25;;;;vpos;;v;;a;;r37;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="testDuration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f11;69;5;86;;;;vpos;;v;;a;;r;;d4,70;;b1,0;;m0;;e">
</treenode>
<treenode node="testDurationBeforeStop;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f11;88;5;103;;;;vpos;;v;;a;;r;;d4,89;;b1,0;;m0;;e">
</treenode>
<treenode node="testEnsureStopped;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f11;125;5;135;;;;vpos;;v;;a;;r;;d4,126;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetCategory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f11;33;5;40;;;;vpos;;v;;a;;r;;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetOrigin;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f11;27;5;31;;;;vpos;;v;;a;;r;;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetPeriods;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f11;42;5;58;;;;vpos;;v;;a;;r;;d4,43;;b1,0;;m0;;e">
</treenode>
<treenode node="testHumanRepresentation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f11;154;5;164;;;;vpos;;v;;a;;r;;d4,155;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsNotStarted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f11;119;5;123;;;;vpos;;v;;a;;r;;d4,120;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsStarted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f11;112;5;117;;;;vpos;;v;;a;;r;;d4,113;;b1,0;;m0;;e">
</treenode>
<treenode node="testLap;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f11;60;5;67;;;;vpos;;v;;a;;r;;d4,61;;b1,0;;m0;;e">
</treenode>
<treenode node="testStartTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f11;137;5;152;;;;vpos;;v;;a;;r;;d4,138;;b1,0;;m0;;e">
</treenode>
<treenode node="testStopWithoutStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchEventTest.php;f11;105;5;110;;;;vpos;;v;;a;;r;;d4,106;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="StopwatchPeriod;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchPeriod.php;f0;18;1;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StopwatchPeriod&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Represents an Period for an Event.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchPeriod.php;f11;29;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($start, $end, bool $morePrecision = false)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|float &lt;b&gt;$start&lt;/b&gt;: The relative time of the start of the period (in milliseconds)&#10;    int|float &lt;b&gt;$end&lt;/b&gt;: The relative time of the end of the period (in milliseconds)&#10;    bool &lt;b&gt;$morePrecision&lt;/b&gt;: If true, time is stored as float to keep the original microsecond precision;;d4,30;;b1,0;;m0;;eint|float $start;;pint|float $end;;pbool $morePrecision;;p">
</treenode>
<treenode node="getDuration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchPeriod.php;f11;61;5;64;;;;vpos;;v;;aint|float;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDuration()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the time spent in this period.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The period duration (in milliseconds);;d4,62;;b1,0;;m0;;e">
</treenode>
<treenode node="getEndTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchPeriod.php;f11;51;5;54;;;;vpos;;v;;aint|float;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEndTime()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the relative time of the end of the period.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The time (in milliseconds);;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="getMemory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchPeriod.php;f11;71;5;74;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMemory()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the memory usage.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The memory usage (in bytes);;d4,72;;b1,0;;m0;;e">
</treenode>
<treenode node="getStartTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\StopwatchPeriod.php;f11;41;5;44;;;;vpos;;v;;aint|float;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStartTime()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the relative time of the start of the period.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The time (in milliseconds);;d4,42;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="StopwatchPeriodTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchPeriodTest.php;f0;16;1;66;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="provideDurationValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchPeriodTest.php;f11;55;5;65;;;;vpos;;v;;a;;r;;d4,56;;b1,0;;m0;;e">
</treenode>
<treenode node="provideTimeValues;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchPeriodTest.php;f11;45;5;53;;;;vpos;;v;;a;;r;;d4,46;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetDuration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchPeriodTest.php;f11;39;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testGetDuration($start, $end, $useMorePrecision, $duration)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideDurationValues;;d4,40;;b1,0;;m0;;estart;;pend;;puseMorePrecision;;pduration;;p">
</treenode>
<treenode node="testGetEndTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchPeriodTest.php;f11;30;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testGetEndTime($end, $useMorePrecision, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideTimeValues;;d4,31;;b1,0;;m0;;eend;;puseMorePrecision;;pexpected;;p">
</treenode>
<treenode node="testGetStartTime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchPeriodTest.php;f11;21;5;25;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testGetStartTime($start, $useMorePrecision, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideTimeValues;;d4,22;;b1,0;;m0;;estart;;puseMorePrecision;;pexpected;;p">
</treenode>
</treenode>
<treenode node="StopwatchTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f0;23;1;181;;;;vpos;;v;;aTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StopwatchTest extends TestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    StopwatchTest.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;group&lt;/b&gt;: time-sensitive;;d0,24;;b0,0;;m0;;e">
<treenode node="DELTA;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f9;25;15;25;;;;vpos;;v;;a;;r20;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="testIsNotStarted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f11;53;5;58;;;;vpos;;v;;a;;r;;d4,54;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsNotStartedEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f11;60;5;79;;;;vpos;;v;;a;;r;;d4,61;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsStarted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f11;45;5;51;;;;vpos;;v;;a;;r;;d4,46;;b1,0;;m0;;e">
</treenode>
<treenode node="testMorePrecision;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f11;106;5;116;;;;vpos;;v;;a;;r;;d4,107;;b1,0;;m0;;e">
</treenode>
<treenode node="testReopenANewSectionShouldThrowAnException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f11;163;5;168;;;;vpos;;v;;a;;r;;d4,164;;b1,0;;m0;;e">
</treenode>
<treenode node="testReopenASection;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f11;145;5;161;;;;vpos;;v;;a;;r;;d4,146;;b1,0;;m0;;e">
</treenode>
<treenode node="testReset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f11;170;5;180;;;;vpos;;v;;a;;r;;d4,171;;b1,0;;m0;;e">
</treenode>
<treenode node="testSection;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f11;118;5;143;;;;vpos;;v;;a;;r;;d4,119;;b1,0;;m0;;e">
</treenode>
<treenode node="testStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f11;27;5;35;;;;vpos;;v;;a;;r;;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="testStartWithoutCategory;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f11;37;5;43;;;;vpos;;v;;a;;r;;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="testStop;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f11;81;5;90;;;;vpos;;v;;a;;r;;d4,82;;b1,0;;m0;;e">
</treenode>
<treenode node="testStopWithoutStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f11;99;5;104;;;;vpos;;v;;a;;r;;d4,100;;b1,0;;m0;;e">
</treenode>
<treenode node="testUnknownEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\stopwatch\Tests\StopwatchTest.php;f11;92;5;97;;;;vpos;;v;;a;;r;;d4,93;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="StreamOutput;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\StreamOutput.php;f0;30;1;123;;;;vpos;;v;;aOutput;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StreamOutput extends Output&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    StreamOutput writes the output to a given stream.&#10;Usage:&#10;$output = new StreamOutput(fopen(&apos;php://stdout&apos;, &apos;w&apos;));s&#10;As `StreamOutput` can use any stream, you can also use a file:&#10;$output = new StreamOutput(fopen(&apos;/path/to/output.log&apos;, &apos;a&apos;, false));s&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,31;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\StreamOutput.php;f11;42;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($stream, int $verbosity = self::VERBOSITY_NORMAL, bool $decorated = null, OutputFormatterInterface $formatter = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When first argument is not a real stream&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    resource &lt;b&gt;$stream&lt;/b&gt;: A stream resource&#10;    int &lt;b&gt;$verbosity&lt;/b&gt;: The verbosity level (one of the VERBOSITY constants in OutputInterface)&#10;    bool|null &lt;b&gt;$decorated&lt;/b&gt;: Whether to decorate messages (null for auto-guessing)&#10;    OutputFormatterInterface|null &lt;b&gt;$formatter&lt;/b&gt;: Output formatter instance (null to use default OutputFormatter);;d4,43;;b1,0;;m0;;eresource $stream;;pint $verbosity;;pbool|null $decorated;;pOutputFormatterInterface|null $formatter;;p">
</treenode>
<treenode node="doWrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\StreamOutput.php;f14;70;5;82;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    doWrite($message, $newline)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,71;;b2,0;;m0;;emessage;;pnewline;;p">
</treenode>
<treenode node="getStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\StreamOutput.php;f11;62;5;65;;;;vpos;;v;;aresource;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStream()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the stream attached to this StreamOutput instance.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A stream resource;;d4,63;;b1,0;;m0;;e">
</treenode>
<treenode node="hasColorSupport;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Output\StreamOutput.php;f14;97;5;122;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasColorSupport()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the stream supports colorization.&#10;Colorization is disabled if not supported by the stream:&#10;This is tricky on Windows, because Cygwin, Msys2 etc emulate pseudo&#10;terminals via named pipes, so we can only check the environment.&#10;Reference: Composer\XdebugHandler\Process::supportsColor&#10;https://github.com/composer/xdebug-handler&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   true if the stream supports colorization, false otherwise;;d4,98;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="StreamOutputTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\StreamOutputTest.php;f0;17;1;58;;;;vpos;;v;;aTestCase;;c;;r;;d0,18;;b0,0;;m0;;e">
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\StreamOutputTest.php;f14;21;5;24;;;;vpos;;v;;a void;;r;;d4,22;;b2,0;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\StreamOutputTest.php;f14;26;5;29;;;;vpos;;v;;a void;;r;;d4,27;;b2,0;;m0;;e">
</treenode>
<treenode node="testConstructor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\StreamOutputTest.php;f11;31;5;36;;;;vpos;;v;;a;;r;;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="testDoWrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\StreamOutputTest.php;f11;51;5;57;;;;vpos;;v;;a;;r;;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\StreamOutputTest.php;f11;45;5;49;;;;vpos;;v;;a;;r;;d4,46;;b1,0;;m0;;e">
</treenode>
<treenode node="testStreamIsRequired;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\StreamOutputTest.php;f11;38;5;43;;;;vpos;;v;;a;;r;;d4,39;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="StrictComparisonFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\StrictComparisonFixer.php;f6;23;1;75;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StrictComparisonFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\StrictComparisonFixer.php;f14;54;5;74;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\StrictComparisonFixer.php;f11;25;5;33;;;;vpos;;v;;a;;r;;d4,26;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\StrictComparisonFixer.php;f11;38;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,39;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\StrictComparisonFixer.php;f11;46;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="StrictParamFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\StrictParamFixer.php;f6;24;1;153;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StrictParamFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\StrictParamFixer.php;f14;58;5;87;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixFunction;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\StrictParamFixer.php;f12;89;5;152;;;;vpos;;v;;a;;r;;d4,90;;b3,0;;m0;;etokens;;pfunctionIndex;;pfunctionParams;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\StrictParamFixer.php;f11;29;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\StrictParamFixer.php;f11;42;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,43;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Strict\StrictParamFixer.php;f11;50;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="StrictUnifiedDiffOutputBuilder;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\StrictUnifiedDiffOutputBuilder.php;f6;20;1;314;;;;vpos;;v;;aDiffOutputBuilderInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StrictUnifiedDiffOutputBuilder implements DiffOutputBuilderInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Strict Unified diff output builder.&#10;Generates (strict) Unified diff&apos;s (unidiffs) with hunks.;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\StrictUnifiedDiffOutputBuilder.php;f11;57;5;96;;;;vpos;;v;;a;;r;;d4,58;;b1,0;;m0;;eoptions;;p">
</treenode>
<treenode node="getDiff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\StrictUnifiedDiffOutputBuilder.php;f11;98;5;129;;;;vpos;;v;;a;;r;;d4,99;;b1,0;;m0;;ediff;;p">
</treenode>
<treenode node="writeDiffHunks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\StrictUnifiedDiffOutputBuilder.php;f12;131;5;269;;;;vpos;;v;;a;;r;;d4,132;;b3,0;;m0;;eoutput;;pdiff;;p">
</treenode>
<treenode node="writeHunk;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\StrictUnifiedDiffOutputBuilder.php;f12;271;5;313;;;;vpos;;v;;a;;r;;d6,280;;b3,0;;m0;;ediff;;pdiffStartIndex;;pdiffEndIndex;;pfromStart;;pfromRange;;ptoStart;;ptoRange;;poutput;;p">
</treenode>
</treenode>
<treenode node="StringInput;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\StringInput.php;f0;24;1;71;;;;vpos;;v;;aArgvInput;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StringInput extends ArgvInput&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    StringInput represents an input provided as a string.&#10;Usage:&#10;$input = new StringInput(&apos;foo --bar=&quot;foobar&quot;&apos;);s&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="REGEX_QUOTED_STRING;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\StringInput.php;f9;27;29;27;;;;vpos;;v;;a;;r&apos;(?:&quot;([^&quot;\\\\]*(?:\\\\.[^&quot;\\\\]*)*)&quot;|\&apos;([^\&apos;\\\\]*(?:\\\\.[^\&apos;\\\\]*)*)\&apos;)&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="REGEX_STRING;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\StringInput.php;f9;26;22;26;;;;vpos;;v;;a;;r&apos;([^\s]+?)(?:\s|(?&lt;!\\\\)&quot;|(?&lt;!\\\\)\&apos;|$)&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\StringInput.php;f11;32;5;37;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(string $input)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$input&lt;/b&gt;: A string representing the parameters from the CLI;;d4,33;;b1,0;;m0;;estring $input;;p">
</treenode>
<treenode node="tokenize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Input\StringInput.php;f12;48;5;70;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    tokenize($input)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tokenizes a string.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException When unable to parse input (should never happen)&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$input&lt;/b&gt;: The input to tokenize&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array of tokens;;d4,49;;b3,0;;m0;;estring $input;;p">
</treenode>
</treenode>
<treenode node="StringInputTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\StringInputTest.php;f0;18;1;86;;;;vpos;;v;;aTestCase;;c;;r;;d0,19;;b0,0;;m0;;e">
<treenode node="getTokenizeData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\StringInputTest.php;f11;44;5;73;;;;vpos;;v;;a;;r;;d4,45;;b1,0;;m0;;e">
</treenode>
<treenode node="testInputOptionWithGivenString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\StringInputTest.php;f11;32;5;42;;;;vpos;;v;;a;;r;;d4,33;;b1,0;;m0;;e">
</treenode>
<treenode node="testToString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\StringInputTest.php;f11;75;5;85;;;;vpos;;v;;a;;r;;d4,76;;b1,0;;m0;;e">
</treenode>
<treenode node="testTokenize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Input\StringInputTest.php;f11;23;5;30;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testTokenize($input, $tokens, $message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: getTokenizeData;;d4,24;;b1,0;;m0;;einput;;ptokens;;pmessage;;p">
</treenode>
</treenode>
<treenode node="StringLineEndingFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\StringLineEndingFixer.php;f6;27;1;84;;;;vpos;;v;;aAbstractFixer;;cWhitespacesAwareFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class StringLineEndingFixer extends AbstractFixer implements WhitespacesAwareFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixes the line endings in multi-line strings.&#10;&lt;b&gt;author&lt;/b&gt;: Ilija Tovilo &lt;ilija.tovilo&#10;&lt;b&gt;me&lt;/b&gt;: .com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\StringLineEndingFixer.php;f14;65;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\StringLineEndingFixer.php;f11;48;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\StringLineEndingFixer.php;f11;32;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,33;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\StringNotation\StringLineEndingFixer.php;f11;40;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="SubscriberService;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f0;224;1;232;;;;vpos;;v;;aEventSubscriberInterface;;c;;r;;d0,225;;b0,0;;m0;;e">
<treenode node="getSubscribedEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\DependencyInjection\RegisterListenersPassTest.php;f18;226;5;231;;;;vpos;;v;;a;;r;;d4,227;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="SwitchCaseSemicolonToColonFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\SwitchCaseSemicolonToColonFixer.php;f6;25;1;103;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SwitchCaseSemicolonToColonFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶5.2.&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,26;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\SwitchCaseSemicolonToColonFixer.php;f14;60;5;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixSwitchCase;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\SwitchCaseSemicolonToColonFixer.php;f14;73;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSwitchCase(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,74;;b2,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\SwitchCaseSemicolonToColonFixer.php;f11;30;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\SwitchCaseSemicolonToColonFixer.php;f11;52;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,53;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="SwitchCaseSpaceFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\SwitchCaseSpaceFixer.php;f6;24;1;91;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SwitchCaseSpaceFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶5.2.&#10;&lt;b&gt;author&lt;/b&gt;: Sullivan Senechal &lt;soullivaneuh&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\SwitchCaseSpaceFixer.php;f14;59;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,60;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\SwitchCaseSpaceFixer.php;f11;29;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\SwitchCaseSpaceFixer.php;f11;51;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="SymfonyQuestionHelper;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\SymfonyQuestionHelper.php;f0;25;1;95;;;;vpos;;v;;aQuestionHelper;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SymfonyQuestionHelper extends QuestionHelper&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Symfony Style Guide compliant question helper.&#10;&lt;b&gt;author&lt;/b&gt;: Kevin Bond &lt;kevinbond&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="writeError;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\SymfonyQuestionHelper.php;f14;84;5;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writeError(OutputInterface $output, \Exception $error)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,85;;b2,0;;m0;;eoutput;;perror;;p">
</treenode>
<treenode node="writePrompt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\SymfonyQuestionHelper.php;f14;30;5;79;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writePrompt(OutputInterface $output, Question $question)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b2,0;;m0;;eoutput;;pquestion;;p">
</treenode>
</treenode>
<treenode node="SymfonyQuestionHelperTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\SymfonyQuestionHelperTest.php;f0;14;1;165;;;;vpos;;v;;aAbstractQuestionHelperTest;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SymfonyQuestionHelperTest extends AbstractQuestionHelperTest&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;group&lt;/b&gt;: tty;;d0,15;;b0,0;;m0;;e">
<treenode node="assertOutputContains;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\SymfonyQuestionHelperTest.php;f12;159;5;164;;;;vpos;;v;;a;;r;;d4,160;;b3,0;;m0;;eexpected;;poutput;;p">
</treenode>
<treenode node="createInputInterfaceMock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\SymfonyQuestionHelperTest.php;f14;149;5;157;;;;vpos;;v;;a;;r;;d4,150;;b2,0;;m0;;einteractive;;p">
</treenode>
<treenode node="createOutputInterface;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\SymfonyQuestionHelperTest.php;f14;141;5;147;;;;vpos;;v;;a;;r;;d4,142;;b2,0;;m0;;e">
</treenode>
<treenode node="getInputStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\SymfonyQuestionHelperTest.php;f14;132;5;139;;;;vpos;;v;;a;;r;;d4,133;;b2,0;;m0;;einput;;p">
</treenode>
<treenode node="testAskChoice;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\SymfonyQuestionHelperTest.php;f11;16;5;74;;;;vpos;;v;;a;;r;;d4,17;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskChoiceWithChoiceValueAsDefault;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\SymfonyQuestionHelperTest.php;f11;76;5;86;;;;vpos;;v;;a;;r;;d4,77;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskEscapeAndFormatLabel;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\SymfonyQuestionHelperTest.php;f11;106;5;113;;;;vpos;;v;;a;;r;;d4,107;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskEscapeDefaultValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\SymfonyQuestionHelperTest.php;f11;97;5;104;;;;vpos;;v;;a;;r;;d4,98;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskReturnsNullIfValidatorAllowsIt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\SymfonyQuestionHelperTest.php;f11;88;5;95;;;;vpos;;v;;a;;r;;d4,89;;b1,0;;m0;;e">
</treenode>
<treenode node="testAskThrowsExceptionOnMissingInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\SymfonyQuestionHelperTest.php;f11;124;5;130;;;;vpos;;v;;a;;r;;d4,125;;b1,0;;m0;;e">
</treenode>
<treenode node="testLabelTrailingBackslash;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\SymfonyQuestionHelperTest.php;f11;115;5;122;;;;vpos;;v;;a;;r;;d4,116;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="SymfonyStyle;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f0;32;1;437;;;;vpos;;v;;aOutputStyle;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class SymfonyStyle extends OutputStyle&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Output decorator helpers for the Symfony Style Guide.&#10;&lt;b&gt;author&lt;/b&gt;: Kevin Bond &lt;kevinbond&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,33;;b0,0;;m0;;e">
<treenode node="MAX_LINE_LENGTH;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f9;34;25;34;;;;vpos;;v;;a;;r120;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;42;5;51;;;;vpos;;v;;a;;r;;d4,43;;b1,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="ask;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;195;5;201;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ask($question, $default = null, $validator = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,196;;b1,0;;m0;;equestion;;pdefault;;pvalidator;;p">
</treenode>
<treenode node="askHidden;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;206;5;214;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    askHidden($question, $validator = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,207;;b1,0;;m0;;equestion;;pvalidator;;p">
</treenode>
<treenode node="askQuestion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;283;5;301;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    askQuestion(Question $question)&#10;;;d4,284;;b1,0;;m0;;equestion;;p">
</treenode>
<treenode node="autoPrependBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f12;361;5;372;;;;vpos;;v;;a void;;r;;d4,362;;b3,0;;m0;;e">
</treenode>
<treenode node="autoPrependText;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f12;374;5;381;;;;vpos;;v;;a void;;r;;d4,375;;b3,0;;m0;;e">
</treenode>
<treenode node="block;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;63;5;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    block($messages, $type = null, $style = null, $prefix = &apos; &apos;, $padding = false, $escape = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a message as a block of text.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array &lt;b&gt;$messages&lt;/b&gt;: The message to write in the block&#10;    string|null &lt;b&gt;$type&lt;/b&gt;: The block type (added in [] on first line)&#10;    string|null &lt;b&gt;$style&lt;/b&gt;: The style to apply to the whole block&#10;    string &lt;b&gt;$prefix&lt;/b&gt;: The prefix for the block&#10;    bool &lt;b&gt;$padding&lt;/b&gt;: Whether to add vertical padding&#10;    bool &lt;b&gt;$escape&lt;/b&gt;: Whether to escape the message;;d4,64;;b1,0;;m0;;estring|array $messages;;pstring|null $type;;pstring|null $style;;pstring $prefix;;pbool $padding;;pbool $escape;;p">
</treenode>
<treenode node="caution;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;170;5;173;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    caution($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,171;;b1,0;;m0;;emessage;;p">
</treenode>
<treenode node="choice;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;227;5;235;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    choice($question, array $choices, $default = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,228;;b1,0;;m0;;equestion;;pchoices;;pdefault;;p">
</treenode>
<treenode node="comment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;130;5;133;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    comment($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats a command comment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|array &lt;b&gt;$message&lt;/b&gt;;;d4,131;;b1,0;;m0;;estring|array $message;;p">
</treenode>
<treenode node="confirm;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;219;5;222;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    confirm($question, $default = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,220;;b1,0;;m0;;equestion;;pdefault;;p">
</treenode>
<treenode node="createBlock;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f12;390;5;436;;;;vpos;;v;;a;;r;;d4,391;;b3,0;;m0;;emessages;;ptype;;pstyle;;pprefix;;ppadding;;pescape;;p">
</treenode>
<treenode node="createProgressBar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;267;5;278;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createProgressBar($max = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,268;;b1,0;;m0;;emax;;p">
</treenode>
<treenode node="error;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;146;5;149;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    error($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,147;;b1,0;;m0;;emessage;;p">
</treenode>
<treenode node="getErrorStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;347;5;350;;;;vpos;;v;;aself;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getErrorStyle()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns a new instance which makes use of stderr if available.;;d4,348;;b1,0;;m0;;e">
</treenode>
<treenode node="getProgressBar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f12;352;5;359;;;;vpos;;v;;a ProgressBar;;r;;d4,353;;b3,0;;m0;;e">
</treenode>
<treenode node="listing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;101;5;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    listing(array $elements)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,102;;b1,0;;m0;;eelements;;p">
</treenode>
<treenode node="newLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;336;5;340;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    newLine($count = 1)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,337;;b1,0;;m0;;ecount;;p">
</treenode>
<treenode node="note;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;162;5;165;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    note($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,163;;b1,0;;m0;;emessage;;p">
</treenode>
<treenode node="progressAdvance;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;249;5;252;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    progressAdvance($step = 1)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,250;;b1,0;;m0;;estep;;p">
</treenode>
<treenode node="progressFinish;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;257;5;262;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    progressFinish()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,258;;b1,0;;m0;;e">
</treenode>
<treenode node="progressStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;240;5;244;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    progressStart($max = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,241;;b1,0;;m0;;emax;;p">
</treenode>
<treenode node="section;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;88;5;96;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    section($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,89;;b1,0;;m0;;emessage;;p">
</treenode>
<treenode node="success;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;138;5;141;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    success($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,139;;b1,0;;m0;;emessage;;p">
</treenode>
<treenode node="table;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;178;5;190;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    table(array $headers, array $rows)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,179;;b1,0;;m0;;eheaders;;prows;;p">
</treenode>
<treenode node="text;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;115;5;123;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    text($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,116;;b1,0;;m0;;emessage;;p">
</treenode>
<treenode node="title;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;75;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    title($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,76;;b1,0;;m0;;emessage;;p">
</treenode>
<treenode node="warning;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;154;5;157;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    warning($message)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,155;;b1,0;;m0;;emessage;;p">
</treenode>
<treenode node="write;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;321;5;331;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    write($messages, $newline = false, $type = self::OUTPUT_NORMAL)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,322;;b1,0;;m0;;emessages;;pnewline;;ptype;;p">
</treenode>
<treenode node="writeBuffer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f12;383;5;388;;;;vpos;;v;;a void;;r;;d4,384;;b3,0;;m0;;emessage;;pnewLine;;ptype;;p">
</treenode>
<treenode node="writeln;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Style\SymfonyStyle.php;f11;306;5;316;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writeln($messages, $type = self::OUTPUT_NORMAL)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,307;;b1,0;;m0;;emessages;;ptype;;p">
</treenode>
</treenode>
<treenode node="SymfonyStyleTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Style\SymfonyStyleTest.php;f0;22;1;117;;;;vpos;;v;;aTestCase;;c;;r;;d0,23;;b0,0;;m0;;e">
<treenode node="inputCommandToOutputFilesProvider;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Style\SymfonyStyleTest.php;f11;74;5;79;;;;vpos;;v;;a;;r;;d4,75;;b1,0;;m0;;e">
</treenode>
<treenode node="inputInteractiveCommandToOutputFilesProvider;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Style\SymfonyStyleTest.php;f11;67;5;72;;;;vpos;;v;;a;;r;;d4,68;;b1,0;;m0;;e">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Style\SymfonyStyleTest.php;f14;30;5;36;;;;vpos;;v;;a void;;r;;d4,31;;b2,0;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Style\SymfonyStyleTest.php;f14;38;5;43;;;;vpos;;v;;a void;;r;;d4,39;;b2,0;;m0;;e">
</treenode>
<treenode node="testGetErrorStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Style\SymfonyStyleTest.php;f11;81;5;104;;;;vpos;;v;;a;;r;;d4,82;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetErrorStyleUsesTheCurrentOutputIfNoErrorOutputIsAvailable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Style\SymfonyStyleTest.php;f11;106;5;116;;;;vpos;;v;;a;;r;;d4,107;;b1,0;;m0;;e">
</treenode>
<treenode node="testInteractiveOutputs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Style\SymfonyStyleTest.php;f11;59;5;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testInteractiveOutputs($inputCommandFilepath, $outputFilepath)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: inputInteractiveCommandToOutputFilesProvider;;d4,60;;b1,0;;m0;;einputCommandFilepath;;poutputFilepath;;p">
</treenode>
<treenode node="testOutputs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Style\SymfonyStyleTest.php;f11;48;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testOutputs($inputCommandFilepath, $outputFilepath)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: inputCommandToOutputFilesProvider;;d4,49;;b1,0;;m0;;einputCommandFilepath;;poutputFilepath;;p">
</treenode>
</treenode>
<treenode node="Table;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f0;29;1;810;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Table&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Provides helpers to display a table.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: ???? ??????????? &lt;umpirsky&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Abdellatif Ait boudad &lt;a.aitboudad&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Max Grigorian &lt;maxakawizard&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dany Maillard &lt;danymaillard93b&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,30;;b0,0;;m0;;e">
<treenode node="BORDER_INSIDE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f17;36;31;36;;;;vpos;;v;;a;;r1;;d-1,-1;;b3,5;;m0;;e">
</treenode>
<treenode node="BORDER_OUTSIDE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f17;35;32;35;;;;vpos;;v;;a;;r0;;d-1,-1;;b3,5;;m0;;e">
</treenode>
<treenode node="SEPARATOR_BOTTOM;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f17;34;34;34;;;;vpos;;v;;a;;r3;;d-1,-1;;b3,5;;m0;;e">
</treenode>
<treenode node="SEPARATOR_MID;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f17;33;31;33;;;;vpos;;v;;a;;r2;;d-1,-1;;b3,5;;m0;;e">
</treenode>
<treenode node="SEPARATOR_TOP;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f17;31;31;31;;;;vpos;;v;;a;;r0;;d-1,-1;;b3,5;;m0;;e">
</treenode>
<treenode node="SEPARATOR_TOP_BOTTOM;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f17;32;38;32;;;;vpos;;v;;a;;r1;;d-1,-1;;b3,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;90;5;99;;;;vpos;;v;;a;;r;;d4,91;;b1,0;;m0;;eoutput;;p">
</treenode>
<treenode node="addRow;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;268;5;283;;;;vpos;;v;;a;;r;;d4,269;;b1,0;;m0;;erow;;p">
</treenode>
<treenode node="addRows;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;259;5;266;;;;vpos;;v;;a;;r;;d4,260;;b1,0;;m0;;erows;;p">
</treenode>
<treenode node="appendRow;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;288;5;302;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    appendRow($row): self&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds a row to the table, and re-renders the table.;;d4,289;;b1,0;;m0;;erow;;p">
</treenode>
<treenode node="buildTableRows;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;513;5;558;;;;vpos;;v;;a;;r;;d4,514;;b3,0;;m0;;erows;;p">
</treenode>
<treenode node="calculateColumnsWidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;693;5;720;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calculateColumnsWidth(iterable $rows)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculates columns widths.;;d4,694;;b3,0;;m0;;erows;;p">
</treenode>
<treenode node="calculateNumberOfColumns;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;499;5;511;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calculateNumberOfColumns($rows)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculate number of columns for this table.;;d4,500;;b3,0;;m0;;erows;;p">
</treenode>
<treenode node="calculateRowCount;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;560;5;571;;;;vpos;;v;;a int;;r;;d4,561;;b3,0;;m0;;e">
</treenode>
<treenode node="cleanup;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;745;5;749;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    cleanup()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Called after rendering to cleanup cache data.;;d4,746;;b3,0;;m0;;e">
</treenode>
<treenode node="copyRow;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;648;5;659;;;;vpos;;v;;a array;;r;;d4,649;;b3,0;;m0;;erows;;pline;;p">
</treenode>
<treenode node="fillCells;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;632;5;646;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fillCells($row)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    fill cells for a row that contains colspan &gt; 1.;;d4,633;;b3,0;;m0;;erow;;p">
</treenode>
<treenode node="fillNextRows;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;578;5;627;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fillNextRows(array $rows, int $line): array&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    fill rows that contains rowspan &gt; 1.&#10;&lt;b&gt;throws&lt;/b&gt;: InvalidArgumentException;;d4,579;;b3,0;;m0;;erows;;pline;;p">
</treenode>
<treenode node="getCellWidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;727;5;740;;;;vpos;;v;;a int;;r;;d4,728;;b3,0;;m0;;erow;;pcolumn;;p">
</treenode>
<treenode node="getColumnSeparatorWidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;722;5;725;;;;vpos;;v;;a int;;r;;d4,723;;b3,0;;m0;;e">
</treenode>
<treenode node="getColumnStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;186;5;189;;;;vpos;;v;;aTableStyle;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getColumnStyle($columnIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the current style for a column.&#10;If style was not set, it returns the global table style.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$columnIndex&lt;/b&gt;: Column index;;d4,187;;b1,0;;m0;;eint $columnIndex;;p">
</treenode>
<treenode node="getNumberOfColumns;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;664;5;672;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNumberOfColumns(array $row): int&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets number of columns by row.;;d4,665;;b3,0;;m0;;erow;;p">
</treenode>
<treenode node="getRowColumns;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;677;5;688;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRowColumns(array $row): array&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets list of columns for the given row.;;d4,678;;b3,0;;m0;;erow;;p">
</treenode>
<treenode node="getStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;155;5;158;;;;vpos;;v;;aTableStyle;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStyle()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the current table style.;;d4,156;;b1,0;;m0;;e">
</treenode>
<treenode node="getStyleDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f18;123;5;134;;;;vpos;;v;;aTableStyle;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStyleDefinition($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets a style definition by name.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The style name;;d4,124;;b1,5;;m0;;estring $name;;p">
</treenode>
<treenode node="initStyles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f19;751;5;796;;;;vpos;;v;;a;;r;;d4,752;;b3,5;;m0;;e">
</treenode>
<treenode node="render;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;338;5;379;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    render()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Renders table to output.&#10;Example:&#10;+---------------+-----------------------+------------------+&#10;| ISBN          | Title                 | Author           |&#10;+---------------+-----------------------+------------------+&#10;| 99921-58-10-7 | Divine Comedy         | Dante Alighieri  |&#10;| 9971-5-0210-0 | A Tale of Two Cities  | Charles Dickens  |&#10;| 960-425-059-0 | The Lord of the Rings | J. R. R. Tolkien |&#10;+---------------+-----------------------+------------------+;;d4,339;;b1,0;;m0;;e">
</treenode>
<treenode node="renderCell;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;468;5;494;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    renderCell(array $row, int $column, string $cellFormat)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Renders table cell with padding.;;d4,469;;b3,0;;m0;;erow;;pcolumn;;pcellFormat;;p">
</treenode>
<treenode node="renderColumnSeparator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;439;5;444;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    renderColumnSeparator($type = self::BORDER_OUTSIDE)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Renders vertical column separator.;;d4,440;;b3,0;;m0;;etype;;p">
</treenode>
<treenode node="renderRow;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;453;5;463;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    renderRow(array $row, string $cellFormat)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Renders table row.&#10;Example:&#10;| 9971-5-0210-0 | A Tale of Two Cities  | Charles Dickens  |;;d4,454;;b3,0;;m0;;erow;;pcellFormat;;p">
</treenode>
<treenode node="renderRowSeparator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;388;5;434;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    renderRowSeparator(int $type = self::SEPARATOR_MID, string $title = null, string $titleFormat = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Renders horizontal header separator.&#10;Example:&#10;+-----+-----------+-------+;;d4,389;;b3,0;;m0;;etype;;ptitle;;ptitleFormat;;p">
</treenode>
<treenode node="resolveStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f12;798;5;809;;;;vpos;;v;;a;;r;;d4,799;;b3,0;;m0;;ename;;p">
</treenode>
<treenode node="setColumnMaxWidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;229;5;238;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setColumnMaxWidth(int $columnIndex, int $width): self&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the maximum width of a column.&#10;Any cell within this column which contents exceeds the specified width will be wrapped into multiple lines, while&#10;formatted strings are preserved.&#10;$this;;d4,230;;b1,0;;m0;;ecolumnIndex;;pwidth;;p">
</treenode>
<treenode node="setColumnStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;168;5;175;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setColumnStyle($columnIndex, $name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets table column style.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$columnIndex&lt;/b&gt;: Column index&#10;    TableStyle|string &lt;b&gt;$name&lt;/b&gt;: The style name or a TableStyle instance;;d4,169;;b1,0;;m0;;eint $columnIndex;;pTableStyle|string $name;;p">
</treenode>
<treenode node="setColumnWidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;199;5;204;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setColumnWidth($columnIndex, $width)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the minimum width of a column.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$columnIndex&lt;/b&gt;: Column index&#10;    int &lt;b&gt;$width&lt;/b&gt;: Minimum column width in characters;;d4,200;;b1,0;;m0;;eint $columnIndex;;pint $width;;p">
</treenode>
<treenode node="setColumnWidths;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;211;5;219;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setColumnWidths(array $widths)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the minimum width of all columns.&#10;$this;;d4,212;;b1,0;;m0;;ewidths;;p">
</treenode>
<treenode node="setFooterTitle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;318;5;323;;;;vpos;;v;;a self;;r;;d4,319;;b1,0;;m0;;etitle;;p">
</treenode>
<treenode node="setHeaderTitle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;311;5;316;;;;vpos;;v;;a self;;r;;d4,312;;b1,0;;m0;;etitle;;p">
</treenode>
<treenode node="setHeaders;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;240;5;250;;;;vpos;;v;;a;;r;;d4,241;;b1,0;;m0;;eheaders;;p">
</treenode>
<treenode node="setRow;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;304;5;309;;;;vpos;;v;;a;;r;;d4,305;;b1,0;;m0;;ecolumn;;prow;;p">
</treenode>
<treenode node="setRows;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;252;5;257;;;;vpos;;v;;a;;r;;d4,253;;b1,0;;m0;;erows;;p">
</treenode>
<treenode node="setStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f11;143;5;148;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setStyle($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets table style.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    TableStyle|string &lt;b&gt;$name&lt;/b&gt;: The style name or a TableStyle instance;;d4,144;;b1,0;;m0;;eTableStyle|string $name;;p">
</treenode>
<treenode node="setStyleDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\Table.php;f18;107;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setStyleDefinition($name, TableStyle $style)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets a style definition.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;: The style name&#10;    TableStyle &lt;b&gt;$style&lt;/b&gt;: A TableStyle instance;;d4,108;;b1,5;;m0;;estring $name;;pTableStyle $style;;p">
</treenode>
</treenode>
<treenode node="TableCell;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f0;343;1;349;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableCell.php;f0;18;1;67;;;;vpos;;v;;a;;r;;d0,344;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableCell.php;f11;26;5;36;;;;vpos;;v;;a;;r;;d4,27;;b1,0;;m0;;evalue;;poptions;;p">
</treenode>
<treenode node="__toString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Formatter\OutputFormatterTest.php;f11;345;5;348;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableCell.php;f11;43;5;46;;;;vpos;;v;;a;;r;;d4,346;;b1,0;;m0;;e">
</treenode>
<treenode node="getColspan;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableCell.php;f11;53;5;56;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getColspan()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets number of colspan.;;d4,54;;b1,0;;m0;;e">
</treenode>
<treenode node="getRowspan;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableCell.php;f11;63;5;66;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRowspan()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets number of rowspan.;;d4,64;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="TableRows;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableRows.php;f0;16;1;31;;;;vpos;;v;;aIteratorAggregate;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TableRows implements \IteratorAggregate&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,17;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableRows.php;f11;20;5;23;;;;vpos;;v;;a;;r;;d4,21;;b1,0;;m0;;egenerator;;p">
</treenode>
<treenode node="getIterator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableRows.php;f11;25;5;30;;;;vpos;;v;;a;;r;;d4,26;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="TableSeparator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableSeparator.php;f0;18;1;24;;;;vpos;;v;;aTableCell;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TableSeparator extends TableCell&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Marks a row as being a separator.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableSeparator.php;f11;20;5;23;;;;vpos;;v;;a;;r;;d4,21;;b1,0;;m0;;eoptions;;p">
</treenode>
</treenode>
<treenode node="TableStyle;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f0;23;1;457;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TableStyle&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Defines the styles for a Table.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: ???? ??????????? &lt;umpirsky&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dany Maillard &lt;danymaillard93b&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="getBorderChars;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;194;5;202;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBorderChars()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets border characters.&#10;&lt;b&gt;internal&lt;/b&gt;;;d4,195;;b1,0;;m0;;e">
</treenode>
<treenode node="getBorderFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;401;5;404;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBorderFormat()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets table border format.;;d4,402;;b1,0;;m0;;e">
</treenode>
<treenode node="getCellHeaderFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;329;5;332;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCellHeaderFormat()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets header cell format.;;d4,330;;b1,0;;m0;;e">
</treenode>
<treenode node="getCellRowContentFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;377;5;380;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCellRowContentFormat()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets row cell content format.;;d4,378;;b1,0;;m0;;e">
</treenode>
<treenode node="getCellRowFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;353;5;356;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCellRowFormat()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets row cell format.;;d4,354;;b1,0;;m0;;e">
</treenode>
<treenode node="getCrossingChar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;282;5;285;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCrossingChar()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets crossing character.;;d4,283;;b1,0;;m0;;e">
</treenode>
<treenode node="getCrossingChars;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;292;5;308;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCrossingChars(): array&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets crossing characters.&#10;&lt;b&gt;internal&lt;/b&gt;;;d4,293;;b1,0;;m0;;e">
</treenode>
<treenode node="getFooterTitleFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;446;5;449;;;;vpos;;v;;a string;;r;;d4,447;;b1,0;;m0;;e">
</treenode>
<treenode node="getHeaderTitleFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;434;5;437;;;;vpos;;v;;a string;;r;;d4,435;;b1,0;;m0;;e">
</treenode>
<treenode node="getHorizontalBorderChar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;126;5;131;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHorizontalBorderChar()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets horizontal border character.&#10;&lt;b&gt;deprecated&lt;/b&gt;: since Symfony 4.1, use {&#10;&lt;b&gt;link&lt;/b&gt;: getBorderChars()} instead.;;d4,127;;b1,0;;m0;;e">
</treenode>
<treenode node="getPadType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;429;5;432;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPadType()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets cell padding type.;;d4,430;;b1,0;;m0;;e">
</treenode>
<treenode node="getPaddingChar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;73;5;76;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPaddingChar()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets padding character, used for cell padding.;;d4,74;;b1,0;;m0;;e">
</treenode>
<treenode node="getVerticalBorderChar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;182;5;187;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getVerticalBorderChar()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets vertical border character.&#10;&lt;b&gt;deprecated&lt;/b&gt;: since Symfony 4.1, use {&#10;&lt;b&gt;link&lt;/b&gt;: getBorderChars()} instead.;;d4,183;;b1,0;;m0;;e">
</treenode>
<treenode node="setBorderFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;389;5;394;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setBorderFormat($borderFormat)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets table border format.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$borderFormat&lt;/b&gt;;;d4,390;;b1,0;;m0;;estring $borderFormat;;p">
</treenode>
<treenode node="setCellHeaderFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;317;5;322;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCellHeaderFormat($cellHeaderFormat)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets header cell format.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cellHeaderFormat&lt;/b&gt;;;d4,318;;b1,0;;m0;;estring $cellHeaderFormat;;p">
</treenode>
<treenode node="setCellRowContentFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;365;5;370;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCellRowContentFormat($cellRowContentFormat)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets row cell content format.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cellRowContentFormat&lt;/b&gt;;;d4,366;;b1,0;;m0;;estring $cellRowContentFormat;;p">
</treenode>
<treenode node="setCellRowFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;341;5;346;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCellRowFormat($cellRowFormat)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets row cell format.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cellRowFormat&lt;/b&gt;;;d4,342;;b1,0;;m0;;estring $cellRowFormat;;p">
</treenode>
<treenode node="setCrossingChar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;270;5;275;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCrossingChar($crossingChar)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets crossing character.&#10;$this&#10;&lt;b&gt;deprecated&lt;/b&gt;: since Symfony 4.1. Use {&#10;&lt;b&gt;link&lt;/b&gt;: setDefaultCrossingChar()} instead.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$crossingChar&lt;/b&gt;;;d4,271;;b1,0;;m0;;estring $crossingChar;;p">
</treenode>
<treenode node="setCrossingChars;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;233;5;249;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCrossingChars(string $cross, string $topLeft, string $topMid, string $topRight, string $midRight, string $bottomRight, string $bottomMid, string $bottomLeft, string $midLeft, string $topLeftBottom = null, string $topMidBottom = null, string $topRightBottom = null): self&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets crossing characters.&#10;Example:&#10;&lt;code&gt;&#10;1---------------2--------------------------2------------------3&#10;¦ ISBN          ¦ Title                    ¦ Author           ¦&#10;8&apos;--------------0&apos;-------------------------0&apos;-----------------4&apos;&#10;¦ 99921-58-10-7 ¦ Divine Comedy            ¦ Dante Alighieri  ¦&#10;¦ 9971-5-0210-0 ¦ A Tale of Two Cities     ¦ Charles Dickens  ¦&#10;8---------------0--------------------------0------------------4&#10;¦ 960-425-059-0 ¦ The Lord of the Rings    ¦ J. R. R. Tolkien ¦&#10;¦ 80-902734-1-6 ¦ And Then There Were None ¦ Agatha Christie  ¦&#10;7---------------6--------------------------6------------------5&#10;&lt;/code&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$cross&lt;/b&gt;: Crossing char (see #0 of example)&#10;    string &lt;b&gt;$topLeft&lt;/b&gt;: Top left char (see #1 of example)&#10;    string &lt;b&gt;$topMid&lt;/b&gt;: Top mid char (see #2 of example)&#10;    string &lt;b&gt;$topRight&lt;/b&gt;: Top right char (see #3 of example)&#10;    string &lt;b&gt;$midRight&lt;/b&gt;: Mid right char (see #4 of example)&#10;    string &lt;b&gt;$bottomRight&lt;/b&gt;: Bottom right char (see #5 of example)&#10;    string &lt;b&gt;$bottomMid&lt;/b&gt;: Bottom mid char (see #6 of example)&#10;    string &lt;b&gt;$bottomLeft&lt;/b&gt;: Bottom left char (see #7 of example)&#10;    string &lt;b&gt;$midLeft&lt;/b&gt;: Mid left char (see #8 of example)&#10;    string|null &lt;b&gt;$topLeftBottom&lt;/b&gt;: Top left bottom char (see #8&apos; of example), equals to $midLeft if null&#10;    string|null &lt;b&gt;$topMidBottom&lt;/b&gt;: Top mid bottom char (see #0&apos; of example), equals to $cross if null&#10;    string|null &lt;b&gt;$topRightBottom&lt;/b&gt;: Top right bottom char (see #4&apos; of example), equals to $midRight if null;;d4,234;;b1,0;;m0;;estring $cross;;pstring $topLeft;;pstring $topMid;;pstring $topRight;;pstring $midRight;;pstring $bottomRight;;pstring $bottomMid;;pstring $bottomLeft;;pstring $midLeft;;pstring|null $topLeftBottom;;pstring|null $topMidBottom;;pstring|null $topRightBottom;;p">
</treenode>
<treenode node="setDefaultCrossingChar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;256;5;259;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setDefaultCrossingChar(string $char): self&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets default crossing character used for each cross.&#10;&lt;b&gt;see&lt;/b&gt;: {&#10;&lt;b&gt;link&lt;/b&gt;: setCrossingChars()} for setting each crossing individually.;;d4,257;;b1,0;;m0;;echar;;p">
</treenode>
<treenode node="setFooterTitleFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;451;5;456;;;;vpos;;v;;a self;;r;;d4,452;;b1,0;;m0;;eformat;;p">
</treenode>
<treenode node="setHeaderTitleFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;439;5;444;;;;vpos;;v;;a self;;r;;d4,440;;b1,0;;m0;;eformat;;p">
</treenode>
<treenode node="setHorizontalBorderChar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;112;5;117;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHorizontalBorderChar($horizontalBorderChar)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets horizontal border character.&#10;$this&#10;&lt;b&gt;deprecated&lt;/b&gt;: since Symfony 4.1, use {&#10;&lt;b&gt;link&lt;/b&gt;: setHorizontalBorderChars()} instead.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$horizontalBorderChar&lt;/b&gt;;;d4,113;;b1,0;;m0;;estring $horizontalBorderChar;;p">
</treenode>
<treenode node="setHorizontalBorderChars;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;95;5;101;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setHorizontalBorderChars(string $outside, string $inside = null): self&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets horizontal border characters.&#10;&lt;code&gt;&#10;+-------------------------------------------------------------+&#10;1 ISBN          2 Title                    ¦ Author           ¦&#10;¦---------------+--------------------------+------------------¦&#10;¦ 99921-58-10-7 ¦ Divine Comedy            ¦ Dante Alighieri  ¦&#10;¦ 9971-5-0210-0 ¦ A Tale of Two Cities     ¦ Charles Dickens  ¦&#10;¦ 960-425-059-0 ¦ The Lord of the Rings    ¦ J. R. R. Tolkien ¦&#10;¦ 80-902734-1-6 ¦ And Then There Were None ¦ Agatha Christie  ¦&#10;+-------------------------------------------------------------+&#10;&lt;/code&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$outside&lt;/b&gt;: Outside border char (see #1 of example)&#10;    string|null &lt;b&gt;$inside&lt;/b&gt;: Inside border char (see #2 of example), equals $outside if null;;d4,96;;b1,0;;m0;;estring $outside;;pstring|null $inside;;p">
</treenode>
<treenode node="setPadType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;413;5;422;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPadType($padType)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets cell padding type.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$padType&lt;/b&gt;: STR_PAD_*;;d4,414;;b1,0;;m0;;eint $padType;;p">
</treenode>
<treenode node="setPaddingChar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;57;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPaddingChar($paddingChar)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets padding character, used for cell padding.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$paddingChar&lt;/b&gt;;;d4,58;;b1,0;;m0;;estring $paddingChar;;p">
</treenode>
<treenode node="setVerticalBorderChar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;168;5;173;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setVerticalBorderChar($verticalBorderChar)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets vertical border character.&#10;$this&#10;&lt;b&gt;deprecated&lt;/b&gt;: since Symfony 4.1, use {&#10;&lt;b&gt;link&lt;/b&gt;: setVerticalBorderChars()} instead.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$verticalBorderChar&lt;/b&gt;;;d4,169;;b1,0;;m0;;estring $verticalBorderChar;;p">
</treenode>
<treenode node="setVerticalBorderChars;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Helper\TableStyle.php;f11;151;5;157;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setVerticalBorderChars(string $outside, string $inside = null): self&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets vertical border characters.&#10;&lt;code&gt;&#10;+-------------------------------------------------------------+&#10;¦ ISBN          ¦ Title                    ¦ Author           ¦&#10;¦-------1-------+--------------------------+------------------¦&#10;¦ 99921-58-10-7 ¦ Divine Comedy            ¦ Dante Alighieri  ¦&#10;¦ 9971-5-0210-0 ¦ A Tale of Two Cities     ¦ Charles Dickens  ¦&#10;¦-------2-------+--------------------------+------------------¦&#10;¦ 960-425-059-0 ¦ The Lord of the Rings    ¦ J. R. R. Tolkien ¦&#10;¦ 80-902734-1-6 ¦ And Then There Were None ¦ Agatha Christie  ¦&#10;+-------------------------------------------------------------+&#10;&lt;/code&gt;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$outside&lt;/b&gt;: Outside border char (see #1 of example)&#10;    string|null &lt;b&gt;$inside&lt;/b&gt;: Inside border char (see #2 of example), equals $outside if null;;d4,152;;b1,0;;m0;;estring $outside;;pstring|null $inside;;p">
</treenode>
</treenode>
<treenode node="TableStyleTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableStyleTest.php;f0;16;1;25;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="testSetPadTypeWithInvalidType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableStyleTest.php;f11;18;5;24;;;;vpos;;v;;a;;r;;d4,19;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="TableTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f0;22;1;1190;;;;vpos;;v;;aTestCase;;c;;r;;d0,23;;b0,0;;m0;;e">
<treenode node="getOutputContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f14;1132;5;1137;;;;vpos;;v;;a;;r;;d4,1133;;b2,0;;m0;;eoutput;;p">
</treenode>
<treenode node="getOutputStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f14;1127;5;1130;;;;vpos;;v;;a;;r;;d4,1128;;b2,0;;m0;;edecorated;;p">
</treenode>
<treenode node="renderProvider;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;87;5;588;;;;vpos;;v;;a;;r;;d4,88;;b1,0;;m0;;e">
</treenode>
<treenode node="renderSetTitle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;990;5;1042;;;;vpos;;v;;a;;r;;d4,991;;b1,0;;m0;;e">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f14;26;5;29;;;;vpos;;v;;a void;;r;;d4,27;;b2,0;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f14;31;5;35;;;;vpos;;v;;a void;;r;;d4,32;;b2,0;;m0;;e">
</treenode>
<treenode node="testAppendRowWithoutSectionOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;944;5;951;;;;vpos;;v;;a;;r;;d4,945;;b1,0;;m0;;e">
</treenode>
<treenode node="testBoxedStyleWithColspan;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;1091;5;1125;;;;vpos;;v;;a;;r;;d4,1092;;b1,0;;m0;;e">
</treenode>
<treenode node="testColumnMaxWidths;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;1044;5;1069;;;;vpos;;v;;a;;r;;d4,1045;;b1,0;;m0;;e">
</treenode>
<treenode node="testColumnMaxWidthsWithTrailingBackslash;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;1071;5;1089;;;;vpos;;v;;a;;r;;d4,1072;;b1,0;;m0;;e">
</treenode>
<treenode node="testColumnStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;739;5;767;;;;vpos;;v;;a;;r;;d4,740;;b1,0;;m0;;e">
</treenode>
<treenode node="testColumnWidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;783;5;813;;;;vpos;;v;;a;;r;;d4,784;;b1,0;;m0;;e">
</treenode>
<treenode node="testColumnWidths;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;815;5;844;;;;vpos;;v;;a;;r;;d4,816;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetStyleDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;961;5;966;;;;vpos;;v;;a;;r;;d4,962;;b1,0;;m0;;e">
</treenode>
<treenode node="testIsNotDefinedStyleException;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;953;5;959;;;;vpos;;v;;a;;r;;d4,954;;b1,0;;m0;;e">
</treenode>
<treenode node="testRender;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;40;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testRender($headers, $rows, $style, $expected, $decorated = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: renderProvider;;d4,41;;b1,0;;m0;;eheaders;;prows;;pstyle;;pexpected;;pdecorated;;p">
</treenode>
<treenode node="testRenderAddRows;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;56;5;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testRenderAddRows($headers, $rows, $style, $expected, $decorated = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: renderProvider;;d4,57;;b1,0;;m0;;eheaders;;prows;;pstyle;;pexpected;;pdecorated;;p">
</treenode>
<treenode node="testRenderAddRowsOneByOne;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;72;5;85;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testRenderAddRowsOneByOne($headers, $rows, $style, $expected, $decorated = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: renderProvider;;d4,73;;b1,0;;m0;;eheaders;;prows;;pstyle;;pexpected;;pdecorated;;p">
</treenode>
<treenode node="testRenderMultiByte;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;590;5;611;;;;vpos;;v;;a;;r;;d4,591;;b1,0;;m0;;e">
</treenode>
<treenode node="testRenderMultiCalls;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;712;5;737;;;;vpos;;v;;a;;r;;d4,713;;b1,0;;m0;;e">
</treenode>
<treenode node="testRowSeparator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;679;5;710;;;;vpos;;v;;a;;r;;d4,680;;b1,0;;m0;;e">
</treenode>
<treenode node="testSectionOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;846;5;879;;;;vpos;;v;;a;;r;;d4,847;;b1,0;;m0;;e">
</treenode>
<treenode node="testSectionOutputDoesntClearIfTableIsntRendered;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;881;5;907;;;;vpos;;v;;a;;r;;d4,882;;b1,0;;m0;;e">
</treenode>
<treenode node="testSectionOutputWithoutDecoration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;909;5;942;;;;vpos;;v;;a;;r;;d4,910;;b1,0;;m0;;e">
</treenode>
<treenode node="testSetTitle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;971;5;988;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testSetTitle($headerTitle, $footerTitle, $style, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: renderSetTitle;;d4,972;;b1,0;;m0;;eheaderTitle;;pfooterTitle;;pstyle;;pexpected;;p">
</treenode>
<treenode node="testStyle;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;649;5;677;;;;vpos;;v;;a;;r;;d4,650;;b1,0;;m0;;e">
</treenode>
<treenode node="testTableCellWithNumericFloatValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;631;5;647;;;;vpos;;v;;a;;r;;d4,632;;b1,0;;m0;;e">
</treenode>
<treenode node="testTableCellWithNumericIntValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;613;5;629;;;;vpos;;v;;a;;r;;d4,614;;b1,0;;m0;;e">
</treenode>
<treenode node="testThrowsWhenTheCellInAnArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;769;5;781;;;;vpos;;v;;a;;r;;d4,770;;b1,0;;m0;;e">
</treenode>
<treenode node="testWithColspanAndMaxWith;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Helper\TableTest.php;f11;1139;5;1189;;;;vpos;;v;;a void;;r;;d4,1140;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Tag;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Tag.php;f0;21;1;112;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Tag&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This represents a tag, as defined by the proposed PSR PHPDoc standard.&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Tag.php;f11;54;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(Line $line)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create a new tag instance.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Line &lt;b&gt;$line&lt;/b&gt;;;d4,55;;b1,0;;m0;;eLine $line;;p">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Tag.php;f11;66;5;79;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the tag name.&#10;This may be &quot;param&quot;, or &quot;return&quot;, etc.;;d4,67;;b1,0;;m0;;e">
</treenode>
<treenode node="setName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Tag.php;f11;88;5;99;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setName($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the tag name.&#10;This will also be persisted to the upsteam line and annotation.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d4,89;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="valid;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\Tag.php;f11;108;5;111;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    valid()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Is the tag a known tag?&#10;This is defined by if it exists in the proposed PSR PHPDoc standard.;;d4,109;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="TagComparator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\TagComparator.php;f0;20;1;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TagComparator&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This class is responsible for comparing tags to see if they should be kept&#10;together, or kept apart.&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="shouldBeTogether;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\DocBlock\TagComparator.php;f18;42;5;58;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    shouldBeTogether(Tag $first, Tag $second)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Should the given tags be kept together, or kept apart?&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tag &lt;b&gt;$first&lt;/b&gt;&#10;    Tag &lt;b&gt;$second&lt;/b&gt;;;d4,43;;b1,5;;m0;;eTag $first;;pTag $second;;p">
</treenode>
</treenode>
<treenode node="Target;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\Target.php;f6;30;1;106;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Target&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Annotation that can be used to signal to the parser&#10;to check the annotation target during the parsing process.&#10;&lt;b&gt;author&lt;/b&gt;: Fabio B. Silva &lt;fabio.bat.silva&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;Annotation&lt;/b&gt;;;d0,31;;b0,0;;m0;;e">
<treenode node="TARGET_ALL;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\Target.php;f9;36;20;36;;;;vpos;;v;;a;;r15;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="TARGET_ANNOTATION;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\Target.php;f9;35;27;35;;;;vpos;;v;;a;;r8;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="TARGET_CLASS;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\Target.php;f9;32;22;32;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="TARGET_METHOD;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\Target.php;f9;33;23;33;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="TARGET_PROPERTY;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\Target.php;f9;34;25;34;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\Annotation\Target.php;f11;75;5;105;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(array $values)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Annotation constructor.&#10;&lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$values&lt;/b&gt;;;d4,76;;b1,0;;m0;;earray $values;;p">
</treenode>
</treenode>
<treenode node="Terminal;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Terminal.php;f0;13;1;162;;;;vpos;;v;;a;;r;;d0,14;;b0,0;;m0;;e">
<treenode node="getConsoleMode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Terminal.php;f19;113;5;122;;;;vpos;;v;;aint[]|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getConsoleMode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runs and parses mode CON if it&apos;s available, suppressing any error output.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An array composed of the width and the height or null if it could not be parsed;;d4,114;;b3,5;;m0;;e">
</treenode>
<treenode node="getHeight;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Terminal.php;f11;43;5;55;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getHeight()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the terminal height.;;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="getSttyColumns;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Terminal.php;f19;129;5;132;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSttyColumns()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runs and parses stty -a if it&apos;s available, suppressing any error output.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,130;;b3,5;;m0;;e">
</treenode>
<treenode node="getWidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Terminal.php;f11;24;5;36;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getWidth()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the terminal width.;;d4,25;;b1,0;;m0;;e">
</treenode>
<treenode node="hasSttyAvailable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Terminal.php;f18;62;5;71;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasSttyAvailable()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d4,63;;b1,5;;m0;;e">
</treenode>
<treenode node="initDimensions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Terminal.php;f19;73;5;91;;;;vpos;;v;;a;;r;;d4,74;;b3,5;;m0;;e">
</treenode>
<treenode node="initDimensionsUsingStty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Terminal.php;f19;93;5;106;;;;vpos;;v;;a;;r;;d4,94;;b3,5;;m0;;e">
</treenode>
<treenode node="readFromProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Terminal.php;f19;139;5;161;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    readFromProcess($command)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$command&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,140;;b3,5;;m0;;estring $command;;p">
</treenode>
</treenode>
<treenode node="TerminalTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\TerminalTest.php;f0;16;1;96;;;;vpos;;v;;aTestCase;;c;;r;;d0,17;;b0,0;;m0;;e">
<treenode node="resetStatics;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\TerminalTest.php;f12;38;5;45;;;;vpos;;v;;a;;r;;d4,39;;b3,0;;m0;;e">
</treenode>
<treenode node="setUp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\TerminalTest.php;f14;22;5;28;;;;vpos;;v;;a void;;r;;d4,23;;b2,0;;m0;;e">
</treenode>
<treenode node="tearDown;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\TerminalTest.php;f14;30;5;36;;;;vpos;;v;;a void;;r;;d4,31;;b2,0;;m0;;e">
</treenode>
<treenode node="test;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\TerminalTest.php;f11;47;5;60;;;;vpos;;v;;a;;r;;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="testSttyOnWindows;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\TerminalTest.php;f11;73;5;95;;;;vpos;;v;;a;;r;;d4,74;;b1,0;;m0;;e">
</treenode>
<treenode node="test_zero_values;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\TerminalTest.php;f11;62;5;71;;;;vpos;;v;;a;;r;;d4,63;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="TernaryOperatorSpacesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\TernaryOperatorSpacesFixer.php;f6;23;1;111;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TernaryOperatorSpacesFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\TernaryOperatorSpacesFixer.php;f14;47;5;88;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="ensureWhitespaceExistence;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\TernaryOperatorSpacesFixer.php;f12;95;5;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ensureWhitespaceExistence(Tokens $tokens, $index, $after)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    bool &lt;b&gt;$after&lt;/b&gt;;;d4,96;;b3,0;;m0;;eTokens $tokens;;pint $index;;pbool $after;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\TernaryOperatorSpacesFixer.php;f11;28;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\TernaryOperatorSpacesFixer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="TernaryToNullCoalescingFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\TernaryToNullCoalescingFixer.php;f6;24;1;217;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TernaryToNullCoalescingFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Filippo Tessarotto &lt;zoeslam&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\TernaryToNullCoalescingFixer.php;f14;53;5;59;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,54;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixIsset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\TernaryToNullCoalescingFixer.php;f12;65;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixIsset(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: of `T_ISSET` token;;d4,66;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\TernaryToNullCoalescingFixer.php;f11;29;5;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="getMeaningfulSequence;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\TernaryToNullCoalescingFixer.php;f12;125;5;139;;;;vpos;;v;;aTokens;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMeaningfulSequence(Tokens $tokens, $start, $end)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the sequence of meaningful tokens and returns a new Tokens instance.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;: start index&#10;    int &lt;b&gt;$end&lt;/b&gt;: end index;;d4,126;;b3,0;;m0;;eTokens $tokens;;pint $start;;pint $end;;p">
</treenode>
<treenode node="hasChangingContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\TernaryToNullCoalescingFixer.php;f12;200;5;216;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasChangingContent(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the `isset()` content may change if called multiple times.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: The original token list;;d4,201;;b3,0;;m0;;eTokens $tokens;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\TernaryToNullCoalescingFixer.php;f11;45;5;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,46;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isHigherPrecedenceAssociativityOperator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\TernaryToNullCoalescingFixer.php;f12;149;5;191;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isHigherPrecedenceAssociativityOperator(Token $token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the requested token is an operator computed&#10;before the ternary operator along with the `isset()`.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Token &lt;b&gt;$token&lt;/b&gt;;;d4,150;;b3,0;;m0;;eToken $token;;p">
</treenode>
</treenode>
<treenode node="TestAmbiguousCommandRegistering;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\TestAmbiguousCommandRegistering.php;f0;6;1;21;;;;vpos;;v;;aCommand;;c;;r;;d0,7;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\TestAmbiguousCommandRegistering.php;f14;8;5;15;;;;vpos;;v;;a;;r;;d4,9;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\TestAmbiguousCommandRegistering.php;f14;17;5;20;;;;vpos;;v;;a;;r;;d4,18;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="TestAmbiguousCommandRegistering2;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\TestAmbiguousCommandRegistering2.php;f0;6;1;20;;;;vpos;;v;;aCommand;;c;;r;;d0,7;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\TestAmbiguousCommandRegistering2.php;f14;8;5;14;;;;vpos;;v;;a;;r;;d4,9;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\TestAmbiguousCommandRegistering2.php;f14;16;5;19;;;;vpos;;v;;a;;r;;d4,17;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="TestCase;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\tests\TestCase.php;f13;27;5;47;;;;vpos;;v;;aBaseTestCase;;cExpectationViaCodeOverAnnotationTrait;;cExpectOverSetExceptionTrait;;cIdentityOverEqualityTrait;;cProphecyOverMockObjectTrait;;cProphesizeOnlyInterfaceTrait;;cBaseTestCase;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TestCase extends BaseTestCase&#10;    {&#10;        use ExpectationViaCodeOverAnnotationTrait;s&#10;        use ExpectOverSetExceptionTrait;s&#10;        use IdentityOverEqualityTrait;s&#10;        use ProphecyOverMockObjectTrait;s&#10;        use ProphesizeOnlyInterfaceTrait;s&#10;    }&#10;} else {&#10;    /**&#10;     * Version without traits for cases when this class is used as a lib.&#10;     *&#10;     * @author Dariusz Ruminski &lt;dariusz.ruminski@gmail.com&gt;&#10;     *&#10;     * @internal&#10;     *&#10;     * @todo 3.0 To be removed when we clean up composer prod-autoloader from dev-packages.&#10;     */&#10;    abstract class TestCase extends BaseTestCase&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d4,46;;b0,0;;m0;;e">
</treenode>
<treenode node="TestCommand;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\TestCommand.php;f0;6;1;27;;;;vpos;;v;;aCommand;;c;;r;;d0,7;;b0,0;;m0;;e">
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\TestCommand.php;f14;8;5;16;;;;vpos;;v;;a;;r;;d4,9;;b2,0;;m0;;e">
</treenode>
<treenode node="execute;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\TestCommand.php;f14;18;5;21;;;;vpos;;v;;a;;r;;d4,19;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
<treenode node="interact;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Fixtures\TestCommand.php;f14;23;5;26;;;;vpos;;v;;a;;r;;d4,24;;b2,0;;m0;;einput;;poutput;;p">
</treenode>
</treenode>
<treenode node="TestEventListener;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f0;448;1;468;;;;vpos;;v;;a;;r;;d0,449;;b0,0;;m0;;e">
<treenode node="postFoo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;460;5;467;;;;vpos;;v;;a;;r;;d4,461;;b1,0;;m0;;ee;;p">
</treenode>
<treenode node="preFoo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;455;5;458;;;;vpos;;v;;a;;r;;d4,456;;b1,0;;m0;;ee;;p">
</treenode>
</treenode>
<treenode node="TestEventSubscriber;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f0;482;1;488;;;;vpos;;v;;aEventSubscriberInterface;;c;;r;;d0,483;;b0,0;;m0;;e">
<treenode node="getSubscribedEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f18;484;5;487;;;;vpos;;v;;a;;r;;d4,485;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="TestEventSubscriberWithMultipleListeners;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f0;501;1;510;;;;vpos;;v;;aEventSubscriberInterface;;c;;r;;d0,502;;b0,0;;m0;;e">
<treenode node="getSubscribedEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f18;503;5;509;;;;vpos;;v;;a;;r;;d4,504;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="TestEventSubscriberWithPriorities;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f0;490;1;499;;;;vpos;;v;;aEventSubscriberInterface;;c;;r;;d0,491;;b0,0;;m0;;e">
<treenode node="getSubscribedEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f18;492;5;498;;;;vpos;;v;;a;;r;;d4,493;;b1,5;;m0;;e">
</treenode>
</treenode>
<treenode node="TestLegacyEventDispatcher;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\LegacyEventDispatcherTest.php;f0;56;1;62;;;;vpos;;v;;aEventDispatcher;;c;;r;;d0,57;;b0,0;;m0;;e">
<treenode node="dispatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\LegacyEventDispatcherTest.php;f11;58;5;61;;;;vpos;;v;;a;;r;;d4,59;;b1,0;;m0;;eeventName;;pevent;;p">
</treenode>
</treenode>
<treenode node="TestLogger;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\TestLogger.php;f0;56;1;145;;;;vpos;;v;;aAbstractLogger;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TestLogger extends AbstractLogger&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Used for testing purposes.&#10;It records all records and gives you access to them for verification.&#10;&lt;b&gt;method&lt;/b&gt;: bool hasEmergency($record)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasAlert($record)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasCritical($record)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasError($record)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasWarning($record)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasNotice($record)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasInfo($record)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasDebug($record)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasEmergencyRecords()&#10;&lt;b&gt;method&lt;/b&gt;: bool hasAlertRecords()&#10;&lt;b&gt;method&lt;/b&gt;: bool hasCriticalRecords()&#10;&lt;b&gt;method&lt;/b&gt;: bool hasErrorRecords()&#10;&lt;b&gt;method&lt;/b&gt;: bool hasWarningRecords()&#10;&lt;b&gt;method&lt;/b&gt;: bool hasNoticeRecords()&#10;&lt;b&gt;method&lt;/b&gt;: bool hasInfoRecords()&#10;&lt;b&gt;method&lt;/b&gt;: bool hasDebugRecords()&#10;&lt;b&gt;method&lt;/b&gt;: bool hasEmergencyThatContains($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasAlertThatContains($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasCriticalThatContains($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasErrorThatContains($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasWarningThatContains($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasNoticeThatContains($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasInfoThatContains($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasDebugThatContains($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasEmergencyThatMatches($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasAlertThatMatches($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasCriticalThatMatches($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasErrorThatMatches($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasWarningThatMatches($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasNoticeThatMatches($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasInfoThatMatches($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasDebugThatMatches($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasEmergencyThatPasses($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasAlertThatPasses($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasCriticalThatPasses($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasErrorThatPasses($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasWarningThatPasses($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasNoticeThatPasses($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasInfoThatPasses($message)&#10;&lt;b&gt;method&lt;/b&gt;: bool hasDebugThatPasses($message);;d0,57;;b0,0;;m0;;e">
<treenode node="__call;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\TestLogger.php;f11;128;5;139;;;;vpos;;v;;a;;r;;d4,129;;b1,0;;m0;;emethod;;pargs;;p">
</treenode>
<treenode node="hasRecord;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\TestLogger.php;f11;85;5;99;;;;vpos;;v;;a;;r;;d4,86;;b1,0;;m0;;erecord;;plevel;;p">
</treenode>
<treenode node="hasRecordThatContains;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\TestLogger.php;f11;101;5;106;;;;vpos;;v;;a;;r;;d4,102;;b1,0;;m0;;emessage;;plevel;;p">
</treenode>
<treenode node="hasRecordThatMatches;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\TestLogger.php;f11;108;5;113;;;;vpos;;v;;a;;r;;d4,109;;b1,0;;m0;;eregex;;plevel;;p">
</treenode>
<treenode node="hasRecordThatPasses;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\TestLogger.php;f11;115;5;126;;;;vpos;;v;;a;;r;;d4,116;;b1,0;;m0;;epredicate;;plevel;;p">
</treenode>
<treenode node="hasRecords;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\TestLogger.php;f11;80;5;83;;;;vpos;;v;;a;;r;;d4,81;;b1,0;;m0;;elevel;;p">
</treenode>
<treenode node="log;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\TestLogger.php;f11;68;5;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    log($level, $message, array $context = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;inheritdoc&lt;/b&gt;;;d4,69;;b1,0;;m0;;elevel;;pmessage;;pcontext;;p">
</treenode>
<treenode node="reset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\psr\log\Psr\Log\Test\TestLogger.php;f11;141;5;144;;;;vpos;;v;;a;;r;;d4,142;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="TestMultiplePcreFilterIterator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MultiplePcreFilterIteratorTest.php;f0;50;1;70;;;;vpos;;v;;aMultiplePcreFilterIterator;;c;;r;;d0,51;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MultiplePcreFilterIteratorTest.php;f11;52;5;54;;;;vpos;;v;;a;;r;;d4,53;;b1,0;;m0;;e">
</treenode>
<treenode node="accept;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MultiplePcreFilterIteratorTest.php;f11;56;5;59;;;;vpos;;v;;a;;r;;d4,57;;b1,0;;m0;;e">
</treenode>
<treenode node="isRegex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MultiplePcreFilterIteratorTest.php;f11;61;5;64;;;;vpos;;v;;a;;r;;d4,62;;b1,0;;m0;;estr;;p">
</treenode>
<treenode node="toRegex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\finder\Tests\Iterator\MultiplePcreFilterIteratorTest.php;f11;66;5;69;;;;vpos;;v;;a;;r;;d4,67;;b1,0;;m0;;estr;;p">
</treenode>
</treenode>
<treenode node="TestOutput;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f0;175;1;188;;;;vpos;;v;;aOutput;;c;;r;;d0,176;;b0,0;;m0;;e">
<treenode node="clear;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f11;179;5;182;;;;vpos;;v;;a;;r;;d4,180;;b1,0;;m0;;e">
</treenode>
<treenode node="doWrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Output\OutputTest.php;f14;184;5;187;;;;vpos;;v;;a;;r;;d4,185;;b2,0;;m0;;emessage;;pnewline;;p">
</treenode>
</treenode>
<treenode node="TestWithDispatcher;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f0;470;1;480;;;;vpos;;v;;a;;r;;d0,471;;b0,0;;m0;;e">
<treenode node="foo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\EventDispatcherTest.php;f11;475;5;479;;;;vpos;;v;;a;;r;;d4,476;;b1,0;;m0;;ee;;pname;;pdispatcher;;p">
</treenode>
</treenode>
<treenode node="TesterTrait;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\TesterTrait.php;f0;21;1;176;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    trait TesterTrait&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Amrouche Hamza &lt;hamza.simperfit&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="createStream;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\TesterTrait.php;f19;164;5;175;;;;vpos;;v;;a;;r;;d4,165;;b3,5;;m0;;einputs;;p">
</treenode>
<treenode node="getDisplay;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\TesterTrait.php;f11;35;5;50;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDisplay($normalize = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the display returned by the last execution of the command or application.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$normalize&lt;/b&gt;: Whether to normalize end of lines to \n or not&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The display;;d4,36;;b1,0;;m0;;ebool $normalize;;p">
</treenode>
<treenode node="getErrorOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\TesterTrait.php;f11;59;5;74;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getErrorOutput($normalize = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the output written to STDERR by the application.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$normalize&lt;/b&gt;: Whether to normalize end of lines to \n or not;;d4,60;;b1,0;;m0;;ebool $normalize;;p">
</treenode>
<treenode node="getInput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\TesterTrait.php;f11;81;5;84;;;;vpos;;v;;aInputInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getInput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the input instance used by the last execution of the command or application.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The current input instance;;d4,82;;b1,0;;m0;;e">
</treenode>
<treenode node="getOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\TesterTrait.php;f11;91;5;94;;;;vpos;;v;;aOutputInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOutput()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the output instance used by the last execution of the command or application.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The current output instance;;d4,92;;b1,0;;m0;;e">
</treenode>
<treenode node="getStatusCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\TesterTrait.php;f11;101;5;104;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStatusCode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the status code returned by the last execution of the command or application.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The status code;;d4,102;;b1,0;;m0;;e">
</treenode>
<treenode node="initOutput;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\TesterTrait.php;f12;130;5;162;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    initOutput(array $options)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Initializes the output property.&#10;Available options:&#10;* decorated:                 Sets the output decorated flag&#10;* verbosity:                 Sets the output verbosity flag&#10;* capture_stderr_separately: Make output of stdOut and stdErr separately available;;d4,131;;b3,0;;m0;;eoptions;;p">
</treenode>
<treenode node="setInputs;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tester\TesterTrait.php;f11;114;5;119;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setInputs(array $inputs)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the user inputs.&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$inputs&lt;/b&gt;: An array of strings representing each input passed to the command input stream;;d4,115;;b1,0;;m0;;earray $inputs;;p">
</treenode>
</treenode>
<treenode node="TextDescriptor;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\TextDescriptor.php;f0;28;1;341;;;;vpos;;v;;aDescriptor;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TextDescriptor extends Descriptor&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Text descriptor.&#10;&lt;b&gt;author&lt;/b&gt;: Jean-François Simon &lt;contact&#10;&lt;b&gt;jfsimon&lt;/b&gt;: .fr&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="calculateTotalWidthForOptions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\TextDescriptor.php;f12;323;5;340;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calculateTotalWidthForOptions(array $options): int&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    InputOption[] &lt;b&gt;$options&lt;/b&gt;;;d4,324;;b3,0;;m0;;eInputOption[] $options;;p">
</treenode>
<treenode node="describeApplication;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\TextDescriptor.php;f14;176;5;247;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeApplication(Application $application, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,177;;b2,0;;m0;;eapplication;;poptions;;p">
</treenode>
<treenode node="describeCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\TextDescriptor.php;f14;136;5;171;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeCommand(Command $command, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,137;;b2,0;;m0;;ecommand;;poptions;;p">
</treenode>
<treenode node="describeInputArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\TextDescriptor.php;f14;33;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeInputArgument(InputArgument $argument, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,34;;b2,0;;m0;;eargument;;poptions;;p">
</treenode>
<treenode node="describeInputDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\TextDescriptor.php;f14;94;5;131;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeInputDefinition(InputDefinition $definition, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,95;;b2,0;;m0;;edefinition;;poptions;;p">
</treenode>
<treenode node="describeInputOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\TextDescriptor.php;f14;56;5;89;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeInputOption(InputOption $option, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b2,0;;m0;;eoption;;poptions;;p">
</treenode>
<treenode node="formatDefaultValue;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\TextDescriptor.php;f12;280;5;297;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    formatDefaultValue($default): string&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats input option/argument default value.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed &lt;b&gt;$default&lt;/b&gt;;;d4,281;;b3,0;;m0;;emixed $default;;p">
</treenode>
<treenode node="getColumnWidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\TextDescriptor.php;f12;302;5;318;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getColumnWidth(array $commands): int&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    (Command|string)[] $commands&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    ;;d4,303;;b3,0;;m0;;e;;p">
</treenode>
<treenode node="getCommandAliasesText;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\TextDescriptor.php;f12;263;5;273;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommandAliasesText(Command $command): string&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Formats command aliases to show them in the command description.;;d4,264;;b3,0;;m0;;ecommand;;p">
</treenode>
<treenode node="writeText;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\TextDescriptor.php;f12;252;5;258;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writeText($content, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,253;;b3,0;;m0;;econtent;;poptions;;p">
</treenode>
</treenode>
<treenode node="TextDescriptorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\TextDescriptorTest.php;f0;18;1;52;;;;vpos;;v;;aAbstractDescriptorTest;;c;;r;;d0,19;;b0,0;;m0;;e">
<treenode node="getDescribeApplicationTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\TextDescriptorTest.php;f11;28;5;34;;;;vpos;;v;;a;;r;;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescribeCommandTestData;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\TextDescriptorTest.php;f11;20;5;26;;;;vpos;;v;;a;;r;;d4,21;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescriptor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\TextDescriptorTest.php;f14;43;5;46;;;;vpos;;v;;a;;r;;d4,44;;b2,0;;m0;;e">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\TextDescriptorTest.php;f14;48;5;51;;;;vpos;;v;;a;;r;;d4,49;;b2,0;;m0;;e">
</treenode>
<treenode node="testDescribeApplicationWithFilteredNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\TextDescriptorTest.php;f11;36;5;41;;;;vpos;;v;;a;;r;;d4,37;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="TextReporter;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\TextReporter.php;f6;21;1;109;;;;vpos;;v;;aReporterInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TextReporter implements ReporterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Boris Gorbylev &lt;ekho&#10;&lt;b&gt;ekho&lt;/b&gt;: .name&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="generate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\TextReporter.php;f11;34;5;52;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    generate(ReportSummary $reportSummary)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;ereportSummary;;p">
</treenode>
<treenode node="getAppliedFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\TextReporter.php;f12;60;5;66;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAppliedFixers($isDecoratedOutput, array $fixResult)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$isDecoratedOutput&lt;/b&gt;&#10;    array &lt;b&gt;$fixResult&lt;/b&gt;;;d4,61;;b3,0;;m0;;ebool $isDecoratedOutput;;parray $fixResult;;p">
</treenode>
<treenode node="getDiff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\TextReporter.php;f12;74;5;87;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDiff($isDecoratedOutput, array $fixResult)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$isDecoratedOutput&lt;/b&gt;&#10;    array &lt;b&gt;$fixResult&lt;/b&gt;;;d4,75;;b3,0;;m0;;ebool $isDecoratedOutput;;parray $fixResult;;p">
</treenode>
<treenode node="getFooter;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\TextReporter.php;f12;96;5;108;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFooter($time, $memory, $isDryRun)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$time&lt;/b&gt;&#10;    int &lt;b&gt;$memory&lt;/b&gt;&#10;    bool &lt;b&gt;$isDryRun&lt;/b&gt;;;d4,97;;b3,0;;m0;;eint $time;;pint $memory;;pbool $isDryRun;;p">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\TextReporter.php;f11;26;5;29;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormat()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,27;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="TimeEfficientImplementation;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\LCS\TimeEfficientLongestCommonSubsequenceImplementation.php;f0;15;1;73;;;;vpos;;v;;aLongestCommonSubsequence;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TimeEfficientImplementation implements LongestCommonSubsequence&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Time-efficient implementation of longest common subsequence calculation.;;d0,16;;b0,0;;m0;;e">
<treenode node="calculate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v1_4\LCS\TimeEfficientLongestCommonSubsequenceImplementation.php;f11;25;5;72;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calculate(array $from, array $to)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculates the longest common subsequence of two arrays.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$from&lt;/b&gt;&#10;    array &lt;b&gt;$to&lt;/b&gt;;;d4,26;;b1,0;;m0;;earray $from;;parray $to;;p">
</treenode>
</treenode>
<treenode node="TimeEfficientLongestCommonSubsequenceCalculator;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\TimeEfficientLongestCommonSubsequenceCalculator.php;f6;12;1;65;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\TimeEfficientLongestCommonSubsequenceCalculator.php;f6;12;1;65;;;;vpos;;v;;aLongestCommonSubsequenceCalculator;;c;;r;;d0,13;;b0,0;;m0;;e">
<treenode node="calculate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\TimeEfficientLongestCommonSubsequenceCalculator.php;f11;17;5;64;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\TimeEfficientLongestCommonSubsequenceCalculator.php;f11;17;5;64;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calculate(array $from, array $to)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,18;;b1,0;;m0;;efrom;;pto;;p">
</treenode>
</treenode>
<treenode node="Token;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f0;22;1;617;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Token.php;f6;21;1;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Token&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Representation of single token.&#10;As a token prototype you should understand a single element generated by token_get_all.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;55;5;92;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Token.php;f11;37;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($token)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array|string &lt;b&gt;$token&lt;/b&gt;: token prototype;;d4,56;;b1,0;;m0;;earray|string $token;;p">
</treenode>
<treenode node="clear;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;123;5;131;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Token.php;f11;94;5;97;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clear()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clear token at given index.&#10;Clearing means override token by empty string.&#10;&lt;b&gt;deprecated&lt;/b&gt;: since 2.4;;d4,124;;b1,0;;m0;;e">
</treenode>
<treenode node="clearChanged;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;138;5;144;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearChanged()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clear internal flag if token was changed.&#10;&lt;b&gt;deprecated&lt;/b&gt;: since 2.4;;d4,139;;b1,0;;m0;;e">
</treenode>
<treenode node="equals;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;156;5;200;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    equals($other, $caseSensitive = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token is equals to given one.&#10;If tokens are arrays, then only keys defined in parameter token are checked.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array|string|Token &lt;b&gt;$other&lt;/b&gt;: token or it&apos;s prototype&#10;    bool &lt;b&gt;$caseSensitive&lt;/b&gt;: perform a case sensitive comparison;;d4,157;;b1,0;;m0;;earray|string|Token $other;;pbool $caseSensitive;;p">
</treenode>
<treenode node="equalsAny;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;210;5;219;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    equalsAny(array $others, $caseSensitive = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token is equals to one of given.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$others&lt;/b&gt;: array of tokens or token prototypes&#10;    bool &lt;b&gt;$caseSensitive&lt;/b&gt;: perform a case sensitive comparison;;d4,211;;b1,0;;m0;;earray $others;;pbool $caseSensitive;;p">
</treenode>
<treenode node="getCastTokenKinds;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f18;97;5;102;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCastTokenKinds()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,98;;b1,5;;m0;;e">
</treenode>
<treenode node="getClassyTokenKinds;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f18;109;5;114;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassyTokenKinds()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get classy tokens kinds: T_CLASS, T_INTERFACE and T_TRAIT.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,110;;b1,5;;m0;;e">
</treenode>
<treenode node="getContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;262;5;265;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Token.php;f11;62;5;65;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getContent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get token&apos;s content.&#10;It shall be used only for getting the content of token, not for checking it against excepted value.;;d4,263;;b1,0;;m0;;e">
</treenode>
<treenode node="getId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;274;5;277;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get token&apos;s id.&#10;It shall be used only for getting the internal id of token, not for checking it against excepted value.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,275;;b1,0;;m0;;e">
</treenode>
<treenode node="getKeywords;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f18;320;5;347;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getKeywords()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Generate array containing all keywords that exists in PHP version in use.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;int, int&gt;;;d4,321;;b1,5;;m0;;e">
</treenode>
<treenode node="getMagicConstants;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f18;356;5;365;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMagicConstants()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Generate array containing all predefined constants that exists in PHP version in use.&#10;&lt;b&gt;see&lt;/b&gt;: https://php.net/manual/en/language.constants.predefined.php&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;int, int&gt;;;d4,357;;b1,5;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;286;5;293;;;;vpos;;v;;anull|string;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get token&apos;s name.&#10;It shall be used only for getting the name of token, not for checking it against excepted value.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   token name;;d4,287;;b1,0;;m0;;e">
</treenode>
<treenode node="getNameForId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f18;304;5;313;;;;vpos;;v;;anull|string;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNameForId($id)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get token&apos;s name.&#10;It shall be used only for getting the name of token, not for checking it against excepted value.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$id&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   token name;;d4,305;;b1,5;;m0;;eint $id;;p">
</treenode>
<treenode node="getPrototype;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;243;5;253;;;;vpos;;v;;aarray|string;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPrototype()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   token prototype;;d4,244;;b1,0;;m0;;e">
</treenode>
<treenode node="getTokenKindsForNames;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f19;605;5;616;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTokenKindsForNames(array $tokenNames)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$tokenNames&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;int, int&gt;;;d4,606;;b3,5;;m0;;estring[] $tokenNames;;p">
</treenode>
<treenode node="getType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Token.php;f11;46;5;49;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getType()&#10;;;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="isArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;372;5;375;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isArray()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token prototype is an array.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   is array;;d4,373;;b1,0;;m0;;e">
</treenode>
<treenode node="isCast;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;382;5;385;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCast()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token is one of type cast tokens.;;d4,383;;b1,0;;m0;;e">
</treenode>
<treenode node="isChanged;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;394;5;399;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isChanged()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token was changed.&#10;&lt;b&gt;deprecated&lt;/b&gt;: since 2.4;;d4,395;;b1,0;;m0;;e">
</treenode>
<treenode node="isClassy;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;406;5;409;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isClassy()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token is one of classy tokens: T_CLASS, T_INTERFACE or T_TRAIT.;;d4,407;;b1,0;;m0;;e">
</treenode>
<treenode node="isComment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;416;5;421;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isComment()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token is one of comment tokens: T_COMMENT or T_DOC_COMMENT.;;d4,417;;b1,0;;m0;;e">
</treenode>
<treenode node="isEmpty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;430;5;435;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isEmpty()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token is empty, e.g. because of clearing.&#10;&lt;b&gt;deprecated&lt;/b&gt;: since 2.4;;d4,431;;b1,0;;m0;;e">
</treenode>
<treenode node="isGivenKind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;444;5;447;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isGivenKind($possibleKind)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token is one of given kind.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|int[] &lt;b&gt;$possibleKind&lt;/b&gt;: kind or array of kinds;;d4,445;;b1,0;;m0;;eint|int[] $possibleKind;;p">
</treenode>
<treenode node="isKeyCaseSensitive;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f18;231;5;238;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isKeyCaseSensitive($caseSensitive, $key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    A helper method used to find out whether or not a certain input token has to be case-sensitively matched.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array&lt;int,: bool&gt;|bool $caseSensitive global case sensitiveness or an array of booleans, whose keys should match the ones used in $others. If any is missing, the default case-sensitive comparison is used&#10;    int &lt;b&gt;$key&lt;/b&gt;: the key of the token that has to be looked up;;d4,232;;b1,5;;m0;;earray&lt;int,;;pint $key;;p">
</treenode>
<treenode node="isKeyword;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;454;5;459;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isKeyword()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token is a keyword.;;d4,455;;b1,0;;m0;;e">
</treenode>
<treenode node="isMagicConstant;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;480;5;485;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isMagicConstant()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns if the token is of a Magic constants type.&#10;&lt;b&gt;see&lt;/b&gt;: https://php.net/manual/en/language.constants.predefined.php;;d4,481;;b1,0;;m0;;e">
</treenode>
<treenode node="isNativeConstant;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;466;5;471;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isNativeConstant()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token is a native PHP constant: true, false or null.;;d4,467;;b1,0;;m0;;e">
</treenode>
<treenode node="isType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Token.php;f11;82;5;89;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isType($types)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns whether the token type is one of the given types.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|int[] &lt;b&gt;$types&lt;/b&gt;;;d4,83;;b1,0;;m0;;eint|int[] $types;;p">
</treenode>
<treenode node="isWhitespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;494;5;505;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isWhitespace($whitespaces = &quot; \t\n\r\0\x0B&quot;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token is whitespace.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|string &lt;b&gt;$whitespaces&lt;/b&gt;: whitespace characters, default is &quot; \t\n\r\0\x0B&quot;;;d4,495;;b1,0;;m0;;enull|string $whitespaces;;p">
</treenode>
<treenode node="override;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;516;5;540;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    override($other)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Override token.&#10;If called on Token inside Tokens collection please use `Tokens::overrideAt` instead.&#10;&lt;b&gt;deprecated&lt;/b&gt;: since 2.4&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array|string|Token &lt;b&gt;$other&lt;/b&gt;: token prototype;;d4,517;;b1,0;;m0;;earray|string|Token $other;;p">
</treenode>
<treenode node="setContent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;547;5;565;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Token.php;f11;70;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setContent($content)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;deprecated&lt;/b&gt;: since 2.4&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$content&lt;/b&gt;;;d4,548;;b1,0;;m0;;estring $content;;p">
</treenode>
<treenode node="setType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Token.php;f11;54;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setType($type)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$type&lt;/b&gt;;;d4,55;;b1,0;;m0;;eint $type;;p">
</treenode>
<treenode node="toArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;567;5;576;;;;vpos;;v;;a;;r;;d4,568;;b1,0;;m0;;e">
</treenode>
<treenode node="toJson;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Token.php;f11;583;5;598;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    toJson(array $options = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|string[] &lt;b&gt;$options&lt;/b&gt;: JSON encode option;;d4,584;;b1,0;;m0;;enull|string[] $options;;p">
</treenode>
</treenode>
<treenode node="TokenParser;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\TokenParser.php;f0;27;1;193;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TokenParser&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses a file for namespaces/use/class declarations.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Christian Kaps &lt;christian.kaps&#10;&lt;b&gt;mohiva&lt;/b&gt;: .com&gt;;;d0,28;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\TokenParser.php;f11;53;5;67;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($contents)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$contents&lt;/b&gt;;;d4,54;;b1,0;;m0;;estring $contents;;p">
</treenode>
<treenode node="next;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\TokenParser.php;f11;77;5;92;;;;vpos;;v;;aarray|null;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    next($docCommentIsComment = TRUE)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the next non whitespace and non comment token.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    boolean &lt;b&gt;$docCommentIsComment&lt;/b&gt;: If TRUE then a doc comment is considered a comment and skipped. If FALSE then only whitespace and normal comments are skipped.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The token if exists, null otherwise.;;d4,78;;b1,0;;m0;;eboolean $docCommentIsComment;;p">
</treenode>
<treenode node="parseClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\TokenParser.php;f11;186;5;192;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseClass()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the class name.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The found class name.;;d4,187;;b1,0;;m0;;e">
</treenode>
<treenode node="parseNamespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\TokenParser.php;f11;171;5;179;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseNamespace()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the namespace.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The found namespace.;;d4,172;;b1,0;;m0;;e">
</treenode>
<treenode node="parseUseStatement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\TokenParser.php;f11;99;5;136;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseUseStatement()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses a single use statement.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A list with all found class names for a use statement.;;d4,100;;b1,0;;m0;;e">
</treenode>
<treenode node="parseUseStatements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\TokenParser.php;f11;145;5;164;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseUseStatements($namespaceName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets all use statements.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$namespaceName&lt;/b&gt;: The namespace name of the reflected class.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   A list with all found use statements.;;d4,146;;b1,0;;m0;;estring $namespaceName;;p">
</treenode>
</treenode>
<treenode node="TokenizerLinter;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\TokenizerLinter.php;f6;25;1;69;;;;vpos;;v;;aLinterInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TokenizerLinter implements LinterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Handle PHP code linting.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\TokenizerLinter.php;f11;27;5;32;;;;vpos;;v;;a;;r;;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="isAsync;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\TokenizerLinter.php;f11;37;5;40;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAsync()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="lintFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\TokenizerLinter.php;f11;45;5;48;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lintFile($path)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,46;;b1,0;;m0;;epath;;p">
</treenode>
<treenode node="lintSource;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\TokenizerLinter.php;f11;53;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    lintSource($source)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,54;;b1,0;;m0;;esource;;p">
</treenode>
</treenode>
<treenode node="TokenizerLintingResult;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\TokenizerLintingResult.php;f6;19;1;47;;;;vpos;;v;;aLintingResultInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TokenizerLintingResult implements LintingResultInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,20;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\TokenizerLintingResult.php;f11;29;5;32;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(\ParseError $error = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|\ParseError &lt;b&gt;$error&lt;/b&gt;;;d4,30;;b1,0;;m0;;enull|\ParseError $error;;p">
</treenode>
<treenode node="check;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\TokenizerLintingResult.php;f11;37;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    check()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,38;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Tokens;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f0;29;1;1451;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f6;23;1;378;;;;vpos;;v;;aSplFixedArray;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Tokens extends \SplFixedArray&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Collection of code tokens.&#10;Its role is to provide the ability to manage collection and navigate through it.&#10;As a token prototype you should understand a single element generated by token_get_all.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;method&lt;/b&gt;: Token current()&#10;&lt;b&gt;method&lt;/b&gt;: Token offsetGet($index);;d0,30;;b0,0;;m0;;e">
<treenode node="BLOCK_TYPE_ARRAY_INDEX_CURLY_BRACE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f9;37;44;37;;;;vpos;;v;;a;;r7;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="BLOCK_TYPE_ARRAY_SQUARE_BRACE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f9;34;39;34;;;;vpos;;v;;a;;r4;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="BLOCK_TYPE_BRACE_CLASS_INSTANTIATION;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f9;40;46;40;;;;vpos;;v;;a;;r10;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="BLOCK_TYPE_CURLY_BRACE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f9;32;32;32;;;;vpos;;v;;a;;r2;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="BLOCK_TYPE_DESTRUCTURING_SQUARE_BRACE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f9;39;47;39;;;;vpos;;v;;a;;r9;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="BLOCK_TYPE_DYNAMIC_PROP_BRACE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f9;35;39;35;;;;vpos;;v;;a;;r5;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="BLOCK_TYPE_DYNAMIC_VAR_BRACE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f9;36;38;36;;;;vpos;;v;;a;;r6;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="BLOCK_TYPE_GROUP_IMPORT_BRACE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f9;38;39;38;;;;vpos;;v;;a;;r8;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="BLOCK_TYPE_INDEX_SQUARE_BRACE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f9;33;39;33;;;;vpos;;v;;a;;r3;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="BLOCK_TYPE_PARENTHESIS_BRACE;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f9;31;38;31;;;;vpos;;v;;a;;r1;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="__clone;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;93;5;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __clone()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clone tokens collection.;;d4,94;;b1,0;;m0;;e">
</treenode>
<treenode node="calculateCodeHash;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f19;1340;5;1343;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calculateCodeHash($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculate hash for code.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;;;d4,1341;;b3,5;;m0;;estring $code;;p">
</treenode>
<treenode node="changeCodeHash;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f12;1389;5;1397;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    changeCodeHash($codeHash)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Change code hash.&#10;Remove old cache and set new one.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$codeHash&lt;/b&gt;: new code hash;;d4,1390;;b3,0;;m0;;estring $codeHash;;p">
</treenode>
<treenode node="clearAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;934;5;937;;;;vpos;;v;;a;;r;;d4,935;;b1,0;;m0;;eindex;;p">
</treenode>
<treenode node="clearCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f18;133;5;144;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearCache($key = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clear cache - one position or all of them.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|string &lt;b&gt;$key&lt;/b&gt;: position to clear, when null clear all;;d4,134;;b1,5;;m0;;enull|string $key;;p">
</treenode>
<treenode node="clearChanged;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;329;5;338;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearChanged()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clear internal flag if collection was changed and flag for all collection&apos;s items.;;d4,330;;b1,0;;m0;;e">
</treenode>
<treenode node="clearEmptyTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;345;5;368;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearEmptyTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clear empty tokens.&#10;Empty tokens can occur e.g. after calling clear on item of collection.;;d4,346;;b1,0;;m0;;e">
</treenode>
<treenode node="clearRange;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;1147;5;1152;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearRange($indexStart, $indexEnd)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Clear tokens in the given range.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$indexStart&lt;/b&gt;&#10;    int &lt;b&gt;$indexEnd&lt;/b&gt;;;d4,1148;;b1,0;;m0;;eint $indexStart;;pint $indexEnd;;p">
</treenode>
<treenode node="clearTokenAndMergeSurroundingWhitespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;1212;5;1236;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    clearTokenAndMergeSurroundingWhitespace($index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,1213;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="countTokenKind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;1132;5;1139;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    countTokenKind($tokenKind)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|string &lt;b&gt;$tokenKind&lt;/b&gt;;;d4,1133;;b1,0;;m0;;eint|string $tokenKind;;p">
</treenode>
<treenode node="createFromDocComment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f18;33;5;130;;;;vpos;;v;;aself;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createFromDocComment(PhpToken $input, array $ignoredTags = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    PhpToken &lt;b&gt;$input&lt;/b&gt;&#10;    string[] &lt;b&gt;$ignoredTags&lt;/b&gt;;;d4,34;;b1,5;;m0;;ePhpToken $input;;pstring[] $ignoredTags;;p">
</treenode>
<treenode node="detectBlockType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f18;153;5;164;;;;vpos;;v;;anull|array;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    detectBlockType(Token $token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Detect type of block.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Token &lt;b&gt;$token&lt;/b&gt;: token&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   array with &apos;type&apos; and &apos;isStart&apos; keys or null if not found;;d4,154;;b1,5;;m0;;eToken $token;;p">
</treenode>
<treenode node="ensureWhitespaceAtIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;382;5;433;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    ensureWhitespaceAtIndex($index, $indexOffset, $whitespace)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Ensure that on given index is a whitespace with given kind.&#10;If there is a whitespace then it&apos;s content will be modified.&#10;If not - the new Token will be added.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: index&#10;    int &lt;b&gt;$indexOffset&lt;/b&gt;: index offset for Token insertion&#10;    string &lt;b&gt;$whitespace&lt;/b&gt;: whitespace to set&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   if new Token was added;;d4,383;;b1,0;;m0;;eint $index;;pint $indexOffset;;pstring $whitespace;;p">
</treenode>
<treenode node="extractTokenKind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f12;1444;5;1450;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    extractTokenKind($token)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array|string|Token &lt;b&gt;$token&lt;/b&gt;: token prototype&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,1445;;b3,0;;m0;;earray|string|Token $token;;p">
</treenode>
<treenode node="findBlockEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;442;5;453;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findBlockEnd($type, $searchIndex, $findEnd = true)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$type&lt;/b&gt;: type of block, one of BLOCK_TYPE_*&#10;    int &lt;b&gt;$searchIndex&lt;/b&gt;: index of opening brace&#10;    bool &lt;b&gt;$findEnd&lt;/b&gt;: if method should find block&apos;s end, default true, otherwise method find block&apos;s start&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   index of closing brace;;d4,443;;b1,0;;m0;;eint $type;;pint $searchIndex;;pbool $findEnd;;p">
</treenode>
<treenode node="findBlockStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;461;5;464;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findBlockStart($type, $searchIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$type&lt;/b&gt;: type of block, one of BLOCK_TYPE_*&#10;    int &lt;b&gt;$searchIndex&lt;/b&gt;: index of closing brace&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   index of opening brace;;d4,462;;b1,0;;m0;;eint $type;;pint $searchIndex;;p">
</treenode>
<treenode node="findGivenKind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;473;5;503;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findGivenKind($possibleKind, $start = 0, $end = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array|int &lt;b&gt;$possibleKind&lt;/b&gt;: kind or array of kind&#10;    int &lt;b&gt;$start&lt;/b&gt;: optional offset&#10;    null|int &lt;b&gt;$end&lt;/b&gt;: optional limit&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   array of tokens of given kinds or assoc array of arrays;;d4,474;;b1,0;;m0;;earray|int $possibleKind;;pint $start;;pnull|int $end;;p">
</treenode>
<treenode node="findOppositeBlockEdge;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f12;1273;5;1331;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findOppositeBlockEdge($type, $searchIndex, $findEnd)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$type&lt;/b&gt;: type of block, one of BLOCK_TYPE_*&#10;    int &lt;b&gt;$searchIndex&lt;/b&gt;: index of starting brace&#10;    bool &lt;b&gt;$findEnd&lt;/b&gt;: if method should find block&apos;s end or start&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   index of opposite brace;;d4,1274;;b3,0;;m0;;eint $type;;pint $searchIndex;;pbool $findEnd;;p">
</treenode>
<treenode node="findSequence;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;775;5;861;;;;vpos;;v;;anull|array&lt;int,;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findSequence(array $sequence, $start = 0, $end = null, $caseSensitive = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Find a sequence of meaningful tokens and returns the array of their locations.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$sequence&lt;/b&gt;: an array of tokens (kinds) (same format used by getNextTokenOfKind)&#10;    int &lt;b&gt;$start&lt;/b&gt;: start index, defaulting to the start of the file&#10;    int &lt;b&gt;$end&lt;/b&gt;: end index, defaulting to the end of the file&#10;    array&lt;int,: bool&gt;|bool $caseSensitive global case sensitiveness or an array of booleans, whose keys should match the ones used in $others. If any is missing, the default case-sensitive comparison is used&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Token&gt; an array containing the tokens matching the sequence elements, indexed by their position;;d4,776;;b1,0;;m0;;earray $sequence;;pint $start;;pint $end;;parray&lt;int,;;p">
</treenode>
<treenode node="fromArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f18;174;5;193;;;;vpos;;v;;aTokens;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fromArray($array, $saveIndexes = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create token collection from array.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Token[] &lt;b&gt;$array&lt;/b&gt;: the array to import&#10;    bool &lt;b&gt;$saveIndexes&lt;/b&gt;: save the numeric indexes used in the original array, default is yes;;d4,175;;b1,5;;m0;;eToken[] $array;;pbool $saveIndexes;;p">
</treenode>
<treenode node="fromCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f18;202;5;225;;;;vpos;;v;;aTokens;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fromCode($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Create token collection directly from code.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: PHP code;;d4,203;;b1,5;;m0;;estring $code;;p">
</treenode>
<treenode node="generateCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;508;5;514;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    generateCode()&#10;;;d4,509;;b1,0;;m0;;e">
</treenode>
<treenode node="generatePartialCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;524;5;533;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    generatePartialCode($start, $end)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Generate code from tokens between given indexes.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;: start index&#10;    int &lt;b&gt;$end&lt;/b&gt;: end index;;d4,525;;b1,0;;m0;;eint $start;;pint $end;;p">
</treenode>
<treenode node="getAnnotationEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f11;189;5;224;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAnnotationEnd($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the index of the last token that is part of the annotation at the given index.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,190;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="getArrayEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f11;233;5;249;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getArrayEnd($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the index of the close brace that matches the open brace at the given index.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,234;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="getBlockEdgeDefinitions;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f18;230;5;274;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getBlockEdgeDefinitions()&#10;;;d4,231;;b1,5;;m0;;e">
</treenode>
<treenode node="getCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f19;1352;5;1359;;;;vpos;;v;;aTokens;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCache($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get cache value for given key.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: item key;;d4,1353;;b3,5;;m0;;estring $key;;p">
</treenode>
<treenode node="getCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f11;256;5;264;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the code from the tokens.;;d4,257;;b1,0;;m0;;e">
</treenode>
<treenode node="getCodeHash;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;540;5;543;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCodeHash()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get hash of code.;;d4,541;;b1,0;;m0;;e">
</treenode>
<treenode node="getMeaningfulTokenSibling;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;707;5;714;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f12;338;5;353;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMeaningfulTokenSibling($index, $direction)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get index for closest sibling token that is not a whitespace or comment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: token index&#10;    int &lt;b&gt;$direction&lt;/b&gt;: direction for looking, +1 or -1&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,708;;b1,0;;m0;;eint $index;;pint $direction;;p">
</treenode>
<treenode node="getNextMeaningfulToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;746;5;749;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f11;139;5;142;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNextMeaningfulToken($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get index for closest next token that is not a whitespace or comment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: token index&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,747;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="getNextNonWhitespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;555;5;558;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNextNonWhitespace($index, $whitespaces = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get index for closest next token which is non whitespace.&#10;This method is shorthand for getNonWhitespaceSibling method.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: token index&#10;    null|string &lt;b&gt;$whitespaces&lt;/b&gt;: whitespaces characters for Token::isWhitespace&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,556;;b1,0;;m0;;eint $index;;pnull|string $whitespaces;;p">
</treenode>
<treenode node="getNextTokenOfKind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;571;5;574;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNextTokenOfKind($index, array $tokens = [], $caseSensitive = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get index for closest next token of given kind.&#10;This method is shorthand for getTokenOfKindSibling method.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: token index&#10;    array &lt;b&gt;$tokens&lt;/b&gt;: possible tokens&#10;    bool &lt;b&gt;$caseSensitive&lt;/b&gt;: perform a case sensitive comparison&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,572;;b1,0;;m0;;eint $index;;parray $tokens;;pbool $caseSensitive;;p">
</treenode>
<treenode node="getNextTokenOfType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f11;164;5;167;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNextTokenOfType($type, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the index of the closest next token of the given type.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$type&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,165;;b1,0;;m0;;estring|string[] $type;;pint $index;;p">
</treenode>
<treenode node="getNonEmptySibling;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;724;5;737;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNonEmptySibling($index, $direction)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get index for closest sibling token which is not empty.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: token index&#10;    int &lt;b&gt;$direction&lt;/b&gt;: direction for looking, +1 or -1&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,725;;b1,0;;m0;;eint $index;;pint $direction;;p">
</treenode>
<treenode node="getNonWhitespaceSibling;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;585;5;600;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNonWhitespaceSibling($index, $direction, $whitespaces = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get index for closest sibling token which is non whitespace.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: token index&#10;    int &lt;b&gt;$direction&lt;/b&gt;: direction for looking, +1 or -1&#10;    null|string &lt;b&gt;$whitespaces&lt;/b&gt;: whitespaces characters for Token::isWhitespace&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,586;;b1,0;;m0;;eint $index;;pint $direction;;pnull|string $whitespaces;;p">
</treenode>
<treenode node="getPrevMeaningfulToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;758;5;761;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPrevMeaningfulToken($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get index for closest previous token that is not a whitespace or comment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: token index&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,759;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="getPrevNonWhitespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;612;5;615;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPrevNonWhitespace($index, $whitespaces = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get index for closest previous token which is non whitespace.&#10;This method is shorthand for getNonWhitespaceSibling method.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: token index&#10;    null|string &lt;b&gt;$whitespaces&lt;/b&gt;: whitespaces characters for Token::isWhitespace&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,613;;b1,0;;m0;;eint $index;;pnull|string $whitespaces;;p">
</treenode>
<treenode node="getPrevTokenOfKind;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;627;5;630;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPrevTokenOfKind($index, array $tokens = [], $caseSensitive = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get index for closest previous token of given kind.&#10;This method is shorthand for getTokenOfKindSibling method.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: token index&#10;    array &lt;b&gt;$tokens&lt;/b&gt;: possible tokens&#10;    bool &lt;b&gt;$caseSensitive&lt;/b&gt;: perform a case sensitive comparison&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,628;;b1,0;;m0;;eint $index;;parray $tokens;;pbool $caseSensitive;;p">
</treenode>
<treenode node="getPreviousMeaningfulToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f11;151;5;154;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPreviousMeaningfulToken($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the index of the closest previous token that is neither a comment nor a whitespace token.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,152;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="getPreviousTokenOfType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f11;177;5;180;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPreviousTokenOfType($type, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the index of the closest previous token of the given type.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$type&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,178;;b1,0;;m0;;estring|string[] $type;;pint $index;;p">
</treenode>
<treenode node="getTokenNotOfKindSibling;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;678;5;697;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTokenNotOfKindSibling($index, $direction, array $tokens = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get index for closest sibling token not of given kind.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: token index&#10;    int &lt;b&gt;$direction&lt;/b&gt;: direction for looking, +1 or -1&#10;    array &lt;b&gt;$tokens&lt;/b&gt;: possible tokens&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,679;;b1,0;;m0;;eint $index;;pint $direction;;parray $tokens;;p">
</treenode>
<treenode node="getTokenOfKindSibling;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;642;5;667;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTokenOfKindSibling($index, $direction, array $tokens = [], $caseSensitive = true)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get index for closest sibling token of given kind.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: token index&#10;    int &lt;b&gt;$direction&lt;/b&gt;: direction for looking, +1 or -1&#10;    array &lt;b&gt;$tokens&lt;/b&gt;: possible tokens&#10;    bool &lt;b&gt;$caseSensitive&lt;/b&gt;: perform a case sensitive comparison&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,643;;b1,0;;m0;;eint $index;;pint $direction;;parray $tokens;;pbool $caseSensitive;;p">
</treenode>
<treenode node="getTokenOfTypeSibling;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f12;362;5;377;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getTokenOfTypeSibling($index, $type, $direction)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    string|string[] &lt;b&gt;$type&lt;/b&gt;&#10;    int &lt;b&gt;$direction&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |int;;d4,363;;b3,0;;m0;;eint $index;;pstring|string[] $type;;pint $direction;;p">
</treenode>
<treenode node="hasCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f19;1368;5;1371;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasCache($key)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if given key exists in cache.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: item key;;d4,1369;;b3,5;;m0;;estring $key;;p">
</treenode>
<treenode node="insertAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;869;5;898;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f11;272;5;281;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    insertAt($index, $items)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Insert instances of Token inside collection.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: start inserting index&#10;    Token|Token[]|Tokens &lt;b&gt;$items&lt;/b&gt;: instances of Token to insert;;d4,870;;b1,0;;m0;;eint $index;;pToken|Token[]|Tokens $items;;p">
</treenode>
<treenode node="isAllTokenKindsFound;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;1086;5;1095;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAllTokenKindsFound(array $tokenKinds)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if all token kinds given as argument are found.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$tokenKinds&lt;/b&gt;;;d4,1087;;b1,0;;m0;;earray $tokenKinds;;p">
</treenode>
<treenode node="isAnyTokenKindsFound;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;1104;5;1113;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAnyTokenKindsFound(array $tokenKinds)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if any token kind given as argument is found.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$tokenKinds&lt;/b&gt;;;d4,1105;;b1,0;;m0;;earray $tokenKinds;;p">
</treenode>
<treenode node="isChanged;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;905;5;920;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isChanged()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if collection was change: collection itself (like insert new tokens) or any of collection&apos;s elements.;;d4,906;;b1,0;;m0;;e">
</treenode>
<treenode node="isEmptyAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;927;5;932;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isEmptyAt($index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,928;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="isLegacyMode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f18;107;5;110;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isLegacyMode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;&#10;&lt;b&gt;todo&lt;/b&gt;: remove at 3.0;;d4,108;;b1,5;;m0;;e">
</treenode>
<treenode node="isMonolithicPhp;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;1162;5;1190;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isMonolithicPhp()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks for monolithic PHP code.&#10;Checks that the code is pure PHP code, in a single code block, starting&#10;with an open tag.;;d4,1163;;b1,0;;m0;;e">
</treenode>
<treenode node="isPartialCodeMultiline;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;1198;5;1207;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isPartialCodeMultiline($start, $end)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;: start index&#10;    int &lt;b&gt;$end&lt;/b&gt;: end index;;d4,1199;;b1,0;;m0;;eint $start;;pint $end;;p">
</treenode>
<treenode node="isTokenKindFound;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;1122;5;1125;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isTokenKindFound($tokenKind)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token kind given as argument is found.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int|string &lt;b&gt;$tokenKind&lt;/b&gt;;;d4,1123;;b1,0;;m0;;eint|string $tokenKind;;p">
</treenode>
<treenode node="offsetSet;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;309;5;324;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f11;288;5;308;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    offsetSet($index, $newval)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set collection item.&#10;Warning! `$newval` must not be typehinted to be compatible with `ArrayAccess::offsetSet` method.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    Token &lt;b&gt;$newval&lt;/b&gt;;;d4,310;;b1,0;;m0;;eint $index;;pToken $newval;;p">
</treenode>
<treenode node="offsetUnset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;294;5;299;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Doctrine\Annotation\Tokens.php;f11;315;5;330;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    offsetUnset($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Unset collection item.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,295;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="overrideAt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;947;5;954;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    overrideAt($index, $token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Override token at given index and register it.&#10;&lt;b&gt;deprecated&lt;/b&gt;: since 2.4, use offsetSet instead&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    array|string|Token &lt;b&gt;$token&lt;/b&gt;: token prototype;;d4,948;;b1,0;;m0;;eint $index;;parray|string|Token $token;;p">
</treenode>
<treenode node="overrideRange;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;963;5;1001;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    overrideRange($indexStart, $indexEnd, $items)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Override tokens at given range.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$indexStart&lt;/b&gt;: start overriding index&#10;    int &lt;b&gt;$indexEnd&lt;/b&gt;: end overriding index&#10;    Token[]|Tokens &lt;b&gt;$items&lt;/b&gt;: tokens to insert;;d4,964;;b1,0;;m0;;eint $indexStart;;pint $indexEnd;;pToken[]|Tokens $items;;p">
</treenode>
<treenode node="registerFoundToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f12;1404;5;1417;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registerFoundToken($token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Register token as found.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array|string|Token &lt;b&gt;$token&lt;/b&gt;: token prototype;;d4,1405;;b3,0;;m0;;earray|string|Token $token;;p">
</treenode>
<treenode node="removeLeadingWhitespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;1007;5;1010;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeLeadingWhitespace($index, $whitespaces = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    null|string &lt;b&gt;$whitespaces&lt;/b&gt;: optional whitespaces characters for Token::isWhitespace;;d4,1008;;b1,0;;m0;;eint $index;;pnull|string $whitespaces;;p">
</treenode>
<treenode node="removeTrailingWhitespace;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;1016;5;1019;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeTrailingWhitespace($index, $whitespaces = null)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    null|string &lt;b&gt;$whitespaces&lt;/b&gt;: optional whitespaces characters for Token::isWhitespace;;d4,1017;;b1,0;;m0;;eint $index;;pnull|string $whitespaces;;p">
</treenode>
<treenode node="removeWhitespaceSafely;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f12;1238;5;1264;;;;vpos;;v;;a;;r;;d4,1239;;b3,0;;m0;;eindex;;pdirection;;pwhitespaces;;p">
</treenode>
<treenode node="setCache;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f19;1377;5;1380;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCache($key, self $value)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$key&lt;/b&gt;: item key&#10;    Tokens &lt;b&gt;$value&lt;/b&gt;: item value;;d4,1378;;b3,5;;m0;;estring $key;;pTokens $value;;p">
</treenode>
<treenode node="setCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;1026;5;1058;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setCode($code)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set code. Clear all current content and replace it by new Token items generated from code directly.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;: PHP code;;d4,1027;;b1,0;;m0;;estring $code;;p">
</treenode>
<treenode node="setLegacyMode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f18;119;5;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLegacyMode($isLegacy)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;&#10;&lt;b&gt;todo&lt;/b&gt;: remove at 3.0&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$isLegacy&lt;/b&gt;;;d4,120;;b1,5;;m0;;ebool $isLegacy;;p">
</treenode>
<treenode node="setSize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;281;5;287;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setSize($size)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set new size of collection.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$size&lt;/b&gt;;;d4,282;;b1,0;;m0;;eint $size;;p">
</treenode>
<treenode node="toJson;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f11;1060;5;1077;;;;vpos;;v;;a;;r;;d4,1061;;b1,0;;m0;;e">
</treenode>
<treenode node="unregisterFoundToken;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Tokens.php;f12;1424;5;1437;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    unregisterFoundToken($token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Register token as found.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array|string|Token &lt;b&gt;$token&lt;/b&gt;: token prototype;;d4,1425;;b3,0;;m0;;earray|string|Token $token;;p">
</treenode>
</treenode>
<treenode node="TokensAnalyzer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f6;25;1;694;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TokensAnalyzer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Analyzer of Tokens collection.&#10;Its role is to provide the ability to analyze collection.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Gregor Harlan &lt;gharlan&#10;&lt;b&gt;web&lt;/b&gt;: .de&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f11;34;5;37;;;;vpos;;v;;a;;r;;d4,35;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="findClassyElements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f12;613;5;693;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findClassyElements($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Find classy elements.&#10;Searches in tokens from the classy (start) index till the end (index) of the classy.&#10;Returns an array;s first value is the index until the method has analysed (int), second the found classy elements (array).&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: classy index;;d4,614;;b3,0;;m0;;eint $index;;p">
</treenode>
<treenode node="getClassyElements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f11;44;5;59;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getClassyElements()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get indexes of methods and properties in classy code (classes, interfaces and traits).&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,45;;b1,0;;m0;;e">
</treenode>
<treenode node="getImportUseIndexes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f11;68;5;105;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getImportUseIndexes($perNamespace = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get indexes of namespace uses.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$perNamespace&lt;/b&gt;: Return namespace uses per namespace&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   []|int[][];;d4,69;;b1,0;;m0;;ebool $perNamespace;;p">
</treenode>
<treenode node="getMethodAttributes;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f11;182;5;248;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getMethodAttributes($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the attributes of the method under the given index.&#10;The array has the following items:&#10;&apos;visibility&apos; int|null  T_PRIVATE, T_PROTECTED or T_PUBLIC&#10;&apos;static&apos;     bool&#10;&apos;abstract&apos;   bool&#10;&apos;final&apos;      bool&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: Token index of the method (T_FUNCTION);;d4,183;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="isAnonymousClass;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f11;257;5;271;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isAnonymousClass($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if there is an anonymous class under given index.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,258;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="isArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f11;114;5;117;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isArray($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if there is an array at given index.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,115;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="isArrayMultiLine;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f11;128;5;167;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isArrayMultiLine($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the array at index is multiline.&#10;This only checks the root-level of the array.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,129;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="isBinaryOperator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f11;495;5;573;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isBinaryOperator($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if there is a binary operator under given index.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,496;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="isConstantInvocation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f11;305;5;372;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isConstantInvocation($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the T_STRING under given index is a constant invocation.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,306;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="isLambda;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f11;280;5;296;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isLambda($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the function under given index is a lambda.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,281;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="isUnaryPredecessorOperator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f11;410;5;486;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isUnaryPredecessorOperator($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if there is an unary predecessor operator under given index.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,411;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="isUnarySuccessorOperator;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f11;381;5;401;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isUnarySuccessorOperator($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if there is an unary successor operator under given index.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,382;;b1,0;;m0;;eint $index;;p">
</treenode>
<treenode node="isWhilePartOfDoWhile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\TokensAnalyzer.php;f11;583;5;601;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isWhilePartOfDoWhile($index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if `T_WHILE` token at given index is `do { ... } while ();s` syntax&#10;and not `while () { ...}`.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,584;;b1,0;;m0;;eint $index;;p">
</treenode>
</treenode>
<treenode node="ToolInfo;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfo.php;f6;23;1;108;;;;vpos;;v;;aToolInfoInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class ToolInfo implements ToolInfoInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Obtain information about using version of tool.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="COMPOSER_LEGACY_PACKAGE_NAME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfo.php;f9;27;38;27;;;;vpos;;v;;a;;r&apos;fabpot/php-cs-fixer&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="COMPOSER_PACKAGE_NAME;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfo.php;f9;25;31;25;;;;vpos;;v;;a;;r&apos;friendsofphp/php-cs-fixer&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="getComposerInstallationDetails;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfo.php;f11;39;5;58;;;;vpos;;v;;a;;r;;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="getComposerInstalledFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfo.php;f12;104;5;107;;;;vpos;;v;;a;;r;;d4,105;;b3,0;;m0;;e">
</treenode>
<treenode node="getComposerVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfo.php;f11;60;5;71;;;;vpos;;v;;a;;r;;d4,61;;b1,0;;m0;;e">
</treenode>
<treenode node="getPharDownloadUri;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfo.php;f11;96;5;102;;;;vpos;;v;;a;;r;;d4,97;;b1,0;;m0;;eversion;;p">
</treenode>
<treenode node="getVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfo.php;f11;73;5;80;;;;vpos;;v;;a;;r;;d4,74;;b1,0;;m0;;e">
</treenode>
<treenode node="isInstalledAsPhar;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfo.php;f11;82;5;85;;;;vpos;;v;;a;;r;;d4,83;;b1,0;;m0;;e">
</treenode>
<treenode node="isInstalledByComposer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\ToolInfo.php;f11;87;5;94;;;;vpos;;v;;a;;r;;d4,88;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="TraceableEventDispatcher;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f0;32;1;406;;;;vpos;;v;;aTraceableEventDispatcherInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TraceableEventDispatcher implements TraceableEventDispatcherInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Collects some data about event listeners.&#10;This event dispatcher delegates the dispatching to another one.&#10;&lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;;;d0,33;;b0,0;;m0;;e">
<treenode node="__call;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;286;5;289;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __call($method, $arguments)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Proxies all method calls to the original event dispatcher.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$method&lt;/b&gt;: The method name&#10;    array &lt;b&gt;$arguments&lt;/b&gt;: The method arguments;;d4,287;;b1,0;;m0;;estring $method;;parray $arguments;;p">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;44;5;52;;;;vpos;;v;;a;;r;;d4,45;;b1,0;;m0;;edispatcher;;pstopwatch;;plogger;;prequestStack;;p">
</treenode>
<treenode node="addListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;57;5;60;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addListener($eventName, $listener, $priority = 0)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,58;;b1,0;;m0;;eeventName;;plistener;;ppriority;;p">
</treenode>
<treenode node="addSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;65;5;68;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    addSubscriber(EventSubscriberInterface $subscriber)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,66;;b1,0;;m0;;esubscriber;;p">
</treenode>
<treenode node="afterDispatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f14;306;5;309;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    afterDispatch(string $eventName, $event)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Called after dispatching the event.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    object &lt;b&gt;$event&lt;/b&gt;;;d4,307;;b2,0;;m0;;eeventName;;pevent;;p">
</treenode>
<treenode node="beforeDispatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f14;296;5;299;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    beforeDispatch(string $eventName, $event)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Called before dispatching the event.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    object &lt;b&gt;$event&lt;/b&gt;;;d4,297;;b2,0;;m0;;eeventName;;pevent;;p">
</treenode>
<treenode node="dispatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;135;5;182;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    dispatch($event/*, string $eventName = null*/)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: }&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$eventName&lt;/b&gt;;;d4,136;;b1,0;;m0;;estring|null $eventName;;p">
</treenode>
<treenode node="getCalledListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;189;5;205;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCalledListeners(/* Request $request = null */)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: }&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Request|null &lt;b&gt;$request&lt;/b&gt;: The request to get listeners for;;d4,190;;b1,0;;m0;;e">
</treenode>
<treenode node="getListenerPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;107;5;120;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getListenerPriority($eventName, $listener)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,108;;b1,0;;m0;;eeventName;;plistener;;p">
</treenode>
<treenode node="getListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;99;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getListeners($eventName = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,100;;b1,0;;m0;;eeventName;;p">
</treenode>
<treenode node="getNotCalledListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;212;5;253;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNotCalledListeners(/* Request $request = null */)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: }&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Request|null &lt;b&gt;$request&lt;/b&gt;: The request to get listeners for;;d4,213;;b1,0;;m0;;e">
</treenode>
<treenode node="getOrphanedEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;258;5;269;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getOrphanedEvents(/* Request $request = null */): array&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Request|null &lt;b&gt;$request&lt;/b&gt;: The request to get orphaned events for;;d4,259;;b1,0;;m0;;e">
</treenode>
<treenode node="hasListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;125;5;128;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasListeners($eventName = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,126;;b1,0;;m0;;eeventName;;p">
</treenode>
<treenode node="postDispatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f14;321;5;323;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    postDispatch($eventName, Event $event)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;deprecated&lt;/b&gt;: since Symfony 4.3, will be removed in 5.0, use afterDispatch instead;;d4,322;;b2,0;;m0;;eeventName;;pevent;;p">
</treenode>
<treenode node="postProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f12;343;5;380;;;;vpos;;v;;a;;r;;d4,344;;b3,0;;m0;;eeventName;;p">
</treenode>
<treenode node="preDispatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f14;314;5;316;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    preDispatch($eventName, Event $event)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;deprecated&lt;/b&gt;: since Symfony 4.3, will be removed in 5.0, use beforeDispatch instead;;d4,315;;b2,0;;m0;;eeventName;;pevent;;p">
</treenode>
<treenode node="preProcess;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f12;325;5;341;;;;vpos;;v;;a;;r;;d4,326;;b3,0;;m0;;eeventName;;p">
</treenode>
<treenode node="removeListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;73;5;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeListener($eventName, $listener)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,74;;b1,0;;m0;;eeventName;;plistener;;p">
</treenode>
<treenode node="removeSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;91;5;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    removeSubscriber(EventSubscriberInterface $subscriber)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,92;;b1,0;;m0;;esubscriber;;p">
</treenode>
<treenode node="reset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f11;271;5;276;;;;vpos;;v;;a;;r;;d4,272;;b1,0;;m0;;e">
</treenode>
<treenode node="sortNotCalledListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\TraceableEventDispatcher.php;f12;382;5;405;;;;vpos;;v;;a;;r;;d4,383;;b3,0;;m0;;ea;;pb;;p">
</treenode>
</treenode>
<treenode node="TraceableEventDispatcherTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f0;22;1;310;;;;vpos;;v;;aTestCase;;c;;r;;d0,23;;b0,0;;m0;;e">
<treenode node="testAddRemoveListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;24;5;36;;;;vpos;;v;;a;;r;;d4,25;;b1,0;;m0;;e">
</treenode>
<treenode node="testAddRemoveSubscriber;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;91;5;105;;;;vpos;;v;;a;;r;;d4,92;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearCalledListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;127;5;140;;;;vpos;;v;;a;;r;;d4,128;;b1,0;;m0;;e">
</treenode>
<treenode node="testClearOrphanedEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;300;5;309;;;;vpos;;v;;a;;r;;d4,301;;b1,0;;m0;;e">
</treenode>
<treenode node="testDispatchAfterReset;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;155;5;165;;;;vpos;;v;;a;;r;;d4,156;;b1,0;;m0;;e">
</treenode>
<treenode node="testDispatchCallListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;237;5;249;;;;vpos;;v;;a;;r;;d4,238;;b1,0;;m0;;e">
</treenode>
<treenode node="testDispatchContractsEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;142;5;153;;;;vpos;;v;;a;;r;;d4,143;;b1,0;;m0;;e">
</treenode>
<treenode node="testDispatchNested;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;251;5;269;;;;vpos;;v;;a;;r;;d4,252;;b1,0;;m0;;e">
</treenode>
<treenode node="testDispatchReusedEventNested;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;271;5;285;;;;vpos;;v;;a;;r;;d4,272;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetCalledListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;107;5;125;;;;vpos;;v;;a;;r;;d4,108;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetCalledListenersNested;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;167;5;179;;;;vpos;;v;;a;;r;;d4,168;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetListenerPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;60;5;75;;;;vpos;;v;;a;;r;;d4,61;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetListenerPriorityWhileDispatching;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;77;5;89;;;;vpos;;v;;a;;r;;d4,78;;b1,0;;m0;;e">
</treenode>
<treenode node="testGetListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;38;5;45;;;;vpos;;v;;a;;r;;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="testHasListeners;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;47;5;58;;;;vpos;;v;;a;;r;;d4,48;;b1,0;;m0;;e">
</treenode>
<treenode node="testItDoesNotReturnHandledEvents;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;197;5;204;;;;vpos;;v;;a;;r;;d4,198;;b1,0;;m0;;e">
</treenode>
<treenode node="testItReturnsNoOrphanedEventsWhenCreated;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;181;5;186;;;;vpos;;v;;a;;r;;d4,182;;b1,0;;m0;;e">
</treenode>
<treenode node="testItReturnsOrphanedEventsAfterDispatch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;188;5;195;;;;vpos;;v;;a;;r;;d4,189;;b1,0;;m0;;e">
</treenode>
<treenode node="testListenerCanRemoveItselfWhenExecuted;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;287;5;298;;;;vpos;;v;;a;;r;;d4,288;;b1,0;;m0;;e">
</treenode>
<treenode node="testLogger;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;206;5;219;;;;vpos;;v;;a;;r;;d4,207;;b1,0;;m0;;e">
</treenode>
<treenode node="testLoggerWithStoppedEvent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\TraceableEventDispatcherTest.php;f11;221;5;235;;;;vpos;;v;;a;;r;;d4,222;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="TrailingCommaInMultilineArrayFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\TrailingCommaInMultilineArrayFixer.php;f6;33;1;137;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TrailingCommaInMultilineArrayFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Sebastiaan Stok &lt;s.stok&#10;&lt;b&gt;rollerscapes&lt;/b&gt;: .net&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,34;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\TrailingCommaInMultilineArrayFixer.php;f14;74;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,75;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\TrailingCommaInMultilineArrayFixer.php;f14;88;5;103;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,89;;b2,0;;m0;;e">
</treenode>
<treenode node="fixArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\TrailingCommaInMultilineArrayFixer.php;f12;109;5;136;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixArray(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,110;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\TrailingCommaInMultilineArrayFixer.php;f11;38;5;61;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\TrailingCommaInMultilineArrayFixer.php;f11;66;5;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,67;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="Transformers;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformers.php;f6;25;1;112;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Transformers&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Collection of Transformer classes.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformers.php;f12;37;5;44;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Register built in Transformers.;;d4,38;;b3,0;;m0;;e">
</treenode>
<treenode node="create;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformers.php;f18;49;5;58;;;;vpos;;v;;aTransformers;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    create()&#10;;;d4,50;;b1,5;;m0;;e">
</treenode>
<treenode node="findBuiltInTransformers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformers.php;f12;102;5;111;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findBuiltInTransformers()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \Generator|TransformerInterface[];;d4,103;;b3,0;;m0;;e">
</treenode>
<treenode node="registerBuiltInTransformers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformers.php;f12;84;5;97;;;;vpos;;v;;a;;r;;d4,85;;b3,0;;m0;;e">
</treenode>
<treenode node="registerTransformer;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformers.php;f12;77;5;82;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    registerTransformer(TransformerInterface $transformer)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    TransformerInterface &lt;b&gt;$transformer&lt;/b&gt;: Transformer;;d4,78;;b3,0;;m0;;eTransformerInterface $transformer;;p">
</treenode>
<treenode node="transform;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformers.php;f11;65;5;72;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    transform(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform given Tokens collection through all Transformer classes.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: Tokens collection;;d4,66;;b1,0;;m0;;eTokens $tokens;;p">
</treenode>
</treenode>
<treenode node="TrimArraySpacesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\TrimArraySpacesFixer.php;f6;23;1;103;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TrimArraySpacesFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Jared Henderson &lt;jared&#10;&lt;b&gt;netrivet&lt;/b&gt;: .com&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\TrimArraySpacesFixer.php;f14;47;5;54;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixArray;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\TrimArraySpacesFixer.php;f19;62;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixArray(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Method to trim leading/trailing whitespace within single line arrays.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,63;;b3,5;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\TrimArraySpacesFixer.php;f11;28;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\TrimArraySpacesFixer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="TypeAlternationTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\TypeAlternationTransformer.php;f6;26;1;85;;;;vpos;;v;;aAbstractTransformer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TypeAlternationTransformer extends AbstractTransformer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform `|` operator into CT::T_TYPE_ALTERNATION in `} catch (ExceptionType1 | ExceptionType2 $e) {`.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\TypeAlternationTransformer.php;f11;31;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\TypeAlternationTransformer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredPhpVersionId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\TypeAlternationTransformer.php;f11;47;5;84;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    process(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b1,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
</treenode>
<treenode node="TypeAnalysis;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\TypeAnalysis.php;f6;17;1;124;;;;vpos;;v;;aStartEndTokenAwareAnalysis;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TypeAnalysis implements StartEndTokenAwareAnalysis&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\TypeAnalysis.php;f11;71;5;83;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($name, $startIndex, $endIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;;;d4,72;;b1,0;;m0;;estring $name;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="getEndIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\TypeAnalysis.php;f11;104;5;107;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getEndIndex()&#10;;;d4,105;;b1,0;;m0;;e">
</treenode>
<treenode node="getName;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\TypeAnalysis.php;f11;88;5;91;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getName()&#10;;;d4,89;;b1,0;;m0;;e">
</treenode>
<treenode node="getStartIndex;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\TypeAnalysis.php;f11;96;5;99;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getStartIndex()&#10;;;d4,97;;b1,0;;m0;;e">
</treenode>
<treenode node="isNullable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\TypeAnalysis.php;f11;120;5;123;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isNullable()&#10;;;d4,121;;b1,0;;m0;;e">
</treenode>
<treenode node="isReservedType;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Analyzer\Analysis\TypeAnalysis.php;f11;112;5;115;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isReservedType()&#10;;;d4,113;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="TypeColonTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\TypeColonTransformer.php;f6;26;1;82;;;;vpos;;v;;aAbstractTransformer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TypeColonTransformer extends AbstractTransformer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform `:` operator into CT::T_TYPE_COLON in `function foo() : int {}`.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\TypeColonTransformer.php;f11;31;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,32;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\TypeColonTransformer.php;f11;39;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\TypeColonTransformer.php;f11;48;5;51;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredPhpVersionId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b1,0;;m0;;e">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\TypeColonTransformer.php;f11;56;5;81;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    process(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,57;;b1,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
</treenode>
<treenode node="TypeError;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\Resources\stubs\TypeError.php;f0;2;1;4;;;;vpos;;v;;aError;;c;;r;;d0,3;;b0,0;;m0;;e">
</treenode>
<treenode node="TypeShortNameResolver;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Resolver\TypeShortNameResolver.php;f6;23;1;98;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class TypeShortNameResolver&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;internal&lt;/b&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="getNamespacesFromTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Resolver\TypeShortNameResolver.php;f12;76;5;81;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getNamespacesFromTokens(Tokens $tokens)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;string, string&gt; A list of all FQN namespaces in the file with the short name as key;;d4,77;;b3,0;;m0;;eTokens $tokens;;p">
</treenode>
<treenode node="getUseMapFromTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Resolver\TypeShortNameResolver.php;f12;88;5;97;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getUseMapFromTokens(Tokens $tokens)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   &lt;string, string&gt; A list of all FQN use statements in the file with the short name as key;;d4,89;;b3,0;;m0;;eTokens $tokens;;p">
</treenode>
<treenode node="resolve;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Resolver\TypeShortNameResolver.php;f11;34;5;69;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    resolve(Tokens $tokens, $typeName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    This method will resolve the shortName of a FQCN if possible or otherwise return the inserted type name.&#10;E.g.: use Foo\Bar =&gt; &quot;Bar&quot;.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    string &lt;b&gt;$typeName&lt;/b&gt;;;d4,35;;b1,0;;m0;;eTokens $tokens;;pstring $typeName;;p">
</treenode>
</treenode>
<treenode node="UnaryOperatorSpacesFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\UnaryOperatorSpacesFixer.php;f6;23;1;67;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class UnaryOperatorSpacesFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Gregor Harlan &lt;gharlan&#10;&lt;b&gt;web&lt;/b&gt;: .de&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\UnaryOperatorSpacesFixer.php;f14;47;5;66;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,48;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\UnaryOperatorSpacesFixer.php;f11;28;5;34;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,29;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\Operator\UnaryOperatorSpacesFixer.php;f11;39;5;42;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,40;;b1,0;;m0;;etokens;;p">
</treenode>
</treenode>
<treenode node="UnavailableLinterException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Linter\UnavailableLinterException.php;f0;19;1;21;;;;vpos;;v;;aRuntimeException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class UnavailableLinterException extends \RuntimeException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exception that is thrown when the chosen linter is not available on the environment.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,20;;b0,0;;m0;;e">
</treenode>
<treenode node="UndefinedOptionsException;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\options-resolver\Exception\UndefinedOptionsException.php;f0;21;1;23;;;;vpos;;v;;aInvalidArgumentException;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class UndefinedOptionsException extends InvalidArgumentException&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Exception thrown when an undefined option is passed.&#10;You should remove the options in question from your code or define them&#10;beforehand.&#10;&lt;b&gt;author&lt;/b&gt;: Bernhard Schussek &lt;bschussek&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,22;;b0,0;;m0;;e">
</treenode>
<treenode node="UnifiedDiffOutputBuilder;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\UnifiedDiffOutputBuilder.php;f6;17;1;258;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Output\UnifiedDiffOutputBuilder.php;f6;15;1;164;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\GeckoPackages\DiffOutputBuilder\UnifiedDiffOutputBuilder.php;f6;26;1;294;;;;vpos;;v;;aAbstractChunkOutputBuilder;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class UnifiedDiffOutputBuilder extends AbstractChunkOutputBuilder&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Builds a diff string representation in unified diff format in chunks.;;d0,18;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\UnifiedDiffOutputBuilder.php;f11;44;5;48;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Output\UnifiedDiffOutputBuilder.php;f11;27;5;31;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\GeckoPackages\DiffOutputBuilder\UnifiedDiffOutputBuilder.php;f11;68;5;107;;;;vpos;;v;;a;;r;;d4,45;;b1,0;;m0;;eheader;;paddLineNumbers;;p">
</treenode>
<treenode node="getChunkRange;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Output\UnifiedDiffOutputBuilder.php;f12;146;5;163;;;;vpos;;v;;a;;r;;d4,147;;b3,0;;m0;;ediff;;pdiffStartIndex;;pdiffEndIndex;;p">
</treenode>
<treenode node="getDiff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\UnifiedDiffOutputBuilder.php;f11;50;5;77;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Output\UnifiedDiffOutputBuilder.php;f11;33;5;51;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\GeckoPackages\DiffOutputBuilder\UnifiedDiffOutputBuilder.php;f11;109;5;131;;;;vpos;;v;;a;;r;;d4,51;;b1,0;;m0;;ediff;;p">
</treenode>
<treenode node="writeChunk;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Output\UnifiedDiffOutputBuilder.php;f12;103;5;144;;;;vpos;;v;;a;;r;;d6,112;;b3,0;;m0;;eoutput;;pdiff;;pdiffStartIndex;;pdiffEndIndex;;pfromStart;;pfromRange;;ptoStart;;ptoRange;;p">
</treenode>
<treenode node="writeDiffChunked;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v2_0\Output\UnifiedDiffOutputBuilder.php;f12;55;5;101;;;;vpos;;v;;a;;r;;d4,56;;b3,0;;m0;;eoutput;;pdiff;;pold;;p">
</treenode>
<treenode node="writeDiffHunks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\UnifiedDiffOutputBuilder.php;f12;79;5;215;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\GeckoPackages\DiffOutputBuilder\UnifiedDiffOutputBuilder.php;f12;133;5;254;;;;vpos;;v;;a;;r;;d4,80;;b3,0;;m0;;eoutput;;pdiff;;p">
</treenode>
<treenode node="writeHunk;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\v3_0\Output\UnifiedDiffOutputBuilder.php;f12;217;5;257;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\php-cs-fixer\diff\src\GeckoPackages\DiffOutputBuilder\UnifiedDiffOutputBuilder.php;f12;256;5;293;;;;vpos;;v;;a;;r;;d6,226;;b3,0;;m0;;ediff;;pdiffStartIndex;;pdiffEndIndex;;pfromStart;;pfromRange;;ptoStart;;ptoRange;;poutput;;p">
</treenode>
</treenode>
<treenode node="UnifiedDiffer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\UnifiedDiffer.php;f6;20;1;42;;;;vpos;;v;;aDifferInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class UnifiedDiffer implements DifferInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\UnifiedDiffer.php;f11;27;5;33;;;;vpos;;v;;a;;r;;d4,28;;b1,0;;m0;;e">
</treenode>
<treenode node="diff;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Differ\UnifiedDiffer.php;f11;38;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    diff($old, $new)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,39;;b1,0;;m0;;eold;;pnew;;p">
</treenode>
</treenode>
<treenode node="UnixPipes;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\UnixPipes.php;f0;22;1;152;;;;vpos;;v;;aAbstractPipes;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class UnixPipes extends AbstractPipes&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    UnixPipes implementation uses unix pipes as handles.&#10;&lt;b&gt;author&lt;/b&gt;: Romain Neutron &lt;imprec&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\UnixPipes.php;f11;28;5;35;;;;vpos;;v;;a;;r;;d4,29;;b1,0;;m0;;ettyMode;;pptyMode;;pinput;;phaveReadSupport;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\UnixPipes.php;f11;37;5;40;;;;vpos;;v;;a;;r;;d4,38;;b1,0;;m0;;e">
</treenode>
<treenode node="areOpen;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\UnixPipes.php;f11;148;5;151;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    areOpen()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,149;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescriptors;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\UnixPipes.php;f11;45;5;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDescriptors()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,46;;b1,0;;m0;;e">
</treenode>
<treenode node="getFiles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\UnixPipes.php;f11;83;5;86;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFiles()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,84;;b1,0;;m0;;e">
</treenode>
<treenode node="haveReadSupport;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\UnixPipes.php;f11;140;5;143;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    haveReadSupport()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,141;;b1,0;;m0;;e">
</treenode>
<treenode node="readAndWrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\UnixPipes.php;f11;91;5;135;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    readAndWrite($blocking, $close = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,92;;b1,0;;m0;;eblocking;;pclose;;p">
</treenode>
</treenode>
<treenode node="UseTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\UseTransformer.php;f6;28;1;110;;;;vpos;;v;;aAbstractTransformer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class UseTransformer extends AbstractTransformer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Transform T_USE into:&#10;- CT::T_USE_TRAIT for imports,&#10;- CT::T_USE_LAMBDA for lambda variable uses.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,29;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\UseTransformer.php;f11;33;5;36;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\UseTransformer.php;f11;41;5;45;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,42;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\UseTransformer.php;f11;50;5;53;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredPhpVersionId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;e">
</treenode>
<treenode node="isUseForLambda;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\UseTransformer.php;f12;103;5;109;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isUseForLambda(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if token under given index is `use` statement for lambda function.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,104;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\UseTransformer.php;f11;58;5;93;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    process(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,59;;b1,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
</treenode>
<treenode node="Utils;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Utils.php;f6;24;1;192;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class Utils&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Graham Campbell &lt;graham&#10;&lt;b&gt;alt&lt;/b&gt;: -three.com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Odín del Río &lt;odin.drp&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="calculateBitmask;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Utils.php;f18;33;5;44;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calculateBitmask(array $options)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculate a bitmask for given constant names.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$options&lt;/b&gt;: constant names;;d4,34;;b1,5;;m0;;estring[] $options;;p">
</treenode>
<treenode node="calculateTrailingWhitespaceIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Utils.php;f18;93;5;109;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    calculateTrailingWhitespaceIndent(Token $token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Calculate the trailing whitespace.&#10;What we&apos;re doing here is grabbing everything after the final newline.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Token &lt;b&gt;$token&lt;/b&gt;;;d4,94;;b1,5;;m0;;eToken $token;;p">
</treenode>
<treenode node="camelCaseToUnderscore;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Utils.php;f18;53;5;62;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    camelCaseToUnderscore($string)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts a camel cased string to an snake cased string.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$string&lt;/b&gt;;;d4,54;;b1,5;;m0;;estring $string;;p">
</treenode>
<treenode node="cmpInt;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Utils.php;f18;75;5;82;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    cmpInt($a, $b)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Compare two integers for equality.&#10;We&apos;ll return 0 if they&apos;re equal, 1 if the first is bigger than the&#10;second, and -1 if the second is bigger than the first.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$a&lt;/b&gt;&#10;    int &lt;b&gt;$b&lt;/b&gt;;;d4,76;;b1,5;;m0;;eint $a;;pint $b;;p">
</treenode>
<treenode node="naturalLanguageJoinWithBackticks;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Utils.php;f18;174;5;191;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    naturalLanguageJoinWithBackticks(array $names)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Join names in natural language wrapped in backticks, e.g. `a`, `b` and `c`.&#10;&lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$names&lt;/b&gt;;;d4,175;;b1,5;;m0;;estring[] $names;;p">
</treenode>
<treenode node="sortFixers;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Utils.php;f18;150;5;163;;;;vpos;;v;;aFixerInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    sortFixers(array $fixers)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sort fixers by their priorities.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    FixerInterface[] &lt;b&gt;$fixers&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,151;;b1,5;;m0;;eFixerInterface[] $fixers;;p">
</treenode>
<treenode node="stableSort;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Utils.php;f18;122;5;141;;;;vpos;;v;;amixed;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    stableSort(array $elements, callable $getComparedValue, callable $compareValues)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Perform stable sorting using provided comparison function.&#10;Stability is ensured by using Schwartzian transform.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    mixed[] &lt;b&gt;$elements&lt;/b&gt;&#10;    callable &lt;b&gt;$getComparedValue&lt;/b&gt;: a callable that takes a single element and returns the value to compare&#10;    callable &lt;b&gt;$compareValues&lt;/b&gt;: a callable that compares two values&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,123;;b1,5;;m0;;emixed[] $elements;;pcallable $getComparedValue;;pcallable $compareValues;;p">
</treenode>
</treenode>
<treenode node="VersionParser;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\VersionParser.php;f0;23;1;539;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class VersionParser&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Version parser.&#10;&lt;b&gt;author&lt;/b&gt;: Jordi Boggiano &lt;j.boggiano&#10;&lt;b&gt;seld&lt;/b&gt;: .be&gt;;;d0,24;;b0,0;;m0;;e">
<treenode node="expandStability;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\VersionParser.php;f12;521;5;538;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    expandStability($stability)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Expand shorthand stability string to long version.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$stability&lt;/b&gt;;;d4,522;;b3,0;;m0;;estring $stability;;p">
</treenode>
<treenode node="manipulateVersionString;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\VersionParser.php;f12;491;5;512;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    manipulateVersionString($matches, $position, $increment = 0, $pad = &apos;0&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Increment, decrement, or simply pad a version number.&#10;Support function for {&#10;&lt;b&gt;link&lt;/b&gt;: parseConstraint()}&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$matches&lt;/b&gt;: Array with version parts in array indexes 1,2,3,4&#10;    int &lt;b&gt;$position&lt;/b&gt;: 1,2,3,4 - which segment of the version to increment/decrement&#10;    int &lt;b&gt;$increment&lt;/b&gt;&#10;    string &lt;b&gt;$pad&lt;/b&gt;: The string to pad version parts after $position&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The new version;;d4,492;;b3,0;;m0;;earray $matches;;pint $position;;pint $increment;;pstring $pad;;p">
</treenode>
<treenode node="normalize;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\VersionParser.php;f11;100;5;172;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    normalize($version, $fullVersion = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Normalizes a version string to be able to perform comparisons on it.&#10;&lt;b&gt;throws&lt;/b&gt;: \UnexpectedValueException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$version&lt;/b&gt;&#10;    string &lt;b&gt;$fullVersion&lt;/b&gt;: optional complete version string to give more context;;d4,101;;b1,0;;m0;;estring $version;;pstring $fullVersion;;p">
</treenode>
<treenode node="normalizeBranch;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\VersionParser.php;f11;197;5;215;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    normalizeBranch($name)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Normalizes a branch name to be able to perform comparisons on it.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$name&lt;/b&gt;;;d4,198;;b1,0;;m0;;estring $name;;p">
</treenode>
<treenode node="normalizeStability;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\VersionParser.php;f18;83;5;88;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    normalizeStability($stability)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$stability&lt;/b&gt;;;d4,84;;b1,5;;m0;;estring $stability;;p">
</treenode>
<treenode node="parseConstraint;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\VersionParser.php;f12;295;5;477;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseConstraint($constraint)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \UnexpectedValueException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$constraint&lt;/b&gt;;;d4,296;;b3,0;;m0;;estring $constraint;;p">
</treenode>
<treenode node="parseConstraints;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\VersionParser.php;f11;224;5;286;;;;vpos;;v;;aConstraintInterface;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseConstraints($constraints)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parses a constraint string into MultiConstraint and/or Constraint objects.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$constraints&lt;/b&gt;;;d4,225;;b1,0;;m0;;estring $constraints;;p">
</treenode>
<treenode node="parseNumericAliasPrefix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\VersionParser.php;f11;181;5;188;;;;vpos;;v;;astring|false;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseNumericAliasPrefix($branch)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Extract numeric prefix from alias, if it is in numeric format, suitable for version comparison.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$branch&lt;/b&gt;: Branch name (e.g. 2.1.x-dev)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Numeric prefix if present (e.g. 2.1.) or false;;d4,182;;b1,0;;m0;;estring $branch;;p">
</treenode>
<treenode node="parseStability;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\semver\src\VersionParser.php;f18;50;5;76;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    parseStability($version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the stability of a version.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$version&lt;/b&gt;;;d4,51;;b1,5;;m0;;estring $version;;p">
</treenode>
</treenode>
<treenode node="VersionSpecificCodeSample;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\VersionSpecificCodeSample.php;f6;17;1;66;;;;vpos;;v;;aVersionSpecificCodeSampleInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class VersionSpecificCodeSample implements VersionSpecificCodeSampleInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Andreas Möller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\VersionSpecificCodeSample.php;f11;34;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(&#10;        $code,&#10;        VersionSpecificationInterface $versionSpecification,&#10;        array $configuration = null&#10;    )&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$code&lt;/b&gt;&#10;    VersionSpecificationInterface &lt;b&gt;$versionSpecification&lt;/b&gt;&#10;    null|array &lt;b&gt;$configuration&lt;/b&gt;;;d6,38;;b1,0;;m0;;estring $code;;pVersionSpecificationInterface $versionSpecification;;pnull|array $configuration;;p">
</treenode>
<treenode node="getCode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\VersionSpecificCodeSample.php;f11;46;5;49;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCode()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;e">
</treenode>
<treenode node="getConfiguration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\VersionSpecificCodeSample.php;f11;54;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getConfiguration()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,55;;b1,0;;m0;;e">
</treenode>
<treenode node="isSuitableFor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\VersionSpecificCodeSample.php;f11;62;5;65;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isSuitableFor($version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b1,0;;m0;;eversion;;p">
</treenode>
</treenode>
<treenode node="VersionSpecification;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\VersionSpecification.php;f6;17;1;74;;;;vpos;;v;;aVersionSpecificationInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class VersionSpecification implements VersionSpecificationInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Andreas Möller &lt;am&#10;&lt;b&gt;localheinz&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\VersionSpecification.php;f11;35;5;57;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($minimum = null, $maximum = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;throws&lt;/b&gt;: \InvalidArgumentException&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    null|int &lt;b&gt;$minimum&lt;/b&gt;&#10;    null|int &lt;b&gt;$maximum&lt;/b&gt;;;d4,36;;b1,0;;m0;;enull|int $minimum;;pnull|int $maximum;;p">
</treenode>
<treenode node="isSatisfiedBy;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\FixerDefinition\VersionSpecification.php;f11;62;5;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isSatisfiedBy($version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,63;;b1,0;;m0;;eversion;;p">
</treenode>
</treenode>
<treenode node="VisibilityRequiredFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\VisibilityRequiredFixer.php;f6;35;1;192;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class VisibilityRequiredFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixer for rules defined in PSR2 ¶4.3, ¶4.5.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,36;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\VisibilityRequiredFixer.php;f14;104;5;164;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,105;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\VisibilityRequiredFixer.php;f14;83;5;99;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,84;;b2,0;;m0;;e">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\VisibilityRequiredFixer.php;f11;40;5;70;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\VisibilityRequiredFixer.php;f11;75;5;78;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,76;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isKeywordPlacedProperly;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\VisibilityRequiredFixer.php;f12;173;5;176;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isKeywordPlacedProperly(Tokens $tokens, $keywordIndex, $comparedIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$keywordIndex&lt;/b&gt;&#10;    int &lt;b&gt;$comparedIndex&lt;/b&gt;;;d4,174;;b3,0;;m0;;eTokens $tokens;;pint $keywordIndex;;pint $comparedIndex;;p">
</treenode>
<treenode node="moveTokenAndEnsureSingleSpaceFollows;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ClassNotation\VisibilityRequiredFixer.php;f12;183;5;191;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    moveTokenAndEnsureSingleSpaceFollows(Tokens $tokens, $fromIndex, $toIndex)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$fromIndex&lt;/b&gt;&#10;    int &lt;b&gt;$toIndex&lt;/b&gt;;;d4,184;;b3,0;;m0;;eTokens $tokens;;pint $fromIndex;;pint $toIndex;;p">
</treenode>
</treenode>
<treenode node="VoidReturnFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\VoidReturnFixer.php;f6;28;1;262;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class VoidReturnFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Mark Nielsen;;d0,29;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\VoidReturnFixer.php;f14;76;5;120;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,77;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="findReturnAnnotations;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\VoidReturnFixer.php;f12;241;5;261;;;;vpos;;v;;aAnnotation;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findReturnAnnotations(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Find all the return annotations in the function&apos;s PHPDoc comment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: The index of the function token&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,242;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixFunctionDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\VoidReturnFixer.php;f12;223;5;231;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixFunctionDefinition(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: The index of the end of the function definition line, EG at { or ;s;;d4,224;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\VoidReturnFixer.php;f11;33;5;46;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,34;;b1,0;;m0;;e">
</treenode>
<treenode node="getPriority;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\VoidReturnFixer.php;f11;51;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getPriority()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,52;;b1,0;;m0;;e">
</treenode>
<treenode node="hasReturnAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\VoidReturnFixer.php;f12;130;5;139;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasReturnAnnotation(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Determine whether there is a non-void return annotation in the function&apos;s PHPDoc comment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: The index of the function token;;d4,131;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="hasReturnTypeHint;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\VoidReturnFixer.php;f12;168;5;174;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasReturnTypeHint(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Determine whether the function already has a return type hint.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: The index of the end of the function definition line, EG at { or ;s;;d4,169;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="hasVoidReturn;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\VoidReturnFixer.php;f12;185;5;217;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasVoidReturn(Tokens $tokens, $startIndex, $endIndex)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Determine whether the function has a void return.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startIndex&lt;/b&gt;: Start of function body&#10;    int &lt;b&gt;$endIndex&lt;/b&gt;: End of function body;;d4,186;;b3,0;;m0;;eTokens $tokens;;pint $startIndex;;pint $endIndex;;p">
</treenode>
<treenode node="hasVoidReturnAnnotation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\VoidReturnFixer.php;f12;149;5;158;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    hasVoidReturnAnnotation(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Determine whether there is a void return annotation in the function&apos;s PHPDoc comment.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;: The index of the function token;;d4,150;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\VoidReturnFixer.php;f11;60;5;63;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isRisky;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\FunctionNotation\VoidReturnFixer.php;f11;68;5;71;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isRisky()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,69;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="WarningsDetector;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\WarningsDetector.php;f6;22;1;73;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class WarningsDetector&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,23;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\WarningsDetector.php;f11;34;5;37;;;;vpos;;v;;a;;r;;d4,35;;b1,0;;m0;;etoolInfo;;p">
</treenode>
<treenode node="detectOldMajor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\WarningsDetector.php;f11;39;5;43;;;;vpos;;v;;a;;r;;d4,40;;b1,0;;m0;;e">
</treenode>
<treenode node="detectOldVendor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\WarningsDetector.php;f11;45;5;57;;;;vpos;;v;;a;;r;;d4,46;;b1,0;;m0;;e">
</treenode>
<treenode node="getWarnings;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Console\WarningsDetector.php;f11;62;5;72;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getWarnings()&#10;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   [];;d4,63;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="WhitespaceAfterCommaInArrayFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\WhitespaceAfterCommaInArrayFixer.php;f6;24;1;105;;;;vpos;;v;;aAbstractFixer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class WhitespaceAfterCommaInArrayFixer extends AbstractFixer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Adam Marczuk &lt;adam&#10;&lt;b&gt;marczuk&lt;/b&gt;: .info&gt;;;d0,25;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\WhitespaceAfterCommaInArrayFixer.php;f14;48;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,49;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="fixSpacing;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\WhitespaceAfterCommaInArrayFixer.php;f12;63;5;79;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixSpacing($index, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Method to fix spacing in array declaration.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;;;d4,64;;b3,0;;m0;;eint $index;;pTokens $tokens;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\WhitespaceAfterCommaInArrayFixer.php;f11;29;5;35;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,30;;b1,0;;m0;;e">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\WhitespaceAfterCommaInArrayFixer.php;f11;40;5;43;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,41;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="skipNonArrayElements;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ArrayNotation\WhitespaceAfterCommaInArrayFixer.php;f12;89;5;104;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    skipNonArrayElements($index, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Method to move index over the non-array elements like function calls or function declarations.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   New index;;d4,90;;b3,0;;m0;;eint $index;;pTokens $tokens;;p">
</treenode>
</treenode>
<treenode node="WhitespacesFixerConfig;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\WhitespacesFixerConfig.php;f6;17;1;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class WhitespacesFixerConfig&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;;;d0,18;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\WhitespacesFixerConfig.php;f11;26;5;38;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($indent = &apos;    &apos;, $lineEnding = &quot;\n&quot;)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$indent&lt;/b&gt;&#10;    string &lt;b&gt;$lineEnding&lt;/b&gt;;;d4,27;;b1,0;;m0;;estring $indent;;pstring $lineEnding;;p">
</treenode>
<treenode node="getIndent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\WhitespacesFixerConfig.php;f11;43;5;46;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getIndent()&#10;;;d4,44;;b1,0;;m0;;e">
</treenode>
<treenode node="getLineEnding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\WhitespacesFixerConfig.php;f11;51;5;54;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLineEnding()&#10;;;d4,52;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="WhitespacyCommentTransformer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\WhitespacyCommentTransformer.php;f6;25;1;70;;;;vpos;;v;;aAbstractTransformer;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class WhitespacyCommentTransformer extends AbstractTransformer&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Move trailing whitespaces from comments and docs into following T_WHITESPACE token.&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,26;;b0,0;;m0;;e">
<treenode node="getCustomTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\WhitespacyCommentTransformer.php;f11;30;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCustomTokens()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="getRequiredPhpVersionId;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\WhitespacyCommentTransformer.php;f11;38;5;41;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRequiredPhpVersionId()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,39;;b1,0;;m0;;e">
</treenode>
<treenode node="process;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Tokenizer\Transformer\WhitespacyCommentTransformer.php;f11;46;5;69;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    process(Tokens $tokens, Token $token, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,47;;b1,0;;m0;;etokens;;ptoken;;pindex;;p">
</treenode>
</treenode>
<treenode node="WindowsPipes;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\WindowsPipes.php;f0;26;1;190;;;;vpos;;v;;aAbstractPipes;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class WindowsPipes extends AbstractPipes&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    WindowsPipes implementation uses temporary files as handles.&#10;&lt;b&gt;see&lt;/b&gt;: https://bugs.php.net/51800&#10;&lt;b&gt;see&lt;/b&gt;: https://bugs.php.net/65650&#10;&lt;b&gt;author&lt;/b&gt;: Romain Neutron &lt;imprec&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\WindowsPipes.php;f11;37;5;85;;;;vpos;;v;;a;;r;;d4,38;;b1,0;;m0;;einput;;phaveReadSupport;;p">
</treenode>
<treenode node="__destruct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\WindowsPipes.php;f11;87;5;90;;;;vpos;;v;;a;;r;;d4,88;;b1,0;;m0;;e">
</treenode>
<treenode node="areOpen;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\WindowsPipes.php;f11;171;5;174;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    areOpen()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,172;;b1,0;;m0;;e">
</treenode>
<treenode node="close;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\WindowsPipes.php;f11;179;5;189;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    close()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,180;;b1,0;;m0;;e">
</treenode>
<treenode node="getDescriptors;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\WindowsPipes.php;f11;95;5;115;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDescriptors()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,96;;b1,0;;m0;;e">
</treenode>
<treenode node="getFiles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\WindowsPipes.php;f11;120;5;123;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFiles()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,121;;b1,0;;m0;;e">
</treenode>
<treenode node="haveReadSupport;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\WindowsPipes.php;f11;163;5;166;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    haveReadSupport()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,164;;b1,0;;m0;;e">
</treenode>
<treenode node="readAndWrite;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Pipes\WindowsPipes.php;f11;128;5;158;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    readAndWrite($blocking, $close = false)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,129;;b1,0;;m0;;eblocking;;pclose;;p">
</treenode>
</treenode>
<treenode node="WordMatcher;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\WordMatcher.php;f6;20;1;56;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class WordMatcher&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,21;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\WordMatcher.php;f11;30;5;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct(array $candidates)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string[] &lt;b&gt;$candidates&lt;/b&gt;;;d4,31;;b1,0;;m0;;estring[] $candidates;;p">
</treenode>
<treenode node="match;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\WordMatcher.php;f11;40;5;55;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    match($needle)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$needle&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |string;;d4,41;;b1,0;;m0;;estring $needle;;p">
</treenode>
</treenode>
<treenode node="WrappedListener;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\WrappedListener.php;f0;26;1;135;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class WrappedListener&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Fabien Potencier &lt;fabien&#10;&lt;b&gt;symfony&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;final&lt;/b&gt;: since Symfony 4.3: the &quot;Event&quot; type-hint on __invoke() will be replaced by &quot;object&quot; in 5.0;;d0,27;;b0,0;;m0;;e">
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\WrappedListener.php;f11;40;5;76;;;;vpos;;v;;a;;r;;d4,41;;b1,0;;m0;;elistener;;pname;;pstopwatch;;pdispatcher;;p">
</treenode>
<treenode node="__invoke;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\WrappedListener.php;f11;112;5;134;;;;vpos;;v;;a;;r;;d4,113;;b1,0;;m0;;eevent;;peventName;;pdispatcher;;p">
</treenode>
<treenode node="getInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\WrappedListener.php;f11;98;5;110;;;;vpos;;v;;a;;r;;d4,99;;b1,0;;m0;;eeventName;;p">
</treenode>
<treenode node="getPretty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\WrappedListener.php;f11;93;5;96;;;;vpos;;v;;a;;r;;d4,94;;b1,0;;m0;;e">
</treenode>
<treenode node="getWrappedListener;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\WrappedListener.php;f11;78;5;81;;;;vpos;;v;;a;;r;;d4,79;;b1,0;;m0;;e">
</treenode>
<treenode node="stoppedPropagation;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\WrappedListener.php;f11;88;5;91;;;;vpos;;v;;a;;r;;d4,89;;b1,0;;m0;;e">
</treenode>
<treenode node="wasCalled;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Debug\WrappedListener.php;f11;83;5;86;;;;vpos;;v;;a;;r;;d4,84;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="WrappedListenerTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\WrappedListenerTest.php;f0;18;1;44;;;;vpos;;v;;aTestCase;;c;;r;;d0,19;;b0,0;;m0;;e">
<treenode node="provideListenersToDescribe;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\WrappedListenerTest.php;f11;30;5;43;;;;vpos;;v;;a;;r;;d4,31;;b1,0;;m0;;e">
</treenode>
<treenode node="testListenerDescription;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\event-dispatcher\Tests\Debug\WrappedListenerTest.php;f11;23;5;28;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    testListenerDescription($listener, $expected)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;dataProvider&lt;/b&gt;: provideListenersToDescribe;;d4,24;;b1,0;;m0;;elistener;;pexpected;;p">
</treenode>
</treenode>
<treenode node="XdebugHandler;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f0;18;1;564;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class XdebugHandler&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: John Stevenson &lt;john-stevenson&#10;&lt;b&gt;blueyonder&lt;/b&gt;: .co.uk&gt;;;d0,19;;b0,0;;m0;;e">
<treenode node="DEBUG;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f9;24;15;24;;;;vpos;;v;;a;;r&apos;XDEBUG_HANDLER_DEBUG&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="RESTART_ID;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f9;22;20;22;;;;vpos;;v;;a;;r&apos;internal&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="RESTART_SETTINGS;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f9;23;26;23;;;;vpos;;v;;a;;r&apos;XDEBUG_HANDLER_SETTINGS&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="SUFFIX_ALLOW;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f9;20;22;20;;;;vpos;;v;;a;;r&apos;_ALLOW_XDEBUG&apos;;;d-1,-1;;b0,5;;m0;;e">
</treenode>
<treenode node="SUFFIX_INIS;PHP:PHP Word;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f9;21;21;21;;;;vpos;;v;;a;;r&apos;_ORIGINAL_INIS&apos;;;d-1,-1;;b1,5;;m0;;e">
</treenode>
<treenode node="__construct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f11;55;5;77;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    __construct($envPrefix, $colorOption = &apos;&apos;)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Constructor&#10;The $envPrefix is used to create distinct environment variables. It is&#10;uppercased and prepended to the default base values. For example &apos;myapp&apos;&#10;would result in MYAPP_ALLOW_XDEBUG and MYAPP_ORIGINAL_INIS.&#10;&lt;b&gt;throws&lt;/b&gt;: \RuntimeException If a parameter is invalid&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$envPrefix&lt;/b&gt;: Value used in environment variables&#10;    string &lt;b&gt;$colorOption&lt;/b&gt;: Command-line long option to force color output;;d4,56;;b1,0;;m0;;estring $envPrefix;;pstring $colorOption;;p">
</treenode>
<treenode node="check;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f11;123;5;163;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    check()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks if xdebug is loaded and the process needs to be restarted&#10;This behaviour can be disabled by setting the MYAPP_ALLOW_XDEBUG&#10;environment variable to 1. This variable is used internally so that&#10;the restarted process is created only once.;;d4,124;;b1,0;;m0;;e">
</treenode>
<treenode node="checkConfiguration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f12;545;5;563;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkConfiguration(&amp;$info)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if there are no known configuration issues&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$info&lt;/b&gt;: Set by method;;d4,546;;b3,0;;m0;;estring $info;;p">
</treenode>
<treenode node="checkMainScript;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f12;467;5;487;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkMainScript()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the script name can be used;;d4,468;;b3,0;;m0;;e">
</treenode>
<treenode node="checkScanDirConfig;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f12;532;5;538;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    checkScanDirConfig()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if there are scanned inis and PHP is able to report them&#10;php_ini_scanned_files will fail when PHP_CONFIG_FILE_SCAN_DIR is empty.&#10;Fixed in 7.1.13 and 7.2.1;;d4,533;;b3,0;;m0;;e">
</treenode>
<treenode node="doRestart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f12;256;5;268;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    doRestart($command)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Executes the restarted command then deletes the tmp ini&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$command&lt;/b&gt;;;d4,257;;b3,0;;m0;;estring $command;;p">
</treenode>
<treenode node="getAllIniFiles;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f18;173;5;190;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getAllIniFiles()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array of php.ini locations with at least one entry&#10;The equivalent of calling php_ini_loaded_file then php_ini_scanned_files.&#10;The loaded ini location is the first entry and may be empty.;;d4,174;;b1,5;;m0;;e">
</treenode>
<treenode node="getCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f12;359;5;381;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommand()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the restart command line;;d4,360;;b3,0;;m0;;e">
</treenode>
<treenode node="getRestartSettings;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f18;200;5;217;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRestartSettings()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns an array of restart settings or null&#10;Settings will be available if the current process was restarted, or&#10;called with the settings from an existing restart.&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |null;;d4,201;;b1,5;;m0;;e">
</treenode>
<treenode node="getSkippedVersion;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f18;224;5;227;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getSkippedVersion()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the xdebug version that triggered a successful restart;;d4,225;;b1,5;;m0;;e">
</treenode>
<treenode node="mergeLoadedConfig;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f12;441;5;460;;;;vpos;;v;;astring;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    mergeLoadedConfig(array $loadedConfig, array $iniConfig)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns default, changed and command-line ini settings&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$loadedConfig&lt;/b&gt;: All current ini settings&#10;    array &lt;b&gt;$iniConfig&lt;/b&gt;: Settings from user ini files;;d4,442;;b3,0;;m0;;earray $loadedConfig;;parray $iniConfig;;p">
</treenode>
<treenode node="notify;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f12;428;5;431;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    notify($op, $data = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Logs status messages&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$op&lt;/b&gt;: Status handler constant&#10;    null|string &lt;b&gt;$data&lt;/b&gt;: Optional data;;d4,429;;b3,0;;m0;;estring $op;;pnull|string $data;;p">
</treenode>
<treenode node="prepareRestart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f12;280;5;308;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    prepareRestart()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if everything was written for the restart&#10;If any of the following fails (however unlikely) we must return false to&#10;stop potential recursion:&#10;- tmp ini file creation&#10;- environment variable creation;;d4,281;;b3,0;;m0;;e">
</treenode>
<treenode node="requiresRestart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f14;236;5;239;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    requiresRestart($isLoaded)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if xdebug is loaded, or as directed by an extending class&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$isLoaded&lt;/b&gt;: Whether xdebug is loaded;;d4,237;;b2,0;;m0;;ebool $isLoaded;;p">
</treenode>
<treenode node="restart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f14;246;5;249;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    restart($command)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Allows an extending class to access the tmpIni&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$command&lt;/b&gt;;;d4,247;;b2,0;;m0;;estring $command;;p">
</treenode>
<treenode node="setEnvRestartSettings;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f12;494;5;506;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setEnvRestartSettings($envArgs)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Adds restart settings to the environment&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$envArgs&lt;/b&gt;;;d4,495;;b3,0;;m0;;estring $envArgs;;p">
</treenode>
<treenode node="setEnvironment;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f12;393;5;420;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setEnvironment($scannedInis, array $iniFiles)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the restart environment variables were set&#10;No need to update $_SERVER since this is set in the restarted process.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    bool &lt;b&gt;$scannedInis&lt;/b&gt;: Whether there were scanned ini files&#10;    array &lt;b&gt;$iniFiles&lt;/b&gt;: All ini files used in the current process;;d4,394;;b3,0;;m0;;ebool $scannedInis;;parray $iniFiles;;p">
</treenode>
<treenode node="setLogger;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f11;86;5;90;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setLogger(LoggerInterface $logger)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Activates status message output to a PSR3 logger&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    LoggerInterface &lt;b&gt;$logger&lt;/b&gt;;;d4,87;;b1,0;;m0;;eLoggerInterface $logger;;p">
</treenode>
<treenode node="setMainScript;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f11;99;5;103;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setMainScript($script)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Sets the main script location if it cannot be called from argv&#10;$this&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string &lt;b&gt;$script&lt;/b&gt;;;d4,100;;b1,0;;m0;;estring $script;;p">
</treenode>
<treenode node="setPersistent;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f11;110;5;114;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    setPersistent()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Persist the settings to keep xdebug out of sub-processes&#10;$this;;d4,111;;b1,0;;m0;;e">
</treenode>
<treenode node="syncSettings;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f12;513;5;522;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    syncSettings(array $settings)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Syncs settings and the environment if called with existing settings&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$settings&lt;/b&gt;;;d4,514;;b3,0;;m0;;earray $settings;;p">
</treenode>
<treenode node="writeTmpIni;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\xdebug-handler\src\XdebugHandler.php;f12;319;5;352;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writeTmpIni(array $iniFiles, $tmpDir, &amp;$error)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns true if the tmp ini file was written&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    array &lt;b&gt;$iniFiles&lt;/b&gt;: All ini files used in the current process&#10;    string &lt;b&gt;$tmpDir&lt;/b&gt;: The system temporary directory&#10;    string &lt;b&gt;$error&lt;/b&gt;: Set by method if ini file cannot be read;;d4,320;;b3,0;;m0;;earray $iniFiles;;pstring $tmpDir;;pstring $error;;p">
</treenode>
</treenode>
<treenode node="XmlDescriptor;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\XmlDescriptor.php;f0;26;1;241;;;;vpos;;v;;aDescriptor;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class XmlDescriptor extends Descriptor&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    XML descriptor.&#10;&lt;b&gt;author&lt;/b&gt;: Jean-François Simon &lt;contact&#10;&lt;b&gt;jfsimon&lt;/b&gt;: .fr&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,27;;b0,0;;m0;;e">
<treenode node="appendDocument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\XmlDescriptor.php;f12;171;5;176;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    appendDocument(\DOMNode $parentNode, \DOMNode $importedParent)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Appends document children to parent node.;;d4,172;;b3,0;;m0;;eparentNode;;pimportedParent;;p">
</treenode>
<treenode node="describeApplication;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\XmlDescriptor.php;f14;163;5;166;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeApplication(Application $application, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,164;;b2,0;;m0;;eapplication;;poptions;;p">
</treenode>
<treenode node="describeCommand;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\XmlDescriptor.php;f14;155;5;158;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeCommand(Command $command, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,156;;b2,0;;m0;;ecommand;;poptions;;p">
</treenode>
<treenode node="describeInputArgument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\XmlDescriptor.php;f14;131;5;134;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeInputArgument(InputArgument $argument, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,132;;b2,0;;m0;;eargument;;poptions;;p">
</treenode>
<treenode node="describeInputDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\XmlDescriptor.php;f14;147;5;150;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeInputDefinition(InputDefinition $definition, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,148;;b2,0;;m0;;edefinition;;poptions;;p">
</treenode>
<treenode node="describeInputOption;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\XmlDescriptor.php;f14;139;5;142;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    describeInputOption(InputOption $option, array $options = [])&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,140;;b2,0;;m0;;eoption;;poptions;;p">
</treenode>
<treenode node="getApplicationDocument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\XmlDescriptor.php;f11;87;5;126;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getApplicationDocument(Application $application, $namespace = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \DOMDocument&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    string|null &lt;b&gt;$namespace&lt;/b&gt;;;d4,88;;b1,0;;m0;;eapplication;;pnamespace;;p">
</treenode>
<treenode node="getCommandDocument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\XmlDescriptor.php;f11;52;5;80;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCommandDocument(Command $command)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \DOMDocument;;d4,53;;b1,0;;m0;;ecommand;;p">
</treenode>
<treenode node="getInputArgumentDocument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\XmlDescriptor.php;f12;187;71;187;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;eargument;;p">
</treenode>
<treenode node="getInputDefinitionDocument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\XmlDescriptor.php;f11;31;5;47;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getInputDefinitionDocument(InputDefinition $definition)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \DOMDocument;;d4,32;;b1,0;;m0;;edefinition;;p">
</treenode>
<treenode node="getInputOptionDocument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\XmlDescriptor.php;f12;208;65;208;;;;vpos;;v;;a;;r;;d-1,-1;;b3,0;;m0;;eoption;;p">
</treenode>
<treenode node="writeDocument;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Descriptor\XmlDescriptor.php;f12;181;5;185;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    writeDocument(\DOMDocument $dom)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Writes DOM document.;;d4,182;;b3,0;;m0;;edom;;p">
</treenode>
</treenode>
<treenode node="XmlDescriptorTest;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\XmlDescriptorTest.php;f0;15;1;26;;;;vpos;;v;;aAbstractDescriptorTest;;c;;r;;d0,16;;b0,0;;m0;;e">
<treenode node="getDescriptor;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\XmlDescriptorTest.php;f14;17;5;20;;;;vpos;;v;;a;;r;;d4,18;;b2,0;;m0;;e">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Descriptor\XmlDescriptorTest.php;f14;22;5;25;;;;vpos;;v;;a;;r;;d4,23;;b2,0;;m0;;e">
</treenode>
</treenode>
<treenode node="XmlReporter;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\XmlReporter.php;f6;21;1;145;;;;vpos;;v;;aReporterInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class XmlReporter implements ReporterInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Boris Gorbylev &lt;ekho&#10;&lt;b&gt;ekho&lt;/b&gt;: .name&gt;&#10;&lt;b&gt;internal&lt;/b&gt;;;d0,22;;b0,0;;m0;;e">
<treenode node="createAppliedFixersElement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\XmlReporter.php;f12;83;5;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createAppliedFixersElement($dom, array $fixResult)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \DOMElement&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \DOMDocument &lt;b&gt;$dom&lt;/b&gt;&#10;    array &lt;b&gt;$fixResult&lt;/b&gt;;;d4,84;;b3,0;;m0;;e\DOMDocument $dom;;parray $fixResult;;p">
</treenode>
<treenode node="createDiffElement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\XmlReporter.php;f12;102;5;108;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createDiffElement(\DOMDocument $dom, array $fixResult)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \DOMElement&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    \DOMDocument &lt;b&gt;$dom&lt;/b&gt;&#10;    array &lt;b&gt;$fixResult&lt;/b&gt;;;d4,103;;b3,0;;m0;;e\DOMDocument $dom;;parray $fixResult;;p">
</treenode>
<treenode node="createMemoryElement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\XmlReporter.php;f12;135;5;144;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createMemoryElement($memory, \DOMDocument $dom)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \DOMElement&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$memory&lt;/b&gt;&#10;    \DOMDocument &lt;b&gt;$dom&lt;/b&gt;;;d4,136;;b3,0;;m0;;efloat $memory;;p\DOMDocument $dom;;p">
</treenode>
<treenode node="createTimeElement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\XmlReporter.php;f12;116;5;127;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createTimeElement($time, \DOMDocument $dom)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    \DOMElement&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    float &lt;b&gt;$time&lt;/b&gt;&#10;    \DOMDocument &lt;b&gt;$dom&lt;/b&gt;;;d4,117;;b3,0;;m0;;efloat $time;;p\DOMDocument $dom;;p">
</treenode>
<treenode node="generate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\XmlReporter.php;f11;34;5;75;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    generate(ReportSummary $reportSummary)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,35;;b1,0;;m0;;ereportSummary;;p">
</treenode>
<treenode node="getFormat;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Report\XmlReporter.php;f11;26;5;29;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getFormat()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,27;;b1,0;;m0;;e">
</treenode>
</treenode>
<treenode node="YodaStyleFixer;PHP:Class Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f6;30;1;730;;;;vpos;;v;;aAbstractFixer;;cConfigurationDefinitionFixerInterface;;c;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    class YodaStyleFixer extends AbstractFixer implements ConfigurationDefinitionFixerInterface&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &lt;b&gt;author&lt;/b&gt;: Bram Gotink &lt;bram&#10;&lt;b&gt;gotink&lt;/b&gt;: .me&gt;&#10;&lt;b&gt;author&lt;/b&gt;: Dariusz Ruminski &lt;dariusz.ruminski&#10;&lt;b&gt;gmail&lt;/b&gt;: .com&gt;&#10;&lt;b&gt;author&lt;/b&gt;: SpacePossum;;d0,31;;b0,0;;m0;;e">
<treenode node="applyFix;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f14;107;5;110;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    applyFix(\SplFileInfo $file, Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,108;;b2,0;;m0;;efile;;ptokens;;p">
</treenode>
<treenode node="configure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f11;50;5;55;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    configure(array $configuration = null)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,51;;b1,0;;m0;;econfiguration;;p">
</treenode>
<treenode node="createConfigurationDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f14;115;5;135;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    createConfigurationDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,116;;b2,0;;m0;;e">
</treenode>
<treenode node="findComparisonEnd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f12;150;5;183;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findComparisonEnd(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds the end of the right-hand side of the comparison at the given&#10;index.&#10;The right-hand side ends when an operator with a lower precedence is&#10;encountered or when the block level for `()`, `{}` or `[]` goes below&#10;zero.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: The token list&#10;    int &lt;b&gt;$index&lt;/b&gt;: The index of the comparison&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The last index of the right-hand side of the comparison;;d4,151;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="findComparisonStart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f12;198;5;234;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    findComparisonStart(Tokens $tokens, $index)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds the start of the left-hand side of the comparison at the given&#10;index.&#10;The left-hand side ends when an operator with a lower precedence is&#10;encountered or when the block level for `()`, `{}` or `[]` goes below&#10;zero.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: The token list&#10;    int &lt;b&gt;$index&lt;/b&gt;: The index of the comparison&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The first index of the left-hand side of the comparison;;d4,199;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="fixTokens;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f12;241;5;271;;;;vpos;;v;;aTokens;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixTokens(Tokens $tokens)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;;;d4,242;;b3,0;;m0;;eTokens $tokens;;p">
</treenode>
<treenode node="fixTokensCompare;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f12;293;5;324;;;;vpos;;v;;aint;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixTokensCompare(&#10;        Tokens $tokens,&#10;        $startLeft,&#10;        $endLeft,&#10;        $compareOperatorIndex,&#10;        $startRight,&#10;        $endRight&#10;    )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Fixes the comparison at the given index.&#10;A comparison is considered fixed when&#10;- both sides are a variable (e.g. $a === $b)&#10;- neither side is a variable (e.g. self::CONST === 3)&#10;- only the right-hand side is a variable (e.g. 3 === self::$var)&#10;If the left-hand side and right-hand side of the given comparison are&#10;swapped, this function runs recursively on the previous left-hand-side.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$startLeft&lt;/b&gt;&#10;    int &lt;b&gt;$endLeft&lt;/b&gt;&#10;    int &lt;b&gt;$compareOperatorIndex&lt;/b&gt;&#10;    int &lt;b&gt;$startRight&lt;/b&gt;&#10;    int &lt;b&gt;$endRight&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   a upper bound for all non-fixed comparisons;;d6,300;;b3,0;;m0;;eTokens $tokens;;pint $startLeft;;pint $endLeft;;pint $compareOperatorIndex;;pint $startRight;;pint $endRight;;p">
</treenode>
<treenode node="fixTokensComparePart;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f12;333;5;342;;;;vpos;;v;;aTokens;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    fixTokensComparePart(Tokens $tokens, $start, $end)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$start&lt;/b&gt;&#10;    int &lt;b&gt;$end&lt;/b&gt;;;d4,334;;b3,0;;m0;;eTokens $tokens;;pint $start;;pint $end;;p">
</treenode>
<treenode node="getCompareFixableInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f12;351;5;390;;;;vpos;;v;;anull;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getCompareFixableInfo(Tokens $tokens, $index, $yoda)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    bool &lt;b&gt;$yoda&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   |array;;d4,352;;b3,0;;m0;;eTokens $tokens;;pint $index;;pbool $yoda;;p">
</treenode>
<treenode node="getDefinition;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f11;60;5;94;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getDefinition()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,61;;b1,0;;m0;;e">
</treenode>
<treenode node="getLeftSideCompareFixableInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f12;398;5;404;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getLeftSideCompareFixableInfo(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,399;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="getRightSideCompareFixableInfo;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f12;412;5;418;;;;vpos;;v;;aarray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    getRightSideCompareFixableInfo(Tokens $tokens, $index)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;;;d4,413;;b3,0;;m0;;eTokens $tokens;;pint $index;;p">
</treenode>
<treenode node="isCandidate;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f11;99;5;102;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isCandidate(Tokens $tokens)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    {&#10;&lt;b&gt;inheritdoc&lt;/b&gt;: };;d4,100;;b1,0;;m0;;etokens;;p">
</treenode>
<treenode node="isConstant;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f12;654;5;693;;;;vpos;;v;;a;;r;;d4,655;;b3,0;;m0;;etokens;;pindex;;pend;;p">
</treenode>
<treenode node="isListStatement;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f12;427;5;436;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isListStatement(Tokens $tokens, $index, $end)&#10;&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;&#10;    int &lt;b&gt;$index&lt;/b&gt;&#10;    int &lt;b&gt;$end&lt;/b&gt;;;d4,428;;b3,0;;m0;;eTokens $tokens;;pint $index;;pint $end;;p">
</treenode>
<treenode node="isOfLowerPrecedence;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f12;446;5;499;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isOfLowerPrecedence(Token $token)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks whether the given token has a lower precedence than `T_IS_EQUAL`&#10;or `T_IS_IDENTICAL`.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Token &lt;b&gt;$token&lt;/b&gt;: The token to check&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Whether the token has a lower precedence;;d4,447;;b3,0;;m0;;eToken $token;;p">
</treenode>
<treenode node="isVariable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f12;512;5;652;;;;vpos;;v;;abool;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    isVariable(Tokens $tokens, $start, $end, $strict)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Checks whether the tokens between the given start and end describe a&#10;variable.&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Tokens &lt;b&gt;$tokens&lt;/b&gt;: The token list&#10;    int &lt;b&gt;$start&lt;/b&gt;: The first index of the possible variable&#10;    int &lt;b&gt;$end&lt;/b&gt;: The last index of the possible variable&#10;    bool &lt;b&gt;$strict&lt;/b&gt;: Enable strict variable detection&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Whether the tokens describe a variable;;d4,513;;b3,0;;m0;;eTokens $tokens;;pint $start;;pint $end;;pbool $strict;;p">
</treenode>
<treenode node="resolveConfiguration;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\friendsofphp\php-cs-fixer\src\Fixer\ControlStructure\YodaStyleFixer.php;f12;695;5;729;;;;vpos;;v;;a;;r;;d4,696;;b3,0;;m0;;e">
</treenode>
</treenode>
<treenode node="array_key_first;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php73\bootstrap.php;f8;25;102;25;;;;vpos;;v;;a;;r;;d47,25;;b0,0;;m0;;earray;;p">
</treenode>
<treenode node="array_key_last;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php73\bootstrap.php;f8;29;82;29;;;;vpos;;v;;a;;r;;d46,29;;b0,0;;m0;;earray;;p">
</treenode>
<treenode node="composerRequire00c2591744aec49b360b03a92cc8f2dd;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\autoload_real.php;f0;62;1;69;;;;vpos;;v;;a;;r;;d0,63;;b0,0;;m0;;efileIdentifier;;pfile;;p">
</treenode>
<treenode node="connexionPDO;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\model\connect_bdd.php;f0;3;1;18;;;;vpos;;v;;a;;r;;d23,3;;b0,0;;m0;;e">
</treenode>
<treenode node="createClosure;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\console\Tests\Command\CommandTest.php;f0;418;1;423;;;;vpos;;v;;a;;r;;d0,419;;b0,0;;m0;;e">
</treenode>
<treenode node="ctype_alnum;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\bootstrap.php;f4;14;71;14;;;;vpos;;v;;a;;r;;d32,14;;b0,0;;m0;;etext;;p">
</treenode>
<treenode node="ctype_alpha;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\bootstrap.php;f4;15;71;15;;;;vpos;;v;;a;;r;;d32,15;;b0,0;;m0;;etext;;p">
</treenode>
<treenode node="ctype_cntrl;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\bootstrap.php;f4;16;71;16;;;;vpos;;v;;a;;r;;d32,16;;b0,0;;m0;;etext;;p">
</treenode>
<treenode node="ctype_digit;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\bootstrap.php;f4;17;71;17;;;;vpos;;v;;a;;r;;d32,17;;b0,0;;m0;;etext;;p">
</treenode>
<treenode node="ctype_graph;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\bootstrap.php;f4;18;71;18;;;;vpos;;v;;a;;r;;d32,18;;b0,0;;m0;;etext;;p">
</treenode>
<treenode node="ctype_lower;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\bootstrap.php;f4;19;71;19;;;;vpos;;v;;a;;r;;d32,19;;b0,0;;m0;;etext;;p">
</treenode>
<treenode node="ctype_print;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\bootstrap.php;f4;20;71;20;;;;vpos;;v;;a;;r;;d32,20;;b0,0;;m0;;etext;;p">
</treenode>
<treenode node="ctype_punct;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\bootstrap.php;f4;21;71;21;;;;vpos;;v;;a;;r;;d32,21;;b0,0;;m0;;etext;;p">
</treenode>
<treenode node="ctype_space;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\bootstrap.php;f4;22;71;22;;;;vpos;;v;;a;;r;;d32,22;;b0,0;;m0;;etext;;p">
</treenode>
<treenode node="ctype_upper;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\bootstrap.php;f4;23;71;23;;;;vpos;;v;;a;;r;;d32,23;;b0,0;;m0;;etext;;p">
</treenode>
<treenode node="ctype_xdigit;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-ctype\bootstrap.php;f4;24;73;24;;;;vpos;;v;;a;;r;;d33,24;;b0,0;;m0;;etext;;p">
</treenode>
<treenode node="error_clear_last;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\bootstrap.php;f8;24;75;24;;;;vpos;;v;;a;;r;;d36,24;;b0,0;;m0;;e">
</treenode>
<treenode node="handleSignal;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\process\Tests\NonStopableProcess.php;f0;18;1;33;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    handleSignal($signal)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Runs a PHP script that can be stopped only with a SIGKILL (9) signal for 3 seconds.&#10;&lt;b&gt;args&lt;/b&gt;: duration Run this script with a custom duration&#10;&lt;b&gt;example&lt;/b&gt;: `php NonStopableProcess.php 42` will run the script for 42 seconds;;d0,19;;b0,0;;m0;;esignal;;p">
</treenode>
<treenode node="hrtime;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php73\bootstrap.php;f8;21;75;21;;;;vpos;;v;;a;;r;;d40,21;;b0,0;;m0;;easNum;;p">
</treenode>
<treenode node="implode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f4;10;20;10;;;;vpos;;v;;a;;r;;d-1,-1;;b1,0;;m0;;e">
</treenode>
<treenode node="in_array;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f4;11;21;11;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="includeFile;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\composer\ClassLoader.php;f0;441;1;444;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    includeFile($file)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Scope isolated include.&#10;Prevents access to $this/self from included files.;;d0,442;;b0,0;;m0;;efile;;p">
</treenode>
<treenode node="intdiv;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\bootstrap.php;f8;18;93;18;;;;vpos;;v;;a;;r;;d45,18;;b0,0;;m0;;edividend;;pdivisor;;p">
</treenode>
<treenode node="is_countable;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php73\bootstrap.php;f8;15;161;15;;;;vpos;;v;;a;;r;;d36,15;;b0,0;;m0;;evar;;p">
</treenode>
<treenode node="mb_check_encoding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;28;120;28;;;;vpos;;v;;a;;r;;d62,28;;b0,0;;m0;;evar;;pencoding;;p">
</treenode>
<treenode node="mb_chr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\bootstrap.php;f8;32;84;32;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;55;83;55;;;;vpos;;v;;a;;r;;d44,32;;b0,0;;m0;;ecode;;penc;;p">
</treenode>
<treenode node="mb_convert_case;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;23;109;23;;;;vpos;;v;;a;;r;;d53,23;;b0,0;;m0;;es;;pmode;;penc;;p">
</treenode>
<treenode node="mb_convert_encoding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;18;115;18;;;;vpos;;v;;a;;r;;d56,18;;b0,0;;m0;;es;;pto;;pfrom;;p">
</treenode>
<treenode node="mb_convert_variables;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;51;230;51;;;;vpos;;v;;a;;r;;d134,51;;b0,0;;m0;;etoEncoding;;pfromEncoding;;pa;;pb;;pc;;pd;;pe;;pf;;p">
</treenode>
<treenode node="mb_decode_mimeheader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;19;86;19;;;;vpos;;v;;a;;r;;d38,19;;b0,0;;m0;;es;;p">
</treenode>
<treenode node="mb_decode_numericentity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;21;131;21;;;;vpos;;v;;a;;r;;d64,21;;b0,0;;m0;;es;;pconvmap;;penc;;p">
</treenode>
<treenode node="mb_detect_encoding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;29;149;29;;;;vpos;;v;;a;;r;;d77,29;;b0,0;;m0;;estr;;pencodingList;;pstrict;;p">
</treenode>
<treenode node="mb_detect_order;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;30;105;30;;;;vpos;;v;;a;;r;;d51,30;;b0,0;;m0;;eencodingList;;p">
</treenode>
<treenode node="mb_encode_mimeheader;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;20;190;20;;;;vpos;;v;;a;;r;;d104,20;;b0,0;;m0;;es;;pcharset;;ptransferEnc;;plf;;pindent;;p">
</treenode>
<treenode node="mb_encode_numericentity;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;22;157;22;;;;vpos;;v;;a;;r;;d81,22;;b0,0;;m0;;es;;pconvmap;;penc;;pis_hex;;p">
</treenode>
<treenode node="mb_encoding_aliases;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;27;98;27;;;;vpos;;v;;a;;r;;d44,27;;b0,0;;m0;;eencoding;;p">
</treenode>
<treenode node="mb_get_info;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;45;82;45;;;;vpos;;v;;a;;r;;d40,45;;b0,0;;m0;;etype;;p">
</treenode>
<treenode node="mb_http_input;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;50;83;50;;;;vpos;;v;;a;;r;;d39,50;;b0,0;;m0;;etype;;p">
</treenode>
<treenode node="mb_http_output;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;46;85;46;;;;vpos;;v;;a;;r;;d41,46;;b0,0;;m0;;eenc;;p">
</treenode>
<treenode node="mb_internal_encoding;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;24;97;24;;;;vpos;;v;;a;;r;;d47,24;;b0,0;;m0;;eenc;;p">
</treenode>
<treenode node="mb_language;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;25;81;25;;;;vpos;;v;;a;;r;;d39,25;;b0,0;;m0;;elang;;p">
</treenode>
<treenode node="mb_list_encodings;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;26;76;26;;;;vpos;;v;;a;;r;;d33,26;;b0,0;;m0;;e">
</treenode>
<treenode node="mb_ord;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\bootstrap.php;f8;31;78;31;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;54;77;54;;;;vpos;;v;;a;;r;;d41,31;;b0,0;;m0;;es;;penc;;p">
</treenode>
<treenode node="mb_output_handler;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;49;112;49;;;;vpos;;v;;a;;r;;d51,49;;b0,0;;m0;;econtents;;pstatus;;p">
</treenode>
<treenode node="mb_parse_str;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;31;77;31;;;;vpos;;v;;a;;r;;d50,31;;b0,0;;m0;;es;;presult;;p">
</treenode>
<treenode node="mb_scrub;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\bootstrap.php;f8;33;144;33;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;56;140;56;;;;vpos;;v;;a;;r;;d43,33;;b0,0;;m0;;es;;penc;;p">
</treenode>
<treenode node="mb_str_split;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;60;143;60;;;;vpos;;v;;a;;r;;d72,60;;b0,0;;m0;;estring;;psplit_length;;pencoding;;p">
</treenode>
<treenode node="mb_stripos;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;38;125;38;;;;vpos;;v;;a;;r;;d63,38;;b0,0;;m0;;es;;pneedle;;poffset;;penc;;p">
</treenode>
<treenode node="mb_stristr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;39;125;39;;;;vpos;;v;;a;;r;;d65,39;;b0,0;;m0;;es;;pneedle;;ppart;;penc;;p">
</treenode>
<treenode node="mb_strlen;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;32;83;32;;;;vpos;;v;;a;;r;;d40,32;;b0,0;;m0;;es;;penc;;p">
</treenode>
<treenode node="mb_strpos;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;33;123;33;;;;vpos;;v;;a;;r;;d62,33;;b0,0;;m0;;es;;pneedle;;poffset;;penc;;p">
</treenode>
<treenode node="mb_strrchr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;40;125;40;;;;vpos;;v;;a;;r;;d65,40;;b0,0;;m0;;es;;pneedle;;ppart;;penc;;p">
</treenode>
<treenode node="mb_strrichr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;41;127;41;;;;vpos;;v;;a;;r;;d66,41;;b0,0;;m0;;es;;pneedle;;ppart;;penc;;p">
</treenode>
<treenode node="mb_strripos;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;42;127;42;;;;vpos;;v;;a;;r;;d64,42;;b0,0;;m0;;es;;pneedle;;poffset;;penc;;p">
</treenode>
<treenode node="mb_strrpos;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;43;125;43;;;;vpos;;v;;a;;r;;d63,43;;b0,0;;m0;;es;;pneedle;;poffset;;penc;;p">
</treenode>
<treenode node="mb_strstr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;44;123;44;;;;vpos;;v;;a;;r;;d64,44;;b0,0;;m0;;es;;pneedle;;ppart;;penc;;p">
</treenode>
<treenode node="mb_strtolower;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;34;91;34;;;;vpos;;v;;a;;r;;d44,34;;b0,0;;m0;;es;;penc;;p">
</treenode>
<treenode node="mb_strtoupper;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;35;91;35;;;;vpos;;v;;a;;r;;d44,35;;b0,0;;m0;;es;;penc;;p">
</treenode>
<treenode node="mb_strwidth;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;47;87;47;;;;vpos;;v;;a;;r;;d42,47;;b0,0;;m0;;es;;penc;;p">
</treenode>
<treenode node="mb_substitute_character;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;36;105;36;;;;vpos;;v;;a;;r;;d51,36;;b0,0;;m0;;echar;;p">
</treenode>
<treenode node="mb_substr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;37;130;37;;;;vpos;;v;;a;;r;;d70,37;;b0,0;;m0;;es;;pstart;;plength;;penc;;p">
</treenode>
<treenode node="mb_substr_count;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-mbstring\bootstrap.php;f4;48;127;48;;;;vpos;;v;;a;;r;;d62,48;;b0,0;;m0;;ehaystack;;pneedle;;penc;;p">
</treenode>
<treenode node="preg_replace_callback_array;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php70\bootstrap.php;f8;21;183;21;;;;vpos;;v;;a;;r;;d98,21;;b0,0;;m0;;epatterns;;psubject;;plimit;;pcount;;p">
</treenode>
<treenode node="preg_split;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f4;12;23;12;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="sapi_windows_vt100_support;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\bootstrap.php;f8;15;134;15;;;;vpos;;v;;a;;r;;d69,15;;b0,0;;m0;;estream;;penable;;p">
</treenode>
<treenode node="spl_object_id;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\bootstrap.php;f8;25;73;25;;;;vpos;;v;;a;;r;;d35,25;;b0,0;;m0;;es;;p">
</treenode>
<treenode node="sprintf;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f4;13;20;13;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="stream_isatty;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\bootstrap.php;f8;18;83;18;;;;vpos;;v;;a;;r;;d40,18;;b0,0;;m0;;estream;;p">
</treenode>
<treenode node="substr;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\doctrine\lexer\lib\Doctrine\Common\Lexer\AbstractLexer.php;f4;14;19;14;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="utf8_decode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\bootstrap.php;f8;22;69;22;;;;vpos;;v;;a;;r;;d33,22;;b0,0;;m0;;es;;p">
</treenode>
<treenode node="utf8_encode;PHP:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\symfony\polyfill-php72\bootstrap.php;f8;21;69;21;;;;vpos;;v;;a;;r;;d33,21;;b0,0;;m0;;es;;p">
</treenode>
</phptree>
<jstree>
<treenode node="$t;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f24389;5;25012;5;;;;vpos;;v;;a;;r;;d24411,5;;b0,0;;m0;;et;;pe;;pi;;pn;;po;;p">
</treenode>
<treenode node="A;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f23781;1;23870;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f23695;1;23773;1;;;;vpos;;v;;a;;r;;d23796,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="Ae;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f38935;1;39030;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f39254;1;39675;1;;;;vpos;;v;;a;;r;;d38951,1;;b0,0;;m0;;ee;;pt;;p">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f39274;1;39595;1;;;;vpos;;v;;a;;r;;d39552,1;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
<treenode node="Alert;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f6;257;3;367;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;256;3;366;;;;vpos;;v;;a;;r;;d14,259;;b0,0;;m0;;e">
<treenode node="Alert;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;260;5;262;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;259;5;261;;;;vpos;;v;;a;;r;;d28,260;;b0,0;;m0;;eelement;;p">
<treenode node="_handleDismiss;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;349;24;349;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;348;24;348;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;333;26;333;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;332;26;332;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="_destroyElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f41;323;5;330;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f41;322;5;329;;;;vpos;;v;;a;;r;;d63,328;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="_getRootElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f34;268;5;303;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f34;267;5;302;;;;vpos;;v;;a;;r;;d63,290;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="_handleDismiss;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f23;334;5;357;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f23;333;5;356;;;;vpos;;v;;a;;r;;d66,349;;b0,0;;m0;;ealertInstance;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f54;328;5;347;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f54;327;5;346;;;;vpos;;v;;a;;r;;d63,333;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="_removeElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f60;305;5;326;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f60;304;5;325;;;;vpos;;v;;a;;r;;d61,311;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="_triggerCloseEvent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f54;290;5;309;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f54;289;5;308;;;;vpos;;v;;a;;r;;d69,305;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="close;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f19;260;5;282;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f19;259;5;281;;;;vpos;;v;;a;;r;;d43,268;;b0,0;;m0;;eelement;;p">
</treenode>
</treenode>
<treenode node="Animation;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;7290;1;7413;;;;vpos;;v;;a;;r;;d48,7290;;b0,0;;m0;;eelem;;pproperties;;poptions;;p">
<treenode node="createTween;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f3;7346;4;7351;;;;vpos;;v;;a;;r;;d38,7346;;b0,0;;m0;;eprop;;pend;;p">
</treenode>
<treenode node="stop;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f3;7352;4;7374;;;;vpos;;v;;a;;r;;d29,7352;;b0,0;;m0;;egotoEnd;;p">
</treenode>
<treenode node="tick;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f10;7298;3;7333;;;;vpos;;v;;a;;r;;d20,7300;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="B;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f27515;1;27537;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f31147;1;31246;1;;;;vpos;;v;;a;;r;;d27528,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="Be;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f47966;1;48158;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f36439;5;45347;5;;;;vpos;;v;;a;;r;;d47984,1;;b0,0;;m0;;ee;;pt;;pn;;p">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f36453;5;36758;5;;;;vpos;;v;;a;;r;;d36468,5;;b0,0;;m0;;et;;pe;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f44748;5;45032;5;;;;vpos;;v;;a;;r;;d44776,5;;b0,0;;m0;;en;;p">
</treenode>
</treenode>
</treenode>
<treenode node="Bt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f73325;1;73540;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f21096;5;21232;5;;;;vpos;;v;;a;;r;;d73339,1;;b0,0;;m0;;eo;;p">
</treenode>
<treenode node="Button;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f6;425;3;509;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;424;3;508;;;;vpos;;v;;a;;r;;d14,427;;b0,0;;m0;;e">
<treenode node="Button;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;428;5;430;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;427;5;429;;;;vpos;;v;;a;;r;;d29,428;;b0,0;;m0;;eelement;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f11;486;27;486;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f11;485;27;485;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f20;428;5;499;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f20;427;5;498;;;;vpos;;v;;a;;r;;d64,486;;b0,0;;m0;;econfig;;p">
</treenode>
</treenode>
<treenode node="C;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f606;1;805;1;;;;vpos;;v;;a;;r;;d623,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="Carousel;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f6;632;3;1112;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;631;3;1111;;;;vpos;;v;;a;;r;;d14,634;;b0,0;;m0;;e">
<treenode node="Carousel;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;635;5;651;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;634;5;650;;;;vpos;;v;;a;;r;;d39,635;;b0,0;;m0;;eelement;;pconfig;;p">
<treenode node="_dataApiClickHandler;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f13;1069;33;1069;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f13;1068;33;1068;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f13;1037;29;1037;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f13;1036;29;1036;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="_addEventListeners;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f44;749;5;794;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f44;748;5;793;;;;vpos;;v;;a;;r;;d62,774;;b0,0;;m0;;e">
</treenode>
<treenode node="_addTouchEventListeners;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f33;786;5;871;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f33;785;5;870;;;;vpos;;v;;a;;r;;d72,796;;b0,0;;m0;;e">
<treenode node="end;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;820;7;845;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;819;7;844;;;;vpos;;v;;a;;r;;d36,820;;b0,0;;m0;;eevent;;p">
</treenode>
<treenode node="move;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;811;7;818;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;810;7;817;;;;vpos;;v;;a;;r;;d38,811;;b0,0;;m0;;eevent;;p">
</treenode>
<treenode node="start;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;803;7;809;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;802;7;808;;;;vpos;;v;;a;;r;;d40,803;;b0,0;;m0;;eevent;;p">
</treenode>
</treenode>
<treenode node="_dataApiClickHandler;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f23;1038;5;1097;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f23;1037;5;1096;;;;vpos;;v;;a;;r;;d73,1069;;b0,0;;m0;;eevent;;p">
</treenode>
<treenode node="_getConfig;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f42;718;5;753;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f42;717;5;752;;;;vpos;;v;;a;;r;;d52,749;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="_getItemByDirection;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f50;893;5;914;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f50;892;5;913;;;;vpos;;v;;a;;r;;d88,898;;b0,0;;m0;;edirection;;pactiveElement;;p">
</treenode>
<treenode node="_getItemIndex;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f40;873;5;896;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f40;872;5;895;;;;vpos;;v;;a;;r;;d59,893;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f21;1020;5;1067;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f21;1019;5;1066;;;;vpos;;v;;a;;r;;d66,1037;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="_keydown;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f45;867;5;891;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f45;866;5;890;;;;vpos;;v;;a;;r;;d47,873;;b0,0;;m0;;eevent;;p">
</treenode>
<treenode node="_setActiveIndicatorElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f75;916;5;942;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f75;915;5;941;;;;vpos;;v;;a;;r;;d85,931;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="_slide;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f76;931;5;1034;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f76;930;5;1033;;;;vpos;;v;;a;;r;;d56,944;;b0,0;;m0;;edirection;;pelement;;p">
</treenode>
<treenode node="_triggerSlideEvent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f73;898;5;929;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f73;897;5;928;;;;vpos;;v;;a;;r;;d95,916;;b0,0;;m0;;erelatedTarget;;peventDirectionName;;p">
</treenode>
<treenode node="cycle;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f34;677;5;704;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f34;676;5;703;;;;vpos;;v;;a;;r;;d41,691;;b0,0;;m0;;eevent;;p">
</treenode>
<treenode node="pause;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f31;635;5;689;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f31;634;5;688;;;;vpos;;v;;a;;r;;d41,677;;b0,0;;m0;;eevent;;p">
</treenode>
<treenode node="to;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f34;691;5;733;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f34;690;5;732;;;;vpos;;v;;a;;r;;d35,706;;b0,0;;m0;;eindex;;p">
</treenode>
</treenode>
<treenode node="Ci;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f68767;5;72310;5;;;;vpos;;v;;a;;r;;d68780,5;;b0,0;;m0;;e">
<treenode node="n;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f68781;5;69189;5;;;;vpos;;v;;a;;r;;d68796,5;;b0,0;;m0;;et;;pe;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f71959;5;72207;5;;;;vpos;;v;;a;;r;;d71987,5;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
</treenode>
<treenode node="Collapse;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f6;1192;3;1465;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;1191;3;1464;;;;vpos;;v;;a;;r;;d14,1194;;b0,0;;m0;;e">
<treenode node="Collapse;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;1195;5;1225;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1194;5;1224;;;;vpos;;v;;a;;r;;d39,1195;;b0,0;;m0;;eelement;;pconfig;;p">
<treenode node="_getTargetFromElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f13;1421;34;1421;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f13;1420;34;1420;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f13;1426;29;1426;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f13;1425;29;1425;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="_addAriaAndCollapsedClass;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f23;1406;5;1418;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f23;1405;5;1417;;;;vpos;;v;;a;;r;;d97,1412;;b0,0;;m0;;eelement;;ptriggerArray;;p">
</treenode>
<treenode node="_getConfig;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f56;1362;5;1382;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f56;1361;5;1381;;;;vpos;;v;;a;;r;;d52,1376;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="_getParent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f44;1376;5;1410;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f44;1375;5;1409;;;;vpos;;v;;a;;r;;d46,1389;;b0,0;;m0;;e">
</treenode>
<treenode node="_getTargetFromElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f83;1412;5;1424;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f83;1411;5;1423;;;;vpos;;v;;a;;r;;d77,1421;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f68;1421;5;1450;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f68;1420;5;1449;;;;vpos;;v;;a;;r;;d66,1426;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="setTransitioning;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f90;1250;5;1364;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f90;1249;5;1363;;;;vpos;;v;;a;;r;;d73,1362;;b0,0;;m0;;eisTransitioning;;p">
<treenode node="complete;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;1351;7;1355;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;1350;7;1354;;;;vpos;;v;;a;;r;;d41,1351;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="show;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f86;1205;5;1311;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f86;1204;5;1310;;;;vpos;;v;;a;;r;;d34,1239;;b0,0;;m0;;e">
<treenode node="complete;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;1297;7;1304;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;1296;7;1303;;;;vpos;;v;;a;;r;;d41,1297;;b0,0;;m0;;e">
</treenode>
</treenode>
</treenode>
<treenode node="Ct;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f69636;1;69671;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f13856;5;18100;5;;;;vpos;;v;;a;;r;;d69650,1;;b0,0;;m0;;ee;;p">
<treenode node="a;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f13870;5;14560;5;;;;vpos;;v;;a;;r;;d13885,5;;b0,0;;m0;;ee;;pt;;p">
<treenode node="_getTargetFromElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f17564;5;17672;5;;;;vpos;;v;;a;;r;;d17597,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f17675;5;17997;5;;;;vpos;;v;;a;;r;;d17703,5;;b0,0;;m0;;ei;;p">
</treenode>
</treenode>
</treenode>
<treenode node="DOMEval;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;97;2;124;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;97;2;124;;;;vpos;;v;;a;;r;;d37,97;;b0,0;;m0;;ecode;;pnode;;pdoc;;p">
</treenode>
<treenode node="Data;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4026;1;4028;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4026;1;4028;;;;vpos;;v;;a;;r;;d16,4026;;b0,0;;m0;;e">
</treenode>
<treenode node="De;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f39675;1;40244;1;;;;vpos;;v;;a;;r;;d39693,1;;b0,0;;m0;;ee;;pi;;po;;p">
<treenode node="handler;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f39741;1;40199;1;;;;vpos;;v;;a;;r;;d39760,1;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
<treenode node="Dn;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f48211;5;51754;5;;;;vpos;;v;;a;;r;;d48224,5;;b0,0;;m0;;e">
<treenode node="n;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f48225;5;48633;5;;;;vpos;;v;;a;;r;;d48240,5;;b0,0;;m0;;et;;pe;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f51403;5;51651;5;;;;vpos;;v;;a;;r;;d51431,5;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
</treenode>
<treenode node="Dropdown;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f6;1587;3;2000;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;4165;3;4578;;;;vpos;;v;;a;;r;;d14,1589;;b0,0;;m0;;e">
<treenode node="Dropdown;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;1590;5;1598;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;4168;5;4176;;;;vpos;;v;;a;;r;;d39,1590;;b0,0;;m0;;eelement;;pconfig;;p">
<treenode node="_clearMenus;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f13;1860;24;1860;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f13;4438;24;4438;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="_dataApiKeydownHandler;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f13;1924;35;1924;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f13;4502;35;4502;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="_getParentFromElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f13;1912;34;1912;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f13;4490;34;4490;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f13;1839;29;1839;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f13;4417;29;4417;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="_addEventListeners;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f31;1590;5;1752;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f31;4168;5;4330;;;;vpos;;v;;a;;r;;d62,1743;;b0,0;;m0;;e">
</treenode>
<treenode node="_clearMenus;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f23;1840;5;1910;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f23;4418;5;4488;;;;vpos;;v;;a;;r;;d55,1860;;b0,0;;m0;;eevent;;p">
</treenode>
<treenode node="_dataApiKeydownHandler;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f68;1912;5;1980;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f68;4490;5;4558;;;;vpos;;v;;a;;r;;d77,1924;;b0,0;;m0;;eevent;;p">
</treenode>
<treenode node="_getConfig;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f40;1746;5;1758;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f40;4324;5;4336;;;;vpos;;v;;a;;r;;d52,1754;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="_getOffset;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f44;1754;5;1812;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f44;4332;5;4390;;;;vpos;;v;;a;;r;;d46,1797;;b0,0;;m0;;e">
</treenode>
<treenode node="_getParentFromElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f48;1860;5;1921;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f48;4438;5;4499;;;;vpos;;v;;a;;r;;d77,1912;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f30;1803;5;1858;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f30;4381;5;4436;;;;vpos;;v;;a;;r;;d66,1839;;b0,0;;m0;;econfig;;p">
</treenode>
</treenode>
<treenode node="E;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f1130;1;1172;1;;;;vpos;;v;;a;;r;;d1145,1;;b0,0;;m0;;ee;;pt;;p">
<treenode node="Callbacks;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f27701;1;28795;1;;;;vpos;;v;;a;;r;;d27722,1;;b0,0;;m0;;er;;p">
<treenode node="c;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f27853;1;28033;1;;;;vpos;;v;;a;;r;;d27865,1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Event;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f43891;1;44349;1;;;;vpos;;v;;a;;r;;d43910,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="filter;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f24266;1;24455;1;;;;vpos;;v;;a;;r;;d24288,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="holdReady;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f70251;1;70301;1;;;;vpos;;v;;a;;r;;d70272,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="isNumeric;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f70430;1;70528;1;;;;vpos;;v;;a;;r;;d70451,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="noConflict;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f70641;1;70722;1;;;;vpos;;v;;a;;r;;d70663,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="param;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f64799;1;65102;1;;;;vpos;;v;;a;;r;;d64818,1;;b0,0;;m0;;ee;;pt;;p">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f64830;1;64934;1;;;;vpos;;v;;a;;r;;d64845,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
</treenode>
<treenode node="parseHTML;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f66610;1;66968;1;;;;vpos;;v;;a;;r;;d66635,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="proxy;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f70045;1;70248;1;;;;vpos;;v;;a;;r;;d70064,1;;b0,0;;m0;;ee;;pt;;p">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f70073;1;70215;1;;;;vpos;;v;;a;;r;;d70162,1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="readyException;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f31270;1;31331;1;;;;vpos;;v;;a;;r;;d31296,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="removeEvent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f43810;1;43888;1;;;;vpos;;v;;a;;r;;d43837,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
</treenode>
<treenode node="Ee;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f38889;1;38912;1;;;;vpos;;v;;a;;r;;d38902,1;;b0,0;;m0;;e">
</treenode>
<treenode node="F;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f31351;1;31450;1;;;;vpos;;v;;a;;r;;d31363,1;;b0,0;;m0;;e">
</treenode>
<treenode node="Fe;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f51057;1;51361;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f51151;1;51248;1;;;;vpos;;v;;a;;r;;d51075,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="Ft;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f20014;5;20443;5;;;;vpos;;v;;a;;r;;d20030,5;;b0,0;;m0;;et;;pe;;p">
</treenode>
<treenode node="G;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f32118;1;32184;1;;;;vpos;;v;;a;;r;;d32131,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="Ge;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f52737;1;52913;1;;;;vpos;;v;;a;;r;;d52751,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="Gt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f23311;5;24389;5;;;;vpos;;v;;a;;r;;d23331,5;;b0,0;;m0;;et;;pe;;pn;;pi;;p">
<treenode node="r;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f23394;5;23775;5;;;;vpos;;v;;a;;r;;d23460,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="t;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f23976;5;24109;5;;;;vpos;;v;;a;;r;;d23989,5;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
<treenode node="H;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f25683;1;25740;1;;;;vpos;;v;;a;;r;;d25698,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="He;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f46828;1;46934;1;;;;vpos;;v;;a;;r;;d46842,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="Ht;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f19529;5;19578;5;;;;vpos;;v;;a;;r;;d19543,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="I;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f27311;1;27333;1;;;;vpos;;v;;a;;r;;d27324,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="Identity;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;3442;1;3444;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;3442;1;3444;;;;vpos;;v;;a;;r;;d23,3442;;b0,0;;m0;;ev;;p">
</treenode>
<treenode node="Ie;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f46934;1;47200;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f47424;1;48190;1;;;;vpos;;v;;a;;r;;d46950,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="Jt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f19457;5;24721;5;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f25012;5;25128;5;;;;vpos;;v;;a;;r;;d19470,5;;b0,0;;m0;;e">
<treenode node="c;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f19471;5;19649;5;;;;vpos;;v;;a;;r;;d19486,5;;b0,0;;m0;;et;;pe;;p">
<treenode node="_clearMenus;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f23088;5;23809;5;;;;vpos;;v;;a;;r;;d23111,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="_dataApiKeydownHandler;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f23941;5;24572;5;;;;vpos;;v;;a;;r;;d23975,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="_getParentFromElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f23812;5;23938;5;;;;vpos;;v;;a;;r;;d23845,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f22833;5;23085;5;;;;vpos;;v;;a;;r;;d22861,5;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
</treenode>
<treenode node="Kn;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f52452;5;54531;5;;;;vpos;;v;;a;;r;;d52465,5;;b0,0;;m0;;e">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f52466;5;52496;5;;;;vpos;;v;;a;;r;;d52479,5;;b0,0;;m0;;et;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f54246;5;54470;5;;;;vpos;;v;;a;;r;;d54274,5;;b0,0;;m0;;en;;p">
</treenode>
</treenode>
</treenode>
<treenode node="Kt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f21482;5;21603;5;;;;vpos;;v;;a;;r;;d21500,5;;b0,0;;m0;;et;;pe;;pn;;p">
</treenode>
<treenode node="L;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f24049;1;24264;1;;;;vpos;;v;;a;;r;;d24066,1;;b0,0;;m0;;ee;;pn;;pr;;p">
</treenode>
<treenode node="Lt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f19171;5;19419;5;;;;vpos;;v;;a;;r;;d19185,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="M;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f27537;1;27699;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f27288;1;27311;1;;;;vpos;;v;;a;;r;;d27556,1;;b0,0;;m0;;ee;;pt;;pn;;pr;;p">
</treenode>
<treenode node="Me;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f47158;1;47424;1;;;;vpos;;v;;a;;r;;d47174,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="Modal;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f6;2092;3;2559;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;4670;3;5137;;;;vpos;;v;;a;;r;;d14,2094;;b0,0;;m0;;e">
<treenode node="Modal;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;2095;5;2105;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;4673;5;4683;;;;vpos;;v;;a;;r;;d36,2095;;b0,0;;m0;;eelement;;pconfig;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;2523;26;2523;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;5101;26;5101;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="_enforceFocus;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f48;2241;5;2303;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f48;4819;5;4881;;;;vpos;;v;;a;;r;;d52,2294;;b0,0;;m0;;e">
</treenode>
<treenode node="_getConfig;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f52;2208;5;2239;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f52;4786;5;4817;;;;vpos;;v;;a;;r;;d52,2235;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="_hideModal;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f36;2325;5;2353;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f36;4903;5;4931;;;;vpos;;v;;a;;r;;d46,2333;;b0,0;;m0;;e">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f23;2499;5;2544;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f23;5077;5;5122;;;;vpos;;v;;a;;r;;d78,2523;;b0,0;;m0;;econfig;;prelatedTarget;;p">
</treenode>
<treenode node="_resetScrollbar;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f30;2475;5;2510;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f30;5053;5;5088;;;;vpos;;v;;a;;r;;d56,2489;;b0,0;;m0;;e">
</treenode>
<treenode node="_setEscapeEvent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f26;2298;5;2319;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f26;4876;5;4897;;;;vpos;;v;;a;;r;;d56,2305;;b0,0;;m0;;e">
</treenode>
<treenode node="_setResizeEvent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f52;2309;5;2331;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f52;4887;5;4909;;;;vpos;;v;;a;;r;;d56,2321;;b0,0;;m0;;e">
</treenode>
<treenode node="_setScrollbar;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f50;2376;5;2487;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f50;4954;5;5065;;;;vpos;;v;;a;;r;;d52,2460;;b0,0;;m0;;e">
</treenode>
<treenode node="_showBackdrop;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f25;2344;5;2431;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f25;4922;5;5009;;;;vpos;;v;;a;;r;;d60,2362;;b0,0;;m0;;ecallback;;p">
<treenode node="callbackRemove;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f12;2413;9;2419;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f12;4991;9;4997;;;;vpos;;v;;a;;r;;d55,2413;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="_showElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f44;2235;5;2292;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f44;4813;5;4870;;;;vpos;;v;;a;;r;;d63,2241;;b0,0;;m0;;erelatedTarget;;p">
<treenode node="transitionComplete;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;2277;7;2284;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;4855;7;4862;;;;vpos;;v;;a;;r;;d61,2277;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="dispose;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f49;2199;5;2228;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f49;4777;5;4806;;;;vpos;;v;;a;;r;;d40,2207;;b0,0;;m0;;e">
</treenode>
<treenode node="hide;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f25;2158;5;2205;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f25;4736;5;4783;;;;vpos;;v;;a;;r;;d39,2163;;b0,0;;m0;;eevent;;p">
</treenode>
<treenode node="show;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f36;2111;5;2161;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f36;4689;5;4739;;;;vpos;;v;;a;;r;;d47,2115;;b0,0;;m0;;erelatedTarget;;p">
</treenode>
<treenode node="toggle;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f28;2095;5;2113;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f28;4673;5;4691;;;;vpos;;v;;a;;r;;d51,2111;;b0,0;;m0;;erelatedTarget;;p">
</treenode>
</treenode>
<treenode node="Mt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f20443;5;20696;5;;;;vpos;;v;;a;;r;;d20457,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="N;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f23648;1;23780;1;;;;vpos;;v;;a;;r;;d23665,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="Ne;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f38912;1;38935;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f39159;1;39254;1;;;;vpos;;v;;a;;r;;d38925,1;;b0,0;;m0;;e">
</treenode>
<treenode node="Nt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f18988;5;19107;5;;;;vpos;;v;;a;;r;;d19004,5;;b0,0;;m0;;et;;pe;;p">
</treenode>
<treenode node="Oe;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f46647;1;46754;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f46871;1;46978;1;;;;vpos;;v;;a;;r;;d46663,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="Ot;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f18921;5;18988;5;;;;vpos;;v;;a;;r;;d18935,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="P;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f25479;1;25536;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f4485;5;5414;5;;;;vpos;;v;;a;;r;;d25494,1;;b0,0;;m0;;ee;;pt;;p">
<treenode node="n;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f4498;5;4528;5;;;;vpos;;v;;a;;r;;d4511,5;;b0,0;;m0;;et;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f5214;5;5353;5;;;;vpos;;v;;a;;r;;d5242,5;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
</treenode>
<treenode node="Pe;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f46754;1;46828;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f46978;1;47052;1;;;;vpos;;v;;a;;r;;d46768,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="Popover;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f6;3502;3;3621;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;6080;3;6199;;;;vpos;;v;;a;;r;;d22,3504;;b0,0;;m0;;e_Tooltip;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f60;3518;5;3580;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f60;6096;5;6158;;;;vpos;;v;;a;;r;;d65,3557;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="addAttachmentClass;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;3507;5;3520;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;6085;5;6098;;;;vpos;;v;;a;;r;;d72,3518;;b0,0;;m0;;eattachment;;p">
</treenode>
</treenode>
<treenode node="Popper;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;3929;3;4055;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    Popper = function ()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &#10;&lt;b&gt;callback&lt;/b&gt;: onUpdate&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    dataObject &lt;b&gt;data&lt;/b&gt;;;d27,3929;;b0,0;;m0;;e">
<treenode node="Popper;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;3938;5;4002;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function Popper(reference, popper)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Creates a new Popper.js instance.&#10;&lt;b&gt;class&lt;/b&gt;: Popper&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    HTMLElement|referenceObject &lt;b&gt;reference&lt;/b&gt;: The reference element used to position the popper&#10;    HTMLElement &lt;b&gt;popper&lt;/b&gt;: The HTML element used as the popper&#10;    Object &lt;b&gt;options&lt;/b&gt;: Your custom options to override the ones defined in [Defaults](#defaults)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   instance - The generated Popper.js instance;;d39,3938;;b0,0;;m0;;ereference;;ppopper;;p">
<treenode node="scheduleUpdate;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f11;3944;7;3946;;;;vpos;;v;;a;;r;;d40,3944;;b0,2;;m0;;e">
</treenode>
</treenode>
<treenode node="disableEventListeners$$1;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f29;3986;7;4027;;;;vpos;;v;;a;;r;;d49,4025;;b0,0;;m0;;e">
</treenode>
<treenode node="value;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;4010;11;4010;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Q;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f32322;1;32388;1;;;;vpos;;v;;a;;r;;d32335,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="R;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f27492;1;27515;1;;;;vpos;;v;;a;;r;;d27505,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="Re;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f47200;1;47966;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f47052;1;47158;1;;;;vpos;;v;;a;;r;;d47220,1;;b0,0;;m0;;en;;pr;;pi;;po;;p">
</treenode>
<treenode node="Rt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f19953;5;20014;5;;;;vpos;;v;;a;;r;;d19967,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="S;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f23899;1;23977;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f23577;1;23666;1;;;;vpos;;v;;a;;r;;d23914,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="ScrollSpy;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f6;3691;3;3912;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;6269;3;6490;;;;vpos;;v;;a;;r;;d14,3693;;b0,0;;m0;;e">
<treenode node="ScrollSpy;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;3694;5;3711;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;6272;5;6289;;;;vpos;;v;;a;;r;;d40,3694;;b0,0;;m0;;eelement;;pconfig;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f14;3878;30;3878;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f14;6456;30;6456;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="_activate;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f44;3770;5;3867;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f44;6348;5;6445;;;;vpos;;v;;a;;r;;d50,3840;;b0,0;;m0;;etarget;;p">
</treenode>
<treenode node="_clear;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f50;3845;5;3875;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f50;6423;5;6453;;;;vpos;;v;;a;;r;;d38,3869;;b0,0;;m0;;e">
</treenode>
<treenode node="_getConfig;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f17;3749;5;3786;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f17;6327;5;6364;;;;vpos;;v;;a;;r;;d52,3770;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f17;3872;5;3897;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f17;6450;5;6475;;;;vpos;;v;;a;;r;;d67,3878;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="refresh;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f47;3705;5;3754;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f47;6283;5;6332;;;;vpos;;v;;a;;r;;d40,3717;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Se;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f39451;1;40020;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f39136;1;39159;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f34384;5;35185;5;;;;vpos;;v;;a;;r;;d39469,1;;b0,0;;m0;;ee;;pi;;po;;p">
<treenode node="handler;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f39517;1;39975;1;;;;vpos;;v;;a;;r;;d39536,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f34594;5;35132;5;;;;vpos;;v;;a;;r;;d34609,5;;b0,0;;m0;;et;;pe;;p">
</treenode>
</treenode>
<treenode node="Sizzle;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;728;1;862;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;728;1;862;;;;vpos;;v;;a;;r;;d52,728;;b0,0;;m0;;eselector;;pcontext;;presults;;pseed;;p">
<treenode node="attr;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;1533;1;1552;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;1533;1;1552;;;;vpos;;v;;a;;r;;d37,1533;;b0,0;;m0;;eelem;;pname;;p">
</treenode>
<treenode node="contains;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;1525;1;1531;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;1525;1;1531;;;;vpos;;v;;a;;r;;d44,1525;;b0,0;;m0;;econtext;;pelem;;p">
</treenode>
<treenode node="error;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;1558;1;1560;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;1558;1;1560;;;;vpos;;v;;a;;r;;d31,1558;;b0,0;;m0;;emsg;;p">
</treenode>
<treenode node="escape;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;1554;1;1556;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;1554;1;1556;;;;vpos;;v;;a;;r;;d32,1554;;b0,0;;m0;;esel;;p">
</treenode>
<treenode node="matches;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;1492;1;1494;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;1492;1;1494;;;;vpos;;v;;a;;r;;d44,1492;;b0,0;;m0;;eexpr;;pelements;;p">
</treenode>
<treenode node="matchesSelector;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;1496;1;1523;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;1496;1;1523;;;;vpos;;v;;a;;r;;d48,1496;;b0,0;;m0;;eelem;;pexpr;;p">
</treenode>
<treenode node="uniqueSort;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;1566;1;1593;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;1566;1;1593;;;;vpos;;v;;a;;r;;d40,1566;;b0,0;;m0;;eresults;;p">
</treenode>
</treenode>
<treenode node="T;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f805;1;912;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f23444;1;23576;1;;;;vpos;;v;;a;;r;;d818,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="Tab;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f6;3986;3;4152;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;6564;3;6730;;;;vpos;;v;;a;;r;;d14,3988;;b0,0;;m0;;e">
<treenode node="Tab;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;3989;5;3991;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;6567;5;6569;;;;vpos;;v;;a;;r;;d26,3989;;b0,0;;m0;;eelement;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f8;4124;24;4124;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f8;6702;24;6702;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="_activate;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f17;3989;5;4079;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f17;6567;5;6657;;;;vpos;;v;;a;;r;;d72,4062;;b0,0;;m0;;eelement;;pcontainer;;pcallback;;p">
<treenode node="complete;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;4038;7;4071;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;6616;7;6649;;;;vpos;;v;;a;;r;;d41,4069;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f79;4081;5;4142;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f79;6659;5;6720;;;;vpos;;v;;a;;r;;d61,4124;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="_transitionComplete;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f62;4062;5;4121;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f62;6640;5;6699;;;;vpos;;v;;a;;r;;d89,4081;;b0,0;;m0;;eelement;;pactive;;pcallback;;p">
</treenode>
</treenode>
<treenode node="Thrower;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;3445;1;3447;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;3445;1;3447;;;;vpos;;v;;a;;r;;d23,3445;;b0,0;;m0;;eex;;p">
</treenode>
<treenode node="Toast;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f6;4223;3;4378;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;6801;3;6956;;;;vpos;;v;;a;;r;;d14,4225;;b0,0;;m0;;e">
<treenode node="Toast;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;4226;5;4232;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;6804;5;6810;;;;vpos;;v;;a;;r;;d36,4226;;b0,0;;m0;;eelement;;pconfig;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;4338;26;4338;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;6916;26;6916;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="_getConfig;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f35;4283;5;4308;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f35;6861;5;6886;;;;vpos;;v;;a;;r;;d52,4304;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f73;4313;5;4358;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f73;6891;5;6936;;;;vpos;;v;;a;;r;;d63,4338;;b0,0;;m0;;econfig;;p">
<treenode node="complete;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;4321;7;4325;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;6899;7;6903;;;;vpos;;v;;a;;r;;d41,4321;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="_setListeners;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f44;4304;5;4316;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f44;6882;5;6894;;;;vpos;;v;;a;;r;;d52,4310;;b0,0;;m0;;e">
</treenode>
<treenode node="hide;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f28;4226;5;4287;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f28;6804;5;6865;;;;vpos;;v;;a;;r;;d48,4271;;b0,0;;m0;;ewithoutTimeout;;p">
<treenode node="complete;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;4247;7;4257;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;6825;7;6835;;;;vpos;;v;;a;;r;;d41,4247;;b0,0;;m0;;e">
</treenode>
</treenode>
</treenode>
<treenode node="Tooltip;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f6;2826;3;3434;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;5404;3;6012;;;;vpos;;v;;a;;r;;d14,2828;;b0,0;;m0;;e">
<treenode node="Tooltip;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;2829;5;2850;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;5407;5;5428;;;;vpos;;v;;a;;r;;d38,2829;;b0,0;;m0;;eelement;;pconfig;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f12;3371;28;3371;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f12;5949;28;5949;;;;vpos;;v;;a;;r;;d-1,-1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="_enter;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f59;3190;5;3246;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f59;5768;5;5824;;;;vpos;;v;;a;;r;;d52,3215;;b0,0;;m0;;eevent;;pcontext;;p">
</treenode>
<treenode node="_getAttachment;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f30;3144;5;3169;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f30;5722;5;5747;;;;vpos;;v;;a;;r;;d63,3167;;b0,0;;m0;;eplacement;;p">
</treenode>
<treenode node="_getConfig;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f36;3273;5;3321;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f36;5851;5;5899;;;;vpos;;v;;a;;r;;d52,3290;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="_getOffset;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f68;3102;5;3153;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f68;5680;5;5731;;;;vpos;;v;;a;;r;;d46,3138;;b0,0;;m0;;e">
</treenode>
<treenode node="_handlePopperPlacementChange;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f42;3292;5;3353;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f42;5870;5;5931;;;;vpos;;v;;a;;r;;d92,3346;;b0,0;;m0;;epopperData;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f80;3346;5;3394;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f80;5924;5;5972;;;;vpos;;v;;a;;r;;d65,3371;;b0,0;;m0;;econfig;;p">
</treenode>
<treenode node="_leave;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f36;3241;5;3278;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f36;5819;5;5856;;;;vpos;;v;;a;;r;;d52,3248;;b0,0;;m0;;eevent;;pcontext;;p">
</treenode>
<treenode node="_setListeners;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f52;3167;5;3204;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f52;5745;5;5782;;;;vpos;;v;;a;;r;;d52,3171;;b0,0;;m0;;e">
</treenode>
<treenode node="addAttachmentClass;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f32;3023;5;3089;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f32;5601;5;5667;;;;vpos;;v;;a;;r;;d72,3087;;b0,0;;m0;;eattachment;;p">
</treenode>
<treenode node="hide;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f38;2987;5;3074;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f38;5565;5;5652;;;;vpos;;v;;a;;r;;d42,3023;;b0,0;;m0;;ecallback;;p">
<treenode node="complete;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;3029;7;3047;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;5607;7;5625;;;;vpos;;v;;a;;r;;d41,3029;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="setElementContent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f60;3087;5;3125;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f60;5665;5;5703;;;;vpos;;v;;a;;r;;d77,3102;;b0,0;;m0;;eelement;;pcontent;;p">
</treenode>
<treenode node="show;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f36;2868;5;3021;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f36;5446;5;5599;;;;vpos;;v;;a;;r;;d34,2925;;b0,0;;m0;;e">
<treenode node="complete;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f12;3000;9;3012;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f12;5578;9;5590;;;;vpos;;v;;a;;r;;d43,3000;;b0,0;;m0;;e">
</treenode>
<treenode node="onCreate;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;2982;11;2986;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;5560;11;5564;;;;vpos;;v;;a;;r;;d44,2982;;b0,0;;m0;;edata;;p">
</treenode>
<treenode node="onUpdate;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f10;2987;11;2989;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f10;5565;11;5567;;;;vpos;;v;;a;;r;;d44,2987;;b0,0;;m0;;edata;;p">
</treenode>
</treenode>
<treenode node="toggle;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f30;2829;5;2898;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f30;5407;5;5476;;;;vpos;;v;;a;;r;;d43,2868;;b0,0;;m0;;eevent;;p">
</treenode>
</treenode>
<treenode node="Tween;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;6903;1;6905;;;;vpos;;v;;a;;r;;d51,6903;;b0,0;;m0;;eelem;;poptions;;pprop;;pend;;peasing;;p">
</treenode>
<treenode node="Ut;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f20851;5;21096;5;;;;vpos;;v;;a;;r;;d20871,5;;b0,0;;m0;;et;;pe;;pn;;pi;;p">
</treenode>
<treenode node="V;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f32226;1;32265;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f32061;1;32114;1;;;;vpos;;v;;a;;r;;d32241,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="Vt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f21769;5;21845;5;;;;vpos;;v;;a;;r;;d21783,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="W;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f27333;1;27495;1;;;;vpos;;v;;a;;r;;d27352,1;;b0,0;;m0;;ee;;pt;;pn;;pr;;p">
</treenode>
<treenode node="We;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f50927;1;51024;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f48190;1;48382;1;;;;vpos;;v;;a;;r;;d50941,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="Wi;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f73008;5;75087;5;;;;vpos;;v;;a;;r;;d73021,5;;b0,0;;m0;;e">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f73022;5;73052;5;;;;vpos;;v;;a;;r;;d73035,5;;b0,0;;m0;;et;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f74802;5;75026;5;;;;vpos;;v;;a;;r;;d74830,5;;b0,0;;m0;;en;;p">
</treenode>
</treenode>
</treenode>
<treenode node="Wt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f20696;5;20851;5;;;;vpos;;v;;a;;r;;d20712,5;;b0,0;;m0;;et;;pe;;p">
</treenode>
<treenode node="X;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f32265;1;32318;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f32022;1;32061;1;;;;vpos;;v;;a;;r;;d32278,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="Xe;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f52513;1;52689;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f40009;5;45275;5;;;;vpos;;v;;a;;r;;d52527,1;;b0,0;;m0;;ee;;p">
<treenode node="c;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f40023;5;40201;5;;;;vpos;;v;;a;;r;;d40038,5;;b0,0;;m0;;et;;pe;;p">
<treenode node="_clearMenus;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f43642;5;44363;5;;;;vpos;;v;;a;;r;;d43665,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="_dataApiKeydownHandler;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f44495;5;45126;5;;;;vpos;;v;;a;;r;;d44529,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="_getParentFromElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f44366;5;44492;5;;;;vpos;;v;;a;;r;;d44399,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f43387;5;43639;5;;;;vpos;;v;;a;;r;;d43415,5;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
</treenode>
<treenode node="Xt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f23124;5;23311;5;;;;vpos;;v;;a;;r;;d23138,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="Y;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f32389;1;32433;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f32185;1;32229;1;;;;vpos;;v;;a;;r;;d32401,1;;b0,0;;m0;;e">
</treenode>
<treenode node="Yt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f21845;5;22352;5;;;;vpos;;v;;a;;r;;d21859,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="Ze;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f53058;1;53142;1;;;;vpos;;v;;a;;r;;d53076,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="Zi;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f75649;5;77675;5;;;;vpos;;v;;a;;r;;d75662,5;;b0,0;;m0;;e">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f75663;5;75767;5;;;;vpos;;v;;a;;r;;d75678,5;;b0,0;;m0;;et;;pe;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f77276;5;77526;5;;;;vpos;;v;;a;;r;;d77304,5;;b0,0;;m0;;en;;p">
</treenode>
</treenode>
</treenode>
<treenode node="Zt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f25128;5;25369;5;;;;vpos;;v;;a;;r;;d25142,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="_;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f31680;1;31997;1;;;;vpos;;v;;a;;r;;d31705,1;;b0,0;;m0;;ee;;pt;;pn;;pr;;pi;;po;;pa;;p">
<treenode node="t;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f31693;1;31902;1;;;;vpos;;v;;a;;r;;d31879,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
</treenode>
<treenode node="_createClass;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;24;3;28;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;23;3;27;;;;vpos;;v;;a;;r;;d62,24;;b0,0;;m0;;eConstructor;;pprotoProps;;pstaticProps;;p">
</treenode>
<treenode node="_defineProperties;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;14;3;22;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;13;3;21;;;;vpos;;v;;a;;r;;d44,14;;b0,0;;m0;;etarget;;pprops;;p">
</treenode>
<treenode node="_defineProperty;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;30;3;43;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;29;3;42;;;;vpos;;v;;a;;r;;d44,30;;b0,0;;m0;;eobj;;pkey;;pvalue;;p">
</treenode>
<treenode node="_e;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f51281;1;51585;1;;;;vpos;;v;;a;;r;;d51299,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="_inheritsLoose;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;64;3;68;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;63;3;67;;;;vpos;;v;;a;;r;;d48,64;;b0,0;;m0;;esubClass;;psuperClass;;p">
</treenode>
<treenode node="_objectSpread;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;45;3;62;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;44;3;61;;;;vpos;;v;;a;;r;;d33,45;;b0,0;;m0;;etarget;;p">
</treenode>
<treenode node="_t;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f73540;1;73788;1;;;;vpos;;v;;a;;r;;d73560,1;;b0,0;;m0;;et;;pi;;po;;pa;;p">
<treenode node="l;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f73579;1;73746;1;;;;vpos;;v;;a;;r;;d73592,1;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
<treenode node="acceptData;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f4;4012;1;4021;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f4;4012;1;4021;;;;vpos;;v;;a;;r;;d35,4012;;b0,0;;m0;;eowner;;p">
</treenode>
<treenode node="access;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f4;3937;1;3994;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f4;3937;1;3994;;;;vpos;;v;;a;;r;;d73,3937;;b0,0;;m0;;eelems;;pfn;;pkey;;pvalue;;pchainable;;pemptyGet;;praw;;p">
<treenode node="fn;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f30;3937;5;3969;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f30;3937;5;3969;;;;vpos;;v;;a;;r;;d38,3967;;b0,0;;m0;;eelem;;pkey;;pvalue;;p">
</treenode>
</treenode>
<treenode node="addCombinator;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;2230;1;2292;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;2230;1;2292;;;;vpos;;v;;a;;r;;d52,2230;;b0,0;;m0;;ematcher;;pcombinator;;pbase;;p">
</treenode>
<treenode node="addGetHookIf;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;6390;1;6407;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;6390;1;6407;;;;vpos;;v;;a;;r;;d45,6390;;b0,0;;m0;;econditionFn;;phookFn;;p">
</treenode>
<treenode node="addHandle;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;919;1;926;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;919;1;926;;;;vpos;;v;;a;;r;;d37,919;;b0,0;;m0;;eattrs;;phandler;;p">
</treenode>
<treenode node="addToPrefiltersOrTransports;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;8791;1;8822;;;;vpos;;v;;a;;r;;d50,8791;;b0,0;;m0;;estructure;;p">
</treenode>
<treenode node="adjustCSS;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4553;1;4616;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4553;1;4616;;;;vpos;;v;;a;;r;;d52,4553;;b0,0;;m0;;eelem;;pprop;;pvalueParts;;ptween;;p">
<treenode node="currentValue;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f2;4556;4;4559;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f2;4556;4;4559;;;;vpos;;v;;a;;r;;d14,4557;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="adoptValue;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;3449;1;3480;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;3449;1;3480;;;;vpos;;v;;a;;r;;d55,3449;;b0,0;;m0;;evalue;;presolve;;preject;;pnoValue;;p">
</treenode>
<treenode node="ae;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f26651;5;27005;5;;;;vpos;;v;;a;;r;;d26671,5;;b0,0;;m0;;et;;pe;;pn;;pi;;p">
<treenode node="t;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f26766;5;26923;5;;;;vpos;;v;;a;;r;;d26786,5;;b0,0;;m0;;ee;;pn;;pi;;po;;p">
</treenode>
</treenode>
<treenode node="ajaxConvert;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;8932;1;9026;;;;vpos;;v;;a;;r;;d54,8932;;b0,0;;m0;;es;;presponse;;pjqXHR;;pisSuccess;;p">
</treenode>
<treenode node="ajaxExtend;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;8854;1;8868;;;;vpos;;v;;a;;r;;d35,8854;;b0,0;;m0;;etarget;;psrc;;p">
</treenode>
<treenode node="ajaxHandleResponses;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;8874;1;8927;;;;vpos;;v;;a;;r;;d52,8874;;b0,0;;m0;;es;;pjqXHR;;presponses;;p">
</treenode>
<treenode node="allowedAttribute;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;2668;3;2690;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;5246;3;5268;;;;vpos;;v;;a;;r;;d56,2668;;b0,0;;m0;;eattr;;pallowedAttributeList;;p">
</treenode>
<treenode node="applyStyle;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2663;3;2680;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function applyStyle(data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &#10;&lt;b&gt;function&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Modifiers&#10;&lt;b&gt;argument&lt;/b&gt;: Object data - The data object generated by `update` method&#10;&lt;b&gt;argument&lt;/b&gt;: Object data.styles - List of style properties - values to apply to popper element&#10;&lt;b&gt;argument&lt;/b&gt;: Object data.attributes - List of attribute properties - values to apply to popper element&#10;&lt;b&gt;argument&lt;/b&gt;: Object options - Modifiers configuration and options&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The same data object;;d28,2663;;b0,0;;m0;;edata;;p">
</treenode>
<treenode node="applyStyleOnLoad;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2692;3;2708;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function applyStyleOnLoad(reference, popper, options, modifierOptions, state)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the x-placement attribute before everything else because it could be used&#10;to add margins to the popper margins needs to be calculated to get the&#10;correct popper offsets.&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.modifiers&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    HTMLElement &lt;b&gt;reference&lt;/b&gt;: The reference element used to position the popper&#10;    HTMLElement &lt;b&gt;popper&lt;/b&gt;: The HTML element used as popper&#10;    Object &lt;b&gt;options&lt;/b&gt;: Popper.js options;;d80,2692;;b0,0;;m0;;ereference;;ppopper;;poptions;;pmodifierOptions;;pstate;;p">
</treenode>
<treenode node="arrow;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2894;3;2967;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function arrow(data, options)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &#10;&lt;b&gt;function&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Modifiers&#10;&lt;b&gt;argument&lt;/b&gt;: Object data - The data object generated by update method&#10;&lt;b&gt;argument&lt;/b&gt;: Object options - Modifiers configuration and options&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The data object, properly modified;;d32,2894;;b0,0;;m0;;edata;;poptions;;p">
</treenode>
<treenode node="assert;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;897;1;912;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;897;1;912;;;;vpos;;v;;a;;r;;d22,897;;b0,0;;m0;;efn;;p">
</treenode>
<treenode node="at;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f6725;5;13130;5;;;;vpos;;v;;a;;r;;d6738,5;;b0,0;;m0;;e">
<treenode node="r;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f6739;5;7207;5;;;;vpos;;v;;a;;r;;d6754,5;;b0,0;;m0;;et;;pe;;p">
<treenode node="_dataApiClickHandler;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f12744;5;13028;5;;;;vpos;;v;;a;;r;;d12776,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f12340;5;12741;5;;;;vpos;;v;;a;;r;;d12368,5;;b0,0;;m0;;ei;;p">
</treenode>
</treenode>
</treenode>
<treenode node="attachToScrollParents;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2525;3;2534;;;;vpos;;v;;a;;r;;d79,2525;;b0,0;;m0;;escrollParent;;pevent;;pcallback;;pscrollParents;;p">
</treenode>
<treenode node="b;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f606;1;805;1;;;;vpos;;v;;a;;r;;d623,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="be;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f36510;5;39064;5;;;;vpos;;v;;a;;r;;d36523,5;;b0,0;;m0;;e">
<treenode node="r;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f36524;5;37542;5;;;;vpos;;v;;a;;r;;d36539,5;;b0,0;;m0;;et;;pe;;p">
<treenode node="scheduleUpdate;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f36718;5;36783;5;;;;vpos;;v;;a;;r;;d36743,5;;b0,2;;m0;;e">
</treenode>
</treenode>
<treenode node="value;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f37569;5;39058;5;;;;vpos;;v;;a;;r;;d39036,5;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="bn;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f54938;5;55739;5;;;;vpos;;v;;a;;r;;d54956,5;;b0,0;;m0;;et;;ps;;pe;;p">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f55148;5;55686;5;;;;vpos;;v;;a;;r;;d55163,5;;b0,0;;m0;;et;;pe;;p">
</treenode>
</treenode>
<treenode node="boxModelAdjustment;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;6468;1;6534;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;6468;1;6534;;;;vpos;;v;;a;;r;;d86,6468;;b0,0;;m0;;eelem;;pdimension;;pbox;;pisBorderBox;;pstyles;;pcomputedVal;;p">
</treenode>
<treenode node="browserSync;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\gulpfile.js;f0;28;1;36;;;;vpos;;v;;a;;r;;d27,28;;b0,0;;m0;;edone;;p">
</treenode>
<treenode node="browserSyncReload;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\gulpfile.js;f0;39;1;42;;;;vpos;;v;;a;;r;;d33,39;;b0,0;;m0;;edone;;p">
</treenode>
<treenode node="bt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f65702;1;65778;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f13949;5;18193;5;;;;vpos;;v;;a;;r;;d65716,1;;b0,0;;m0;;ee;;p">
<treenode node="a;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f13963;5;14653;5;;;;vpos;;v;;a;;r;;d13978,5;;b0,0;;m0;;ee;;pt;;p">
<treenode node="_getTargetFromElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f17657;5;17765;5;;;;vpos;;v;;a;;r;;d17690,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f17768;5;18090;5;;;;vpos;;v;;a;;r;;d17796,5;;b0,0;;m0;;ei;;p">
</treenode>
</treenode>
</treenode>
<treenode node="buildFragment;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4786;1;4873;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4786;1;4873;;;;vpos;;v;;a;;r;;d70,4786;;b0,0;;m0;;eelems;;pcontext;;pscripts;;pselection;;pignored;;p">
</treenode>
<treenode node="buildParams;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;7816;1;7852;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;8637;1;8673;;;;vpos;;v;;a;;r;;d54,7816;;b0,0;;m0;;eprefix;;pobj;;ptraditional;;padd;;p">
</treenode>
<treenode node="camelCase;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4009;1;4011;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4009;1;4011;;;;vpos;;v;;a;;r;;d29,4009;;b0,0;;m0;;estring;;p">
</treenode>
<treenode node="ce;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f36273;1;36782;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f27354;5;27418;5;;;;vpos;;v;;a;;r;;d36289,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="classCallCheck;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;1857;3;1861;;;;vpos;;v;;a;;r;;d56,1857;;b0,0;;m0;;einstance;;pConstructor;;p">
</treenode>
<treenode node="classesToArray;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;7222;1;7230;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;8015;1;8023;;;;vpos;;v;;a;;r;;d33,7222;;b0,0;;m0;;evalue;;p">
</treenode>
<treenode node="clean;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\gulpfile.js;f0;45;1;47;;;;vpos;;v;;a;;r;;d17,45;;b0,0;;m0;;e">
</treenode>
<treenode node="clockwise;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;3031;3;3037;;;;vpos;;v;;aArray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function clockwise(placement)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Given an initial placement, returns all the subsequent placements&#10;clockwise (or counter-clockwise).&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: String placement - A valid placement (it accepts variations)&#10;&lt;b&gt;argument&lt;/b&gt;: Boolean counter - Set to true to walk the placements counterclockwise&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   placements including their variations;;d32,3031;;b0,0;;m0;;eplacement;;p">
</treenode>
<treenode node="cloneCopyEvent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;5815;1;5847;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;5815;1;5847;;;;vpos;;v;;a;;r;;d37,5815;;b0,0;;m0;;esrc;;pdest;;p">
</treenode>
<treenode node="completed;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;3907;1;3911;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;3907;1;3911;;;;vpos;;v;;a;;r;;d21,3907;;b0,0;;m0;;e">
</treenode>
<treenode node="computeAutoPlacement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2181;3;2230;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Utility used to transform the `auto` placement to the placement with more&#10;available space.&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Object data - The data object generated by update method&#10;&lt;b&gt;argument&lt;/b&gt;: Object options - Modifiers configuration and options&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The data object, properly modified;;d90,2181;;b0,0;;m0;;eplacement;;prefRect;;ppopper;;preference;;pboundariesElement;;p">
</treenode>
<treenode node="computeStyle;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2768;3;2857;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function computeStyle(data, options)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &#10;&lt;b&gt;function&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Modifiers&#10;&lt;b&gt;argument&lt;/b&gt;: Object data - The data object generated by `update` method&#10;&lt;b&gt;argument&lt;/b&gt;: Object options - Modifiers configuration and options&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The data object, properly modified;;d39,2768;;b0,0;;m0;;edata;;poptions;;p">
</treenode>
<treenode node="computeStyleTests;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;6248;2;6290;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;6248;2;6290;;;;vpos;;v;;a;;r;;d30,6248;;b0,0;;m0;;e">
</treenode>
<treenode node="condense;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;2317;1;2336;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;2317;1;2336;;;;vpos;;v;;a;;r;;d58,2317;;b0,0;;m0;;eunmatched;;pmap;;pfilter;;pcontext;;pxml;;p">
</treenode>
<treenode node="createButtonPseudo;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;971;1;976;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;971;1;976;;;;vpos;;v;;a;;r;;d36,971;;b0,0;;m0;;etype;;p">
</treenode>
<treenode node="createCache;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;870;1;882;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;870;1;882;;;;vpos;;v;;a;;r;;d23,870;;b0,0;;m0;;e">
<treenode node="cache;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;873;2;880;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;873;2;880;;;;vpos;;v;;a;;r;;d30,873;;b0,0;;m0;;ekey;;pvalue;;p">
</treenode>
</treenode>
<treenode node="createClass;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;1863;3;1879;;;;vpos;;v;;a;;r;;d32,1863;;b0,0;;m0;;e">
<treenode node="defineProperties;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1864;5;1872;;;;vpos;;v;;a;;r;;d45,1864;;b0,0;;m0;;etarget;;pprops;;p">
</treenode>
</treenode>
<treenode node="createDisabledPseudo;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;982;1;1032;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;982;1;1032;;;;vpos;;v;;a;;r;;d42,982;;b0,0;;m0;;edisabled;;p">
</treenode>
<treenode node="createFxNow;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;7039;1;7044;;;;vpos;;v;;a;;r;;d23,7039;;b0,0;;m0;;e">
</treenode>
<treenode node="createInputPseudo;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;960;1;965;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;960;1;965;;;;vpos;;v;;a;;r;;d35,960;;b0,0;;m0;;etype;;p">
</treenode>
<treenode node="createOptions;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;3217;1;3223;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;3217;1;3223;;;;vpos;;v;;a;;r;;d34,3217;;b0,0;;m0;;eoptions;;p">
</treenode>
<treenode node="createPositionalPseudo;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;1038;1;1054;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;1038;1;1054;;;;vpos;;v;;a;;r;;d38,1038;;b0,0;;m0;;efn;;p">
</treenode>
<treenode node="createTween;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;7067;1;7079;;;;vpos;;v;;a;;r;;d47,7067;;b0,0;;m0;;evalue;;pprop;;panimation;;p">
</treenode>
<treenode node="css;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\gulpfile.js;f0;70;1;92;;;;vpos;;v;;a;;r;;d15,70;;b0,0;;m0;;e">
</treenode>
<treenode node="ct;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f58095;1;58166;1;;;;vpos;;v;;a;;r;;d58108,1;;b0,0;;m0;;e">
</treenode>
<treenode node="curCSS;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;6337;1;6387;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;6337;1;6387;;;;vpos;;v;;a;;r;;d40,6337;;b0,0;;m0;;eelem;;pname;;pcomputed;;p">
</treenode>
<treenode node="d;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f1008;1;1139;1;;;;vpos;;v;;a;;r;;d1021,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="dataAttr;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4220;1;4241;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4220;1;4241;;;;vpos;;v;;a;;r;;d37,4220;;b0,0;;m0;;eelem;;pkey;;pdata;;p">
</treenode>
<treenode node="defaultPrefilter;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;7081;1;7251;;;;vpos;;v;;a;;r;;d47,7081;;b0,0;;m0;;eelem;;pprops;;popts;;p">
</treenode>
<treenode node="defineProperty;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;1885;3;1898;;;;vpos;;v;;a;;r;;d50,1885;;b0,0;;m0;;eobj;;pkey;;pvalue;;p">
</treenode>
<treenode node="destroy;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2490;3;2513;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function destroy()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Destroys the popper.&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper;;d21,2490;;b0,0;;m0;;e">
</treenode>
<treenode node="dir;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f9;1644;1;2805;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f9;1644;1;2805;;;;vpos;;v;;a;;r;;d39,2792;;b0,0;;m0;;eelem;;pdir;;puntil;;p">
</treenode>
<treenode node="disableEventListeners;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2598;3;2603;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function disableEventListeners()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    It will remove resize/scroll events and won&apos;t recalculate popper position&#10;when they are triggered. It also won&apos;t trigger `onUpdate` callback anymore,&#10;unless you call `update` method manually.&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper;;d35,2598;;b0,0;;m0;;e">
</treenode>
<treenode node="disableScript;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;5801;1;5804;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;5801;1;5804;;;;vpos;;v;;a;;r;;d31,5801;;b0,0;;m0;;eelem;;p">
</treenode>
<treenode node="domManip;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;5863;1;5953;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;5863;1;5953;;;;vpos;;v;;a;;r;;d57,5863;;b0,0;;m0;;ecollection;;pargs;;pcallback;;pignored;;p">
</treenode>
<treenode node="dt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f62367;1;62402;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f58433;1;59913;1;;;;vpos;;v;;a;;r;;d62381,1;;b0,0;;m0;;ee;;p">
<treenode node="createTween;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f58979;1;59098;1;;;;vpos;;v;;a;;r;;d59004,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="stop;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f59099;1;59316;1;;;;vpos;;v;;a;;r;;d59115,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="u;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f58527;1;58785;1;;;;vpos;;v;;a;;r;;d58548,1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="e;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f51479;1;51968;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f51703;1;52192;1;;;;vpos;;v;;a;;r;;d51491,1;;b0,0;;m0;;e">
</treenode>
<treenode node="ee;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f33356;1;33636;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f33152;1;33432;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f25512;5;25769;5;;;;vpos;;v;;a;;r;;d33374,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="elementMatcher;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;2294;1;2306;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;2294;1;2306;;;;vpos;;v;;a;;r;;d36,2294;;b0,0;;m0;;ematchers;;p">
</treenode>
<treenode node="enableEventListeners;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2562;3;2566;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function enableEventListeners()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    It will add resize/scroll events and start recalculating&#10;position of the popper element when they are triggered.&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper;;d34,2562;;b0,0;;m0;;e">
</treenode>
<treenode node="et;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f52840;1;52924;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f53142;1;53630;1;;;;vpos;;v;;a;;r;;d52858,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="executeFunctionByName;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\public\js\jqBootstrapValidation.js;f0;909;3;917;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function executeFunctionByName(functionName, context /*, args*/ )&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Thanks to Jason Bunting via StackOverflow.com&#10;http://stackoverflow.com/questions/359788/how-to-execute-a-javascript-function-when-i-have-its-name-as-a-string#answer-359910&#10;Short link: http://tinyurl.com/executeFunctionByName;;d68,909;;b0,0;;m0;;efunctionName;;pcontext;;p">
</treenode>
<treenode node="expectSync;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4921;1;4923;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4921;1;4923;;;;vpos;;v;;a;;r;;d34,4921;;b0,0;;m0;;eelem;;ptype;;p">
</treenode>
<treenode node="fcamelCase;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4002;1;4004;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4002;1;4004;;;;vpos;;v;;a;;r;;d35,4002;;b0,0;;m0;;eall;;pletter;;p">
</treenode>
<treenode node="fcssescape;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f1;668;2;682;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f1;668;2;682;;;;vpos;;v;;a;;r;;d42,668;;b0,0;;m0;;ech;;pasCodePoint;;p">
</treenode>
<treenode node="fe;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f36497;1;37006;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f27632;5;27924;5;;;;vpos;;v;;a;;r;;d36513,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="finalPropName;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;6430;1;6440;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;6430;1;6440;;;;vpos;;v;;a;;r;;d31,6430;;b0,0;;m0;;ename;;p">
</treenode>
<treenode node="find;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2330;3;2338;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function find(arr, check)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Mimics the `find` method of Array&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Array arr&#10;&lt;b&gt;argument&lt;/b&gt;: prop&#10;&lt;b&gt;argument&lt;/b&gt;: value&#10;index&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   index or -1;;d28,2330;;b0,0;;m0;;earr;;pcheck;;p">
</treenode>
<treenode node="findCommonOffsetParent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1744;3;1778;;;;vpos;;v;;aElement;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function findCommonOffsetParent(element1, element2)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds the offset parent common to the two provided nodes&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Element element1&#10;&lt;b&gt;argument&lt;/b&gt;: Element element2&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   common offset parent;;d54,1744;;b0,0;;m0;;eelement1;;pelement2;;p">
</treenode>
<treenode node="findIndex;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2349;3;2362;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function findIndex(arr, prop, value)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Return the index of the matching object&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Array arr&#10;&lt;b&gt;argument&lt;/b&gt;: prop&#10;&lt;b&gt;argument&lt;/b&gt;: value&#10;index&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   index or -1;;d39,2349;;b0,0;;m0;;earr;;pprop;;pvalue;;p">
</treenode>
<treenode node="fixInput;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;5850;1;5861;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;5850;1;5861;;;;vpos;;v;;a;;r;;d31,5850;;b0,0;;m0;;esrc;;pdest;;p">
</treenode>
<treenode node="flip;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;3052;3;3133;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function flip(data, options)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &#10;&lt;b&gt;function&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Modifiers&#10;&lt;b&gt;argument&lt;/b&gt;: Object data - The data object generated by update method&#10;&lt;b&gt;argument&lt;/b&gt;: Object options - Modifiers configuration and options&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The data object, properly modified;;d31,3052;;b0,0;;m0;;edata;;poptions;;p">
</treenode>
<treenode node="formatValidatorName;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\public\js\jqBootstrapValidation.js;f6;875;3;884;;;;vpos;;v;;a;;r;;d43,875;;b0,0;;m0;;ename;;p">
</treenode>
<treenode node="ft;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f58166;1;58302;1;;;;vpos;;v;;a;;r;;d58182,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="funescape;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f1;651;2;663;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f1;651;2;663;;;;vpos;;v;;a;;r;;d55,651;;b0,0;;m0;;e_;;pescaped;;pescapedWhitespace;;p">
</treenode>
<treenode node="g;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f2805;5;3922;5;;;;vpos;;v;;a;;r;;d2817,5;;b0,0;;m0;;e">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f2818;5;2848;5;;;;vpos;;v;;a;;r;;d2831,5;;b0,0;;m0;;et;;p">
<treenode node="_handleDismiss;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f3778;5;3861;5;;;;vpos;;v;;a;;r;;d3804,5;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f3635;5;3775;5;;;;vpos;;v;;a;;r;;d3663,5;;b0,0;;m0;;en;;p">
</treenode>
</treenode>
</treenode>
<treenode node="ge;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f37361;1;37575;1;;;;vpos;;v;;a;;r;;d37377,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="genFx;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;7047;1;7065;;;;vpos;;v;;a;;r;;d37,7047;;b0,0;;m0;;etype;;pincludeWidth;;p">
</treenode>
<treenode node="getAll;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4745;1;4766;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4745;1;4766;;;;vpos;;v;;a;;r;;d32,4745;;b0,0;;m0;;econtext;;ptag;;p">
</treenode>
<treenode node="getArea;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2165;3;2170;;;;vpos;;v;;a;;r;;d25,2165;;b0,0;;m0;;eref;;p">
</treenode>
<treenode node="getBordersSize;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1835;3;1840;;;;vpos;;v;;a;;r;;d40,1835;;b0,0;;m0;;estyles;;paxis;;p">
</treenode>
<treenode node="getBoundaries;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2111;3;2163;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getBoundaries(popper, reference, padding, boundariesElement)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Computed the boundaries limits and return them&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    HTMLElement &lt;b&gt;popper&lt;/b&gt;&#10;    HTMLElement &lt;b&gt;reference&lt;/b&gt;&#10;    number &lt;b&gt;padding&lt;/b&gt;&#10;    HTMLElement &lt;b&gt;boundariesElement&lt;/b&gt;: Element used to define the boundaries&#10;    Boolean &lt;b&gt;fixedPosition&lt;/b&gt;: Is in fixed position mode&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Coordinates of the boundaries;;d72,2111;;b0,0;;m0;;epopper;;preference;;ppadding;;pboundariesElement;;p">
</treenode>
<treenode node="getBoundingClientRect;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1935;3;1982;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getBoundingClientRect(element)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get bounding client rect of given element&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    HTMLElement &lt;b&gt;element&lt;/b&gt;&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   client rect;;d42,1935;;b0,0;;m0;;eHTMLElement element;;p">
</treenode>
<treenode node="getClass;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;7218;1;7220;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;8011;1;8013;;;;vpos;;v;;a;;r;;d26,7218;;b0,0;;m0;;eelem;;p">
</treenode>
<treenode node="getClientRect;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1921;3;1926;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getClientRect(offsets)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Given element offsets, generate an output similar to getBoundingClientRect&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Object offsets&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   ClientRect like output;;d34,1921;;b0,0;;m0;;eoffsets;;p">
</treenode>
<treenode node="getData;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4195;1;4218;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4195;1;4218;;;;vpos;;v;;a;;r;;d25,4195;;b0,0;;m0;;edata;;p">
</treenode>
<treenode node="getDefaultDisplay;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4621;1;4642;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4621;1;4642;;;;vpos;;v;;a;;r;;d35,4621;;b0,0;;m0;;eelem;;p">
</treenode>
<treenode node="getFixedPositionOffsetParent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2088;3;2098;;;;vpos;;v;;aElement;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getFixedPositionOffsetParent(element)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds the first parent of an element that has a transformed property defined&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Element element&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   first transformed parent or documentElement;;d49,2088;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="getOffsetParent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1683;3;1710;;;;vpos;;v;;aElement;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getOffsetParent(element)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the offset parent of the given element&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Element element&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   offset parent;;d36,1683;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="getOffsetRectRelativeToArbitraryNode;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1984;3;2034;;;;vpos;;v;;a;;r;;d66,1984;;b0,0;;m0;;echildren;;pparent;;p">
</treenode>
<treenode node="getOppositePlacement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2275;3;2280;;;;vpos;;v;;aString;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getOppositePlacement(placement)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the opposite placement of the given one&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: String placement&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   flipped placement;;d43,2275;;b0,0;;m0;;eplacement;;p">
</treenode>
<treenode node="getOppositeVariation;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2976;3;2983;;;;vpos;;v;;aString;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getOppositeVariation(variation)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the opposite placement variation of the given one&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: String placement variation&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   flipped placement variation;;d43,2976;;b0,0;;m0;;evariation;;p">
</treenode>
<treenode node="getOuterSizes;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2256;3;2266;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getOuterSizes(element)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the outer sizes of the given element (offset size + margins)&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Element element&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   object containing width and height properties;;d34,2256;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="getParentNode;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1614;3;1619;;;;vpos;;v;;aElement;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getParentNode(element)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the parentNode or the host of the element&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Element element&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   parent;;d34,1614;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="getPopperOffsets;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2292;3;2319;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getPopperOffsets(popper, referenceOffsets, placement)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get offsets to the popper&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Object &lt;b&gt;position&lt;/b&gt;: CSS position the Popper will get applied&#10;    HTMLElement &lt;b&gt;popper&lt;/b&gt;: the popper element&#10;    Object &lt;b&gt;referenceOffsets&lt;/b&gt;: the reference offsets (the popper will be relative to this)&#10;    String &lt;b&gt;placement&lt;/b&gt;: one of the valid placement options&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   popperOffsets - An object containing the offsets which will be applied to the popper;;d65,2292;;b0,0;;m0;;epopper;;preferenceOffsets;;pplacement;;p">
</treenode>
<treenode node="getReferenceOffsets;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2242;3;2247;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getReferenceOffsets(state, popper, reference)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get offsets to the reference element&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Object &lt;b&gt;state&lt;/b&gt;&#10;    Element &lt;b&gt;popper&lt;/b&gt;: the popper element&#10;    Element &lt;b&gt;reference&lt;/b&gt;: the reference element (the popper will be relative to this)&#10;    Element &lt;b&gt;fixedPosition&lt;/b&gt;: is in fixed position mode&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   An object containing the offsets which will be applied to the popper;;d57,2242;;b0,0;;m0;;estate;;ppopper;;preference;;p">
</treenode>
<treenode node="getRoot;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1728;3;1734;;;;vpos;;v;;aElement;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getRoot(node)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Finds the root node (document, shadowDOM root) of the given element&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Element node&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   root node;;d25,1728;;b0,0;;m0;;enode;;p">
</treenode>
<treenode node="getRoundedOffsets;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2729;3;2757;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getRoundedOffsets(data, shouldRound)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &#10;&lt;b&gt;function&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Object data - The data object generated by `update` method&#10;&lt;b&gt;argument&lt;/b&gt;: Boolean shouldRound - If the offsets should be rounded at all&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The popper&apos;s position offsets rounded The tale of pixel-perfect positioning. It&apos;s still not 100% perfect, but as good as it can be within reason. Discussion here: https://github.com/FezVrasta/popper.js/pull/715 Low DPI screens cause a popper to be blurry if not using full pixels (Safari as well on High DPI screens). Firefox prefers no rounding for positioning and does not have blurriness on high DPI screens. Only horizontal placement and left/right values need to be considered.;;d48,2729;;b0,0;;m0;;edata;;pshouldRound;;p">
<treenode node="noRound;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f8;2736;5;2738;;;;vpos;;v;;a;;r;;d38,2736;;b0,0;;m0;;ev;;p">
</treenode>
</treenode>
<treenode node="getScroll;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1788;3;1801;;;;vpos;;v;;anumber;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getScroll(element)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Gets the scroll value of the given element in the given side (top and left)&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Element element&#10;&lt;b&gt;argument&lt;/b&gt;: String side `top` or `left`&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   amount of scrolled pixels;;d30,1788;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="getScrollParent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1628;3;1654;;;;vpos;;v;;aElement;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getScrollParent(element)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Returns the scrolling parent of the given element&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Element element&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   scroll parent;;d36,1628;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="getSize;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1842;3;1844;;;;vpos;;v;;a;;r;;d52,1842;;b0,0;;m0;;eaxis;;pbody;;phtml;;pcomputedStyle;;p">
</treenode>
<treenode node="getSpecialTransitionEndEvent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;90;3;102;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;89;3;101;;;;vpos;;v;;a;;r;;d42,90;;b0,0;;m0;;e">
<treenode node="handle;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f6;94;7;100;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f6;93;7;99;;;;vpos;;v;;a;;r;;d37,94;;b0,0;;m0;;eevent;;p">
</treenode>
</treenode>
<treenode node="getStyleComputedProperty;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1597;3;1605;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getStyleComputedProperty(element, property)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get CSS computed property of the given element&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Eement element&#10;&lt;b&gt;argument&lt;/b&gt;: String property;;d55,1597;;b0,0;;m0;;eelement;;pproperty;;p">
</treenode>
<treenode node="getStyles;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f4;6226;2;6238;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f4;6226;2;6238;;;;vpos;;v;;a;;r;;d33,6226;;b0,0;;m0;;eelem;;p">
</treenode>
<treenode node="getSupportedPropertyName;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2471;3;2483;;;;vpos;;v;;aString;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getSupportedPropertyName(property)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the prefixed supported property name&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: String property (camelCase)&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   prefixed property (camelCase or PascalCase, depending on the vendor prefix);;d46,2471;;b0,0;;m0;;eproperty;;p">
</treenode>
<treenode node="getValue;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\public\js\jqBootstrapValidation.js;f6;886;3;897;;;;vpos;;v;;a;;r;;d33,886;;b0,0;;m0;;e$this;;p">
</treenode>
<treenode node="getViewportOffsetRectRelativeToArtbitraryNode;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2036;3;2055;;;;vpos;;v;;a;;r;;d66,2036;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="getWidthOrHeight;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;6536;1;6601;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;6536;1;6601;;;;vpos;;v;;a;;r;;d52,6536;;b0,0;;m0;;eelem;;pdimension;;pextra;;p">
</treenode>
<treenode node="getWindow;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2520;3;2523;;;;vpos;;v;;aWindow;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function getWindow(element)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Get the window associated with the element&#10;&lt;b&gt;argument&lt;/b&gt;: Element element;;d30,2520;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="getWindowSizes;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1846;3;1855;;;;vpos;;v;;a;;r;;d36,1846;;b0,0;;m0;;edocument;;p">
</treenode>
<treenode node="gn;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f46511;5;53798;5;;;;vpos;;v;;a;;r;;d46524,5;;b0,0;;m0;;e">
<treenode node="o;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f46525;5;46763;5;;;;vpos;;v;;a;;r;;d46540,5;;b0,0;;m0;;et;;pe;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f53389;5;53695;5;;;;vpos;;v;;a;;r;;d53419,5;;b0,0;;m0;;en;;pi;;p">
</treenode>
</treenode>
</treenode>
<treenode node="h;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f3899;1;23466;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f3695;1;23262;1;;;;vpos;;v;;a;;r;;d3912,1;;b0,0;;m0;;en;;p">
<treenode node="Ce;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f19428;1;19559;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f19355;1;19964;1;;;;vpos;;v;;a;;r;;d19450,1;;b0,0;;m0;;ee;;pt;;pn;;pr;;pi;;p">
</treenode>
<treenode node="D;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f4026;1;4065;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f3822;1;3861;1;;;;vpos;;v;;a;;r;;d4041,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="Ee;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f20168;1;20776;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f19964;1;20572;1;;;;vpos;;v;;a;;r;;d20182,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="H;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f4127;1;4204;1;;;;vpos;;v;;a;;r;;d4142,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="P;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f3923;1;4000;1;;;;vpos;;v;;a;;r;;d3938,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="Te;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f19559;1;20168;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f19224;1;19355;1;;;;vpos;;v;;a;;r;;d19583,1;;b0,0;;m0;;ep;;ph;;pg;;pv;;py;;pe;;p">
</treenode>
<treenode node="be;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f18744;1;18818;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f18614;1;19110;1;;;;vpos;;v;;a;;r;;d18758,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="ce;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f7269;1;7411;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f7065;1;7207;1;;;;vpos;;v;;a;;r;;d7283,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="de;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f7489;1;7655;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f7451;1;7539;1;;;;vpos;;v;;a;;r;;d7505,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="fe;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f7411;1;7489;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f7207;1;7285;1;;;;vpos;;v;;a;;r;;d7427,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="ge;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f7855;1;8103;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f7651;1;7899;1;;;;vpos;;v;;a;;r;;d7869,1;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="he;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f7743;1;7855;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f7539;1;7651;1;;;;vpos;;v;;a;;r;;d7757,1;;b0,0;;m0;;en;;p">
</treenode>
<treenode node="ie;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f5690;1;5802;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f5486;1;5598;1;;;;vpos;;v;;a;;r;;d5706,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="le;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f7237;1;7269;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f7033;1;7065;1;;;;vpos;;v;;a;;r;;d7251,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="me;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f18729;1;18744;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f18525;1;18540;1;;;;vpos;;v;;a;;r;;d18742,1;;b0,0;;m0;;e">
</treenode>
<treenode node="ne;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f5498;1;5632;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f5294;1;5428;1;;;;vpos;;v;;a;;r;;d5516,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="oe;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f5803;1;5821;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f5599;1;5617;1;;;;vpos;;v;;a;;r;;d5816,1;;b0,0;;m0;;e">
</treenode>
<treenode node="pe;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f7655;1;7743;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f7285;1;7451;1;;;;vpos;;v;;a;;r;;d7669,1;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="r;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f3994;1;21993;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f3790;1;21789;1;;;;vposArray;;v;;a;;r;;d21504,1;;b0,0;;m0;;ee;;pt;;pn;;pr;;pi;;p">
</treenode>
<treenode node="se;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f6149;1;7123;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f5945;1;6919;1;;;;vpos;;v;;a;;r;;d6169,1;;b0,0;;m0;;et;;pe;;pn;;pr;;p">
<treenode node="attr;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f12933;1;13185;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f12729;1;12981;1;;;;vpos;;v;;a;;r;;d12951,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="contains;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f12862;1;12929;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f12658;1;12725;1;;;;vpos;;v;;a;;r;;d12884,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="error;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f13240;1;13319;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f13036;1;13115;1;;;;vpos;;v;;a;;r;;d13257,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="escape;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f13189;1;13236;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f12985;1;13032;1;;;;vpos;;v;;a;;r;;d13207,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="matches;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f12530;1;12577;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f12326;1;12373;1;;;;vpos;;v;;a;;r;;d12551,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="matchesSelector;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f12581;1;12858;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f12377;1;12654;1;;;;vpos;;v;;a;;r;;d12610,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="uniqueSort;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f13323;1;13513;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f13119;1;13309;1;;;;vpos;;v;;a;;r;;d13345,1;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
<treenode node="ue;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f7123;1;7237;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f6919;1;7033;1;;;;vpos;;v;;a;;r;;d7136,1;;b0,0;;m0;;e">
<treenode node="e;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f7152;1;7236;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f6948;1;7032;1;;;;vpos;;v;;a;;r;;d7168,1;;b0,0;;m0;;et;;pn;;p">
</treenode>
</treenode>
<treenode node="ve;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f8103;1;8250;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f7899;1;8046;1;;;;vpos;;v;;a;;r;;d8117,1;;b0,0;;m0;;ea;;p">
</treenode>
<treenode node="we;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f19314;1;19428;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f19110;1;19224;1;;;;vpos;;v;;a;;r;;d19328,1;;b0,0;;m0;;ei;;p">
</treenode>
<treenode node="xe;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f18818;1;19314;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f18540;1;18614;1;;;;vpos;;v;;a;;r;;d18836,1;;b0,0;;m0;;es;;pe;;pt;;p">
</treenode>
<treenode node="ye;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f8250;1;8321;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f8046;1;8117;1;;;;vpos;;v;;a;;r;;d8264,1;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
<treenode node="he;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f27418;5;27584;5;;;;vpos;;v;;a;;r;;d27434,5;;b0,0;;m0;;en;;pi;;p">
</treenode>
<treenode node="hide;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;3449;3;3478;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function hide(data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &#10;&lt;b&gt;function&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Modifiers&#10;&lt;b&gt;argument&lt;/b&gt;: Object data - The data object generated by update method&#10;&lt;b&gt;argument&lt;/b&gt;: Object options - Modifiers configuration and options&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The data object, properly modified;;d22,3449;;b0,0;;m0;;edata;;p">
</treenode>
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f280;5;446;5;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f236;5;402;5;;;;vpos;;v;;a;;r;;d295,5;;b0,0;;m0;;et;;pe;;p">
</treenode>
<treenode node="ie;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f25839;5;26298;5;;;;vpos;;v;;a;;r;;d25857,5;;b0,0;;m0;;et;;pn;;pe;;p">
</treenode>
<treenode node="ii;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f66681;5;68180;5;;;;vpos;;v;;a;;r;;d66695,5;;b0,0;;m0;;et;;p">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f66704;5;66755;5;;;;vpos;;v;;a;;r;;d66716,5;;b0,0;;m0;;e">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f67577;5;67865;5;;;;vpos;;v;;a;;r;;d67605,5;;b0,0;;m0;;en;;p">
</treenode>
</treenode>
</treenode>
<treenode node="includeScroll;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1812;3;1823;;;;vpos;;v;;a;;r;;d40,1812;;b0,0;;m0;;erect;;pelement;;p">
</treenode>
<treenode node="indexOf;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f4;59;2;580;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f4;59;2;580;;;;vpos;;v;;a;;r;;d34,571;;b0,0;;m0;;elist;;pelem;;p">
</treenode>
<treenode node="inner;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;3487;3;3504;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function inner(data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &#10;&lt;b&gt;function&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Modifiers&#10;&lt;b&gt;argument&lt;/b&gt;: Object data - The data object generated by `update` method&#10;&lt;b&gt;argument&lt;/b&gt;: Object options - Modifiers configuration and options&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The data object, properly modified;;d23,3487;;b0,0;;m0;;edata;;p">
</treenode>
<treenode node="inspectPrefiltersOrTransports;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;8825;1;8849;;;;vpos;;v;;a;;r;;d85,8825;;b0,0;;m0;;estructure;;poptions;;poriginalOptions;;pjqXHR;;p">
<treenode node="inspect;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;8830;2;8846;;;;vpos;;v;;a;;r;;d30,8830;;b0,0;;m0;;edataType;;p">
</treenode>
</treenode>
<treenode node="isArrayLike;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;495;1;510;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;495;1;510;;;;vpos;;v;;a;;r;;d28,495;;b0,0;;m0;;eobj;;p">
</treenode>
<treenode node="isAttached;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f5;4495;3;4509;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f5;4495;3;4509;;;;vpos;;v;;a;;r;;d32,4506;;b0,0;;m0;;eelem;;pelem;;p">
</treenode>
<treenode node="isFixed;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2065;3;2078;;;;vpos;;v;;aBoolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function isFixed(element)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Check if the given element is fixed or is inside a fixed parent&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Element element&#10;&lt;b&gt;argument&lt;/b&gt;: Element customContainer&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   answer to &quot;isFixed?&quot;;;d28,2065;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="isFunction;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f4;73;3;80;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f4;73;3;80;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1585;3;1588;;;;vpos;;v;;a;;r;;d44,73;;b0,0;;m0;;eobj;;p">
</treenode>
<treenode node="isHiddenWithinTree;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f4;4511;2;4528;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f4;4511;2;4528;;;;vpos;;v;;a;;r;;d46,4511;;b0,0;;m0;;eelem;;pel;;p">
</treenode>
<treenode node="isIE;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1666;3;1674;;;;vpos;;v;;aBoolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function isIE(version)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Determines if the browser is Internet Explorer&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Number &lt;b&gt;version&lt;/b&gt;: to check&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   isIE;;d25,1666;;b0,0;;m0;;eNumber version;;p">
</treenode>
<treenode node="isModifierEnabled;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2456;3;2462;;;;vpos;;v;;aBoolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function isModifierEnabled(modifiers, modifierName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Helper used to know if the given modifier is enabled.&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils;;d54,2456;;b0,0;;m0;;emodifiers;;pmodifierName;;p">
</treenode>
<treenode node="isModifierRequired;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2869;3;2885;;;;vpos;;v;;aBoolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function isModifierRequired(modifiers, requestingName, requestedName)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Helper used to know if the given modifier depends from another one.&lt;br /&gt;&#10;It checks if the needed modifier is listed and enabled.&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    Array &lt;b&gt;modifiers&lt;/b&gt;: list of modifiers&#10;    String &lt;b&gt;requestingName&lt;/b&gt;: name of requesting modifier&#10;    String &lt;b&gt;requestedName&lt;/b&gt;: name of requested modifier;;d72,2869;;b0,0;;m0;;eArray modifiers;;pString requestingName;;pString requestedName;;p">
</treenode>
<treenode node="isNumeric;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2612;3;2614;;;;vpos;;v;;aBoolean;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function isNumeric(n)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Tells if a given input is a number&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    * &lt;b&gt;input&lt;/b&gt;: to check;;d24,2612;;b0,0;;m0;;e* input;;p">
</treenode>
<treenode node="isOffsetContainer;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1712;3;1719;;;;vpos;;v;;a;;r;;d38,1712;;b0,0;;m0;;eelement;;p">
</treenode>
<treenode node="isWindow;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f4;83;2;85;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f4;83;2;85;;;;vpos;;v;;a;;r;;d40,83;;b0,0;;m0;;eobj;;p">
</treenode>
<treenode node="j;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f23845;1;24060;1;;;;vpos;;v;;a;;r;;d23862,1;;b0,0;;m0;;ee;;pn;;pr;;p">
</treenode>
<treenode node="jQuery;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f1;147;2;152;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f1;147;2;152;;;;vpos;;v;;a;;r;;d40,147;;b0,0;;m0;;eselector;;pcontext;;p">
<treenode node="Callbacks;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;3247;1;3439;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;3247;1;3439;;;;vpos;;v;;a;;r;;d39,3247;;b0,0;;m0;;eoptions;;p">
<treenode node="fire;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f2;3277;3;3319;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f2;3277;3;3319;;;;vpos;;v;;a;;r;;d20,3277;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Event;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;5510;1;5557;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;5510;1;5557;;;;vpos;;v;;a;;r;;d38,5510;;b0,0;;m0;;esrc;;pprops;;p">
</treenode>
<treenode node="_evalUrl;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;9593;1;9614;;;;vpos;;v;;a;;r;;d43,9593;;b0,0;;m0;;eurl;;poptions;;p">
</treenode>
<treenode node="filter;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;2860;1;2874;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;2860;1;2874;;;;vpos;;v;;a;;r;;d45,2860;;b0,0;;m0;;eexpr;;pelems;;pnot;;p">
</treenode>
<treenode node="holdReady;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;8407;1;8413;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;10510;1;10516;;;;vpos;;v;;a;;r;;d36,8407;;b0,0;;m0;;ehold;;p">
</treenode>
<treenode node="isNumeric;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;8424;1;8436;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;10527;1;10539;;;;vpos;;v;;a;;r;;d35,8424;;b0,0;;m0;;eobj;;p">
</treenode>
<treenode node="noConflict;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;8471;1;8481;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;10574;1;10584;;;;vpos;;v;;a;;r;;d37,8471;;b0,0;;m0;;edeep;;p">
</treenode>
<treenode node="param;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;7856;1;7893;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;8677;1;8714;;;;vpos;;v;;a;;r;;d42,7856;;b0,0;;m0;;ea;;ptraditional;;p">
<treenode node="add;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f2;7859;3;7868;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f2;8680;3;8689;;;;vpos;;v;;a;;r;;d41,7859;;b0,0;;m0;;ekey;;pvalueOrFunction;;p">
</treenode>
</treenode>
<treenode node="parseHTML;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;8026;1;8070;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;10037;1;10081;;;;vpos;;v;;a;;r;;d58,8026;;b0,0;;m0;;edata;;pcontext;;pkeepScripts;;p">
</treenode>
<treenode node="parseXML;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;8610;1;8628;;;;vpos;;v;;a;;r;;d35,8610;;b0,0;;m0;;edata;;p">
</treenode>
<treenode node="proxy;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;8380;1;8405;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;10483;1;10508;;;;vpos;;v;;a;;r;;d39,8380;;b0,0;;m0;;efn;;pcontext;;p">
<treenode node="proxy;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f16;8381;2;8399;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f16;10484;2;10502;;;;vpos;;v;;a;;r;;d20,8397;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="readyException;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;3847;1;3851;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;3847;1;3851;;;;vpos;;v;;a;;r;;d42,3847;;b0,0;;m0;;eerror;;p">
</treenode>
<treenode node="removeEvent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f7;5502;1;5508;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;5502;1;5508;;;;vpos;;v;;a;;r;;d52,5502;;b0,0;;m0;;eelem;;ptype;;phandle;;p">
</treenode>
<treenode node="speed;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f7;7455;1;7497;;;;vpos;;v;;a;;r;;d45,7455;;b0,0;;m0;;espeed;;peasing;;pfn;;p">
</treenode>
</treenode>
<treenode node="js;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\gulpfile.js;f0;95;1;112;;;;vpos;;v;;a;;r;;d14,95;;b0,0;;m0;;e">
</treenode>
<treenode node="jt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f19578;5;19953;5;;;;vpos;;v;;a;;r;;d19592,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="k;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f926;1;968;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f4396;5;5325;5;;;;vpos;;v;;a;;r;;d941,1;;b0,0;;m0;;ee;;pt;;p">
<treenode node="Callbacks;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f27497;1;28591;1;;;;vpos;;v;;a;;r;;d27518,1;;b0,0;;m0;;er;;p">
<treenode node="c;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f27649;1;27829;1;;;;vpos;;v;;a;;r;;d27661,1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="Event;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f44115;1;44573;1;;;;vpos;;v;;a;;r;;d44134,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="_evalUrl;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f79317;1;81558;1;;;;vpos;;v;;a;;r;;d79339,1;;b0,0;;m0;;ee;;pt;;p">
<treenode node="abort;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f81532;1;81556;1;;;;vpos;;v;;a;;r;;d81548,1;;b0,0;;m0;;e">
</treenode>
<treenode node="send;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f80589;1;81531;1;;;;vpos;;v;;a;;r;;d80607,1;;b0,0;;m0;;ee;;pt;;p">
<treenode node="o;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f80911;1;81292;1;;;;vpos;;v;;a;;r;;d80924,1;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
</treenode>
<treenode node="filter;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f24062;1;24251;1;;;;vpos;;v;;a;;r;;d24084,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="holdReady;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f87563;1;87613;1;;;;vpos;;v;;a;;r;;d87584,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="isNumeric;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f87742;1;87840;1;;;;vpos;;v;;a;;r;;d87763,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="n;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f4409;5;4439;5;;;;vpos;;v;;a;;r;;d4422,5;;b0,0;;m0;;et;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f5125;5;5264;5;;;;vpos;;v;;a;;r;;d5153,5;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
<treenode node="noConflict;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f87953;1;88034;1;;;;vpos;;v;;a;;r;;d87975,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="param;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f72331;1;72634;1;;;;vpos;;v;;a;;r;;d72350,1;;b0,0;;m0;;ee;;pt;;p">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f72362;1;72466;1;;;;vpos;;v;;a;;r;;d72377,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
</treenode>
<treenode node="parseHTML;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f83282;1;83640;1;;;;vpos;;v;;a;;r;;d83307,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="parseXML;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f71772;1;71995;1;;;;vpos;;v;;a;;r;;d71792,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="proxy;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f87357;1;87560;1;;;;vpos;;v;;a;;r;;d87376,1;;b0,0;;m0;;ee;;pt;;p">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f87385;1;87527;1;;;;vpos;;v;;a;;r;;d87474,1;;b0,0;;m0;;e">
</treenode>
</treenode>
<treenode node="readyException;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f31066;1;31127;1;;;;vpos;;v;;a;;r;;d31092,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="removeEvent;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f44034;1;44112;1;;;;vpos;;v;;a;;r;;d44061,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="speed;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f61648;1;62077;1;;;;vpos;;v;;a;;r;;d61669,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
</treenode>
<treenode node="ke;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f39030;1;39451;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f39113;1;39136;1;;;;vpos;;v;;a;;r;;d39054,1;;b0,0;;m0;;ee;;pt;;pn;;pr;;pi;;po;;p">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f39050;1;39371;1;;;;vpos;;v;;a;;r;;d39328,1;;b0,0;;m0;;ee;;p">
</treenode>
</treenode>
<treenode node="keepTogether;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;3142;3;3162;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function keepTogether(data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &#10;&lt;b&gt;function&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Modifiers&#10;&lt;b&gt;argument&lt;/b&gt;: Object data - The data object generated by update method&#10;&lt;b&gt;argument&lt;/b&gt;: Object options - Modifiers configuration and options&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The data object, properly modified;;d30,3142;;b0,0;;m0;;edata;;p">
</treenode>
<treenode node="kt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f19107;5;19171;5;;;;vpos;;v;;a;;r;;d19121,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="l;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f503;5;931;5;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f459;5;887;5;;;;vpos;;v;;a;;r;;d516,5;;b0,0;;m0;;eo;;p">
</treenode>
<treenode node="le;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f36059;1;36487;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f27005;5;27354;5;;;;vpos;;v;;a;;r;;d36079,1;;b0,0;;m0;;ee;;pt;;pn;;pr;;p">
</treenode>
<treenode node="leverageNative;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;5419;1;5500;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;5419;1;5500;;;;vpos;;v;;a;;r;;d48,5419;;b0,0;;m0;;eel;;ptype;;pexpectSync;;p">
<treenode node="handler;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f2;5433;3;5498;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f2;5433;3;5498;;;;vpos;;v;;a;;r;;d29,5433;;b0,0;;m0;;eevent;;p">
</treenode>
</treenode>
<treenode node="lt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f58433;1;58509;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f57965;1;58095;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f6815;5;13223;5;;;;vpos;;v;;a;;r;;d58447,1;;b0,0;;m0;;ee;;p">
<treenode node="r;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f6829;5;7297;5;;;;vpos;;v;;a;;r;;d6844,5;;b0,0;;m0;;et;;pe;;p">
<treenode node="_dataApiClickHandler;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f12837;5;13121;5;;;;vpos;;v;;a;;r;;d12869,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f12433;5;12834;5;;;;vpos;;v;;a;;r;;d12461,5;;b0,0;;m0;;ei;;p">
</treenode>
</treenode>
</treenode>
<treenode node="m;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f451;1;521;1;;;;vpos;;v;;a;;r;;d464,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="manipulationTarget;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;5790;1;5798;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;5790;1;5798;;;;vpos;;v;;a;;r;;d45,5790;;b0,0;;m0;;eelem;;pcontent;;p">
</treenode>
<treenode node="markFunction;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;888;1;891;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;888;1;891;;;;vpos;;v;;a;;r;;d28,888;;b0,0;;m0;;efn;;p">
</treenode>
<treenode node="matcherFromGroupMatchers;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;2489;1;2598;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;2489;1;2598;;;;vpos;;v;;a;;r;;d66,2489;;b0,0;;m0;;eelementMatchers;;psetMatchers;;p">
<treenode node="superMatcher;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f2;2492;3;2593;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f2;2492;3;2593;;;;vpos;;v;;a;;r;;d68,2492;;b0,0;;m0;;eseed;;pcontext;;pxml;;presults;;poutermost;;p">
</treenode>
</treenode>
<treenode node="matcherFromTokens;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;2431;1;2487;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;2431;1;2487;;;;vpos;;v;;a;;r;;d37,2431;;b0,0;;m0;;etokens;;p">
</treenode>
<treenode node="me;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f28109;5;28263;5;;;;vpos;;v;;a;;r;;d28123,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="microtaskDebounce;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1538;3;1550;;;;vpos;;v;;a;;r;;d33,1538;;b0,0;;m0;;efn;;p">
</treenode>
<treenode node="modules;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\gulpfile.js;f0;50;1;67;;;;vpos;;v;;a;;r;;d19,50;;b0,0;;m0;;e">
</treenode>
<treenode node="mt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f64574;1;64797;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f65588;1;65636;1;;;;vpos;;v;;a;;r;;d64594,1;;b0,0;;m0;;en;;pe;;pr;;pi;;p">
</treenode>
<treenode node="multipleContexts;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;2308;1;2315;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;2308;1;2315;;;;vpos;;v;;a;;r;;d57,2308;;b0,0;;m0;;eselector;;pcontexts;;presults;;p">
</treenode>
<treenode node="n;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f1043;5;1190;5;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f954;5;1101;5;;;;vpos;;v;;a;;r;;d1056,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="ne;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f25769;5;25839;5;;;;vpos;;v;;a;;r;;d25785,5;;b0,0;;m0;;et;;pe;;p">
</treenode>
<treenode node="ni;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f55093;5;57119;5;;;;vpos;;v;;a;;r;;d55106,5;;b0,0;;m0;;e">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f55107;5;55211;5;;;;vpos;;v;;a;;r;;d55122,5;;b0,0;;m0;;et;;pe;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f56720;5;56970;5;;;;vpos;;v;;a;;r;;d56748,5;;b0,0;;m0;;en;;p">
</treenode>
</treenode>
</treenode>
<treenode node="nodeName;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;2825;1;2829;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;2825;1;2829;;;;vpos;;v;;a;;r;;d32,2825;;b0,0;;m0;;eelem;;pname;;p">
</treenode>
<treenode node="nt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f53412;1;53869;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f54087;1;54150;1;;;;vpos;;v;;a;;r;;d53430,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="oe;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f35834;1;36010;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f35630;1;35806;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f26298;5;26380;5;;;;vpos;;v;;a;;r;;d35935,1;;b0,0;;m0;;ee;;pe;;p">
</treenode>
<treenode node="offset;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;3304;3;3336;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function offset(data, _ref)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &#10;&lt;b&gt;function&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Modifiers&#10;&lt;b&gt;argument&lt;/b&gt;: Object data - The data object generated by update method&#10;&lt;b&gt;argument&lt;/b&gt;: Object options - Modifiers configuration and options&#10;&lt;b&gt;argument&lt;/b&gt;: Number|String options.offset=0&#10;The offset value as described in the modifier description&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The data object, properly modified;;d30,3304;;b0,0;;m0;;edata;;pref;;p">
</treenode>
<treenode node="on;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4934;1;4993;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4934;1;4993;;;;vpos;;v;;a;;r;;d52,4934;;b0,0;;m0;;eelem;;ptypes;;pselector;;pdata;;pfn;;pone;;p">
<treenode node="fn;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f42;4934;3;4985;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f42;4934;3;4985;;;;vpos;;v;;a;;r;;d25,4980;;b0,0;;m0;;eevent;;p">
</treenode>
</treenode>
<treenode node="p;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f1212;1;1343;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f2894;5;4011;5;;;;vpos;;v;;a;;r;;d1225,1;;b0,0;;m0;;ee;;p">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f2907;5;2937;5;;;;vpos;;v;;a;;r;;d2920,5;;b0,0;;m0;;et;;p">
<treenode node="_handleDismiss;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f3867;5;3950;5;;;;vpos;;v;;a;;r;;d3893,5;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f3724;5;3864;5;;;;vpos;;v;;a;;r;;d3752,5;;b0,0;;m0;;en;;p">
</treenode>
</treenode>
</treenode>
<treenode node="parseOffset;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;3228;3;3293;;;;vpos;;v;;aArray;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Parse an `offset` string to extrapolate `x` and `y` numeric offsets.&#10;&lt;b&gt;function&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: modifiers~offset&#10;&lt;b&gt;private&lt;/b&gt;&#10;&lt;b&gt;argument&lt;/b&gt;: String offset&#10;&lt;b&gt;argument&lt;/b&gt;: Object popperOffsets&#10;&lt;b&gt;argument&lt;/b&gt;: Object referenceOffsets&#10;&lt;b&gt;argument&lt;/b&gt;: String basePlacement&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   a two cells array with x and y offsets in numbers;;d79,3228;;b0,0;;m0;;eoffset;;ppopperOffsets;;preferenceOffsets;;pbasePlacement;;p">
</treenode>
<treenode node="preventOverflow;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;3345;3;3407;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function preventOverflow(data, options)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &#10;&lt;b&gt;function&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Modifiers&#10;&lt;b&gt;argument&lt;/b&gt;: Object data - The data object generated by `update` method&#10;&lt;b&gt;argument&lt;/b&gt;: Object options - Modifiers configuration and options&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The data object, properly modified;;d42,3345;;b0,0;;m0;;edata;;poptions;;p">
</treenode>
<treenode node="propFilter;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;7253;1;7288;;;;vpos;;v;;a;;r;;d44,7253;;b0,0;;m0;;eprops;;pspecialEasing;;p">
</treenode>
<treenode node="pt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f58302;1;58433;1;;;;vpos;;v;;a;;r;;d58320,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
<treenode node="qn;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f56993;5;65903;5;;;;vpos;;v;;a;;r;;d57006,5;;b0,0;;m0;;e">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f57007;5;57313;5;;;;vpos;;v;;a;;r;;d57022,5;;b0,0;;m0;;et;;pe;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f65304;5;65588;5;;;;vpos;;v;;a;;r;;d65332,5;;b0,0;;m0;;en;;p">
</treenode>
</treenode>
</treenode>
<treenode node="qt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f72106;1;72329;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f21236;5;21479;5;;;;vpos;;v;;a;;r;;d72126,1;;b0,0;;m0;;en;;pe;;pr;;pi;;p">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f21250;5;21416;5;;;;vpos;;v;;a;;r;;d21265,5;;b0,0;;m0;;et;;pe;;p">
</treenode>
</treenode>
<treenode node="re;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f26380;5;26584;5;;;;vpos;;v;;a;;r;;d26394,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="regexFromString;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\public\js\jqBootstrapValidation.js;f0;899;3;901;;;;vpos;;v;;a;;r;;d40,899;;b0,0;;m0;;einputstring;;p">
</treenode>
<treenode node="remove;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;5955;1;5974;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;5955;1;5974;;;;vpos;;v;;a;;r;;d44,5955;;b0,0;;m0;;eelem;;pselector;;pkeepData;;p">
</treenode>
<treenode node="removeEventListeners;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2574;3;2589;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function removeEventListeners(reference, state)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Remove event listeners used to update the popper position&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;private&lt;/b&gt;;;d50,2574;;b0,0;;m0;;ereference;;pstate;;p">
</treenode>
<treenode node="restoreScript;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;5805;1;5813;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;5805;1;5813;;;;vpos;;v;;a;;r;;d31,5805;;b0,0;;m0;;eelem;;p">
</treenode>
<treenode node="returnFalse;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4911;1;4913;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4911;1;4913;;;;vpos;;v;;a;;r;;d23,4911;;b0,0;;m0;;e">
</treenode>
<treenode node="returnTrue;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4907;1;4909;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4907;1;4909;;;;vpos;;v;;a;;r;;d22,4907;;b0,0;;m0;;e">
</treenode>
<treenode node="roundPixelMeasures;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;6292;2;6294;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;6292;2;6294;;;;vpos;;v;;a;;r;;d40,6292;;b0,0;;m0;;emeasure;;p">
</treenode>
<treenode node="runModifiers;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2374;3;2395;;;;vpos;;v;;adataObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function runModifiers(modifiers, data, ends)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Loop trough the list of modifiers and run them in order,&#10;each of them will then edit the data object.&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&#10;&lt;b&gt;Parameters:&lt;/b&gt;&#10;    dataObject &lt;b&gt;data&lt;/b&gt;&#10;    Array &lt;b&gt;modifiers&lt;/b&gt;&#10;    String &lt;b&gt;ends&lt;/b&gt;: Optional modifier name used as stopper;;d47,2374;;b0,0;;m0;;edataObject data;;pArray modifiers;;pString ends;;p">
</treenode>
<treenode node="s;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f446;5;503;5;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f402;5;459;5;;;;vpos;;v;;a;;r;;d463,5;;b0,0;;m0;;et;;pe;;pn;;p">
</treenode>
<treenode node="safeActiveElement;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4928;1;4932;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4928;1;4932;;;;vpos;;v;;a;;r;;d29,4928;;b0,0;;m0;;e">
</treenode>
<treenode node="sanitizeHtml;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;2692;3;2731;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;5270;3;5309;;;;vpos;;v;;a;;r;;d59,2692;;b0,0;;m0;;eunsafeHtml;;pwhiteList;;psanitizeFn;;p">
<treenode node="_loop;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f8;2706;5;2722;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f8;5284;5;5300;;;;vpos;;v;;a;;r;;d39,2706;;b0,0;;m0;;ei;;plen;;p">
</treenode>
</treenode>
<treenode node="schedule;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;7026;1;7036;;;;vpos;;v;;a;;r;;d20,7026;;b0,0;;m0;;e">
</treenode>
<treenode node="se;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f36016;1;36129;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f35812;1;35925;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f26584;5;26651;5;;;;vpos;;v;;a;;r;;d36032,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="setAttributes;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2643;3;2652;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function setAttributes(element, attributes)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the attributes to the given popper&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Element element - Element to apply the attributes to&#10;&lt;b&gt;argument&lt;/b&gt;: Object styles&#10;Object with a list of properties and values which will be applied to the element;;d46,2643;;b0,0;;m0;;eelement;;pattributes;;p">
</treenode>
<treenode node="setFilters;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;2149;24;2149;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;2149;24;2149;;;;vpos;;v;;a;;r;;d22,2149;;b0,0;;m0;;e">
</treenode>
<treenode node="setGlobalEval;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4770;1;4781;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4770;1;4781;;;;vpos;;v;;a;;r;;d45,4770;;b0,0;;m0;;eelems;;prefElements;;p">
</treenode>
<treenode node="setMatcher;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;2338;1;2429;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;2338;1;2429;;;;vpos;;v;;a;;r;;d90,2338;;b0,0;;m0;;epreFilter;;pselector;;pmatcher;;ppostFilter;;ppostFinder;;ppostSelector;;p">
</treenode>
<treenode node="setPositiveNumber;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;6456;1;6466;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;6456;1;6466;;;;vpos;;v;;a;;r;;d52,6456;;b0,0;;m0;;eelem;;pvalue;;psubtract;;p">
</treenode>
<treenode node="setStyles;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2624;3;2633;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function setStyles(element, styles)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Set the style to the given popper&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;argument&lt;/b&gt;: Element element - Element to apply the style to&#10;&lt;b&gt;argument&lt;/b&gt;: Object styles&#10;Object with a list of properties and values which will be applied to the element;;d38,2624;;b0,0;;m0;;eelement;;pstyles;;p">
</treenode>
<treenode node="setTransitionEndSupport;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;119;3;122;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;118;3;121;;;;vpos;;v;;a;;r;;d37,119;;b0,0;;m0;;e">
</treenode>
<treenode node="setupEventListeners;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2542;3;2554;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function setupEventListeners(reference, options, state, updateBound)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Setup needed event listeners used to update the popper position&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper.Utils&#10;&lt;b&gt;private&lt;/b&gt;;;d71,2542;;b0,0;;m0;;ereference;;poptions;;pstate;;pupdateBound;;p">
</treenode>
<treenode node="shift;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;3416;3;3440;;;;vpos;;v;;aObject;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function shift(data)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    &#10;&lt;b&gt;function&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Modifiers&#10;&lt;b&gt;argument&lt;/b&gt;: Object data - The data object generated by `update` method&#10;&lt;b&gt;argument&lt;/b&gt;: Object options - Modifiers configuration and options&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   The data object, properly modified;;d23,3416;;b0,0;;m0;;edata;;p">
</treenode>
<treenode node="showHide;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;4644;1;4690;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;4644;1;4690;;;;vpos;;v;;a;;r;;d36,4644;;b0,0;;m0;;eelements;;pshow;;p">
</treenode>
<treenode node="sibling;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;3130;1;3133;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;3130;1;3133;;;;vpos;;v;;a;;r;;d29,3130;;b0,0;;m0;;ecur;;pdir;;p">
</treenode>
<treenode node="siblingCheck;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;934;1;954;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;934;1;954;;;;vpos;;v;;a;;r;;d30,934;;b0,0;;m0;;ea;;pb;;p">
</treenode>
<treenode node="siblings;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f4;2808;1;2818;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f4;2808;1;2818;;;;vpos;;v;;a;;r;;d35,2808;;b0,0;;m0;;en;;pelem;;p">
</treenode>
<treenode node="sn;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f46125;5;47624;5;;;;vpos;;v;;a;;r;;d46139,5;;b0,0;;m0;;et;;p">
<treenode node="i;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f46148;5;46199;5;;;;vpos;;v;;a;;r;;d46160,5;;b0,0;;m0;;e">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f47021;5;47309;5;;;;vpos;;v;;a;;r;;d47049,5;;b0,0;;m0;;en;;p">
</treenode>
</treenode>
</treenode>
<treenode node="sortOrder;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f1;555;2;1434;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f1;555;2;1434;;;;vpos;;v;;a;;r;;d18,1394;;b0,0;;m0;;ea;;pb;;pa;;pb;;p">
</treenode>
<treenode node="st;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f58319;1;58367;1;;;;vpos;;v;;a;;r;;d58333,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="stopPropagationCallback;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f1;7583;2;7585;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f1;8376;2;8378;;;;vpos;;v;;a;;r;;d41,7583;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="stripAndCollapse;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;7212;2;7215;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;8005;2;8008;;;;vpos;;v;;a;;r;;d36,7212;;b0,0;;m0;;evalue;;p">
</treenode>
<treenode node="swap;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f4;4530;1;4548;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f4;4530;1;4548;;;;vpos;;v;;a;;r;;d53,4530;;b0,0;;m0;;eelem;;poptions;;pcallback;;pargs;;p">
</treenode>
<treenode node="t;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f51968;1;52015;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f52192;1;52239;1;;;;vpos;;v;;a;;r;;d51981,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="taskDebounce;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;1552;3;1563;;;;vpos;;v;;a;;r;;d28,1552;;b0,0;;m0;;efn;;p">
</treenode>
<treenode node="te;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f25369;5;25512;5;;;;vpos;;v;;a;;r;;d25383,5;;b0,0;;m0;;et;;p">
</treenode>
<treenode node="testContext;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;1061;1;1063;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;1061;1;1063;;;;vpos;;v;;a;;r;;d32,1061;;b0,0;;m0;;econtext;;p">
</treenode>
<treenode node="toSelector;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;2220;1;2228;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;2220;1;2228;;;;vpos;;v;;a;;r;;d30,2220;;b0,0;;m0;;etokens;;p">
</treenode>
<treenode node="toType;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;127;1;136;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;127;1;136;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;86;3;88;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;85;3;87;;;;vpos;;v;;a;;r;;d23,127;;b0,0;;m0;;eobj;;p">
</treenode>
<treenode node="toValue;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;3176;3;3215;;;;vpos;;v;;aNumber|String;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function toValue(str, measurement, popperOffsets, referenceOffsets)&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Converts a string containing value + unit into a px value number&#10;&lt;b&gt;function&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: modifiers~offset&#10;&lt;b&gt;private&lt;/b&gt;&#10;&lt;b&gt;argument&lt;/b&gt;: String str - Value + unit string&#10;&lt;b&gt;argument&lt;/b&gt;: String measurement - `height` or `width`&#10;&lt;b&gt;argument&lt;/b&gt;: Object popperOffsets&#10;&lt;b&gt;argument&lt;/b&gt;: Object referenceOffsets&#10;&#10;&lt;b&gt;Return:&lt;/b&gt;&#10;   Value in pixels, or original string if no values were extracted;;d70,3176;;b0,0;;m0;;estr;;pmeasurement;;ppopperOffsets;;preferenceOffsets;;p">
</treenode>
<treenode node="transitionEndEmulator;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.js;f0;104;3;117;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;103;3;116;;;;vpos;;v;;a;;r;;d43,104;;b0,0;;m0;;eduration;;p">
</treenode>
<treenode node="tt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f52924;1;53412;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f53630;1;54087;1;;;;vpos;;v;;a;;r;;d52948,1;;b0,0;;m0;;ee;;pt;;pn;;pr;;pi;;po;;p">
</treenode>
<treenode node="ue;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f36130;1;36262;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f35926;1;36058;1;;;;vpos;;v;;a;;r;;d36150,1;;b0,0;;m0;;ee;;pt;;pn;;pr;;p">
</treenode>
<treenode node="unloadHandler;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f1;688;2;690;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f1;688;2;690;;;;vpos;;v;;a;;r;;d28,688;;b0,0;;m0;;e">
</treenode>
<treenode node="update;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.js;f0;2404;3;2448;;;;vpos;;v;;a;;r&#10;&lt;b&gt;Definition&lt;/b&gt;&#10;    function update()&#10;&#10;&lt;b&gt;Description&lt;/b&gt;&#10;    Updates the position of the popper, computing the new offsets and applying&#10;the new style.&lt;br /&gt;&#10;Prefer `scheduleUpdate` over `update` because of performance reasons.&#10;&lt;b&gt;method&lt;/b&gt;&#10;&lt;b&gt;memberof&lt;/b&gt;: Popper;;d20,2404;;b0,0;;m0;;e">
</treenode>
<treenode node="ut;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f58367;1;58433;1;;;;vpos;;v;;a;;r;;d58381,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="ve;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f37575;1;37677;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f37585;1;37799;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f25957;5;33244;5;;;;vpos;;v;;a;;r;;d37591,1;;b0,0;;m0;;ee;;pt;;p">
<treenode node="o;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f25971;5;26209;5;;;;vpos;;v;;a;;r;;d25986,5;;b0,0;;m0;;et;;pe;;p">
<treenode node="_jQueryInterface;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.min.js;f32835;5;33141;5;;;;vpos;;v;;a;;r;;d32865,5;;b0,0;;m0;;en;;pi;;p">
</treenode>
</treenode>
</treenode>
<treenode node="vendorPropName;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;6415;1;6427;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;6415;1;6427;;;;vpos;;v;;a;;r;;d32,6415;;b0,0;;m0;;ename;;p">
</treenode>
<treenode node="w;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f522;1;565;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f805;1;912;1;;;;vpos;;v;;a;;r;;d535,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="watchFiles;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\gulpfile.js;f0;115;1;119;;;;vpos;;v;;a;;r;;d22,115;;b0,0;;m0;;e">
</treenode>
<treenode node="we;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f38010;1;38654;1;;;;vpos;;v;;a;;r;;d38032,1;;b0,0;;m0;;ee;;pt;;pn;;pr;;pi;;p">
</treenode>
<treenode node="winnow;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.js;f0;2835;1;2858;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.js;f0;2835;1;2858;;;;vpos;;v;;a;;r;;d44,2835;;b0,0;;m0;;eelements;;pqualifier;;pnot;;p">
</treenode>
<treenode node="x;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f451;1;521;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f522;1;565;1;;;;vpos;;v;;a;;r;;d464,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="xe;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f37786;1;38430;1;;;;vpos;;v;;a;;r;;d37808,1;;b0,0;;m0;;ee;;pt;;pn;;pr;;pi;;p">
</treenode>
<treenode node="xt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f65636;1;65702;1;;;;vpos;;v;;a;;r;;d65650,1;;b0,0;;m0;;ee;;p">
</treenode>
<treenode node="ye;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f37799;1;37901;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f28314;5;29472;5;;;;vpos;;v;;a;;r;;d37815,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="z;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f31884;1;32201;1;;;;vpos;;v;;a;;r;;d31909,1;;b0,0;;m0;;ee;;pt;;pn;;pr;;pi;;po;;pa;;p">
<treenode node="t;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f31897;1;32106;1;;;;vpos;;v;;a;;r;;d32083,1;;b0,0;;m0;;ee;;pt;;pn;;p">
</treenode>
</treenode>
<treenode node="ze;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.slim.min.js;f51361;1;51467;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f51585;1;51691;1;;;;vpos;;v;;a;;r;;d51377,1;;b0,0;;m0;;ee;;pt;;p">
</treenode>
<treenode node="zt;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\jquery\jquery.min.js;f73788;1;73930;1;;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f22352;5;23124;5;;;;vpos;;v;;a;;r;;d73804,1;;b0,0;;m0;;ee;;pt;;p">
<treenode node="u;JS:Function Name;C:\xampp3\htdocs\openclass\p5\myp5blog\vendor\bootstrap\js\bootstrap.bundle.min.js;f22625;5;23115;5;;;;vpos;;v;;a;;r;;d22955,5;;b0,0;;m0;;et;;pe;;p">
</treenode>
</treenode>
</jstree>
</codestructure>